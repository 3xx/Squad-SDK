Class: World.Object
	Level* PersistentLevel;//[Offset: 0x30, Size: 1]
	NetDriver* NetDriver;//[Offset: 0x38, Size: 1]
	LineBatchComponent* LineBatcher;//[Offset: 0x40, Size: 1]
	LineBatchComponent* PersistentLineBatcher;//[Offset: 0x48, Size: 1]
	LineBatchComponent* ForegroundLineBatcher;//[Offset: 0x50, Size: 1]
	GameNetworkManager* NetworkManager;//[Offset: 0x58, Size: 1]
	PhysicsCollisionHandler* PhysicsCollisionHandler;//[Offset: 0x60, Size: 1]
	Object*[] ExtraReferencedObjects;//[Offset: 0x68, Size: 1]
	Object*[] PerModuleDataObjects;//[Offset: 0x78, Size: 1]
	LevelStreaming*[] StreamingLevels;//[Offset: 0x88, Size: 1]
	StreamingLevelsToConsider StreamingLevelsToConsider;//[Offset: 0x98, Size: 1]
	FString StreamingLevelsPrefix;//[Offset: 0xc0, Size: 1]
	Level* CurrentLevelPendingVisibility;//[Offset: 0xd0, Size: 1]
	Level* CurrentLevelPendingInvisibility;//[Offset: 0xd8, Size: 1]
	DemoNetDriver* DemoNetDriver;//[Offset: 0xe0, Size: 1]
	ParticleEventManager* MyParticleEventManager;//[Offset: 0xe8, Size: 1]
	PhysicsVolume* DefaultPhysicsVolume;//[Offset: 0xf0, Size: 1]
	bool bAreConstraintsDirty;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x10e, Size: 1]
	NavigationSystemBase* NavigationSystem;//[Offset: 0x110, Size: 1]
	GameModeBase* AuthorityGameMode;//[Offset: 0x118, Size: 1]
	GameStateBase* GameState;//[Offset: 0x120, Size: 1]
	AISystemBase* AISystem;//[Offset: 0x128, Size: 1]
	AvoidanceManager* AvoidanceManager;//[Offset: 0x130, Size: 1]
	Level*[] Levels;//[Offset: 0x138, Size: 1]
	LevelCollection[] LevelCollections;//[Offset: 0x148, Size: 1]
	GameInstance* OwningGameInstance;//[Offset: 0x180, Size: 1]
	MaterialParameterCollectionInstance*[] ParameterCollectionInstances;//[Offset: 0x188, Size: 1]
	Canvas* CanvasForRenderingToTarget;//[Offset: 0x198, Size: 1]
	Canvas* CanvasForDrawMaterialToRenderTarget;//[Offset: 0x1a0, Size: 1]
	PhysicsFieldComponent* PhysicsField;//[Offset: 0x1f8, Size: 1]
	<ActorComponent*> ComponentsThatNeedPreEndOfFrameSync;//[Offset: 0x200, Size: 1]
	ActorComponent*[] ComponentsThatNeedEndOfFrameUpdate;//[Offset: 0x250, Size: 1]
	ActorComponent*[] ComponentsThatNeedEndOfFrameUpdate_OnGameThread;//[Offset: 0x260, Size: 1]
	WorldComposition* WorldComposition;//[Offset: 0x5e0, Size: 1]
	WorldPSCPool PSCPool;//[Offset: 0x678, Size: 1]
	None None;//[Size: 0]

--------------------------------
Class: Object
	void ExecuteUbergraph(int EntryPoint);// 0x1d69c50

--------------------------------
Class: Level.Object
	World* OwningWorld;//[Offset: 0xb8, Size: 1]
	Model* Model;//[Offset: 0xc0, Size: 1]
	ModelComponent*[] ModelComponents;//[Offset: 0xc8, Size: 1]
	LevelActorContainer* ActorCluster;//[Offset: 0xd8, Size: 1]
	int NumTextureStreamingUnbuiltComponents;//[Offset: 0xe0, Size: 1]
	int NumTextureStreamingDirtyResources;//[Offset: 0xe4, Size: 1]
	LevelScriptActor* LevelScriptActor;//[Offset: 0xe8, Size: 1]
	NavigationObjectBase* NavListStart;//[Offset: 0xf0, Size: 1]
	NavigationObjectBase* NavListEnd;//[Offset: 0xf8, Size: 1]
	NavigationDataChunk*[] NavDataChunks;//[Offset: 0x100, Size: 1]
	float LightmapTotalSize;//[Offset: 0x110, Size: 1]
	float ShadowmapTotalSize;//[Offset: 0x114, Size: 1]
	Vector[] StaticNavigableGeometry;//[Offset: 0x118, Size: 1]
	Guid[] StreamingTextureGuids;//[Offset: 0x128, Size: 1]
	Guid LevelBuildDataId;//[Offset: 0x1d0, Size: 1]
	MapBuildDataRegistry* MapBuildData;//[Offset: 0x1e0, Size: 1]
	IntVector LightBuildLevelOffset;//[Offset: 0x1e8, Size: 1]
	bool bIsLightingScenario;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1f4, Size: 1]
	bool bTextureStreamingRotationChanged;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1f4, Size: 1]
	bool bStaticComponentsRegisteredInStreamingManager;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1f4, Size: 1]
	bool bIsVisible;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1f4, Size: 1]
	WorldSettings* WorldSettings;//[Offset: 0x258, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x268, Size: 1]
	ReplicatedStaticActorDestructionInfo[] DestroyedReplicatedStaticActors;//[Offset: 0x288, Size: 1]

--------------------------------
Class: Model.Object

--------------------------------
Class: ModelComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	BodySetup* ModelBodySetup;//[Offset: 0x468, Size: 1]

--------------------------------
Class: PrimitiveComponent.SceneComponent.ActorComponent.Object
	float MinDrawDistance;//[Offset: 0x200, Size: 1]
	float LDMaxDrawDistance;//[Offset: 0x204, Size: 1]
	float CachedMaxDrawDistance;//[Offset: 0x208, Size: 1]
	byte DepthPriorityGroup;//[Offset: 0x20c, Size: 1]
	byte ViewOwnerDepthPriorityGroup;//[Offset: 0x20d, Size: 1]
	byte IndirectLightingCacheQuality;//[Offset: 0x20e, Size: 1]
	enum LightmapType;//[Offset: 0x20f, Size: 1]
	bool bUseMaxLODAsImposter;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x210, Size: 1]
	bool bBatchImpostersAsInstances;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x210, Size: 1]
	bool bNeverDistanceCull;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x210, Size: 1]
	bool bAlwaysCreatePhysicsState;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x210, Size: 1]
	bool bGenerateOverlapEvents;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x211, Size: 1]
	bool bGenerateLocalOverlapEvents;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x211, Size: 1]
	bool bMultiBodyOverlap;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x211, Size: 1]
	bool bTraceComplexOnMove;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x211, Size: 1]
	bool bReturnMaterialOnMove;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x211, Size: 1]
	bool bUseViewOwnerDepthPriorityGroup;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x211, Size: 1]
	bool bAllowCullDistanceVolume;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x211, Size: 1]
	bool bHasMotionBlurVelocityMeshes;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x211, Size: 1]
	bool bVisibleInReflectionCaptures;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x212, Size: 1]
	bool bVisibleInRealTimeSkyCaptures;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x212, Size: 1]
	bool bVisibleInRayTracing;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x212, Size: 1]
	bool bRenderInMainPass;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x212, Size: 1]
	bool bRenderInDepthPass;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x212, Size: 1]
	bool bReceivesDecals;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x212, Size: 1]
	bool bOwnerNoSee;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x212, Size: 1]
	bool bOnlyOwnerSee;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x212, Size: 1]
	bool bTreatAsBackgroundForOcclusion;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x213, Size: 1]
	bool bUseAsOccluder;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x213, Size: 1]
	bool bSelectable;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x213, Size: 1]
	bool bForceMipStreaming;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x213, Size: 1]
	bool bHasPerInstanceHitProxies;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x213, Size: 1]
	bool CastShadow;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x213, Size: 1]
	bool bAffectDynamicIndirectLighting;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x213, Size: 1]
	bool bAffectDistanceFieldLighting;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x213, Size: 1]
	bool bCastDynamicShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x214, Size: 1]
	bool bCastStaticShadow;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x214, Size: 1]
	bool bCastVolumetricTranslucentShadow;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x214, Size: 1]
	bool bCastContactShadow;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x214, Size: 1]
	bool bSelfShadowOnly;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x214, Size: 1]
	bool bCastFarShadow;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x214, Size: 1]
	bool bCastInsetShadow;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x214, Size: 1]
	bool bCastCinematicShadow;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x214, Size: 1]
	bool bCastHiddenShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x215, Size: 1]
	bool bCastShadowAsTwoSided;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x215, Size: 1]
	bool bLightAsIfStatic;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x215, Size: 1]
	bool bLightAttachmentsAsGroup;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x215, Size: 1]
	bool bExcludeFromLightAttachmentGroup;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x215, Size: 1]
	bool bReceiveMobileCSMShadows;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x215, Size: 1]
	bool bSingleSampleShadowFromStationaryLights;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x215, Size: 1]
	bool bIgnoreRadialImpulse;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x215, Size: 1]
	bool bIgnoreRadialForce;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x216, Size: 1]
	bool bApplyImpulseOnDamage;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x216, Size: 1]
	bool bReplicatePhysicsToAutonomousProxy;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x216, Size: 1]
	bool bFillCollisionUnderneathForNavmesh;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x216, Size: 1]
	bool AlwaysLoadOnClient;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x216, Size: 1]
	bool AlwaysLoadOnServer;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x216, Size: 1]
	bool bUseEditorCompositing;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x216, Size: 1]
	bool bRenderCustomDepth;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x216, Size: 1]
	bool bVisibleInSceneCaptureOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x217, Size: 1]
	bool bHiddenInSceneCapture;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x217, Size: 1]
	byte bHasCustomNavigableGeometry;//[Offset: 0x218, Size: 1]
	byte CanCharacterStepUpOn;//[Offset: 0x21a, Size: 1]
	LightingChannels LightingChannels;//[Offset: 0x21b, Size: 1]
	enum CustomDepthStencilWriteMask;//[Offset: 0x21c, Size: 1]
	int CustomDepthStencilValue;//[Offset: 0x220, Size: 1]
	CustomPrimitiveData CustomPrimitiveData;//[Offset: 0x228, Size: 1]
	CustomPrimitiveData CustomPrimitiveDataInternal;//[Offset: 0x238, Size: 1]
	int TranslucencySortPriority;//[Offset: 0x250, Size: 1]
	float TranslucencySortDistanceOffset;//[Offset: 0x254, Size: 1]
	int VisibilityId;//[Offset: 0x258, Size: 1]
	RuntimeVirtualTexture*[] RuntimeVirtualTextures;//[Offset: 0x260, Size: 1]
	int8 VirtualTextureLodBias;//[Offset: 0x270, Size: 1]
	int8 VirtualTextureCullMips;//[Offset: 0x271, Size: 1]
	int8 VirtualTextureMinCoverage;//[Offset: 0x272, Size: 1]
	enum VirtualTextureRenderPassType;//[Offset: 0x273, Size: 1]
	float LpvBiasMultiplier;//[Offset: 0x278, Size: 1]
	float BoundsScale;//[Offset: 0x284, Size: 1]
	Actor*[] MoveIgnoreActors;//[Offset: 0x298, Size: 1]
	PrimitiveComponent*[] MoveIgnoreComponents;//[Offset: 0x2a8, Size: 1]
	BodyInstance BodyInstance;//[Offset: 0x2c8, Size: 1]
	delegate OnComponentHit;//[Offset: 0x420, Size: 1]
	delegate OnComponentBeginOverlap;//[Offset: 0x421, Size: 1]
	delegate OnComponentEndOverlap;//[Offset: 0x422, Size: 1]
	delegate OnComponentWake;//[Offset: 0x423, Size: 1]
	delegate OnComponentSleep;//[Offset: 0x424, Size: 1]
	delegate OnBeginCursorOver;//[Offset: 0x426, Size: 1]
	delegate OnEndCursorOver;//[Offset: 0x427, Size: 1]
	delegate OnClicked;//[Offset: 0x428, Size: 1]
	delegate OnReleased;//[Offset: 0x429, Size: 1]
	delegate OnInputTouchBegin;//[Offset: 0x42a, Size: 1]
	delegate OnInputTouchEnd;//[Offset: 0x42b, Size: 1]
	delegate OnInputTouchEnter;//[Offset: 0x42c, Size: 1]
	delegate OnInputTouchLeave;//[Offset: 0x42d, Size: 1]
	PrimitiveComponent* LODParentPrimitive;//[Offset: 0x448, Size: 1]
	bool WasRecentlyRendered(float Tolerance);// 0x3fe1130
	void WakeRigidBody(FName BoneName);// 0x3fe10a0
	void WakeAllRigidBodies();// 0x3fe1080
	void SetWalkableSlopeOverride(out const WalkableSlopeOverride NewOverride);// 0x3fe0fd0
	void SetVisibleInSceneCaptureOnly(bool bValue);// 0x3fe0f40
	void SetUseCCD(bool InUseCCD, FName BoneName);// 0x3fe0e70
	void SetTranslucentSortPriority(int NewTranslucentSortPriority);// 0x3fe0de0
	void SetTranslucencySortDistanceOffset(float NewTranslucencySortDistanceOffset);// 0x3fe0d60
	void SetSingleSampleShadowFromStationaryLights(bool bNewSingleSampleShadowFromStationaryLights);// 0x3fe0cd0
	void SetSimulatePhysics(bool bSimulate);// 0x3fe0c40
	void SetRenderInMainPass(bool bValue);// 0x3fe0bb0
	void SetRenderCustomDepth(bool bValue);// 0x3fe0b20
	void SetReceivesDecals(bool bNewReceivesDecals);// 0x3fe0a90
	void SetPhysMaterialOverride(PhysicalMaterial* NewPhysMaterial);// 0x3fe0410
	void SetPhysicsMaxAngularVelocityInRadians(float NewMaxAngVel, bool bAddToCurrent, FName BoneName);// 0x3fe0970
	void SetPhysicsMaxAngularVelocityInDegrees(float NewMaxAngVel, bool bAddToCurrent, FName BoneName);// 0x3fe0850
	void SetPhysicsMaxAngularVelocity(float NewMaxAngVel, bool bAddToCurrent, FName BoneName);// 0x3fe0850
	void SetPhysicsLinearVelocity(Vector NewVel, bool bAddToCurrent, FName BoneName);// 0x3fe0720
	void SetPhysicsAngularVelocityInRadians(Vector NewAngVel, bool bAddToCurrent, FName BoneName);// 0x3fe05f0
	void SetPhysicsAngularVelocityInDegrees(Vector NewAngVel, bool bAddToCurrent, FName BoneName);// 0x3fe04a0
	void SetPhysicsAngularVelocity(Vector NewAngVel, bool bAddToCurrent, FName BoneName);// 0x3fe04a0
	void SetOwnerNoSee(bool bNewOwnerNoSee);// 0x3fe0380
	void SetOnlyOwnerSee(bool bNewOnlyOwnerSee);// 0x3fe02f0
	void SetNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision);// 0x3fe0260
	void SetMaterialByName(FName MaterialSlotName, MaterialInterface* Material);// 0x3fe0190
	void SetMaterial(int ElementIndex, MaterialInterface* Material);// 0x3fe00c0
	void SetMassScale(FName BoneName, float InMassScale);// 0x3fdffe0
	void SetMassOverrideInKg(FName BoneName, float MassInKg, bool bOverrideMass);// 0x3fdfed0
	void SetLinearDamping(float InDamping);// 0x3ef7a10
	void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2);// 0x3fdfda0
	void SetLightAttachmentsAsGroup(bool bInLightAttachmentsAsGroup);// 0x3fdfd10
	void SetHiddenInSceneCapture(bool bValue);// 0x3fdfc80
	void SetGenerateOverlapEvents(bool bInGenerateOverlapEvents);// 0x3fdfbf0
	void SetGenerateLocalOverlapEvents(bool bInGenerateLocalOverlapEvents);// 0x3fdfb60
	void SetExcludeFromLightAttachmentGroup(bool bInExcludeFromLightAttachmentGroup);// 0x3fdfad0
	void SetEnableGravity(bool bGravityEnabled);// 0x3fdfa40
	void SetDefaultCustomPrimitiveDataVector4(int DataIndex, Vector4 Value);// 0x3fdf960
	void SetDefaultCustomPrimitiveDataVector3(int DataIndex, Vector Value);// 0x3fdf880
	void SetDefaultCustomPrimitiveDataVector2(int DataIndex, Vector2D Value);// 0x3fdf7b0
	void SetDefaultCustomPrimitiveDataFloat(int DataIndex, float Value);// 0x3fdf6e0
	void SetCustomPrimitiveDataVector4(int DataIndex, Vector4 Value);// 0x3fdf600
	void SetCustomPrimitiveDataVector3(int DataIndex, Vector Value);// 0x3fdf520
	void SetCustomPrimitiveDataVector2(int DataIndex, Vector2D Value);// 0x3fdf450
	void SetCustomPrimitiveDataFloat(int DataIndex, float Value);// 0x3fdf380
	void SetCustomDepthStencilWriteMask(enum WriteMaskBit);// 0x3fdf300
	void SetCustomDepthStencilValue(int Value);// 0x3fdf270
	void SetCullDistance(float NewCullDistance);// 0x3fdf1f0
	void SetConstraintMode(byte ConstraintMode);// 0x3fdf170
	void SetCollisionResponseToChannel(byte Channel, byte NewResponse);// 0x3fdf0a0
	void SetCollisionResponseToAllChannels(byte NewResponse);// 0x3fdf020
	void SetCollisionProfileName(FName InCollisionProfileName, bool bUpdateOverlaps);// 0x3fdef50
	void SetCollisionObjectType(byte Channel);// 0x3fdeed0
	void SetCollisionEnabled(byte NewType);// 0x3fdee50
	void SetCenterOfMass(Vector CenterOfMassOffset, FName BoneName);// 0x3fded70
	void SetCastShadow(bool NewCastShadow);// 0x3fdece0
	void SetCastInsetShadow(bool bInCastInsetShadow);// 0x3fdec50
	void SetCastHiddenShadow(bool NewCastHiddenShadow);// 0x3fdebc0
	void SetBoundsScale(float NewBoundsScale);// 0x3fdeb40
	void SetAngularDamping(float InDamping);// 0x3fdeab0
	void SetAllUseCCD(bool InUseCCD);// 0x3fdea20
	void SetAllPhysicsLinearVelocity(Vector NewVel, bool bAddToCurrent);// 0x3fde940
	void SetAllPhysicsAngularVelocityInRadians(out const Vector NewAngVel, bool bAddToCurrent);// 0x3fde850
	void SetAllPhysicsAngularVelocityInDegrees(out const Vector NewAngVel, bool bAddToCurrent);// 0x3fde730
	void SetAllMassScale(float InMassScale);// 0x3fde6a0
	Vector ScaleByMomentOfInertia(Vector InputVector, FName BoneName);// 0x3fde5a0
	void PutRigidBodyToSleep(FName BoneName);// 0x3fde510
	bool K2_SphereTraceComponent(Vector TraceStart, Vector TraceEnd, float SphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, out Vector HitLocation, out Vector HitNormal, out FName BoneName, out HitResult OutHit);// 0x3fde160
	bool K2_SphereOverlapComponent(Vector InSphereCentre, float InSphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, out Vector HitLocation, out Vector HitNormal, out FName BoneName, out HitResult OutHit);// 0x3fdde00
	void K2_LineTraceComponent(Vector TraceStart, Vector TraceEnd, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, out Vector HitLocation, out Vector HitNormal, None(None) None);// 0x3fddaa0
	void K2_IsQueryCollisionEnabled(None(None) None);// 0x3fdda60
	void K2_IsPhysicsCollisionEnabled(None(None) None);// 0x3fdda20
	void K2_IsCollisionEnabled(None(None) None);// 0x3fdd9e0
	void K2_BoxOverlapComponent(None(None) None);// 0x3fdd670
	bool IsOverlappingComponent(const PrimitiveComponent* OtherComp);// 0x3fdd5d0
	bool IsOverlappingActor(const Actor* Other);// 0x3fdd530
	bool IsGravityEnabled();// 0x3fdd500
	bool IsAnyRigidBodyAwake();// 0x3fdd4d0
	void IgnoreComponentWhenMoving(PrimitiveComponent* Component, bool bShouldIgnore);// 0x3fdd400
	void IgnoreActorWhenMoving(Actor* Actor, bool bShouldIgnore);// 0x3fdd330
	WalkableSlopeOverride GetWalkableSlopeOverride();// 0x3fdd300
	Vector GetPhysicsLinearVelocityAtPoint(Vector Point, FName BoneName);// 0x3fdd200
	Vector GetPhysicsLinearVelocity(FName BoneName);// 0x3fdd150
	void GetPhysicsAngularVelocityInRadians(FName BoneName, None(None) None);// 0x3fdd0a0
	void GetPhysicsAngularVelocityInDegrees(None(None) None);// 0x3fdcfd0
	void GetPhysicsAngularVelocity(None(None) None);// 0x3fdcfd0
	void GetOverlappingComponents(out None(None)[] OutOverlappingComponents);// 0x3fdcf20
	void GetOverlappingActors(out None(None)[] OverlappingActors, class Actor ClassFilter);// 0x3fdce20
	void GetNumMaterials(None(None) None);// 0x3f10250
	void GetMaterialFromCollisionFaceIndex(None(None) None);// 0x3fdcd40
	void GetMaterial(None(None) None);// 0x3fdcca0
	void GetMassScale(None(None) None);// 0x3fdcc00
	void GetMass(None(None) None);// 0x3fdcbc0
	void GetLinearDamping(None(None) None);// 0x3fdcb80
	void GetInertiaTensor(None(None) None);// 0x3fdcad0
	void GetGenerateOverlapEvents(None(None) None);// 0x3fdcaa0
	void GetGenerateLocalOverlapEvents(None(None) None);// 0x3fdca70
	void GetCollisionResponseToChannel(None(None) None);// 0x3fdc9e0
	void GetCollisionProfileName(None(None) None);// 0x3fdc9a0
	void GetCollisionObjectType(None(None) None);// 0x3fdc970
	void GetCollisionEnabled(None(None) None);// 0x3fdc940
	void GetClosestPointOnCollision(None(None) None);// 0x3fdc800
	void GetCenterOfMass(None(None) None);// 0x3fdc750
	void GetAngularDamping(None(None) None);// 0x3fdc710
	void CreateDynamicMaterialInstance(None(None) None);// 0x3fdc5f0
	MaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamicFromMaterial(int ElementIndex, MaterialInterface* Parent);// 0x3fdc520
	MaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamic(int ElementIndex);// 0x3fdc480
	PrimitiveComponent*[] CopyArrayOfMoveIgnoreComponents();// 0x3fdc3e0
	Actor*[] CopyArrayOfMoveIgnoreActors();// 0x3fdc340
	void ClearMoveIgnoreComponents();// 0x3fdc310
	void ClearMoveIgnoreActors();// 0x3fdc2f0
	bool CanCharacterStepUp(Pawn* Pawn);// 0x3fdc250
	void AddTorqueInRadians(Vector Torque, None(None) None);// 0x3fdbfd0
	void AddTorqueInDegrees(None(None) None);// 0x3fdc100
	void AddTorque(None(None) None);// 0x3fdbfd0
	void AddRadialImpulse(None(None) None);// 0x3fdbdf0
	void AddRadialForce(None(None) None);// 0x3fdbc10
	void AddImpulseAtLocation(None(None) None);// 0x3fdbad0
	void AddImpulse(None(None) None);// 0x3fdb9a0
	void AddForceAtLocationLocal(None(None) None);// 0x3fdb860
	void AddForceAtLocation(None(None) None);// 0x3fdb720
	void AddForce(None(None) None);// 0x3fdb5f0
	void AddAngularImpulseInRadians(None(None) None);// 0x3fdb4c0
	void AddAngularImpulseInDegrees(None(None) None);// 0x3fdb370
	void AddAngularImpulse(None(None) None);// 0x3fdb240

--------------------------------
Class: SceneComponent.ActorComponent.Object
	PhysicsVolume* PhysicsVolume;//[Offset: 0xb8, Size: 1]
	SceneComponent* AttachParent;//[Offset: 0xc0, Size: 1]
	FName AttachSocketName;//[Offset: 0xc8, Size: 1]
	SceneComponent*[] AttachChildren;//[Offset: 0xd0, Size: 1]
	SceneComponent*[] ClientAttachedChildren;//[Offset: 0xe0, Size: 1]
	Vector RelativeLocation;//[Offset: 0x11c, Size: 1]
	Rotator RelativeRotation;//[Offset: 0x128, Size: 1]
	Vector RelativeScale3D;//[Offset: 0x134, Size: 1]
	Vector ComponentVelocity;//[Offset: 0x140, Size: 1]
	bool bComponentToWorldUpdated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x14c, Size: 1]
	bool bAbsoluteLocation;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x14c, Size: 1]
	bool bAbsoluteRotation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x14c, Size: 1]
	bool bAbsoluteScale;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x14c, Size: 1]
	bool bVisible;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x14c, Size: 1]
	bool bShouldBeAttached;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x14c, Size: 1]
	bool bShouldSnapLocationWhenAttached;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x14c, Size: 1]
	bool bShouldSnapRotationWhenAttached;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x14d, Size: 1]
	bool bShouldUpdatePhysicsVolume;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x14d, Size: 1]
	bool bHiddenInGame;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x14d, Size: 1]
	bool bBoundsChangeTriggersStreamingDataRebuild;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x14d, Size: 1]
	bool bUseAttachParentBound;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x14d, Size: 1]
	byte Mobility;//[Offset: 0x155, Size: 1]
	byte DetailMode;//[Offset: 0x156, Size: 1]
	delegate PhysicsVolumeChangedDelegate;//[Offset: 0x157, Size: 1]
	void ToggleVisibility(bool bPropagateToChildren);// 0x3fefe40
	bool SnapTo(SceneComponent* InParent, FName InSocketName);// 0x3fefd70
	void SetWorldScale3D(Vector NewScale);// 0x3fefb80
	void SetVisibility(bool bNewVisibility, bool bPropagateToChildren);// 0x3fefab0
	void SetShouldUpdatePhysicsVolume(bool bInShouldUpdatePhysicsVolume);// 0x3fefa20
	void SetRelativeScale3D(Vector NewScale3D);// 0x3fef990
	void SetMobility(byte NewMobility);// 0x3fef910
	void SetHiddenInGame(bool NewHidden, bool bPropagateToChildren);// 0x3fef840
	void SetAbsolute(bool bNewAbsoluteLocation, bool bNewAbsoluteRotation, bool bNewAbsoluteScale);// 0x3fef680
	void ResetRelativeTransform();// 0x3fef660
	void OnRep_Visibility(bool OldValue);// 0x3fef320
	void OnRep_Transform();// 0x3fef300
	void OnRep_AttachSocketName();// 0x3fef2e0
	void OnRep_AttachParent();// 0x3fef2e0
	void OnRep_AttachChildren();// 0x3fef2c0
	void K2_SetWorldTransform(out const Transform NewTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fef0b0
	void K2_SetWorldRotation(Rotator NewRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3feef00
	void K2_SetWorldLocationAndRotation(Vector NewLocation, Rotator NewRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3feed00
	void K2_SetWorldLocation(Vector NewLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3feeb50
	void K2_SetRelativeTransform(out const Transform NewTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fee940
	void K2_SetRelativeRotation(Rotator NewRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fee790
	void K2_SetRelativeLocationAndRotation(Vector NewLocation, Rotator NewRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fee590
	void K2_SetRelativeLocation(Vector NewLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fee3e0
	Transform K2_GetComponentToWorld();// 0x3fee380
	Vector K2_GetComponentScale();// 0x3fee340
	Rotator K2_GetComponentRotation();// 0x3fee300
	Vector K2_GetComponentLocation();// 0x3fee2c0
	void K2_DetachFromComponent(enum LocationRule, enum RotationRule, enum ScaleRule, bool bCallModify);// 0x3fee160
	bool K2_AttachToComponent(SceneComponent* Parent, FName SocketName, enum LocationRule, enum RotationRule, enum ScaleRule, bool bWeldSimulatedBodies);// 0x3fedf90
	bool K2_AttachTo(SceneComponent* InParent, FName InSocketName, byte AttachType, bool bWeldSimulatedBodies);// 0x3fede30
	void K2_AddWorldTransformKeepScale(out const Transform DeltaTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fedc20
	void K2_AddWorldTransform(out const Transform DeltaTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3feda10
	void K2_AddWorldRotation(Rotator DeltaRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fed860
	void K2_AddWorldOffset(Vector DeltaLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fed6b0
	void K2_AddRelativeRotation(Rotator DeltaRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fed500
	void K2_AddRelativeLocation(Vector DeltaLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fed350
	void K2_AddLocalTransform(out const Transform DeltaTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fed140
	void K2_AddLocalRotation(Rotator DeltaRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fecf90
	void K2_AddLocalOffset(Vector DeltaLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3fecde0
	bool IsVisible();// 0x3fecdb0
	bool IsSimulatingPhysics(FName BoneName);// 0x3fecd10
	bool IsAnySimulatingPhysics();// 0x3fecce0
	Vector GetUpVector();// 0x3fecb40
	Transform GetSocketTransform(FName InSocketName, byte TransformSpace);// 0x3feca30
	Rotator GetSocketRotation(FName InSocketName);// 0x3fec980
	Quat GetSocketQuaternion(FName InSocketName);// 0x3fec8d0
	Vector GetSocketLocation(FName InSocketName);// 0x3fec820
	bool GetShouldUpdatePhysicsVolume();// 0x3fec7f0
	Vector GetRightVector();// 0x3fec7b0
	Transform GetRelativeTransform();// 0x3fec750
	PhysicsVolume* GetPhysicsVolume();// 0x3fec720
	void GetParentComponents(out SceneComponent*[] Parents);// 0x3fec670
	int GetNumChildrenComponents();// 0x3fec640
	Vector GetForwardVector();// 0x3fc6900
	Vector GetComponentVelocity();// 0x3fec600
	void GetChildrenComponents(bool bIncludeAllDescendants, out SceneComponent*[] Children);// 0x3fec500
	SceneComponent* GetChildComponent(int ChildIndex);// 0x3fec460
	FName GetAttachSocketName();// 0x35aaca0
	SceneComponent* GetAttachParent();// 0x3fec440
	FName[] GetAllSocketNames();// 0x3fec3a0
	bool DoesSocketExist(FName InSocketName);// 0x3fec300
	void DetachFromParent(bool bMaintainWorldPosition, bool bCallModify);// 0x3fec220

--------------------------------
Class: ActorComponent.Object
	ActorComponentTickFunction PrimaryComponentTick;//[Offset: 0x30, Size: 1]
	FName[] ComponentTags;//[Offset: 0x60, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x70, Size: 1]
	int UCSSerializationIndex;//[Offset: 0x84, Size: 1]
	bool bNetAddressable;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x88, Size: 1]
	bool bReplicates;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x88, Size: 1]
	bool bAutoActivate;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x89, Size: 1]
	bool bIsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8a, Size: 1]
	bool bEditableWhenInherited;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8a, Size: 1]
	bool bCanEverAffectNavigation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x8a, Size: 1]
	bool bIsEditorOnly;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x8a, Size: 1]
	enum CreationMethod;//[Offset: 0x8c, Size: 1]
	delegate OnComponentActivated;//[Offset: 0x8d, Size: 1]
	delegate OnComponentDeactivated;//[Offset: 0x8e, Size: 1]
	SimpleMemberReference[] UCSModifiedProperties;//[Offset: 0x90, Size: 1]
	void ToggleActive();// 0x3402cf0
	void SetTickGroup(byte NewTickGroup);// 0x3eaeea0
	void SetTickableWhenPaused(bool bTickableWhenPaused);// 0x3eaef20
	void SetIsReplicated(bool ShouldReplicate);// 0x3eaee10
	void SetComponentTickIntervalAndCooldown(float TickInterval);// 0x3eaed90
	void SetComponentTickInterval(float TickInterval);// 0x3eaed10
	void SetComponentTickEnabled(bool bEnabled);// 0x3eaec80
	void SetAutoActivate(bool bNewAutoActivate);// 0x3eaebf0
	void SetActive(bool bNewActive, bool bReset);// 0x3eaeb10
	void RemoveTickPrerequisiteComponent(ActorComponent* PrerequisiteComponent);// 0x3eaea80
	void RemoveTickPrerequisiteActor(Actor* PrerequisiteActor);// 0x3eae9f0
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ReceiveEndPlay(byte EndPlayReason);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void OnRep_IsActive();// 0x2d867e0
	void K2_DestroyComponent(Object* Object);// 0x3eae8e0
	bool IsComponentTickEnabled();// 0x3eae8b0
	bool IsBeingDestroyed();// 0x3eae880
	bool IsActive();// 0x3eae850
	Actor* GetOwner();// 0x3eae830
	float GetComponentTickInterval();// 0x3eae800
	void Deactivate();// 0x2d86580
	bool ComponentHasTag(FName Tag);// 0x3eae5c0
	void AddTickPrerequisiteComponent(ActorComponent* PrerequisiteComponent);// 0x3eae460
	void AddTickPrerequisiteActor(Actor* PrerequisiteActor);// 0x3eae3d0
	void Activate(bool bReset);// 0x3402fa0

--------------------------------
Class: Actor.Object
	ActorTickFunction PrimaryActorTick;//[Offset: 0x28, Size: 1]
	bool bNetTemporary;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x58, Size: 1]
	bool bNetStartup;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x58, Size: 1]
	bool bOnlyRelevantToOwner;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x58, Size: 1]
	bool bAlwaysRelevant;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x58, Size: 1]
	bool bReplicateMovement;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x58, Size: 1]
	bool bHidden;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x58, Size: 1]
	bool bTearOff;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x58, Size: 1]
	bool bForceNetAddressable;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x58, Size: 1]
	bool bExchangedRoles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x59, Size: 1]
	bool bNetLoadOnClient;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x59, Size: 1]
	bool bNetUseOwnerRelevancy;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x59, Size: 1]
	bool bRelevantForNetworkReplays;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x59, Size: 1]
	bool bRelevantForLevelBounds;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x59, Size: 1]
	bool bReplayRewindable;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x59, Size: 1]
	bool bAllowTickBeforeBeginPlay;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x59, Size: 1]
	bool bAutoDestroyWhenFinished;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x59, Size: 1]
	bool bCanBeDamaged;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5a, Size: 1]
	bool bBlockInput;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5a, Size: 1]
	bool bCollideWhenPlacing;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x5a, Size: 1]
	bool bFindCameraComponentWhenViewTarget;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x5a, Size: 1]
	bool bGenerateOverlapEventsDuringLevelStreaming;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x5a, Size: 1]
	bool bIgnoresOriginShifting;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x5a, Size: 1]
	bool bEnableAutoLODGeneration;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x5a, Size: 1]
	bool bIsEditorOnlyActor;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x5a, Size: 1]
	bool bActorSeamlessTraveled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5b, Size: 1]
	bool bReplicates;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5b, Size: 1]
	bool bCanBeInCluster;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x5b, Size: 1]
	bool bAllowReceiveTickEventOnDedicatedServer;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x5b, Size: 1]
	bool bActorEnableCollision;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x5c, Size: 1]
	bool bActorIsBeingDestroyed;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x5c, Size: 1]
	enum UpdateOverlapsMethodDuringLevelStreaming;//[Offset: 0x5d, Size: 1]
	enum DefaultUpdateOverlapsMethodDuringLevelStreaming;//[Offset: 0x5e, Size: 1]
	byte RemoteRole;//[Offset: 0x5f, Size: 1]
	RepMovement ReplicatedMovement;//[Offset: 0x60, Size: 1]
	float InitialLifeSpan;//[Offset: 0x94, Size: 1]
	float CustomTimeDilation;//[Offset: 0x98, Size: 1]
	RepAttachment AttachmentReplication;//[Offset: 0xa0, Size: 1]
	Actor* Owner;//[Offset: 0xe0, Size: 1]
	FName NetDriverName;//[Offset: 0xe8, Size: 1]
	byte Role;//[Offset: 0xf0, Size: 1]
	byte NetDormancy;//[Offset: 0xf1, Size: 1]
	enum SpawnCollisionHandlingMethod;//[Offset: 0xf2, Size: 1]
	byte AutoReceiveInput;//[Offset: 0xf3, Size: 1]
	int InputPriority;//[Offset: 0xf4, Size: 1]
	InputComponent* InputComponent;//[Offset: 0xf8, Size: 1]
	float NetCullDistanceSquared;//[Offset: 0x100, Size: 1]
	int NetTag;//[Offset: 0x104, Size: 1]
	float NetUpdateFrequency;//[Offset: 0x108, Size: 1]
	float MinNetUpdateFrequency;//[Offset: 0x10c, Size: 1]
	bool bUseRelativeNetUpdateFrequency;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x110, Size: 1]
	bool bUseOwnerRelativeNetUpdateFrequency;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x110, Size: 1]
	float MinRelativeNetUpdateEvaluationFrequency;//[Offset: 0x114, Size: 1]
	float NetPriority;//[Offset: 0x118, Size: 1]
	Pawn* Instigator;//[Offset: 0x120, Size: 1]
	Actor*[] Children;//[Offset: 0x128, Size: 1]
	SceneComponent* RootComponent;//[Offset: 0x138, Size: 1]
	MatineeActor*[] ControllingMatineeActors;//[Offset: 0x140, Size: 1]
	FName[] Layers;//[Offset: 0x158, Size: 1]
	ChildActorComponent* ParentComponent;//[Offset: 0x168, Size: 1]
	FName[] Tags;//[Offset: 0x178, Size: 1]
	delegate OnTakeAnyDamage;//[Offset: 0x188, Size: 1]
	delegate OnTakePointDamage;//[Offset: 0x189, Size: 1]
	delegate OnTakeRadialDamage;//[Offset: 0x18a, Size: 1]
	delegate OnActorBeginOverlap;//[Offset: 0x18b, Size: 1]
	delegate OnActorEndOverlap;//[Offset: 0x18c, Size: 1]
	delegate OnBeginCursorOver;//[Offset: 0x18d, Size: 1]
	delegate OnEndCursorOver;//[Offset: 0x18e, Size: 1]
	delegate OnClicked;//[Offset: 0x18f, Size: 1]
	delegate OnReleased;//[Offset: 0x190, Size: 1]
	delegate OnInputTouchBegin;//[Offset: 0x191, Size: 1]
	delegate OnInputTouchEnd;//[Offset: 0x192, Size: 1]
	delegate OnInputTouchEnter;//[Offset: 0x193, Size: 1]
	delegate OnInputTouchLeave;//[Offset: 0x194, Size: 1]
	delegate OnActorHit;//[Offset: 0x195, Size: 1]
	delegate OnDestroyed;//[Offset: 0x196, Size: 1]
	delegate OnEndPlay;//[Offset: 0x197, Size: 1]
	ActorComponent*[] InstanceComponents;//[Offset: 0x1f8, Size: 1]
	ActorComponent*[] BlueprintCreatedComponents;//[Offset: 0x208, Size: 1]
	bool WasRecentlyRendered(float Tolerance);// 0x3eab7e0
	void UserConstructionScript();// 0x1d69c50
	void TearOff();// 0x2d86580
	void SnapRootComponentTo(Actor* InParentActor, FName InSocketName);// 0x3eab710
	void SetTickGroup(byte NewTickGroup);// 0x3eab600
	void SetTickableWhenPaused(bool bTickableWhenPaused);// 0x3eab680
	void SetReplicates(bool bInReplicates);// 0x3eab570
	void SetReplicateMovement(bool bInReplicateMovement);// 0x3eab4e0
	void SetOwner(Actor* NewOwner);// 0xdca1b0
	void SetNetDormancy(byte NewDormancy);// 0x3eab460
	void SetLifeSpan(float InLifespan);// 0x3eab3d0
	void SetAutoDestroyWhenFinished(bool bVal);// 0x3eab340
	void SetActorTickInterval(float TickInterval);// 0x3eab2c0
	void SetActorTickEnabled(bool bEnabled);// 0x3eab230
	void SetActorScale3D(Vector NewScale3D);// 0x3eab1a0
	void SetActorRelativeScale3D(Vector NewRelativeScale);// 0x3eab110
	void SetActorHiddenInGame(bool bNewHidden);// 0x3eab080
	void SetActorEnableCollision(bool bNewActorEnableCollision);// 0x3eaaff0
	void RemoveTickPrerequisiteComponent(ActorComponent* PrerequisiteComponent);// 0x3eaaf60
	void RemoveTickPrerequisiteActor(Actor* PrerequisiteActor);// 0x3eaaed0
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ReceiveRadialDamage(float DamageReceived, const DamageType* DamageType, Vector Origin, out const HitResult HitInfo, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void ReceivePointDamage(float damage, const DamageType* DamageType, Vector HitLocation, Vector HitNormal, PrimitiveComponent* HitComponent, FName BoneName, Vector ShotFromDirection, Controller* InstigatedBy, Actor* DamageCauser, out const HitResult HitInfo);// 0x1d69c50
	void ReceiveHit(PrimitiveComponent* MyComp, Actor* Other, PrimitiveComponent* OtherComp, bool bSelfMoved, Vector HitLocation, Vector HitNormal, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void ReceiveEndPlay(byte EndPlayReason);// 0x1d69c50
	void ReceiveDestroyed();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveAnyDamage(float damage, const DamageType* DamageType, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void ReceiveActorOnReleased(Key ButtonReleased);// 0x1d69c50
	void ReceiveActorOnInputTouchLeave(const byte FingerIndex);// 0x1d69c50
	void ReceiveActorOnInputTouchEnter(const byte FingerIndex);// 0x1d69c50
	void ReceiveActorOnInputTouchEnd(const byte FingerIndex);// 0x1d69c50
	void ReceiveActorOnInputTouchBegin(const byte FingerIndex);// 0x1d69c50
	void ReceiveActorOnClicked(Key ButtonPressed);// 0x1d69c50
	void ReceiveActorEndOverlap(Actor* OtherActor);// 0x1d69c50
	void ReceiveActorEndCursorOver();// 0x1d69c50
	void ReceiveActorBeginOverlap(Actor* OtherActor);// 0x1d69c50
	void ReceiveActorBeginCursorOver();// 0x1d69c50
	void PrestreamTextures(float Seconds, bool bEnableStreaming, int CinematicTextureGroups);// 0x3eaadb0
	void OnRep_ReplicateMovement();// 0x2d867e0
	void OnRep_ReplicatedMovement();// 0xd5a3c0
	void OnRep_Owner();// 0x3eaad90
	void OnRep_Instigator();// 0x3eaad70
	void OnRep_bHidden();// 0x2d86800
	void OnRep_AttachmentReplication();// 0x3eaad50
	void MakeNoise(float Loudness, Pawn* NoiseInstigator, Vector NoiseLocation, float MaxRange, FName Tag);// 0x3eaabb0
	MaterialInstanceDynamic* MakeMIDForMaterial(MaterialInterface* Parent);// 0x3eaab10
	bool K2_TeleportTo(Vector DestLocation, Rotator DestRotation);// 0x3eaaa20
	bool K2_SetActorTransform(out const Transform NewTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3eaa810
	bool K2_SetActorRotation(Rotator NewRotation, bool bTeleportPhysics);// 0x3eaa720
	void K2_SetActorRelativeTransform(out const Transform NewRelativeTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3eaa510
	void K2_SetActorRelativeRotation(Rotator NewRelativeRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3eaa360
	void K2_SetActorRelativeLocation(Vector NewRelativeLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3eaa1b0
	bool K2_SetActorLocationAndRotation(Vector NewLocation, Rotator NewRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea9fa0
	bool K2_SetActorLocation(Vector NewLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea9de0
	void K2_OnReset();// 0x1d69c50
	void K2_OnEndViewTarget(PlayerController* PC);// 0x1d69c50
	void K2_OnBecomeViewTarget(PlayerController* PC);// 0x1d69c50
	SceneComponent* K2_GetRootComponent();// 0x3ea9dc0
	ActorComponent*[] K2_GetComponentsByClass(class ActorComponent ComponentClass);// 0x3ea9d00
	Rotator K2_GetActorRotation();// 0x3ea9c40
	Vector K2_GetActorLocation();// 0x3ea9bc0
	void K2_DetachFromActor(enum LocationRule, enum RotationRule, enum ScaleRule);// 0x3ea9ab0
	void K2_DestroyComponent(ActorComponent* Component);// 0x3ea9a20
	void K2_DestroyActor();// 0x3ea9a00
	void K2_AttachToComponent(SceneComponent* Parent, FName SocketName, enum LocationRule, enum RotationRule, enum ScaleRule, bool bWeldSimulatedBodies);// 0x3ea9830
	void K2_AttachToActor(Actor* ParentActor, FName SocketName, enum LocationRule, enum RotationRule, enum ScaleRule, bool bWeldSimulatedBodies);// 0x3ea9660
	void K2_AttachRootComponentToActor(Actor* InParentActor, FName InSocketName, byte AttachLocationType, bool bWeldSimulatedBodies);// 0x3ea9500
	void K2_AttachRootComponentTo(SceneComponent* InParent, FName InSocketName, byte AttachLocationType, bool bWeldSimulatedBodies);// 0x3ea93a0
	void K2_AddActorWorldTransformKeepScale(out const Transform DeltaTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea9190
	void K2_AddActorWorldTransform(out const Transform DeltaTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea8f80
	void K2_AddActorWorldRotation(Rotator DeltaRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea8dd0
	void K2_AddActorWorldOffset(Vector DeltaLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea8c20
	void K2_AddActorLocalTransform(out const Transform NewTransform, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea8a10
	void K2_AddActorLocalRotation(Rotator DeltaRotation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea8860
	void K2_AddActorLocalOffset(Vector DeltaLocation, bool bSweep, out HitResult SweepHitResult, bool bTeleport);// 0x3ea86b0
	bool IsOverlappingActor(const Actor* Other);// 0x3ea8610
	bool IsChildActor();// 0x3ea85e0
	bool IsActorTickEnabled();// 0x3ea85b0
	bool IsActorBeingDestroyed();// 0x3ea8580
	bool HasAuthority();// 0x3ea8550
	float GetVerticalDistanceTo(const Actor* OtherActor);// 0x3ea84b0
	Vector GetVelocity();// 0x3ea8470
	Transform GetTransform();// 0x3ea8420
	bool GetTickableWhenPaused();// 0x3ea83f0
	float GetSquaredHorizontalDistanceTo(const Actor* OtherActor);// 0x3ea8350
	float GetSquaredDistanceTo(const Actor* OtherActor);// 0x3ea82b0
	byte GetRemoteRole();// 0x3ea8290
	ChildActorComponent* GetParentComponent();// 0x3ea8260
	Actor* GetParentActor();// 0x3ea8230
	Actor* GetOwner();// 0x3ea8210
	void GetOverlappingComponents(out PrimitiveComponent*[] OverlappingComponents);// 0x3ea8160
	void GetOverlappingActors(out Actor*[] OverlappingActors, class Actor ClassFilter);// 0x3ea8060
	byte GetLocalRole();// 0x3ea8040
	float GetLifeSpan();// 0x3ea8000
	Controller* GetInstigatorController();// 0x3ea7fd0
	Pawn* GetInstigator();// 0x3ea7fa0
	Vector GetInputVectorAxisValue(const Key InputAxisKey);// 0x3ea7e90
	float GetInputAxisValue(const FName InputAxisName);// 0x3ea7df0
	float GetInputAxisKeyValue(const Key InputAxisKey);// 0x3ea7cf0
	float GetHorizontalDotProductTo(const Actor* OtherActor);// 0x3ea7c50
	float GetHorizontalDistanceTo(const Actor* OtherActor);// 0x3ea7bb0
	float GetGameTimeSinceCreation();// 0x3ea7b80
	float GetDotProductTo(const Actor* OtherActor);// 0x3ea7ae0
	float GetDistanceTo(const Actor* OtherActor);// 0x3ea7a40
	ActorComponent*[] GetComponentsByTag(class ActorComponent ComponentClass, FName Tag);// 0x3ea7950
	ActorComponent*[] GetComponentsByInterface(class Interface Interface);// 0x3ea7890
	ActorComponent* GetComponentByClass(class ActorComponent ComponentClass);// 0x3ea77f0
	FName GetAttachParentSocketName();// 0x3ea76b0
	Actor* GetAttachParentActor();// 0x3ea7680
	void GetAttachedActors(out Actor*[] OutActors, bool bResetArray);// 0x3ea76f0
	void GetAllChildActors(out Actor*[] ChildActors, bool bIncludeDescendants);// 0x3ea7580
	Vector GetActorUpVector();// 0x3ea7510
	float GetActorTimeDilation();// 0x3ea74e0
	float GetActorTickInterval();// 0x3ea74b0
	Vector GetActorScale3D();// 0x3ea7470
	Vector GetActorRightVector();// 0x3ea7400
	Vector GetActorRelativeScale3D();// 0x3ea73c0
	Vector GetActorForwardVector();// 0x3ea7350
	void GetActorEyesViewPoint(out Vector OutLocation, out Rotator OutRotation);// 0x3ea7260
	bool GetActorEnableCollision();// 0x3ea7230
	void GetActorBounds(bool bOnlyCollidingComponents, out Vector Origin, out Vector BoxExtent, bool bIncludeFromChildActors);// 0x3ea70a0
	void ForceNetUpdate();// 0xdc1620
	void FlushNetDormancy();// 0x3ea7080
	void FinishAddComponent(ActorComponent* Component, bool bManualAttachment, out const Transform RelativeTransform);// 0x3ea6f20
	void EnableInput(PlayerController* PlayerController);// 0x33eab90
	void DisableInput(PlayerController* PlayerController);// 0x3ea6e90
	void DetachRootComponentFromParent(bool bMaintainWorldPosition);// 0x3ea6e00
	void AddTickPrerequisiteComponent(ActorComponent* PrerequisiteComponent);// 0x3ea6d70
	void AddTickPrerequisiteActor(Actor* PrerequisiteActor);// 0x3ea6ce0
	ActorComponent* AddComponentByClass(class ActorComponent Class, bool bManualAttachment, out const Transform RelativeTransform, bool bDeferredFinish);// 0x3ea6b20
	ActorComponent* AddComponent(FName TemplateName, bool bManualAttachment, out const Transform RelativeTransform, const Object* ComponentTemplateContext, bool bDeferredFinish);// 0x3ea6910
	bool ActorHasTag(FName Tag);// 0x3ea6870

--------------------------------
Class: Vector
	float X;//[Offset: 0x0, Size: 1]
	float Y;//[Offset: 0x4, Size: 1]
	float Z;//[Offset: 0x8, Size: 1]

--------------------------------
Class: DamageType.Object
	bool bCausedByWorld;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]
	bool bScaleMomentumByMass;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x28, Size: 1]
	bool bRadialDamageVelChange;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x28, Size: 1]
	float DamageImpulse;//[Offset: 0x2c, Size: 1]
	float DestructibleImpulse;//[Offset: 0x30, Size: 1]
	float DestructibleDamageSpreadScale;//[Offset: 0x34, Size: 1]
	float DamageFalloff;//[Offset: 0x38, Size: 1]

--------------------------------
Class: HitResult
	int FaceIndex;//[Offset: 0x0, Size: 1]
	float Time;//[Offset: 0x4, Size: 1]
	float distance;//[Offset: 0x8, Size: 1]
	Vector_NetQuantize Location;//[Offset: 0xc, Size: 1]
	Vector_NetQuantize ImpactPoint;//[Offset: 0x18, Size: 1]
	Vector_NetQuantizeNormal Normal;//[Offset: 0x24, Size: 1]
	Vector_NetQuantizeNormal ImpactNormal;//[Offset: 0x30, Size: 1]
	Vector_NetQuantize TraceStart;//[Offset: 0x3c, Size: 1]
	Vector_NetQuantize TraceEnd;//[Offset: 0x48, Size: 1]
	float PenetrationDepth;//[Offset: 0x54, Size: 1]
	int Item;//[Offset: 0x58, Size: 1]
	byte ElementIndex;//[Offset: 0x5c, Size: 1]
	bool bBlockingHit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5d, Size: 1]
	bool bStartPenetrating;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5d, Size: 1]
	PhysicalMaterial* PhysMaterial;//[Offset: 0x60, Size: 1]
	Actor* Actor;//[Offset: 0x68, Size: 1]
	PrimitiveComponent* Component;//[Offset: 0x70, Size: 1]
	FName BoneName;//[Offset: 0x78, Size: 1]
	FName MyBoneName;//[Offset: 0x80, Size: 1]

--------------------------------
Class: Vector_NetQuantize.Vector

--------------------------------
Class: Vector_NetQuantizeNormal.Vector

--------------------------------
Class: PhysicalMaterial.Object
	float Friction;//[Offset: 0x28, Size: 1]
	float StaticFriction;//[Offset: 0x2c, Size: 1]
	byte FrictionCombineMode;//[Offset: 0x30, Size: 1]
	bool bOverrideFrictionCombineMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x31, Size: 1]
	float Restitution;//[Offset: 0x34, Size: 1]
	byte RestitutionCombineMode;//[Offset: 0x38, Size: 1]
	bool bOverrideRestitutionCombineMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x39, Size: 1]
	float Density;//[Offset: 0x3c, Size: 1]
	float SleepLinearVelocityThreshold;//[Offset: 0x40, Size: 1]
	float SleepAngularVelocityThreshold;//[Offset: 0x44, Size: 1]
	int SleepCounterThreshold;//[Offset: 0x48, Size: 1]
	float RaiseMassToPower;//[Offset: 0x4c, Size: 1]
	float DestructibleDamageThresholdScale;//[Offset: 0x50, Size: 1]
	PhysicalMaterialPropertyBase* PhysicalMaterialProperty;//[Offset: 0x58, Size: 1]
	byte SurfaceType;//[Offset: 0x60, Size: 1]

--------------------------------
Class: PhysicalMaterialPropertyBase.Object

--------------------------------
Class: Controller.Actor.Object
	PlayerState* PlayerState;//[Offset: 0x230, Size: 1]
	MulticastInlineDelegateProperty OnInstigatedAnyDamage;//[Size: 1]
	FName StateName;//[Offset: 0x250, Size: 1]
	Pawn* Pawn;//[Offset: 0x258, Size: 1]
	Character* Character;//[Offset: 0x268, Size: 1]
	SceneComponent* TransformComponent;//[Offset: 0x270, Size: 1]
	Rotator ControlRotation;//[Offset: 0x290, Size: 1]
	bool bAttachToPawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x29c, Size: 1]
	void UnPossess();// 0x3eef460
	void StopMovement();// 0x3eef440
	void SetInitialLocationAndRotation(out const Vector NewLocation, out const Rotator NewRotation);// 0x3eef350
	void SetIgnoreMoveInput(bool bNewMoveInput);// 0x3eef2c0
	void SetIgnoreLookInput(bool bNewLookInput);// 0x3eef230
	void SetControlRotation(out const Rotator NewRotation);// 0x3eef1a0
	void ResetIgnoreMoveInput();// 0x3eef180
	void ResetIgnoreLookInput();// 0x3eef160
	void ResetIgnoreInputFlags();// 0xd82140
	void ReceiveUnPossess(Pawn* UnpossessedPawn);// 0x1d69c50
	void ReceivePossess(Pawn* PossessedPawn);// 0x1d69c50
	void ReceiveInstigatedAnyDamage(float damage, const DamageType* DamageType, Actor* DamagedActor, Actor* DamageCauser);// 0x1d69c50
	void Possess(Pawn* InPawn);// 0x3eef0d0
	void OnRep_PlayerState();// 0xd97a30
	void OnRep_Pawn();// 0xd97b00
	bool LineOfSightTo(const Actor* Other, Vector ViewPoint, bool bAlternateChecks);// 0x3eeefa0
	Pawn* K2_GetPawn();// 0x3eeef70
	bool IsPlayerController();// 0x3eeef40
	bool IsMoveInputIgnored();// 0x3eeef10
	bool IsLookInputIgnored();// 0x3eeeee0
	bool IsLocalPlayerController();// 0x3eeee90
	bool IsLocalController();// 0x3eeee60
	Actor* GetViewTarget();// 0xd82260
	Rotator GetDesiredRotation();// 0x3eeec60
	Rotator GetControlRotation();// 0x3eeec20
	void ClientSetRotation(Rotator NewRotation, bool bResetCamera);// 0x3eeeaf0
	void ClientSetLocation(Vector NewLocation, Rotator NewRotation);// 0x3eee9b0
	PlayerController* CastToPlayerController();// 0x3eee980

--------------------------------
Class: PlayerState.Info.Actor.Object
	float Score;//[Offset: 0x228, Size: 1]
	int PlayerId;//[Offset: 0x22c, Size: 1]
	byte Ping;//[Offset: 0x230, Size: 1]
	bool bShouldUpdateReplicatedPing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x232, Size: 1]
	bool bIsSpectator;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x232, Size: 1]
	bool bOnlySpectator;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x232, Size: 1]
	bool bIsABot;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x232, Size: 1]
	bool bIsInactive;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x232, Size: 1]
	bool bFromPreviousLevel;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x232, Size: 1]
	int StartTime;//[Offset: 0x234, Size: 1]
	class LocalMessage* EngineMessageClass;//[Offset: 0x238, Size: 1]
	FString SavedNetworkAddress;//[Offset: 0x248, Size: 1]
	UniqueNetIdRepl UniqueID;//[Offset: 0x258, Size: 1]
	Pawn* PawnPrivate;//[Offset: 0x288, Size: 1]
	FString PlayerNamePrivate;//[Offset: 0x308, Size: 1]
	void ReceiveOverrideWith(PlayerState* OldPlayerState);// 0x1d69c50
	void ReceiveCopyProperties(PlayerState* NewPlayerState);// 0x1d69c50
	void OnRep_UniqueId();// 0xd81a80
	void OnRep_Score();// 0xd78d00
	void OnRep_PlayerName();// 0xd7ddb0
	void OnRep_PlayerId();// 0xd78600
	void OnRep_bIsInactive();// 0xd7df20
	bool IsOnlyASpectator();// 0x3fd82a0
	FString GetPlayerName();// 0x3fd80d0

--------------------------------
Class: Info.Actor.Object

--------------------------------
Class: LocalMessage.Object

--------------------------------
Class: UniqueNetIdRepl.UniqueNetIdWrapper
	byte[] ReplicationBytes;//[Offset: 0x18, Size: 1]

--------------------------------
Class: UniqueNetIdWrapper

--------------------------------
Class: Pawn.Actor.Object
	bool bUseControllerRotationPitch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x230, Size: 1]
	bool bUseControllerRotationYaw;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x230, Size: 1]
	bool bUseControllerRotationRoll;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x230, Size: 1]
	bool bCanAffectNavigationGeneration;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x230, Size: 1]
	float BaseEyeHeight;//[Offset: 0x234, Size: 1]
	byte AutoPossessPlayer;//[Offset: 0x238, Size: 1]
	enum AutoPossessAI;//[Offset: 0x239, Size: 1]
	byte RemoteViewPitch;//[Offset: 0x23a, Size: 1]
	class Controller* AIControllerClass;//[Offset: 0x240, Size: 1]
	PlayerState* PlayerState;//[Offset: 0x248, Size: 1]
	Controller* LastHitBy;//[Offset: 0x258, Size: 1]
	Controller* Controller;//[Offset: 0x260, Size: 1]
	Vector ControlInputVector;//[Offset: 0x26c, Size: 1]
	Vector LastControlInputVector;//[Offset: 0x278, Size: 1]
	void SpawnDefaultController();// 0x3fc4400
	void SetCanAffectNavigationGeneration(bool bNewValue, bool bForceUpdate);// 0x3fc3300
	void ReceiveUnpossessed(Controller* OldController);// 0x1d69c50
	void ReceivePossessed(Controller* NewController);// 0x1d69c50
	void PawnMakeNoise(float Loudness, Vector NoiseLocation, bool bUseNoiseMakerLocation, Actor* NoiseMaker);// 0x3fc27a0
	void OnRep_PlayerState();// 0xd97b20
	void OnRep_Controller();// 0xd97c90
	void LaunchPawn(Vector LaunchVelocity, bool bXYOverride, bool bZOverride);// 0x3fc2560
	Vector K2_GetMovementInputVector();// 0x3fc2460
	bool IsPlayerControlled();// 0x3f11270
	bool IsPawnControlled();// 0x3fc2530
	bool IsMoveInputIgnored();// 0xde4e80
	bool IsLocallyControlled();// 0x3eeee60
	bool IsControlled();// 0x3fc24d0
	bool IsBotControlled();// 0xd98e00
	Vector GetPendingMovementInputVector();// 0x3fc2460
	Vector GetNavAgentLocation();// 0x3fc23a0
	PawnMovementComponent* GetMovementComponent();// 0x3ef7890
	static Actor* GetMovementBaseActor(const Pawn* Pawn);// 0x3fc2310
	Vector GetLastMovementInputVector();// 0x3fc22d0
	Rotator GetControlRotation();// 0x3fc21a0
	Controller* GetController();// 0x3fc21e0
	Rotator GetBaseAimRotation();// 0x3fc1fc0
	void DetachFromControllerPendingDestroy();// 0x3fc1fa0
	Vector ConsumeMovementInputVector();// 0x3fc1f60
	void AddMovementInput(Vector WorldDirection, float ScaleValue, bool bForce);// 0x3fc1a40
	void AddControllerYawInput(float Val);// 0x3fc18d0
	void AddControllerRollInput(float Val);// 0x3fc1840
	void AddControllerPitchInput(float Val);// 0x3fc17b0

--------------------------------
Class: PawnMovementComponent.NavMovementComponent.MovementComponent.ActorComponent.Object
	Pawn* PawnOwner;//[Offset: 0x130, Size: 1]
	Vector K2_GetInputVector();// 0x3fc2420
	bool IsMoveInputIgnored();// 0x3fc2500
	Vector GetPendingInputVector();// 0x3fc2420
	Pawn* GetPawnOwner();// 0x3fc23f0
	Vector GetLastInputVector();// 0x3fc2290
	Vector ConsumeInputVector();// 0x3fc1f20
	void AddInputVector(Vector WorldVector, bool bForce);// 0x3fc1960

--------------------------------
Class: NavMovementComponent.MovementComponent.ActorComponent.Object
	NavAgentProperties NavAgentProps;//[Offset: 0xf0, Size: 1]
	float FixedPathBrakingDistance;//[Offset: 0x120, Size: 1]
	bool bUpdateNavAgentWithOwnersCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x124, Size: 1]
	bool bUseAccelerationForPaths;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x124, Size: 1]
	bool bUseFixedBrakingDistanceForPaths;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x124, Size: 1]
	MovementProperties MovementState;//[Offset: 0x125, Size: 1]
	Object* PathFollowingComp;//[Offset: 0x128, Size: 1]
	void StopMovementKeepPathing();// 0x3faddb0
	void StopActiveMovement();// 0xdb8ba0
	bool IsSwimming();// 0x3fadd80
	bool IsMovingOnGround();// 0x3ee8070
	bool IsFlying();// 0x3fadd50
	bool IsFalling();// 0x3ec8a20
	bool IsCrouching();// 0x3fadd20

--------------------------------
Class: MovementComponent.ActorComponent.Object
	SceneComponent* UpdatedComponent;//[Offset: 0xb0, Size: 1]
	PrimitiveComponent* UpdatedPrimitive;//[Offset: 0xb8, Size: 1]
	Vector Velocity;//[Offset: 0xc4, Size: 1]
	Vector PlaneConstraintNormal;//[Offset: 0xd0, Size: 1]
	Vector PlaneConstraintOrigin;//[Offset: 0xdc, Size: 1]
	bool bUpdateOnlyIfRendered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xe8, Size: 1]
	bool bAutoUpdateTickRegistration;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xe8, Size: 1]
	bool bTickBeforeOwner;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xe8, Size: 1]
	bool bAutoRegisterUpdatedComponent;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xe8, Size: 1]
	bool bConstrainToPlane;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xe8, Size: 1]
	bool bSnapToPlaneAtStart;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xe8, Size: 1]
	bool bAutoRegisterPhysicsVolumeUpdates;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xe8, Size: 1]
	bool bComponentShouldUpdatePhysicsVolume;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xe8, Size: 1]
	enum PlaneConstraintAxisSetting;//[Offset: 0xeb, Size: 1]
	void StopMovementImmediately();// 0x3fab300
	void SnapUpdatedComponentToPlane();// 0x3fab2e0
	void SetUpdatedComponent(SceneComponent* NewUpdatedComponent);// 0x3fab170
	void SetPlaneConstraintOrigin(Vector PlaneOrigin);// 0x3fab010
	void SetPlaneConstraintNormal(Vector PlaneNormal);// 0x3faaf80
	void SetPlaneConstraintFromVectors(Vector Forward, Vector Up);// 0x3faae90
	void SetPlaneConstraintEnabled(bool bEnabled);// 0x3faae00
	void SetPlaneConstraintAxisSetting(enum NewAxisSetting);// 0x3faad80
	void PhysicsVolumeChanged(PhysicsVolume* NewVolume);// 0xdca1b0
	bool K2_MoveUpdatedComponent(Vector Delta, Rotator NewRotation, out HitResult OutHit, bool bSweep, bool bTeleport);// 0x3faa6f0
	float K2_GetModifiedMaxSpeed();// 0x3faa6b0
	float K2_GetMaxSpeedModifier();// 0x3faa670
	bool IsExceedingMaxSpeed(float MaxSpeed);// 0x3faa530
	Vector GetPlaneConstraintOrigin();// 0x3faa4f0
	Vector GetPlaneConstraintNormal();// 0x3faa4b0
	enum GetPlaneConstraintAxisSetting();// 0x3faa490
	PhysicsVolume* GetPhysicsVolume();// 0x3faa460
	float GetMaxSpeed();// 0x3faa420
	float GetGravityZ();// 0x3faa200
	Vector ConstrainNormalToPlane(Vector Normal);// 0x3faa150
	Vector ConstrainLocationToPlane(Vector Location);// 0x3faa0a0
	Vector ConstrainDirectionToPlane(Vector Direction);// 0x3fa9ff0

--------------------------------
Class: PhysicsVolume.Volume.Brush.Actor.Object
	float TerminalVelocity;//[Offset: 0x260, Size: 1]
	int Priority;//[Offset: 0x264, Size: 1]
	float FluidFriction;//[Offset: 0x268, Size: 1]
	bool bWaterVolume;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x26c, Size: 1]
	bool bPhysicsOnContact;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x26c, Size: 1]

--------------------------------
Class: Volume.Brush.Actor.Object

--------------------------------
Class: Brush.Actor.Object
	byte BrushType;//[Offset: 0x228, Size: 1]
	Color BrushColor;//[Offset: 0x22c, Size: 1]
	int PolyFlags;//[Offset: 0x230, Size: 1]
	bool bColored;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x234, Size: 1]
	bool bSolidWhenSelected;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x234, Size: 1]
	bool bPlaceableFromClassBrowser;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x234, Size: 1]
	bool bNotForClientOrServer;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x234, Size: 1]
	Model* Brush;//[Offset: 0x238, Size: 1]
	BrushComponent* BrushComponent;//[Offset: 0x240, Size: 1]
	bool bInManipulation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x248, Size: 1]
	GeomSelection[] SavedSelections;//[Offset: 0x250, Size: 1]

--------------------------------
Class: Color
	byte B;//[Offset: 0x0, Size: 1]
	byte G;//[Offset: 0x1, Size: 1]
	byte R;//[Offset: 0x2, Size: 1]
	byte A;//[Offset: 0x3, Size: 1]

--------------------------------
Class: BrushComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	Model* Brush;//[Offset: 0x450, Size: 1]
	BodySetup* BrushBodySetup;//[Offset: 0x458, Size: 1]

--------------------------------
Class: BodySetup.BodySetupCore.Object
	KAggregateGeom AggGeom;//[Offset: 0x48, Size: 1]
	bool bAlwaysFullAnimWeight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa0, Size: 1]
	bool bConsiderForBounds;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xa0, Size: 1]
	bool bMeshCollideAll;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xa0, Size: 1]
	bool bDoubleSidedGeometry;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xa0, Size: 1]
	bool bGenerateNonMirroredCollision;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xa0, Size: 1]
	bool bSharedCookedData;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xa0, Size: 1]
	bool bGenerateMirroredCollision;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xa0, Size: 1]
	bool bSupportUVsAndFaceRemap;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xa0, Size: 1]
	PhysicalMaterial* PhysMaterial;//[Offset: 0xa8, Size: 1]
	WalkableSlopeOverride WalkableSlopeOverride;//[Offset: 0xb0, Size: 1]
	BodyInstance DefaultInstance;//[Offset: 0x128, Size: 1]
	Vector BuildScale3D;//[Offset: 0x288, Size: 1]

--------------------------------
Class: BodySetupCore.Object
	FName BoneName;//[Offset: 0x28, Size: 1]
	byte PhysicsType;//[Offset: 0x30, Size: 1]
	byte CollisionTraceFlag;//[Offset: 0x31, Size: 1]
	byte CollisionReponse;//[Offset: 0x32, Size: 1]

--------------------------------
Class: KAggregateGeom
	KSphereElem[] SphereElems;//[Offset: 0x0, Size: 1]
	KBoxElem[] BoxElems;//[Offset: 0x10, Size: 1]
	KSphylElem[] SphylElems;//[Offset: 0x20, Size: 1]
	KConvexElem[] ConvexElems;//[Offset: 0x30, Size: 1]
	KTaperedCapsuleElem[] TaperedCapsuleElems;//[Offset: 0x40, Size: 1]

--------------------------------
Class: KSphereElem.KShapeElem
	Vector Center;//[Offset: 0x30, Size: 1]
	float Radius;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: KShapeElem
	float RestOffset;//[Offset: 0x8, Size: 1]
	FName Name;//[Offset: 0xc, Size: 1]
	bool bContributeToMass;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x18, Size: 1]
	byte CollisionEnabled;//[Offset: 0x19, Size: 1]

--------------------------------
Class: KBoxElem.KShapeElem
	Vector Center;//[Offset: 0x30, Size: 1]
	Rotator Rotation;//[Offset: 0x3c, Size: 1]
	float X;//[Offset: 0x48, Size: 1]
	float Y;//[Offset: 0x4c, Size: 1]
	float Z;//[Offset: 0x50, Size: 1]

--------------------------------
Class: Rotator
	float Pitch;//[Offset: 0x0, Size: 1]
	float Yaw;//[Offset: 0x4, Size: 1]
	float Roll;//[Offset: 0x8, Size: 1]

--------------------------------
Class: KSphylElem.KShapeElem
	Vector Center;//[Offset: 0x30, Size: 1]
	Rotator Rotation;//[Offset: 0x3c, Size: 1]
	float Radius;//[Offset: 0x48, Size: 1]
	float Length;//[Offset: 0x4c, Size: 1]

--------------------------------
Class: KConvexElem.KShapeElem
	Vector[] VertexData;//[Offset: 0x30, Size: 1]
	int[] IndexData;//[Offset: 0x40, Size: 1]
	Box ElemBox;//[Offset: 0x50, Size: 1]
	Transform Transform;//[Offset: 0x70, Size: 1]

--------------------------------
Class: Box
	Vector Min;//[Offset: 0x0, Size: 1]
	Vector Max;//[Offset: 0xc, Size: 1]
	byte IsValid;//[Offset: 0x18, Size: 1]

--------------------------------
Class: Transform
	Quat Rotation;//[Offset: 0x0, Size: 1]
	Vector Translation;//[Offset: 0x10, Size: 1]
	Vector Scale3D;//[Offset: 0x20, Size: 1]

--------------------------------
Class: Quat
	float X;//[Offset: 0x0, Size: 1]
	float Y;//[Offset: 0x4, Size: 1]
	float Z;//[Offset: 0x8, Size: 1]
	float W;//[Offset: 0xc, Size: 1]

--------------------------------
Class: KTaperedCapsuleElem.KShapeElem
	Vector Center;//[Offset: 0x30, Size: 1]
	Rotator Rotation;//[Offset: 0x3c, Size: 1]
	float Radius0;//[Offset: 0x48, Size: 1]
	float Radius1;//[Offset: 0x4c, Size: 1]
	float Length;//[Offset: 0x50, Size: 1]

--------------------------------
Class: WalkableSlopeOverride
	byte WalkableSlopeBehavior;//[Offset: 0x0, Size: 1]
	float WalkableSlopeAngle;//[Offset: 0x4, Size: 1]

--------------------------------
Class: BodyInstance.BodyInstanceCore
	byte ObjectType;//[Offset: 0x1e, Size: 1]
	byte CollisionEnabled;//[Offset: 0x20, Size: 1]
	enum SleepFamily;//[Offset: 0x59, Size: 1]
	byte DOFMode;//[Offset: 0x5a, Size: 1]
	bool bUseCCD;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5b, Size: 1]
	bool bIgnoreAnalyticCollisions;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5b, Size: 1]
	bool bNotifyRigidBodyCollision;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x5b, Size: 1]
	bool bLockTranslation;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x5b, Size: 1]
	bool bLockRotation;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x5b, Size: 1]
	bool bLockXTranslation;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x5b, Size: 1]
	bool bLockYTranslation;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x5b, Size: 1]
	bool bLockZTranslation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5c, Size: 1]
	bool bLockXRotation;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5c, Size: 1]
	bool bLockYRotation;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x5c, Size: 1]
	bool bLockZRotation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x5c, Size: 1]
	bool bOverrideMaxAngularVelocity;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x5c, Size: 1]
	bool bOverrideMaxDepenetrationVelocity;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x5c, Size: 1]
	bool bOverrideWalkableSlopeOnInstance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5d, Size: 1]
	bool bInterpolateWhenSubStepping;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5d, Size: 1]
	FName CollisionProfileName;//[Offset: 0x6c, Size: 1]
	byte PositionSolverIterationCount;//[Offset: 0x74, Size: 1]
	byte VelocitySolverIterationCount;//[Offset: 0x75, Size: 1]
	CollisionResponse CollisionResponses;//[Offset: 0x78, Size: 1]
	float MaxDepenetrationVelocity;//[Offset: 0xa8, Size: 1]
	float MassInKgOverride;//[Offset: 0xac, Size: 1]
	float LinearDamping;//[Offset: 0xb8, Size: 1]
	float AngularDamping;//[Offset: 0xbc, Size: 1]
	Vector CustomDOFPlaneNormal;//[Offset: 0xc0, Size: 1]
	Vector COMNudge;//[Offset: 0xcc, Size: 1]
	float MassScale;//[Offset: 0xd8, Size: 1]
	Vector InertiaTensorScale;//[Offset: 0xdc, Size: 1]
	WalkableSlopeOverride WalkableSlopeOverride;//[Offset: 0xf8, Size: 1]
	PhysicalMaterial* PhysMaterialOverride;//[Offset: 0x108, Size: 1]
	float MaxAngularVelocity;//[Offset: 0x110, Size: 1]
	float CustomSleepThresholdMultiplier;//[Offset: 0x114, Size: 1]
	float StabilizationThresholdMultiplier;//[Offset: 0x118, Size: 1]
	float PhysicsBlendWeight;//[Offset: 0x11c, Size: 1]

--------------------------------
Class: BodyInstanceCore
	bool bSimulatePhysics;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x10, Size: 1]
	bool bOverrideMass;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x10, Size: 1]
	bool bEnableGravity;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x10, Size: 1]
	bool bAutoWeld;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x10, Size: 1]
	bool bStartAwake;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x10, Size: 1]
	bool bGenerateWakeEvents;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x10, Size: 1]
	bool bUpdateMassWhenScaleChanges;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x10, Size: 1]

--------------------------------
Class: CollisionResponse
	CollisionResponseContainer ResponseToChannels;//[Offset: 0x0, Size: 1]
	ResponseChannel[] ResponseArray;//[Offset: 0x20, Size: 1]

--------------------------------
Class: CollisionResponseContainer
	byte WorldStatic;//[Offset: 0x0, Size: 1]
	byte WorldDynamic;//[Offset: 0x1, Size: 1]
	byte Pawn;//[Offset: 0x2, Size: 1]
	byte Visibility;//[Offset: 0x3, Size: 1]
	byte Camera;//[Offset: 0x4, Size: 1]
	byte PhysicsBody;//[Offset: 0x5, Size: 1]
	byte Vehicle;//[Offset: 0x6, Size: 1]
	byte Destructible;//[Offset: 0x7, Size: 1]
	byte EngineTraceChannel1;//[Offset: 0x8, Size: 1]
	byte EngineTraceChannel2;//[Offset: 0x9, Size: 1]
	byte EngineTraceChannel3;//[Offset: 0xa, Size: 1]
	byte EngineTraceChannel4;//[Offset: 0xb, Size: 1]
	byte EngineTraceChannel5;//[Offset: 0xc, Size: 1]
	byte EngineTraceChannel6;//[Offset: 0xd, Size: 1]
	byte GameTraceChannel1;//[Offset: 0xe, Size: 1]
	byte GameTraceChannel2;//[Offset: 0xf, Size: 1]
	byte GameTraceChannel3;//[Offset: 0x10, Size: 1]
	byte GameTraceChannel4;//[Offset: 0x11, Size: 1]
	byte GameTraceChannel5;//[Offset: 0x12, Size: 1]
	byte GameTraceChannel6;//[Offset: 0x13, Size: 1]
	byte GameTraceChannel7;//[Offset: 0x14, Size: 1]
	byte GameTraceChannel8;//[Offset: 0x15, Size: 1]
	byte GameTraceChannel9;//[Offset: 0x16, Size: 1]
	byte GameTraceChannel10;//[Offset: 0x17, Size: 1]
	byte GameTraceChannel11;//[Offset: 0x18, Size: 1]
	byte GameTraceChannel12;//[Offset: 0x19, Size: 1]
	byte GameTraceChannel13;//[Offset: 0x1a, Size: 1]
	byte GameTraceChannel14;//[Offset: 0x1b, Size: 1]
	byte GameTraceChannel15;//[Offset: 0x1c, Size: 1]
	byte GameTraceChannel16;//[Offset: 0x1d, Size: 1]
	byte GameTraceChannel17;//[Offset: 0x1e, Size: 1]
	byte GameTraceChannel18;//[Offset: 0x1f, Size: 1]

--------------------------------
Class: ResponseChannel
	FName Channel;//[Offset: 0x0, Size: 1]
	byte response;//[Offset: 0x8, Size: 1]

--------------------------------
Class: GeomSelection
	int Type;//[Offset: 0x0, Size: 1]
	int Index;//[Offset: 0x4, Size: 1]
	int SelectionIndex;//[Offset: 0x8, Size: 1]

--------------------------------
Class: NavAgentProperties.MovementProperties
	float AgentRadius;//[Offset: 0x4, Size: 1]
	float AgentHeight;//[Offset: 0x8, Size: 1]
	float AgentStepHeight;//[Offset: 0xc, Size: 1]
	float NavWalkingSearchHeightScale;//[Offset: 0x10, Size: 1]
	SoftClassPath PreferredNavData;//[Offset: 0x18, Size: 1]

--------------------------------
Class: MovementProperties
	bool bCanCrouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bCanJump;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bCanWalk;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bCanSwim;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bCanFly;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]

--------------------------------
Class: SoftClassPath.SoftObjectPath

--------------------------------
Class: SoftObjectPath
	FName AssetPathName;//[Offset: 0x0, Size: 1]
	FString SubPathString;//[Offset: 0x8, Size: 1]

--------------------------------
Class: Character.Pawn.Actor.Object
	SkeletalMeshComponent* Mesh;//[Offset: 0x288, Size: 1]
	CharacterMovementComponent* CharacterMovement;//[Offset: 0x290, Size: 1]
	CapsuleComponent* CapsuleComponent;//[Offset: 0x298, Size: 1]
	BasedMovementInfo BasedMovement;//[Offset: 0x2a0, Size: 1]
	BasedMovementInfo ReplicatedBasedMovement;//[Offset: 0x2d0, Size: 1]
	float AnimRootMotionTranslationScale;//[Offset: 0x300, Size: 1]
	Vector BaseTranslationOffset;//[Offset: 0x304, Size: 1]
	Quat BaseRotationOffset;//[Offset: 0x310, Size: 1]
	float ReplicatedServerLastTransformUpdateTimeStamp;//[Offset: 0x320, Size: 1]
	float ReplayLastTransformUpdateTimeStamp;//[Offset: 0x324, Size: 1]
	byte ReplicatedMovementMode;//[Offset: 0x328, Size: 1]
	bool bInBaseReplication;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x329, Size: 1]
	float CrouchedEyeHeight;//[Offset: 0x32c, Size: 1]
	bool bIsCrouched;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x330, Size: 1]
	bool bProxyIsJumpForceApplied;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x330, Size: 1]
	bool bPressedJump;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x330, Size: 1]
	bool bClientUpdating;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x330, Size: 1]
	bool bClientWasFalling;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x330, Size: 1]
	bool bClientResimulateRootMotion;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x330, Size: 1]
	bool bClientResimulateRootMotionSources;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x330, Size: 1]
	bool bSimGravityDisabled;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x330, Size: 1]
	bool bClientCheckEncroachmentOnNetUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x331, Size: 1]
	bool bServerMoveIgnoreRootMotion;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x331, Size: 1]
	bool bWasJumping;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x331, Size: 1]
	float JumpKeyHoldTime;//[Offset: 0x334, Size: 1]
	float JumpForceTimeRemaining;//[Offset: 0x338, Size: 1]
	float ProxyJumpForceStartedTime;//[Offset: 0x33c, Size: 1]
	float JumpMaxHoldTime;//[Offset: 0x340, Size: 1]
	int JumpMaxCount;//[Offset: 0x344, Size: 1]
	int JumpCurrentCount;//[Offset: 0x348, Size: 1]
	int JumpCurrentCountPreJump;//[Offset: 0x34c, Size: 1]
	MulticastInlineDelegateProperty OnReachedJumpApex;//[Size: 1]
	MulticastInlineDelegateProperty MovementModeChangedDelegate;//[Size: 1]
	MulticastInlineDelegateProperty OnCharacterMovementUpdated;//[Size: 1]
	RootMotionSourceGroup SavedRootMotion;//[Offset: 0x398, Size: 1]
	RootMotionMovementParams ClientRootMotionParams;//[Offset: 0x3d0, Size: 1]
	SimulatedRootMotionReplicatedMove[] RootMotionRepMoves;//[Offset: 0x410, Size: 1]
	RepRootMotionMontage RepRootMotion;//[Offset: 0x420, Size: 1]
	void UnCrouch(bool bClientSimulation);// 0x3ee67a0
	void StopJumping();// 0xdc8700
	void StopAnimMontage(AnimMontage* AnimMontage);// 0x3ee6710
	void ServerMovePacked(const CharacterServerMovePackedBits PackedBits);// 0x3ee6330
	void ServerMoveOld(float OldTimeStamp, Vector_NetQuantize10 OldAccel, byte OldMoveFlags);// 0x3ee61c0
	void ServerMoveNoBase(float Timestamp, Vector_NetQuantize10 InAccel, Vector_NetQuantize100 ClientLoc, byte CompressedMoveFlags, byte ClientRoll, uint32 View, byte ClientMovementMode);// 0x3ee5f20
	void ServerMoveDualNoBase(float TimeStamp0, Vector_NetQuantize10 InAccel0, byte PendingFlags, uint32 View0, float Timestamp, Vector_NetQuantize10 InAccel, Vector_NetQuantize100 ClientLoc, byte NewFlags, byte ClientRoll, uint32 View, byte ClientMovementMode);// 0x3ee5b20
	void ServerMoveDualHybridRootMotion(float TimeStamp0, Vector_NetQuantize10 InAccel0, byte PendingFlags, uint32 View0, float Timestamp, Vector_NetQuantize10 InAccel, Vector_NetQuantize100 ClientLoc, byte NewFlags, byte ClientRoll, uint32 View, PrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, byte ClientMovementMode);// 0x3ee5690
	void ServerMoveDual(float TimeStamp0, Vector_NetQuantize10 InAccel0, byte PendingFlags, uint32 View0, float Timestamp, Vector_NetQuantize10 InAccel, Vector_NetQuantize100 ClientLoc, byte NewFlags, byte ClientRoll, uint32 View, PrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, byte ClientMovementMode);// 0x3ee5200
	void ServerMove(float Timestamp, Vector_NetQuantize10 InAccel, Vector_NetQuantize100 ClientLoc, byte CompressedMoveFlags, byte ClientRoll, uint32 View, PrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, byte ClientMovementMode);// 0x3ee4ec0
	void RootMotionDebugClientPrintOnScreen(FString inString);// 0x3ee4e10
	float PlayAnimMontage(AnimMontage* AnimMontage, float InPlayRate, FName StartSectionName);// 0x3ee4cf0
	void OnWalkingOffLedge(out const Vector PreviousFloorImpactNormal, out const Vector PreviousFloorContactNormal, out const Vector PreviousLocation, float TimeDelta);// 0x3ee4b50
	void OnRep_RootMotion();// 0x3ee4b30
	void OnRep_ReplicatedBasedMovement();// 0xdcaac0
	void OnRep_ReplayLastTransformUpdateTimeStamp();// 0x3ee4b10
	void OnRep_IsCrouched();// 0xde50e0
	void OnLaunched(Vector LaunchVelocity, bool bXYOverride, bool bZOverride);// 0x1d69c50
	void OnLanded(out const HitResult Hit);// 0x1d69c50
	void OnJumped();// 0xd82de0
	void LaunchCharacter(Vector LaunchVelocity, bool bXYOverride, bool bZOverride);// 0x3ee49e0
	void K2_UpdateCustomMovement(float DeltaTime);// 0x1d69c50
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);// 0x1d69c50
	void K2_OnMovementModeChanged(byte PrevMovementMode, byte NewMovementMode, byte PrevCustomMode, byte NewCustomMode);// 0x1d69c50
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);// 0x1d69c50
	void Jump();// 0xdc86e0
	bool IsPlayingRootMotion();// 0x3ee49b0
	bool IsPlayingNetworkedRootMotionMontage();// 0x3ee4980
	bool IsJumpProvidingForce();// 0x3ee4950
	bool HasAnyRootMotion();// 0x3ee4920
	AnimMontage* GetCurrentMontage();// 0x3ee4290
	Vector GetBaseTranslationOffset();// 0x3ee4260
	Rotator GetBaseRotationOffsetRotator();// 0x3ee4210
	float GetAnimRootMotionTranslationScale();// 0x3ee41e0
	void Crouch(bool bClientSimulation);// 0x3ee4150
	void ClientVeryShortAdjustPosition(float Timestamp, Vector NewLoc, PrimitiveComponent* NewBase, FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, byte ServerMovementMode);// 0x3ee3dd0
	void ClientMoveResponsePacked(const CharacterMoveResponsePackedBits PackedBits);// 0x3ee3cd0
	void ClientCheatWalk();// 0xe37750
	void ClientCheatGhost();// 0x3ee3cb0
	void ClientCheatFly();// 0x3ee3c90
	void ClientAdjustRootMotionSourcePosition(float Timestamp, RootMotionSourceGroup ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, Vector ServerLoc, Vector_NetQuantizeNormal ServerRotation, float ServerVelZ, PrimitiveComponent* ServerBase, FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, byte ServerMovementMode);// 0x3ee3790
	void ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, Vector ServerLoc, Vector_NetQuantizeNormal ServerRotation, float ServerVelZ, PrimitiveComponent* ServerBase, FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, byte ServerMovementMode);// 0x3ee3460
	void ClientAdjustPosition(float Timestamp, Vector NewLoc, Vector NewVel, PrimitiveComponent* NewBase, FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, byte ServerMovementMode);// 0x3ee31d0
	void ClientAckGoodMove(float Timestamp);// 0x3ee3150
	bool CanJumpInternal();// 0xe08c80
	bool CanJump();// 0x3ee3120
	bool CanCrouch();// 0x3ee30f0
	void CacheInitialMeshOffset(Vector MeshRelativeLocation, Rotator MeshRelativeRotation);// 0x3ee3000

--------------------------------
Class: SkeletalMeshComponent.SkinnedMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	class Object* AnimBlueprintGeneratedClass;//[Offset: 0x6a0, Size: 1]
	class AnimInstance* AnimClass;//[Offset: 0x6a8, Size: 1]
	AnimInstance* AnimScriptInstance;//[Offset: 0x6b0, Size: 1]
	AnimInstance* PostProcessAnimInstance;//[Offset: 0x6b8, Size: 1]
	SingleAnimationPlayData AnimationData;//[Offset: 0x6c0, Size: 1]
	Vector RootBoneTranslation;//[Offset: 0x6e8, Size: 1]
	Vector LineCheckBoundsScale;//[Offset: 0x6f4, Size: 1]
	AnimInstance*[] LinkedInstances;//[Offset: 0x730, Size: 1]
	Transform[] CachedBoneSpaceTransforms;//[Offset: 0x740, Size: 1]
	Transform[] CachedComponentSpaceTransforms;//[Offset: 0x750, Size: 1]
	float GlobalAnimRateScale;//[Offset: 0x8b0, Size: 1]
	byte KinematicBonesUpdateType;//[Offset: 0x8b4, Size: 1]
	byte PhysicsTransformUpdateMode;//[Offset: 0x8b5, Size: 1]
	byte AnimationMode;//[Offset: 0x8b7, Size: 1]
	bool bDisablePostProcessBlueprint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8b9, Size: 1]
	bool bUpdateOverlapsOnAnimationFinalize;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8b9, Size: 1]
	bool bHasValidBodies;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x8b9, Size: 1]
	bool bBlendPhysics;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x8b9, Size: 1]
	bool bEnablePhysicsOnDedicatedServer;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x8b9, Size: 1]
	bool bUpdateJointsFromAnimation;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x8b9, Size: 1]
	bool bDisableClothSimulation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8ba, Size: 1]
	bool bDisableRigidBodyAnimNode;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8c0, Size: 1]
	bool bAllowAnimCurveEvaluation;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8c0, Size: 1]
	bool bDisableAnimCurves;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x8c0, Size: 1]
	bool bCollideWithEnvironment;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x8c0, Size: 1]
	bool bCollideWithAttachedChildren;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8c1, Size: 1]
	bool bLocalSpaceSimulation;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8c1, Size: 1]
	bool bResetAfterTeleport;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8c1, Size: 1]
	bool bDeferKinematicBoneUpdate;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x8c1, Size: 1]
	bool bNoSkeletonUpdate;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x8c1, Size: 1]
	bool bPauseAnims;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x8c1, Size: 1]
	bool bUseRefPoseOnInitAnim;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x8c1, Size: 1]
	bool bEnablePerPolyCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8c2, Size: 1]
	bool bForceRefpose;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8c2, Size: 1]
	bool bOnlyAllowAutonomousTickPose;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8c2, Size: 1]
	bool bIsAutonomousTickPose;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x8c2, Size: 1]
	bool bOldForceRefPose;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x8c2, Size: 1]
	bool bShowPrePhysBones;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x8c2, Size: 1]
	bool bRequiredBonesUpToDate;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x8c2, Size: 1]
	bool bAnimTreeInitialised;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x8c2, Size: 1]
	bool bIncludeComponentLocationIntoBounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8c3, Size: 1]
	bool bEnableLineCheckWithBounds;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8c3, Size: 1]
	bool bPropagateCurvesToSlaves;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8c3, Size: 1]
	bool bSkipKinematicUpdateWhenInterpolating;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x8c3, Size: 1]
	bool bSkipBoundsUpdateWhenInterpolating;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x8c3, Size: 1]
	bool bNeedsQueuedAnimEventsDispatched;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x8c3, Size: 1]
	uint16 CachedAnimCurveUidVersion;//[Offset: 0x8c6, Size: 1]
	float ClothBlendWeight;//[Offset: 0x8c8, Size: 1]
	bool bWaitForParallelClothTask;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8cc, Size: 1]
	FName[] DisallowedAnimCurves;//[Offset: 0x8d0, Size: 1]
	BodySetup* BodySetup;//[Offset: 0x8e0, Size: 1]
	MulticastInlineDelegateProperty OnConstraintBroken;//[Size: 1]
	class ClothingSimulationFactory* ClothingSimulationFactory;//[Offset: 0x900, Size: 1]
	float TeleportDistanceThreshold;//[Offset: 0x9d8, Size: 1]
	float TeleportRotationThreshold;//[Offset: 0x9dc, Size: 1]
	uint32 LastPoseTickFrame;//[Offset: 0x9e8, Size: 1]
	ClothingSimulationInteractor* ClothingInteractor;//[Offset: 0xa40, Size: 1]
	MulticastInlineDelegateProperty OnAnimInitialized;//[Size: 1]
	void UnlinkAnimClassLayers(class AnimInstance InClass);// 0x3ffaca0
	void UnbindClothFromMasterPoseComponent(bool bRestoreSimulationSpace);// 0x3ffac10
	void ToggleDisablePostProcessBlueprint();// 0x3ffabf0
	void TermBodiesBelow(FName ParentBoneName);// 0x3ffab60
	void SuspendClothingSimulation();// 0x3ffab40
	void Stop();// 0x3ffab20
	void SnapshotPose(out PoseSnapshot Snapshot);// 0x3ffaa50
	void SetUpdateClothInEditor(const bool NewUpdateState);// 0xdd6610
	void SetUpdateAnimationInEditor(const bool NewUpdateState);// 0xdd6610
	void SetTeleportRotationThreshold(float Threshold);// 0x3ffa9d0
	void SetTeleportDistanceThreshold(float Threshold);// 0x3ffa950
	void SetPosition(float InPos, bool bFireNotifies);// 0x3ffa870
	void SetPlayRate(float Rate);// 0x3ffa7f0
	void SetPhysicsBlendWeight(float PhysicsBlendWeight);// 0x3ffa770
	void SetNotifyRigidBodyCollisionBelow(bool bNewNotifyRigidBodyCollision, FName BoneName, bool bIncludeSelf);// 0x3ffa650
	void SetMorphTarget(FName MorphTargetName, float Value, bool bRemoveZeroWeight);// 0x3ffa530
	void SetEnablePhysicsBlending(bool bNewBlendPhysics);// 0x3ffa4a0
	void SetEnableGravityOnAllBodiesBelow(bool bEnableGravity, FName BoneName, bool bIncludeSelf);// 0x3ffa390
	void SetEnableBodyGravity(bool bEnableGravity, FName BoneName);// 0x3ffa2c0
	void SetDisablePostProcessBlueprint(bool bInDisablePostProcess);// 0x3ffa230
	void SetDisableAnimCurves(bool bInDisableAnimCurves);// 0x3ffa1a0
	void SetConstraintProfileForAll(FName ProfileName, bool bDefaultIfNotFound);// 0x3ffa0d0
	void SetConstraintProfile(FName JointName, FName ProfileName, bool bDefaultIfNotFound);// 0x3ff9fc0
	void SetClothMaxDistanceScale(float Scale);// 0x3ff9f40
	void SetBodyNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision, FName BoneName);// 0x3ff9e70
	void SetAnimClass(class Object NewClass);// 0x3ff9cd0
	void SetAnimationMode(byte InAnimationMode);// 0x3ff9df0
	void SetAnimation(AnimationAsset* NewAnimToPlay);// 0x3ff9d60
	void SetAngularLimits(FName InBoneName, float Swing1LimitAngle, float TwistLimitAngle, float Swing2LimitAngle);// 0x3ff9b70
	void SetAllowRigidBodyAnimNode(bool bInAllow, bool bReinitAnim);// 0x3ff99a0
	void SetAllowedAnimCurvesEvaluation(out const FName[] List, bool bAllow);// 0x3ff9a70
	void SetAllowAnimCurveEvaluation(bool bInAllow);// 0x3ff9910
	void SetAllMotorsAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);// 0x3ff97e0
	void SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);// 0x3ff96b0
	void SetAllMotorsAngularDriveParams(float InSpring, float InDamping, float InForceLimit, bool bSkipCustomPhysicsType);// 0x3ff9540
	void SetAllBodiesSimulatePhysics(bool bNewSimulate);// 0x3ff94b0
	void SetAllBodiesPhysicsBlendWeight(float PhysicsBlendWeight, bool bSkipCustomPhysicsType);// 0x3ff93d0
	void SetAllBodiesBelowSimulatePhysics(out const FName InBoneName, bool bNewSimulate, bool bIncludeSelf);// 0x3ff92a0
	void SetAllBodiesBelowPhysicsBlendWeight(out const FName InBoneName, float PhysicsBlendWeight, bool bSkipCustomPhysicsType, bool bIncludeSelf);// 0x3ff9120
	void ResumeClothingSimulation();// 0x3ff9100
	void ResetClothTeleportMode();// 0x3ff90e0
	void ResetAnimInstanceDynamics(enum InTeleportType);// 0x3ff9060
	void ResetAllowedAnimCurveEvaluation();// 0x3ff9040
	void ResetAllBodiesSimulatePhysics();// 0x3ff9020
	void PlayAnimation(AnimationAsset* NewAnimToPlay, bool bLooping);// 0x3ff8f50
	void Play(bool bLooping);// 0x3ff8ec0
	void OverrideAnimationData(AnimationAsset* InAnimToPlay, bool bIsLooping, bool bIsPlaying, float Position, float PlayRate);// 0x3ff8d00
	void LinkAnimGraphByTag(FName InTag, class AnimInstance InClass);// 0x3ff8c30
	void LinkAnimClassLayers(class AnimInstance InClass);// 0x3ff8ba0
	bool K2_GetClosestPointOnPhysicsAsset(out const Vector WorldPosition, out Vector ClosestWorldPosition, out Vector Normal, out FName BoneName, out float distance);// 0x3ff89a0
	bool IsPlaying();// 0x3ff8970
	bool IsClothingSimulationSuspended();// 0x3ff8940
	bool IsBodyGravityEnabled(FName BoneName);// 0x3ff88a0
	bool HasValidAnimationInstance();// 0x3ff8870
	float GetTeleportRotationThreshold();// 0x3ff8840
	float GetTeleportDistanceThreshold();// 0x3ff8840
	bool GetStringAttribute_Ref(out const FName BoneName, out const FName AttributeName, out FString OutValue, enum LookupType);// 0x3ff8680
	bool GetStringAttribute(out const FName BoneName, out const FName AttributeName, FString DefaultValue, out FString OutValue, enum LookupType);// 0x3ff8440
	Vector GetSkeletalCenterOfMass();// 0x3ff8400
	AnimInstance* GetPostProcessInstance();// 0xde4570
	float GetPosition();// 0x3ff83d0
	float GetPlayRate();// 0x3ff83a0
	float GetMorphTarget(FName MorphTargetName);// 0x3ff8300
	AnimInstance* GetLinkedAnimLayerInstanceByGroup(FName InGroup);// 0x3ff8260
	AnimInstance* GetLinkedAnimLayerInstanceByClass(class AnimInstance InClass);// 0x3ff81c0
	void GetLinkedAnimGraphInstancesByTag(FName InTag, out AnimInstance*[] OutLinkedInstances);// 0x3ff80d0
	AnimInstance* GetLinkedAnimGraphInstanceByTag(FName InTag);// 0x3ff8030
	bool GetIntegerAttribute_Ref(out const FName BoneName, out const FName AttributeName, out int OutValue, enum LookupType);// 0x3ff7e90
	bool GetIntegerAttribute(out const FName BoneName, out const FName AttributeName, int DefaultValue, out int OutValue, enum LookupType);// 0x3ff7ca0
	bool GetFloatAttribute_Ref(out const FName BoneName, out const FName AttributeName, out float OutValue, enum LookupType);// 0x3ff7af0
	bool GetFloatAttribute(out const FName BoneName, out const FName AttributeName, float DefaultValue, out float OutValue, enum LookupType);// 0x3ff7900
	bool GetDisablePostProcessBlueprint();// 0x3ff78d0
	bool GetDisableAnimCurves();// 0x3ff78a0
	void GetCurrentJointAngles(FName InBoneName, out float Swing1Angle, out float TwistAngle, out float Swing2Angle);// 0x3ff7720
	float GetClothMaxDistanceScale();// 0x3ff76c0
	ClothingSimulationInteractor* GetClothingSimulationInteractor();// 0x3ff76f0
	float GetBoneMass(FName BoneName, bool bScaleMass);// 0x3ff75f0
	AnimInstance* GetAnimInstance();// 0xde4ba0
	class Object GetAnimClass();// 0x3ff7590
	byte GetAnimationMode();// 0x3ff75c0
	bool GetAllowRigidBodyAnimNode();// 0x3ff7530
	bool GetAllowedAnimCurveEvaluate();// 0x3ff7560
	void ForceClothNextUpdateTeleportAndReset();// 0x3ff7510
	void ForceClothNextUpdateTeleport();// 0x3ff74f0
	FName FindConstraintBoneName(int ConstraintIndex);// 0x3ff7460
	void ClearMorphTargets();// 0x3ff7440
	void BreakConstraint(Vector Impulse, Vector HitLocation, FName InBoneName);// 0x3ff7310
	void BindClothToMasterPoseComponent();// 0x3ff72f0
	void AllowAnimCurveEvaluation(FName NameOfCurve, bool bAllow);// 0x3ff7220
	void AddImpulseToAllBodiesBelow(Vector Impulse, FName BoneName, bool bVelChange, bool bIncludeSelf);// 0x3ff70a0
	void AddForceToAllBodiesBelow(Vector Force, FName BoneName, bool bAccelChange, bool bIncludeSelf);// 0x3ff6f20
	void AccumulateAllBodiesBelowPhysicsBlendWeight(out const FName InBoneName, float AddPhysicsBlendWeight, bool bSkipCustomPhysicsType);// 0x3ff6e00

--------------------------------
Class: SkinnedMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	SkeletalMesh* SkeletalMesh;//[Offset: 0x480, Size: 1]
	SkinnedMeshComponent* MasterPoseComponent;//[Offset: 0x488, Size: 1]
	enum[] SkinCacheUsage;//[Offset: 0x490, Size: 1]
	VertexOffsetUsage[] VertexOffsetUsage;//[Offset: 0x4a0, Size: 1]
	PhysicsAsset* PhysicsAssetOverride;//[Offset: 0x5a8, Size: 1]
	int ForcedLodModel;//[Offset: 0x5b0, Size: 1]
	int MinLodModel;//[Offset: 0x5b4, Size: 1]
	float StreamingDistanceMultiplier;//[Offset: 0x5c0, Size: 1]
	SkelMeshComponentLODInfo[] LODInfo;//[Offset: 0x5d0, Size: 1]
	enum VisibilityBasedAnimTickOption;//[Offset: 0x604, Size: 1]
	bool bOverrideMinLOD;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x606, Size: 1]
	bool bUseBoundsFromMasterPoseComponent;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x606, Size: 1]
	bool bForceWireframe;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x606, Size: 1]
	bool bDisplayBones;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x606, Size: 1]
	bool bDisableMorphTarget;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x606, Size: 1]
	bool bHideSkin;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x607, Size: 1]
	bool bPerBoneMotionBlur;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x607, Size: 1]
	bool bComponentUseFixedSkelBounds;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x607, Size: 1]
	bool bConsiderAllBodiesForBounds;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x607, Size: 1]
	bool bSyncAttachParentLOD;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x607, Size: 1]
	bool bCanHighlightSelectedSections;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x607, Size: 1]
	bool bRecentlyRendered;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x607, Size: 1]
	bool bCastCapsuleDirectShadow;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x607, Size: 1]
	bool bCastCapsuleIndirectShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x608, Size: 1]
	bool bCPUSkinning;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x608, Size: 1]
	bool bEnableUpdateRateOptimizations;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x608, Size: 1]
	bool bDisplayDebugUpdateRateOptimizations;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x608, Size: 1]
	bool bRenderStatic;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x608, Size: 1]
	bool bIgnoreMasterPoseComponentLOD;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x608, Size: 1]
	bool bCachedLocalBoundsUpToDate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x609, Size: 1]
	bool bForceMeshObjectUpdate;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x609, Size: 1]
	float CapsuleIndirectShadowMinVisibility;//[Offset: 0x60c, Size: 1]
	BoxSphereBounds CachedWorldSpaceBounds;//[Offset: 0x620, Size: 1]
	Matrix CachedWorldToLocalTransform;//[Offset: 0x640, Size: 1]
	void UnloadSkinWeightProfile(FName InProfileName);// 0x4000650
	void UnHideBoneByName(FName BoneName);// 0x40005c0
	void TransformToBoneSpace(FName BoneName, Vector InPosition, Rotator InRotation, out Vector OutPosition, out Rotator OutRotation);// 0x40003f0
	void TransformFromBoneSpace(FName BoneName, Vector InPosition, Rotator InRotation, out Vector OutPosition, out Rotator OutRotation);// 0x4000220
	void ShowMaterialSection(int MaterialID, int SectionIndex, bool bShow, int LODIndex);// 0x40000d0
	void ShowAllMaterialSections(int LODIndex);// 0x4000040
	void SetVertexOffsetUsage(int LODIndex, int Usage);// 0x3ffff70
	void SetVertexColorOverride_LinearColor(int LODIndex, out const LinearColor[] VertexColors);// 0x3fffe80
	bool SetSkinWeightProfile(FName InProfileName);// 0x3fffde0
	void SetSkinWeightOverride(int LODIndex, out const SkelMeshSkinWeightInfo[] SkinWeights);// 0x3fffcf0
	void SetSkeletalMesh(SkeletalMesh* NewMesh, bool bReinitPose);// 0x3fffc20
	void SetRenderStatic(bool bNewValue);// 0x3fffb90
	void SetPreSkinningOffsets(int LODIndex, Vector[] Offsets);// 0x3fffa60
	void SetPostSkinningOffsets(int LODIndex, Vector[] Offsets);// 0x3fff930
	void SetPhysicsAsset(PhysicsAsset* NewPhysicsAsset, bool bForceReInit);// 0x3fff860
	void SetMinLOD(int InNewMinLOD);// 0x3fff7d0
	void SetMasterPoseComponent(SkinnedMeshComponent* NewMasterBoneComponent, bool bForceUpdate);// 0x3fff700
	void SetForcedLOD(int InNewForcedLOD);// 0x3fff670
	void SetCastCapsuleIndirectShadow(bool bNewValue);// 0x3fff5e0
	void SetCastCapsuleDirectShadow(bool bNewValue);// 0x3fff550
	void SetCapsuleIndirectShadowMinVisibility(float NewValue);// 0x3fff4d0
	bool IsUsingSkinWeightProfile();// 0x3fff4a0
	bool IsMaterialSectionShown(int MaterialID, int LODIndex);// 0x3fff3d0
	bool IsBoneHiddenByName(FName BoneName);// 0x3fff330
	void HideBoneByName(FName BoneName, byte PhysBodyOption);// 0x3fff130
	int GetVertexOffsetUsage(int LODIndex);// 0x3fff090
	bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(FName BoneName, out float OutTwistAngle, out float OutSwingAngle);// 0x3ffef70
	FName GetSocketBoneName(FName InSocketName);// 0x3ffee30
	Vector GetRefPosePosition(int BoneIndex);// 0x3ffed80
	FName GetParentBone(FName BoneName);// 0x3ffecf0
	int GetNumLODs();// 0x3ffecc0
	int GetNumBones();// 0x3ffec90
	int GetForcedLOD();// 0x3ffec60
	Transform GetDeltaTransformFromRefPose(FName BoneName, FName BaseName);// 0x3ffeb60
	FName GetCurrentSkinWeightProfileName();// 0x3ffeb40
	FName GetBoneName(int BoneIndex);// 0x3ffeab0
	int GetBoneIndex(FName BoneName);// 0x3ffea10
	FName FindClosestBone_K2(Vector TestLocation, out Vector BoneLocation, float IgnoreScale, bool bRequirePhysicsAsset);// 0x3ffe870
	void ClearVertexColorOverride(int LODIndex);// 0x3ffe7e0
	void ClearSkinWeightProfile();// 0x3ffe7c0
	void ClearSkinWeightOverride(int LODIndex);// 0x3ffe730
	bool BoneIsChildOf(FName BoneName, FName ParentBoneName);// 0x3ffe660

--------------------------------
Class: MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	MaterialInterface*[] OverrideMaterials;//[Offset: 0x450, Size: 1]
	bool bEnableMaterialParameterCaching;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x470, Size: 1]
	void SetVectorParameterValueOnMaterials(const FName ParameterName, const Vector ParameterValue);// 0x3fab200
	void SetScalarParameterValueOnMaterials(const FName ParameterName, const float ParameterValue);// 0x3fab0a0
	void PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, int CinematicTextureGroups);// 0x3faabe0
	bool IsMaterialSlotNameValid(FName MaterialSlotName);// 0x3faa5d0
	FName[] GetMaterialSlotNames();// 0x3faa2e0
	MaterialInterface*[] GetMaterials();// 0x3faa380
	int GetMaterialIndex(FName MaterialSlotName);// 0x3faa240

--------------------------------
Class: AnimInstance.Object
	Skeleton* CurrentSkeleton;//[Offset: 0x28, Size: 1]
	byte RootMotionMode;//[Offset: 0x30, Size: 1]
	bool bUseMultiThreadedAnimationUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x31, Size: 1]
	bool bUsingCopyPoseFromMesh;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x31, Size: 1]
	bool bReceiveNotifiesFromLinkedInstances;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x31, Size: 1]
	bool bPropagateNotifiesToLinkedInstances;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x31, Size: 1]
	bool bQueueMontageEvents;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x31, Size: 1]
	MulticastInlineDelegateProperty OnMontageBlendingOut;//[Size: 1]
	MulticastInlineDelegateProperty OnMontageStarted;//[Size: 1]
	MulticastInlineDelegateProperty OnMontageEnded;//[Size: 1]
	MulticastInlineDelegateProperty OnAllMontageInstancesEnded;//[Size: 1]
	AnimNotifyQueue NotifyQueue;//[Offset: 0x100, Size: 1]
	AnimNotifyEvent[] ActiveAnimNotifyState;//[Offset: 0x170, Size: 1]
	void UnlockAIResources(bool bUnlockMovement, bool UnlockAILogic);// 0x3eb79e0
	void UnlinkAnimClassLayers(class AnimInstance InClass);// 0x3eb7950
	Pawn* TryGetPawnOwner();// 0x3eb7920
	void StopSlotAnimation(float InBlendOutTime, FName SlotNodeName);// 0x3eb7850
	void SnapshotPose(out PoseSnapshot Snapshot);// 0x3eb7780
	void SetRootMotionMode(byte Value);// 0x3eab600
	void SetReceiveNotifiesFromLinkedInstances(bool bSet);// 0x3eb76f0
	void SetPropagateNotifiesToLinkedInstances(bool bSet);// 0x3eb7660
	void SetMorphTarget(FName MorphTargetName, float Value);// 0x3eb7590
	void SavePoseSnapshot(FName SnapshotName);// 0x3eb7500
	void ResetDynamics(enum InTeleportType);// 0x3eb7480
	AnimMontage* PlaySlotAnimationAsDynamicMontage(AnimSequenceBase* Asset, FName SlotNodeName, float BlendInTime, float blendOutTime, float InPlayRate, int LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt);// 0x3eb7220
	float PlaySlotAnimation(AnimSequenceBase* Asset, FName SlotNodeName, float BlendInTime, float blendOutTime, float InPlayRate, int LoopCount);// 0x3eb7050
	void Montage_StopGroupByName(float InBlendOutTime, FName GroupName);// 0x3eb6f80
	void Montage_Stop(float InBlendOutTime, const AnimMontage* Montage);// 0x3eb6eb0
	void Montage_SetPosition(const AnimMontage* Montage, float NewPosition);// 0x3eb6de0
	void Montage_SetPlayRate(const AnimMontage* Montage, float NewPlayRate);// 0x3eb6d10
	void Montage_SetNextSection(FName SectionNameToChange, FName NextSection, const AnimMontage* Montage);// 0x3eb6c00
	void Montage_Resume(const AnimMontage* Montage);// 0x3eb6b70
	float Montage_Play(AnimMontage* MontageToPlay, float InPlayRate, enum ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages);// 0x3eb69c0
	void Montage_Pause(const AnimMontage* Montage);// 0x3eb6930
	void Montage_JumpToSectionsEnd(FName SectionName, const AnimMontage* Montage);// 0x3eb6860
	void Montage_JumpToSection(FName SectionName, const AnimMontage* Montage);// 0x3eb6790
	bool Montage_IsPlaying(const AnimMontage* Montage);// 0x3eb66f0
	bool Montage_IsActive(const AnimMontage* Montage);// 0x3eb6650
	float Montage_GetPosition(const AnimMontage* Montage);// 0x3eb65b0
	float Montage_GetPlayRate(const AnimMontage* Montage);// 0x3eb6510
	bool Montage_GetIsStopped(const AnimMontage* Montage);// 0x3eb6470
	FName Montage_GetCurrentSection(const AnimMontage* Montage);// 0x3eb63e0
	float Montage_GetBlendTime(const AnimMontage* Montage);// 0x3eb6340
	void LockAIResources(bool bLockMovement, bool LockAILogic);// 0x3eb6270
	void LinkAnimGraphByTag(FName InTag, class AnimInstance InClass);// 0x3eb61a0
	void LinkAnimClassLayers(class AnimInstance InClass);// 0x3eb6110
	bool IsSyncGroupBetweenMarkers(FName InSyncGroupName, FName PreviousMarker, FName NextMarker, bool bRespectMarkerOrder);// 0x3eb5fb0
	bool IsPlayingSlotAnimation(const AnimSequenceBase* Asset, FName SlotNodeName);// 0x3eb5ee0
	bool IsAnyMontagePlaying();// 0x3eb5eb0
	bool HasMarkerBeenHitThisFrame(FName SyncGroup, FName MarkerName);// 0x3eb5de0
	bool GetTimeToClosestMarker(FName SyncGroup, FName MarkerName, out float OutMarkerTime);// 0x3eb5cc0
	MarkerSyncAnimPosition GetSyncGroupPosition(FName InSyncGroupName);// 0x3eb5c10
	float GetRelevantAnimTimeRemainingFraction(int MachineIndex, int StateIndex);// 0x3eb5b40
	float GetRelevantAnimTimeRemaining(int MachineIndex, int StateIndex);// 0x3eb5a70
	float GetRelevantAnimTimeFraction(int MachineIndex, int StateIndex);// 0x3eb59a0
	float GetRelevantAnimTime(int MachineIndex, int StateIndex);// 0x3eb58d0
	float GetRelevantAnimLength(int MachineIndex, int StateIndex);// 0x3eb5800
	bool GetReceiveNotifiesFromLinkedInstances();// 0x3eb57d0
	bool GetPropagateNotifiesToLinkedInstances();// 0x3eb57a0
	SkeletalMeshComponent* GetOwningComponent();// 0x3eb5770
	Actor* GetOwningActor();// 0x3eb5740
	void GetLinkedAnimLayerInstancesByGroup(FName InGroup, out AnimInstance*[] OutLinkedInstances);// 0x3eb5650
	AnimInstance* GetLinkedAnimLayerInstanceByGroupAndClass(FName InGroup, class AnimInstance InClass);// 0x3eb5580
	AnimInstance* GetLinkedAnimLayerInstanceByGroup(FName InGroup);// 0x3eb54e0
	AnimInstance* GetLinkedAnimLayerInstanceByClass(class AnimInstance InClass);// 0x3eb5440
	void GetLinkedAnimGraphInstancesByTag(FName InTag, out AnimInstance*[] OutLinkedInstances);// 0x3eb5350
	AnimInstance* GetLinkedAnimGraphInstanceByTag(FName InTag);// 0x3eb52b0
	float GetInstanceTransitionTimeElapsedFraction(int MachineIndex, int TransitionIndex);// 0x3eb51e0
	float GetInstanceTransitionTimeElapsed(int MachineIndex, int TransitionIndex);// 0x3eb5110
	float GetInstanceTransitionCrossfadeDuration(int MachineIndex, int TransitionIndex);// 0x3eb5040
	float GetInstanceStateWeight(int MachineIndex, int StateIndex);// 0x3eb4f70
	float GetInstanceMachineWeight(int MachineIndex);// 0x3eb4ed0
	float GetInstanceCurrentStateElapsedTime(int MachineIndex);// 0x3eb4e30
	float GetInstanceAssetPlayerTimeFromEndFraction(int AssetPlayerIndex);// 0x3eb4d90
	float GetInstanceAssetPlayerTimeFromEnd(int AssetPlayerIndex);// 0x3eb4cf0
	float GetInstanceAssetPlayerTimeFraction(int AssetPlayerIndex);// 0x3eb4c50
	float GetInstanceAssetPlayerTime(int AssetPlayerIndex);// 0x3eb4bb0
	float GetInstanceAssetPlayerLength(int AssetPlayerIndex);// 0x3eb4b10
	float GetCurveValue(FName CurveName);// 0x3eb4a70
	FName GetCurrentStateName(int MachineIndex);// 0x3eb49e0
	AnimMontage* GetCurrentActiveMontage();// 0x3eb49b0
	void GetAllCurveNames(out FName[] OutNames);// 0x3eb4900
	void GetActiveCurveNames(enum CurveType, out FName[] OutNames);// 0x3eb4810
	void ClearMorphTargets();// 0x3eb47f0
	float CalculateDirection(out const Vector Velocity, out const Rotator BaseRotation);// 0x3eb46f0
	void BlueprintUpdateAnimation(float DeltaTimeX);// 0x1d69c50
	void BlueprintPostEvaluateAnimation();// 0x1d69c50
	void BlueprintLinkedAnimationLayersInitialized();// 0x1d69c50
	void BlueprintInitializeAnimation();// 0x1d69c50
	void BlueprintBeginPlay();// 0x1d69c50

--------------------------------
Class: Skeleton.Object
	BoneNode[] BoneTree;//[Offset: 0x38, Size: 1]
	Transform[] RefLocalPoses;//[Offset: 0x48, Size: 1]
	Guid VirtualBoneGuid;//[Offset: 0x170, Size: 1]
	VirtualBone[] VirtualBones;//[Offset: 0x180, Size: 1]
	SkeletalMeshSocket*[] Sockets;//[Offset: 0x190, Size: 1]
	SmartNameContainer SmartNames;//[Offset: 0x1f0, Size: 1]
	BlendProfile*[] BlendProfiles;//[Offset: 0x270, Size: 1]
	AnimSlotGroup[] SlotGroups;//[Offset: 0x280, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x380, Size: 1]

--------------------------------
Class: BoneNode
	FName Name;//[Offset: 0x0, Size: 1]
	int ParentIndex;//[Offset: 0x8, Size: 1]
	byte TranslationRetargetingMode;//[Offset: 0xc, Size: 1]

--------------------------------
Class: Guid
	int A;//[Offset: 0x0, Size: 1]
	int B;//[Offset: 0x4, Size: 1]
	int C;//[Offset: 0x8, Size: 1]
	int D;//[Offset: 0xc, Size: 1]

--------------------------------
Class: VirtualBone
	FName SourceBoneName;//[Offset: 0x0, Size: 1]
	FName TargetBoneName;//[Offset: 0x8, Size: 1]
	FName VirtualBoneName;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SkeletalMeshSocket.Object
	FName SocketName;//[Offset: 0x28, Size: 1]
	FName BoneName;//[Offset: 0x30, Size: 1]
	Vector RelativeLocation;//[Offset: 0x38, Size: 1]
	Rotator RelativeRotation;//[Offset: 0x44, Size: 1]
	Vector RelativeScale;//[Offset: 0x50, Size: 1]
	bool bForceAlwaysAnimated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c, Size: 1]
	void InitializeSocketFromLocation(const SkeletalMeshComponent* SkelComp, Vector WorldLocation, Vector WorldNormal);// 0x3fff200
	Vector GetSocketLocation(const SkeletalMeshComponent* SkelComp);// 0x3ffeec0

--------------------------------
Class: SmartNameContainer

--------------------------------
Class: BlendProfile.Object
	None None;//[Size: 0]

--------------------------------
Class: AnimSlotGroup
	FName GroupName;//[Offset: 0x0, Size: 1]
	FName[] SlotNames;//[Offset: 0x8, Size: 1]

--------------------------------
Class: AssetUserData.Object

--------------------------------
Class: PoseSnapshot
	Transform[] LocalTransforms;//[Offset: 0x0, Size: 1]
	FName[] BoneNames;//[Offset: 0x10, Size: 1]
	FName SkeletalMeshName;//[Offset: 0x20, Size: 1]
	FName SnapshotName;//[Offset: 0x28, Size: 1]
	bool bIsValid;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x30, Size: 1]

--------------------------------
Class: AnimSequenceBase.AnimationAsset.Object
	AnimNotifyEvent[] Notifies;//[Offset: 0x80, Size: 1]
	float SequenceLength;//[Offset: 0x90, Size: 1]
	float RateScale;//[Offset: 0x94, Size: 1]
	RawCurveTracks RawCurveData;//[Offset: 0x98, Size: 1]
	float GetPlayLength();// 0x3ebfef0

--------------------------------
Class: AnimationAsset.Object
	Skeleton* Skeleton;//[Offset: 0x38, Size: 1]
	AnimMetaData*[] MetaData;//[Offset: 0x60, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x70, Size: 1]

--------------------------------
Class: AnimMetaData.Object

--------------------------------
Class: AnimNotifyEvent.AnimLinkableElement
	float DisplayTime;//[Offset: 0x30, Size: 1]
	float TriggerTimeOffset;//[Offset: 0x34, Size: 1]
	float EndTriggerTimeOffset;//[Offset: 0x38, Size: 1]
	float TriggerWeightThreshold;//[Offset: 0x3c, Size: 1]
	FName NotifyName;//[Offset: 0x40, Size: 1]
	AnimNotify* Notify;//[Offset: 0x48, Size: 1]
	None* NotifyStateClass;//[Offset: 0x50, Size: 1]
	float Duration;//[Offset: 0x58, Size: 1]
	AnimLinkableElement EndLink;//[Offset: 0x60, Size: 1]
	bool bConvertedFromBranchingPoint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x90, Size: 1]
	byte MontageTickType;//[Offset: 0x91, Size: 1]
	float NotifyTriggerChance;//[Offset: 0x94, Size: 1]
	byte NotifyFilterType;//[Offset: 0x98, Size: 1]
	int NotifyFilterLOD;//[Offset: 0x9c, Size: 1]
	bool bTriggerOnDedicatedServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa0, Size: 1]
	bool bTriggerOnFollower;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa1, Size: 1]
	int TrackIndex;//[Offset: 0xa4, Size: 1]

--------------------------------
Class: AnimLinkableElement
	AnimMontage* LinkedMontage;//[Offset: 0x8, Size: 1]
	int SlotIndex;//[Offset: 0x10, Size: 1]
	int SegmentIndex;//[Offset: 0x14, Size: 1]
	byte LinkMethod;//[Offset: 0x18, Size: 1]
	byte CachedLinkMethod;//[Offset: 0x19, Size: 1]
	float SegmentBeginTime;//[Offset: 0x1c, Size: 1]
	float SegmentLength;//[Offset: 0x20, Size: 1]
	float LinkValue;//[Offset: 0x24, Size: 1]
	AnimSequenceBase* LinkedSequence;//[Offset: 0x28, Size: 1]

--------------------------------
Class: AnimNotify.Object
	bool Received_Notify(SkeletalMeshComponent* MeshComp, AnimSequenceBase* Animation);// 0x1d69c50
	FString GetNotifyName();// 0xde9830

--------------------------------
Class: AnimMontage.AnimCompositeBase.AnimSequenceBase.AnimationAsset.Object
	AlphaBlend BlendIn;//[Offset: 0xa8, Size: 1]
	float BlendInTime;//[Offset: 0xd8, Size: 1]
	AlphaBlend BlendOut;//[Offset: 0xe0, Size: 1]
	float blendOutTime;//[Offset: 0x110, Size: 1]
	float BlendOutTriggerTime;//[Offset: 0x114, Size: 1]
	FName SyncGroup;//[Offset: 0x118, Size: 1]
	int SyncSlotIndex;//[Offset: 0x120, Size: 1]
	MarkerSyncData MarkerData;//[Offset: 0x128, Size: 1]
	CompositeSection[] CompositeSections;//[Offset: 0x148, Size: 1]
	SlotAnimationTrack[] SlotAnimTracks;//[Offset: 0x158, Size: 1]
	BranchingPoint[] BranchingPoints;//[Offset: 0x168, Size: 1]
	bool bEnableRootMotionTranslation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x178, Size: 1]
	bool bEnableRootMotionRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x179, Size: 1]
	bool bEnableAutoBlendOut;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x17a, Size: 1]
	byte RootMotionRootLock;//[Offset: 0x17b, Size: 1]
	BranchingPointMarker[] BranchingPointMarkers;//[Offset: 0x180, Size: 1]
	int[] BranchingPointStateNotifyIndices;//[Offset: 0x190, Size: 1]
	TimeStretchCurve TimeStretchCurve;//[Offset: 0x1a0, Size: 1]
	FName TimeStretchCurveName;//[Offset: 0x1c8, Size: 1]
	float GetDefaultBlendOutTime();// 0x3ebd4c0

--------------------------------
Class: AnimCompositeBase.AnimSequenceBase.AnimationAsset.Object

--------------------------------
Class: AlphaBlend
	CurveFloat* CustomCurve;//[Offset: 0x0, Size: 1]
	float BlendTime;//[Offset: 0x8, Size: 1]
	enum BlendOption;//[Offset: 0x24, Size: 1]

--------------------------------
Class: CurveFloat.CurveBase.Object
	RichCurve FloatCurve;//[Offset: 0x30, Size: 1]
	bool bIsEventCurve;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb0, Size: 1]
	float GetFloatValue(float InTime);// 0x3ef4750

--------------------------------
Class: CurveBase.Object
	void GetValueRange(out float MinValue, out float MaxValue);// 0x3eeed80
	void GetTimeRange(out float MinTime, out float MaxTime);// 0x3eeeca0

--------------------------------
Class: RichCurve.RealCurve.IndexedCurve
	RichCurveKey[] Keys;//[Offset: 0x70, Size: 1]

--------------------------------
Class: RealCurve.IndexedCurve
	float DefaultValue;//[Offset: 0x68, Size: 1]
	byte PreInfinityExtrap;//[Offset: 0x6c, Size: 1]
	byte PostInfinityExtrap;//[Offset: 0x6d, Size: 1]

--------------------------------
Class: IndexedCurve
	KeyHandleMap KeyHandlesToIndices;//[Offset: 0x8, Size: 1]

--------------------------------
Class: KeyHandleMap

--------------------------------
Class: RichCurveKey
	byte InterpMode;//[Offset: 0x0, Size: 1]
	byte TangentMode;//[Offset: 0x1, Size: 1]
	byte TangentWeightMode;//[Offset: 0x2, Size: 1]
	float Time;//[Offset: 0x4, Size: 1]
	float Value;//[Offset: 0x8, Size: 1]
	float ArriveTangent;//[Offset: 0xc, Size: 1]
	float ArriveTangentWeight;//[Offset: 0x10, Size: 1]
	float LeaveTangent;//[Offset: 0x14, Size: 1]
	float LeaveTangentWeight;//[Offset: 0x18, Size: 1]

--------------------------------
Class: MarkerSyncData
	AnimSyncMarker[] AuthoredSyncMarkers;//[Offset: 0x0, Size: 1]

--------------------------------
Class: AnimSyncMarker
	FName MarkerName;//[Offset: 0x0, Size: 1]
	float Time;//[Offset: 0x8, Size: 1]

--------------------------------
Class: CompositeSection.AnimLinkableElement
	FName SectionName;//[Offset: 0x30, Size: 1]
	float StartTime;//[Offset: 0x38, Size: 1]
	FName NextSectionName;//[Offset: 0x3c, Size: 1]
	AnimMetaData*[] MetaData;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SlotAnimationTrack
	FName SlotName;//[Offset: 0x0, Size: 1]
	AnimTrack AnimTrack;//[Offset: 0x8, Size: 1]

--------------------------------
Class: AnimTrack
	AnimSegment[] AnimSegments;//[Offset: 0x0, Size: 1]

--------------------------------
Class: AnimSegment
	AnimSequenceBase* AnimReference;//[Offset: 0x0, Size: 1]
	float StartPos;//[Offset: 0x8, Size: 1]
	float AnimStartTime;//[Offset: 0xc, Size: 1]
	float AnimEndTime;//[Offset: 0x10, Size: 1]
	float AnimPlayRate;//[Offset: 0x14, Size: 1]
	int LoopingCount;//[Offset: 0x18, Size: 1]

--------------------------------
Class: BranchingPoint.AnimLinkableElement
	FName EventName;//[Offset: 0x30, Size: 1]
	float DisplayTime;//[Offset: 0x38, Size: 1]
	float TriggerTimeOffset;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: BranchingPointMarker
	int NotifyIndex;//[Offset: 0x0, Size: 1]
	float TriggerTime;//[Offset: 0x4, Size: 1]
	byte NotifyEventType;//[Offset: 0x8, Size: 1]

--------------------------------
Class: TimeStretchCurve
	float SamplingRate;//[Offset: 0x0, Size: 1]
	float CurveValueMinPrecision;//[Offset: 0x4, Size: 1]
	TimeStretchCurveMarker[] Markers;//[Offset: 0x8, Size: 1]
	float Sum_dT_i_by_C_i;//[Offset: 0x18, Size: 3]

--------------------------------
Class: TimeStretchCurveMarker
	float Time;//[Offset: 0x0, Size: 3]
	float Alpha;//[Offset: 0xc, Size: 1]

--------------------------------
Class: RawCurveTracks
	FloatCurve[] FloatCurves;//[Offset: 0x0, Size: 1]

--------------------------------
Class: FloatCurve.AnimCurveBase
	RichCurve FloatCurve;//[Offset: 0x18, Size: 1]

--------------------------------
Class: AnimCurveBase
	FName LastObservedName;//[Offset: 0x0, Size: 1]
	SmartName Name;//[Offset: 0x8, Size: 1]
	int CurveTypeFlags;//[Offset: 0x14, Size: 1]

--------------------------------
Class: SmartName
	FName DisplayName;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MarkerSyncAnimPosition
	FName PreviousMarkerName;//[Offset: 0x0, Size: 1]
	FName NextMarkerName;//[Offset: 0x8, Size: 1]
	float PositionBetweenMarkers;//[Offset: 0x10, Size: 1]

--------------------------------
Class: AnimNotifyQueue
	AnimNotifyEventReference[] AnimNotifies;//[Offset: 0x10, Size: 1]
	<FName,AnimNotifyArray> UnfilteredMontageAnimNotifies;//[Offset: 0x20, Size: 1]

--------------------------------
Class: AnimNotifyEventReference
	Object* NotifySource;//[Offset: 0x8, Size: 1]

--------------------------------
Class: AnimNotifyArray
	AnimNotifyEventReference[] Notifies;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MaterialInterface.Object
	SubsurfaceProfile* SubsurfaceProfile;//[Offset: 0x38, Size: 1]
	LightmassMaterialInterfaceSettings LightmassSettings;//[Offset: 0x50, Size: 1]
	MaterialTextureInfo[] TextureStreamingData;//[Offset: 0x60, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x70, Size: 1]
	void SetForceMipLevelsToBeResident(bool OverrideForceMiplevelsToBeResident, bool bForceMiplevelsToBeResidentValue, float ForceDuration, int CinematicTextureGroups, bool bFastResponse);// 0x3fa72a0
	PhysicalMaterialMask* GetPhysicalMaterialMask();// 0x3fa6bf0
	PhysicalMaterial* GetPhysicalMaterialFromMap(int Index);// 0x3fa6b50
	PhysicalMaterial* GetPhysicalMaterial();// 0x3402720
	MaterialParameterInfo GetParameterInfo(byte Association, FName ParameterName, MaterialFunctionInterface* LayerFunction);// 0x3fa6a30
	Material* GetBaseMaterial();// 0x3fa6a00

--------------------------------
Class: PhysicalMaterialMask.Object
	int UVChannelIndex;//[Offset: 0x28, Size: 1]
	byte AddressX;//[Offset: 0x2c, Size: 1]
	byte AddressY;//[Offset: 0x2d, Size: 1]

--------------------------------
Class: MaterialFunctionInterface.Object
	Guid StateId;//[Offset: 0x28, Size: 1]
	enum MaterialFunctionUsage;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SubsurfaceProfile.Object
	SubsurfaceProfileStruct Settings;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SubsurfaceProfileStruct
	LinearColor SurfaceAlbedo;//[Offset: 0x0, Size: 1]
	LinearColor MeanFreePathColor;//[Offset: 0x10, Size: 1]
	float MeanFreePathDistance;//[Offset: 0x20, Size: 1]
	float WorldUnitScale;//[Offset: 0x24, Size: 1]
	bool bEnableBurley;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	float ScatterRadius;//[Offset: 0x2c, Size: 1]
	LinearColor SubsurfaceColor;//[Offset: 0x30, Size: 1]
	LinearColor FalloffColor;//[Offset: 0x40, Size: 1]
	LinearColor BoundaryColorBleed;//[Offset: 0x50, Size: 1]
	float ExtinctionScale;//[Offset: 0x60, Size: 1]
	float NormalScale;//[Offset: 0x64, Size: 1]
	float ScatteringDistribution;//[Offset: 0x68, Size: 1]
	float IOR;//[Offset: 0x6c, Size: 1]
	float Roughness0;//[Offset: 0x70, Size: 1]
	float Roughness1;//[Offset: 0x74, Size: 1]
	float LobeMix;//[Offset: 0x78, Size: 1]
	LinearColor TransmissionTintColor;//[Offset: 0x7c, Size: 1]

--------------------------------
Class: LinearColor
	float R;//[Offset: 0x0, Size: 1]
	float G;//[Offset: 0x4, Size: 1]
	float B;//[Offset: 0x8, Size: 1]
	float A;//[Offset: 0xc, Size: 1]

--------------------------------
Class: MaterialParameterInfo
	FName Name;//[Offset: 0x0, Size: 1]
	byte Association;//[Offset: 0x8, Size: 1]
	int Index;//[Offset: 0xc, Size: 1]

--------------------------------
Class: Material.MaterialInterface.Object
	PhysicalMaterial* PhysMaterial;//[Offset: 0x88, Size: 1]
	PhysicalMaterialMask* PhysMaterialMask;//[Offset: 0x90, Size: 1]
	PhysicalMaterial* PhysicalMaterialMap;//[Offset: 0x98, Size: 8]
	ScalarMaterialInput Metallic;//[Offset: 0xd8, Size: 1]
	ScalarMaterialInput Specular;//[Offset: 0xec, Size: 1]
	ScalarMaterialInput Anisotropy;//[Offset: 0x100, Size: 1]
	VectorMaterialInput Normal;//[Offset: 0x114, Size: 1]
	VectorMaterialInput Tangent;//[Offset: 0x128, Size: 1]
	ColorMaterialInput EmissiveColor;//[Offset: 0x13c, Size: 1]
	byte MaterialDomain;//[Offset: 0x150, Size: 1]
	byte BlendMode;//[Offset: 0x151, Size: 1]
	byte DecalBlendMode;//[Offset: 0x152, Size: 1]
	byte MaterialDecalResponse;//[Offset: 0x153, Size: 1]
	byte ShadingModel;//[Offset: 0x154, Size: 1]
	bool bCastDynamicShadowAsMasked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x155, Size: 1]
	MaterialShadingModelField ShadingModels;//[Offset: 0x156, Size: 1]
	float OpacityMaskClipValue;//[Offset: 0x158, Size: 1]
	VectorMaterialInput WorldPositionOffset;//[Offset: 0x15c, Size: 1]
	ScalarMaterialInput Refraction;//[Offset: 0x170, Size: 1]
	MaterialAttributesInput MaterialAttributes;//[Offset: 0x184, Size: 1]
	ScalarMaterialInput PixelDepthOffset;//[Offset: 0x19c, Size: 1]
	ShadingModelMaterialInput ShadingModelFromMaterialExpression;//[Offset: 0x1b0, Size: 1]
	bool bEnableSeparateTranslucency;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c4, Size: 1]
	bool bEnableResponsiveAA;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1c4, Size: 1]
	bool bScreenSpaceReflections;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1c4, Size: 1]
	bool bContactShadows;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1c4, Size: 1]
	bool TwoSided;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1c4, Size: 1]
	bool DitheredLODTransition;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1c4, Size: 1]
	bool DitherOpacityMask;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1c4, Size: 1]
	bool bAllowNegativeEmissiveColor;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1c4, Size: 1]
	byte TranslucencyLightingMode;//[Offset: 0x1c5, Size: 1]
	bool bEnableMobileSeparateTranslucency;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c6, Size: 1]
	int NumCustomizedUVs;//[Offset: 0x1c8, Size: 1]
	float TranslucencyDirectionalLightingIntensity;//[Offset: 0x1cc, Size: 1]
	float TranslucentShadowDensityScale;//[Offset: 0x1d0, Size: 1]
	float TranslucentSelfShadowDensityScale;//[Offset: 0x1d4, Size: 1]
	float TranslucentSelfShadowSecondDensityScale;//[Offset: 0x1d8, Size: 1]
	float TranslucentSelfShadowSecondOpacity;//[Offset: 0x1dc, Size: 1]
	float TranslucentBackscatteringExponent;//[Offset: 0x1e0, Size: 1]
	LinearColor TranslucentMultipleScatteringExtinction;//[Offset: 0x1e4, Size: 1]
	float TranslucentShadowStartOffset;//[Offset: 0x1f4, Size: 1]
	bool bDisableDepthTest;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1f8, Size: 1]
	bool bWriteOnlyAlpha;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1f8, Size: 1]
	bool bGenerateSphericalParticleNormals;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1f8, Size: 1]
	bool bTangentSpaceNormal;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1f8, Size: 1]
	bool bUseEmissiveForDynamicAreaLighting;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1f8, Size: 1]
	bool bBlockGI;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1f8, Size: 1]
	bool bUsedAsSpecialEngineMaterial;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1f8, Size: 1]
	bool bUsedWithSkeletalMesh;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1f8, Size: 1]
	bool bUsedWithEditorCompositing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1f9, Size: 1]
	bool bUsedWithParticleSprites;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1f9, Size: 1]
	bool bUsedWithBeamTrails;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1f9, Size: 1]
	bool bUsedWithMeshParticles;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1f9, Size: 1]
	bool bUsedWithNiagaraSprites;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1f9, Size: 1]
	bool bUsedWithNiagaraRibbons;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1f9, Size: 1]
	bool bUsedWithNiagaraMeshParticles;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1f9, Size: 1]
	bool bUsedWithGeometryCache;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1f9, Size: 1]
	bool bUsedWithStaticLighting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1fa, Size: 1]
	bool bUsedWithMorphTargets;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1fa, Size: 1]
	bool bUsedWithSplineMeshes;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1fa, Size: 1]
	bool bUsedWithInstancedStaticMeshes;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1fa, Size: 1]
	bool bUsedWithGeometryCollections;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1fa, Size: 1]
	bool bUsesDistortion;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1fa, Size: 1]
	bool bUsedWithClothing;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1fa, Size: 1]
	bool bUsedWithWater;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1fc, Size: 1]
	bool bUsedWithHairStrands;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1fc, Size: 1]
	bool bUsedWithLidarPointCloud;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1fc, Size: 1]
	bool bUsedWithVirtualHeightfieldMesh;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1fc, Size: 1]
	bool bUsedWithUI;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x200, Size: 1]
	bool bAutomaticallySetUsageInEditor;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x200, Size: 1]
	bool bFullyRough;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x200, Size: 1]
	bool bUseFullPrecision;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x200, Size: 1]
	bool bUseLightmapDirectionality;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x200, Size: 1]
	bool bUseAlphaToCoverage;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x200, Size: 1]
	bool bForwardRenderUsePreintegratedGFForSimpleIBL;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x204, Size: 1]
	bool bUseHQForwardReflections;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x208, Size: 1]
	bool bForwardBlendsSkyLightCubemaps;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x208, Size: 1]
	bool bUsePlanarForwardReflections;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x208, Size: 1]
	bool bNormalCurvatureToRoughness;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x208, Size: 1]
	byte D3D11TessellationMode;//[Offset: 0x209, Size: 1]
	bool bEnableCrackFreeDisplacement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20a, Size: 1]
	bool bEnableAdaptiveTessellation;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x20a, Size: 1]
	bool AllowTranslucentCustomDepthWrites;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x20a, Size: 1]
	bool Wireframe;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x20a, Size: 1]
	bool WriteDepthToTranslucentMaterial;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x20a, Size: 1]
	byte ShadingRate;//[Offset: 0x20b, Size: 1]
	bool bCanMaskedBeAssumedOpaque;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20c, Size: 1]
	bool bIsMasked;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x20c, Size: 1]
	bool bIsPreviewMaterial;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x20c, Size: 1]
	bool bIsFunctionPreviewMaterial;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x20c, Size: 1]
	bool bUseMaterialAttributes;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x20c, Size: 1]
	bool bCastRayTracedShadows;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x20c, Size: 1]
	bool bUseTranslucencyVertexFog;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x20c, Size: 1]
	bool bApplyCloudFogging;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x20c, Size: 1]
	bool bIsSky;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20d, Size: 1]
	bool bComputeFogPerPixel;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x20d, Size: 1]
	bool bOutputTranslucentVelocity;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x20d, Size: 1]
	bool bAllowDevelopmentShaderCompile;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x20d, Size: 1]
	bool bIsMaterialEditorStatsMaterial;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x20d, Size: 1]
	byte BlendableLocation;//[Offset: 0x20e, Size: 1]
	bool BlendableOutputAlpha;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20f, Size: 1]
	bool bEnableStencilTest;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x20f, Size: 1]
	byte StencilCompare;//[Offset: 0x210, Size: 1]
	byte StencilRefValue;//[Offset: 0x211, Size: 1]
	byte RefractionMode;//[Offset: 0x212, Size: 1]
	int BlendablePriority;//[Offset: 0x214, Size: 1]
	bool bIsBlendable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x218, Size: 1]
	uint32 UsageFlagWarnings;//[Offset: 0x21c, Size: 1]
	float RefractionDepthBias;//[Offset: 0x220, Size: 1]
	Guid StateId;//[Offset: 0x224, Size: 1]
	float MaxDisplacement;//[Offset: 0x234, Size: 1]
	MaterialCachedExpressionData CachedExpressionData;//[Offset: 0x268, Size: 1]

--------------------------------
Class: ScalarMaterialInput.MaterialInput

--------------------------------
Class: MaterialInput
	int OutputIndex;//[Offset: 0x0, Size: 1]
	FName InputName;//[Offset: 0x4, Size: 1]
	FName ExpressionName;//[Offset: 0xc, Size: 1]

--------------------------------
Class: VectorMaterialInput.MaterialInput

--------------------------------
Class: ColorMaterialInput.MaterialInput

--------------------------------
Class: MaterialShadingModelField
	uint16 ShadingModelField;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MaterialAttributesInput.ExpressionInput
	int PropertyConnectedBitmask;//[Offset: 0x14, Size: 1]

--------------------------------
Class: ExpressionInput
	int OutputIndex;//[Offset: 0x0, Size: 1]
	FName InputName;//[Offset: 0x4, Size: 1]
	FName ExpressionName;//[Offset: 0xc, Size: 1]

--------------------------------
Class: ShadingModelMaterialInput.MaterialInput

--------------------------------
Class: MaterialCachedExpressionData
	MaterialCachedParameters Parameters;//[Offset: 0x0, Size: 1]
	Object*[] ReferencedTextures;//[Offset: 0x150, Size: 1]
	MaterialFunctionInfo[] FunctionInfos;//[Offset: 0x160, Size: 1]
	MaterialParameterCollectionInfo[] ParameterCollectionInfos;//[Offset: 0x170, Size: 1]
	MaterialFunctionInterface*[] DefaultLayers;//[Offset: 0x180, Size: 1]
	MaterialFunctionInterface*[] DefaultLayerBlends;//[Offset: 0x190, Size: 1]
	LandscapeGrassType*[] GrassTypes;//[Offset: 0x1a0, Size: 1]
	FName[] DynamicParameterNames;//[Offset: 0x1b0, Size: 1]
	bool[] QualityLevelsUsed;//[Offset: 0x1c0, Size: 1]
	bool bHasRuntimeVirtualTextureOutput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1d0, Size: 1]
	bool bHasSceneColor;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1d0, Size: 1]

--------------------------------
Class: MaterialCachedParameters
	MaterialCachedParameterEntry RuntimeEntries;//[Offset: 0x0, Size: 5]
	float[] ScalarValues;//[Offset: 0xf0, Size: 1]
	LinearColor[] VectorValues;//[Offset: 0x100, Size: 1]
	Texture*[] TextureValues;//[Offset: 0x110, Size: 1]
	Font*[] FontValues;//[Offset: 0x120, Size: 1]
	int[] FontPageValues;//[Offset: 0x130, Size: 1]
	RuntimeVirtualTexture*[] RuntimeVirtualTextureValues;//[Offset: 0x140, Size: 1]

--------------------------------
Class: MaterialCachedParameterEntry
	uint64[] NameHashes;//[Offset: 0x0, Size: 1]
	MaterialParameterInfo[] ParameterInfos;//[Offset: 0x10, Size: 1]
	Guid[] ExpressionGuids;//[Offset: 0x20, Size: 1]

--------------------------------
Class: Texture.StreamableRenderAsset.Object
	Guid LightingGuid;//[Offset: 0x68, Size: 1]
	int LODBias;//[Offset: 0x78, Size: 1]
	byte CompressionSettings;//[Offset: 0x7c, Size: 1]
	byte Filter;//[Offset: 0x7d, Size: 1]
	enum MipLoadOptions;//[Offset: 0x7e, Size: 1]
	byte LODGroup;//[Offset: 0x7f, Size: 1]
	PerPlatformFloat Downscale;//[Offset: 0x80, Size: 1]
	enum DownscaleOptions;//[Offset: 0x84, Size: 1]
	bool sRGB;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x85, Size: 1]
	bool bNoTiling;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x85, Size: 1]
	bool VirtualTextureStreaming;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x85, Size: 1]
	bool CompressionYCoCg;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x85, Size: 1]
	bool bNotOfflineProcessed;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x85, Size: 1]
	bool bAsyncResourceReleaseHasBeenStarted;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x85, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x88, Size: 1]

--------------------------------
Class: StreamableRenderAsset.Object
	double ForceMipLevelsToBeResidentTimestamp;//[Offset: 0x40, Size: 1]
	int NumCinematicMipLevels;//[Offset: 0x48, Size: 1]
	int StreamingIndex;//[Offset: 0x4c, Size: 1]
	int CachedCombinedLODBias;//[Offset: 0x50, Size: 1]
	bool NeverStream;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x54, Size: 1]
	bool bGlobalForceMipLevelsToBeResident;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x54, Size: 1]
	bool bHasStreamingUpdatePending;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x54, Size: 1]
	bool bForceMiplevelsToBeResident;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x54, Size: 1]
	bool bIgnoreStreamingMipBias;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x54, Size: 1]
	bool bUseCinematicMipLevels;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x54, Size: 1]

--------------------------------
Class: PerPlatformFloat
	float Default;//[Offset: 0x0, Size: 1]

--------------------------------
Class: Font.Object
	enum FontCacheType;//[Offset: 0x30, Size: 1]
	FontCharacter[] Characters;//[Offset: 0x38, Size: 1]
	Texture2D*[] Textures;//[Offset: 0x48, Size: 1]
	int IsRemapped;//[Offset: 0x58, Size: 1]
	float EmScale;//[Offset: 0x5c, Size: 1]
	float Ascent;//[Offset: 0x60, Size: 1]
	float Descent;//[Offset: 0x64, Size: 1]
	float Leading;//[Offset: 0x68, Size: 1]
	int Kerning;//[Offset: 0x6c, Size: 1]
	FontImportOptionsData ImportOptions;//[Offset: 0x70, Size: 1]
	int NumCharacters;//[Offset: 0x120, Size: 1]
	int[] MaxCharHeight;//[Offset: 0x128, Size: 1]
	float ScalingFactor;//[Offset: 0x138, Size: 1]
	int LegacyFontSize;//[Offset: 0x13c, Size: 1]
	FName LegacyFontName;//[Offset: 0x140, Size: 1]
	CompositeFont CompositeFont;//[Offset: 0x148, Size: 1]

--------------------------------
Class: FontCharacter
	int StartU;//[Offset: 0x0, Size: 1]
	int StartV;//[Offset: 0x4, Size: 1]
	int USize;//[Offset: 0x8, Size: 1]
	int VSize;//[Offset: 0xc, Size: 1]
	byte TextureIndex;//[Offset: 0x10, Size: 1]
	int VerticalOffset;//[Offset: 0x14, Size: 1]

--------------------------------
Class: Texture2D.Texture.StreamableRenderAsset.Object
	int LevelIndex;//[Offset: 0x178, Size: 1]
	int FirstResourceMemMip;//[Offset: 0x17c, Size: 1]
	bool bTemporarilyDisableStreaming;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x180, Size: 1]
	byte AddressX;//[Offset: 0x181, Size: 1]
	byte AddressY;//[Offset: 0x182, Size: 1]
	IntPoint ImportedSize;//[Offset: 0x184, Size: 1]
	int Blueprint_GetSizeY();// 0x401cd90
	int Blueprint_GetSizeX();// 0x401cd60

--------------------------------
Class: IntPoint
	int X;//[Offset: 0x0, Size: 1]
	int Y;//[Offset: 0x4, Size: 1]

--------------------------------
Class: FontImportOptionsData
	FString FontName;//[Offset: 0x0, Size: 1]
	float Height;//[Offset: 0x10, Size: 1]
	bool bEnableAntialiasing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x14, Size: 1]
	bool bEnableBold;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x14, Size: 1]
	bool bEnableItalic;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x14, Size: 1]
	bool bEnableUnderline;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x14, Size: 1]
	bool bAlphaOnly;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x14, Size: 1]
	byte CharacterSet;//[Offset: 0x18, Size: 1]
	FString Chars;//[Offset: 0x20, Size: 1]
	FString UnicodeRange;//[Offset: 0x30, Size: 1]
	FString CharsFilePath;//[Offset: 0x40, Size: 1]
	FString CharsFileWildcard;//[Offset: 0x50, Size: 1]
	bool bCreatePrintableOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x60, Size: 1]
	bool bIncludeASCIIRange;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x60, Size: 1]
	LinearColor ForegroundColor;//[Offset: 0x64, Size: 1]
	bool bEnableDropShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x74, Size: 1]
	int TexturePageWidth;//[Offset: 0x78, Size: 1]
	int TexturePageMaxHeight;//[Offset: 0x7c, Size: 1]
	int XPadding;//[Offset: 0x80, Size: 1]
	int YPadding;//[Offset: 0x84, Size: 1]
	int ExtendBoxTop;//[Offset: 0x88, Size: 1]
	int ExtendBoxBottom;//[Offset: 0x8c, Size: 1]
	int ExtendBoxRight;//[Offset: 0x90, Size: 1]
	int ExtendBoxLeft;//[Offset: 0x94, Size: 1]
	bool bEnableLegacyMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x98, Size: 1]
	int Kerning;//[Offset: 0x9c, Size: 1]
	bool bUseDistanceFieldAlpha;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa0, Size: 1]
	int DistanceFieldScaleFactor;//[Offset: 0xa4, Size: 1]
	float DistanceFieldScanRadiusScale;//[Offset: 0xa8, Size: 1]

--------------------------------
Class: CompositeFont
	Typeface DefaultTypeface;//[Offset: 0x0, Size: 1]
	CompositeFallbackFont FallbackTypeface;//[Offset: 0x10, Size: 1]
	CompositeSubFont[] SubTypefaces;//[Offset: 0x28, Size: 1]

--------------------------------
Class: Typeface
	TypefaceEntry[] Fonts;//[Offset: 0x0, Size: 1]

--------------------------------
Class: TypefaceEntry
	FName Name;//[Offset: 0x0, Size: 1]
	FontData Font;//[Offset: 0x8, Size: 1]

--------------------------------
Class: FontData
	FString FontFilename;//[Offset: 0x0, Size: 1]
	enum Hinting;//[Offset: 0x10, Size: 1]
	enum LoadingPolicy;//[Offset: 0x11, Size: 1]
	int SubFaceIndex;//[Offset: 0x14, Size: 1]
	Object* FontFaceAsset;//[Offset: 0x18, Size: 1]

--------------------------------
Class: CompositeFallbackFont
	Typeface Typeface;//[Offset: 0x0, Size: 1]
	float ScalingFactor;//[Offset: 0x10, Size: 1]

--------------------------------
Class: CompositeSubFont.CompositeFallbackFont
	Int32Range[] CharacterRanges;//[Offset: 0x18, Size: 1]
	FString Cultures;//[Offset: 0x28, Size: 1]

--------------------------------
Class: Int32Range
	Int32RangeBound LowerBound;//[Offset: 0x0, Size: 1]
	Int32RangeBound UpperBound;//[Offset: 0x8, Size: 1]

--------------------------------
Class: Int32RangeBound
	byte Type;//[Offset: 0x0, Size: 1]
	int Value;//[Offset: 0x4, Size: 1]

--------------------------------
Class: RuntimeVirtualTexture.Object
	int TileCount;//[Offset: 0x28, Size: 1]
	int TileSize;//[Offset: 0x2c, Size: 1]
	int TileBorderSize;//[Offset: 0x30, Size: 1]
	enum MaterialType;//[Offset: 0x34, Size: 1]
	bool bCompressTextures;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x35, Size: 1]
	bool bClearTextures;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x36, Size: 1]
	bool bSinglePhysicalSpace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x37, Size: 1]
	bool bPrivateSpace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38, Size: 1]
	bool bAdaptive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x39, Size: 1]
	bool bContinuousUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a, Size: 1]
	int RemoveLowMips;//[Offset: 0x3c, Size: 1]
	byte LODGroup;//[Offset: 0x40, Size: 1]
	int Size;//[Offset: 0x44, Size: 1]
	RuntimeVirtualTextureStreamingProxy* StreamingTexture;//[Offset: 0x48, Size: 1]
	int GetTileSize();// 0x3fe7310
	int GetTileCount();// 0x3fe72b0
	int GetTileBorderSize();// 0x3fe7270
	int GetSize();// 0x3fe71e0
	int GetPageTableSize();// 0x3fe71b0

--------------------------------
Class: RuntimeVirtualTextureStreamingProxy.Texture2D.Texture.StreamableRenderAsset.Object

--------------------------------
Class: MaterialFunctionInfo
	Guid StateId;//[Offset: 0x0, Size: 1]
	MaterialFunctionInterface* Function;//[Offset: 0x10, Size: 1]

--------------------------------
Class: MaterialParameterCollectionInfo
	Guid StateId;//[Offset: 0x0, Size: 1]
	MaterialParameterCollection* ParameterCollection;//[Offset: 0x10, Size: 1]

--------------------------------
Class: MaterialParameterCollection.Object
	Guid StateId;//[Offset: 0x28, Size: 1]
	CollectionScalarParameter[] ScalarParameters;//[Offset: 0x38, Size: 1]
	CollectionVectorParameter[] VectorParameters;//[Offset: 0x48, Size: 1]

--------------------------------
Class: CollectionScalarParameter.CollectionParameterBase
	float DefaultValue;//[Offset: 0x18, Size: 1]

--------------------------------
Class: CollectionParameterBase
	FName ParameterName;//[Offset: 0x0, Size: 1]
	Guid ID;//[Offset: 0x8, Size: 1]

--------------------------------
Class: CollectionVectorParameter.CollectionParameterBase
	LinearColor DefaultValue;//[Offset: 0x18, Size: 1]

--------------------------------
Class: LandscapeGrassType.Object
	GrassVariety[] GrassVarieties;//[Offset: 0x28, Size: 1]
	bool bEnableDensityScaling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x38, Size: 1]
	StaticMesh* GrassMesh;//[Offset: 0x40, Size: 1]
	float GrassDensity;//[Offset: 0x48, Size: 1]
	float PlacementJitter;//[Offset: 0x4c, Size: 1]
	int StartCullDistance;//[Offset: 0x50, Size: 1]
	int EndCullDistance;//[Offset: 0x54, Size: 1]
	bool RandomRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x58, Size: 1]
	bool AlignToSurface;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x59, Size: 1]

--------------------------------
Class: GrassVariety
	StaticMesh* GrassMesh;//[Offset: 0x0, Size: 1]
	MaterialInterface*[] OverrideMaterials;//[Offset: 0x8, Size: 1]
	PerPlatformFloat GrassDensity;//[Offset: 0x18, Size: 1]
	bool bUseGrid;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c, Size: 1]
	float PlacementJitter;//[Offset: 0x20, Size: 1]
	PerPlatformInt StartCullDistance;//[Offset: 0x24, Size: 1]
	PerPlatformInt EndCullDistance;//[Offset: 0x28, Size: 1]
	int MinLOD;//[Offset: 0x2c, Size: 1]
	enum Scaling;//[Offset: 0x30, Size: 1]
	FloatInterval ScaleX;//[Offset: 0x34, Size: 1]
	FloatInterval ScaleY;//[Offset: 0x3c, Size: 1]
	FloatInterval ScaleZ;//[Offset: 0x44, Size: 1]
	bool RandomRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4c, Size: 1]
	bool AlignToSurface;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4d, Size: 1]
	bool bUseLandscapeLightmap;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e, Size: 1]
	LightingChannels LightingChannels;//[Offset: 0x4f, Size: 1]
	bool bReceivesDecals;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x50, Size: 1]
	bool bCastDynamicShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x51, Size: 1]
	bool bKeepInstanceBufferCPUCopy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x52, Size: 1]

--------------------------------
Class: StaticMesh.StreamableRenderAsset.Object
	PerPlatformInt MinLOD;//[Offset: 0x80, Size: 1]
	float LpvBiasMultiplier;//[Offset: 0x84, Size: 1]
	StaticMaterial[] StaticMaterials;//[Offset: 0x88, Size: 1]
	float LightmapUVDensity;//[Offset: 0x98, Size: 1]
	int LightMapResolution;//[Offset: 0x9c, Size: 1]
	int LightMapCoordinateIndex;//[Offset: 0xa0, Size: 1]
	float DistanceFieldSelfShadowBias;//[Offset: 0xa4, Size: 1]
	BodySetup* BodySetup;//[Offset: 0xa8, Size: 1]
	int LODForCollision;//[Offset: 0xb0, Size: 1]
	bool bGenerateMeshDistanceField;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb4, Size: 1]
	bool bStripComplexCollisionForConsole;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb4, Size: 1]
	bool bHasNavigationData;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb4, Size: 1]
	bool bSupportUniformlyDistributedSampling;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb4, Size: 1]
	bool bSupportPhysicalMaterialMasks;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xb4, Size: 1]
	bool bSupportRayTracing;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xb4, Size: 1]
	bool bIsBuiltAtRuntime;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xb4, Size: 1]
	bool bAllowCPUAccess;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb5, Size: 1]
	bool bSupportGpuUniformlyDistributedSampling;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb5, Size: 1]
	StaticMeshSocket*[] Sockets;//[Offset: 0xd8, Size: 1]
	Vector PositiveBoundsExtension;//[Offset: 0xf8, Size: 1]
	Vector NegativeBoundsExtension;//[Offset: 0x104, Size: 1]
	BoxSphereBounds ExtendedBounds;//[Offset: 0x110, Size: 1]
	int ElementToIgnoreForTexFactor;//[Offset: 0x12c, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x130, Size: 1]
	Object* EditableMesh;//[Offset: 0x140, Size: 1]
	NavCollisionBase* NavCollision;//[Offset: 0x148, Size: 1]
	void SetStaticMaterials(out const StaticMaterial[] InStaticMaterials);// 0x40166b0
	void RemoveSocket(StaticMeshSocket* Socket);// 0x4015650
	StaticMaterial[] GetStaticMaterials();// 0x4015570
	int GetNumSections(int InLOD);// 0x4015360
	int GetNumLODs();// 0x4015330
	void GetMinimumLODForPlatforms(out <FName,int> PlatformMinimumLODs);// 0x4015200
	int GetMinimumLODForPlatform(out const FName PlatformName);// 0x4015180
	int GetMaterialIndex(FName MaterialSlotName);// 0x40150e0
	MaterialInterface* GetMaterial(int MaterialIndex);// 0x4015040
	BoxSphereBounds GetBounds();// 0x4014e90
	Box GetBoundingBox();// 0x4014e40
	StaticMeshSocket* FindSocket(FName InSocketName);// 0x4014d40
	static StaticMeshDescription* CreateStaticMeshDescription(Object* Outer);// 0x4014cb0
	void BuildFromStaticMeshDescriptions(out const StaticMeshDescription*[] StaticMeshDescriptions, bool bBuildSimpleCollision);// 0x4014bb0
	void AddSocket(StaticMeshSocket* Socket);// 0x4014b20
	FName AddMaterial(MaterialInterface* Material);// 0x4014a90

--------------------------------
Class: PerPlatformInt
	int Default;//[Offset: 0x0, Size: 1]

--------------------------------
Class: StaticMaterial
	MaterialInterface* MaterialInterface;//[Offset: 0x0, Size: 1]
	FName MaterialSlotName;//[Offset: 0x8, Size: 1]
	FName ImportedMaterialSlotName;//[Offset: 0x10, Size: 1]
	MeshUVChannelInfo UVChannelData;//[Offset: 0x18, Size: 1]

--------------------------------
Class: MeshUVChannelInfo
	bool bInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool bOverrideDensities;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	float LocalUVDensities;//[Offset: 0x4, Size: 4]

--------------------------------
Class: StaticMeshSocket.Object
	FName SocketName;//[Offset: 0x28, Size: 1]
	Vector RelativeLocation;//[Offset: 0x30, Size: 1]
	Rotator RelativeRotation;//[Offset: 0x3c, Size: 1]
	Vector RelativeScale;//[Offset: 0x48, Size: 1]
	FString Tag;//[Offset: 0x58, Size: 1]

--------------------------------
Class: BoxSphereBounds
	Vector Origin;//[Offset: 0x0, Size: 1]
	Vector BoxExtent;//[Offset: 0xc, Size: 1]
	float SphereRadius;//[Offset: 0x18, Size: 1]

--------------------------------
Class: NavCollisionBase.Object
	bool bIsDynamicObstacle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]

--------------------------------
Class: StaticMeshDescription.MeshDescriptionBase.Object
	void SetVertexInstanceUV(VertexInstanceID VertexInstanceID, Vector2D UV, int UVIndex);// 0x3545ad0
	void SetPolygonGroupMaterialSlotName(PolygonGroupID PolygonGroupID, out const FName SlotName);// 0x35459f0
	Vector2D GetVertexInstanceUV(VertexInstanceID VertexInstanceID, int UVIndex);// 0x3545910
	void CreateCube(Vector Center, Vector HalfExtents, PolygonGroupID PolygonGroup, out PolygonID PolygonID_PlusX, out PolygonID PolygonID_MinusX, out PolygonID PolygonID_PlusY, out PolygonID PolygonID_MinusY, out PolygonID PolygonID_PlusZ, out PolygonID PolygonID_MinusZ);// 0x35455d0

--------------------------------
Class: MeshDescriptionBase.Object
	void SetVertexPosition();// 0xffff8009faf60000

--------------------------------
Class: VertexInstanceID.ElementID

--------------------------------
Class: ElementID
	int IDValue;//[Offset: 0x0, Size: 1]

--------------------------------
Class: Vector2D
	float X;//[Offset: 0x0, Size: 1]
	float Y;//[Offset: 0x4, Size: 1]

--------------------------------
Class: PolygonGroupID.ElementID

--------------------------------
Class: PolygonID.ElementID

--------------------------------
Class: FloatInterval
	float Min;//[Offset: 0x0, Size: 1]
	float Max;//[Offset: 0x4, Size: 1]

--------------------------------
Class: LightingChannels
	bool bChannel0;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bChannel1;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bChannel2;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]

--------------------------------
Class: LightmassMaterialInterfaceSettings
	float EmissiveBoost;//[Offset: 0x0, Size: 1]
	float DiffuseBoost;//[Offset: 0x4, Size: 1]
	float ExportResolutionScale;//[Offset: 0x8, Size: 1]
	bool bCastShadowAsMasked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]
	bool bOverrideCastShadowAsMasked;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xc, Size: 1]
	bool bOverrideEmissiveBoost;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xc, Size: 1]
	bool bOverrideDiffuseBoost;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xc, Size: 1]
	bool bOverrideExportResolutionScale;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xc, Size: 1]

--------------------------------
Class: MaterialTextureInfo
	float SamplingScale;//[Offset: 0x0, Size: 1]
	int UVChannelIndex;//[Offset: 0x4, Size: 1]
	FName TextureName;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SkeletalMesh.StreamableRenderAsset.Object
	Skeleton* Skeleton;//[Offset: 0x80, Size: 1]
	BoxSphereBounds ImportedBounds;//[Offset: 0x88, Size: 1]
	BoxSphereBounds ExtendedBounds;//[Offset: 0xa4, Size: 1]
	Vector PositiveBoundsExtension;//[Offset: 0xc0, Size: 1]
	Vector NegativeBoundsExtension;//[Offset: 0xcc, Size: 1]
	SkeletalMaterial[] Materials;//[Offset: 0xd8, Size: 1]
	BoneMirrorInfo[] SkelMirrorTable;//[Offset: 0xe8, Size: 1]
	SkeletalMeshLODInfo[] LODInfo;//[Offset: 0xf8, Size: 1]
	PerPlatformInt MinLOD;//[Offset: 0x158, Size: 1]
	PerPlatformBool DisableBelowMinLodStripping;//[Offset: 0x15c, Size: 1]
	byte SkelMirrorAxis;//[Offset: 0x15d, Size: 1]
	byte SkelMirrorFlipAxis;//[Offset: 0x15e, Size: 1]
	bool bUseFullPrecisionUVs;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x15f, Size: 1]
	bool bUseHighPrecisionTangentBasis;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x15f, Size: 1]
	bool bHasBeenSimplified;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x15f, Size: 1]
	bool bHasVertexColors;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x15f, Size: 1]
	bool bEnablePerPolyCollision;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x15f, Size: 1]
	BodySetup* BodySetup;//[Offset: 0x160, Size: 1]
	PhysicsAsset* PhysicsAsset;//[Offset: 0x168, Size: 1]
	PhysicsAsset* ShadowPhysicsAsset;//[Offset: 0x170, Size: 1]
	NodeMappingContainer*[] NodeMappingData;//[Offset: 0x178, Size: 1]
	bool bSupportRayTracing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x188, Size: 1]
	MorphTarget*[] MorphTargets;//[Offset: 0x190, Size: 1]
	class AnimInstance* PostProcessAnimBlueprint;//[Offset: 0x318, Size: 1]
	ClothingAssetBase*[] MeshClothingAssets;//[Offset: 0x320, Size: 1]
	SkeletalMeshSamplingInfo SamplingInfo;//[Offset: 0x330, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x360, Size: 1]
	SkeletalMeshSocket*[] Sockets;//[Offset: 0x370, Size: 1]
	SkinWeightProfileInfo[] SkinWeightProfiles;//[Offset: 0x390, Size: 1]
	void SetMorphTargets(out const MorphTarget*[] InMorphTargets);// 0x3ff4ec0
	void SetMeshClothingAssets(out const ClothingAssetBase*[] InMeshClothingAssets);// 0x3ff4e10
	void SetMaterials(out const SkeletalMaterial[] InMaterials);// 0x3ff4d60
	void SetLODSettings(SkeletalMeshLODSettings* InLODSettings);// 0x30b3180
	void SetDefaultAnimatingRig(Object* InAnimatingRig);// 0x3ff4c40
	int NumSockets();// 0x3ff4c10
	FString[] K2_GetAllMorphTargetNames();// 0x3ff4b10
	bool IsSectionUsingCloth(int InSectionIndex, bool bCheckCorrespondingSections);// 0x3ff4a40
	SkeletalMeshSocket* GetSocketByIndex(int Index);// 0x3ff49a0
	Skeleton* GetSkeleton();// 0x3ff4980
	PhysicsAsset* GetShadowPhysicsAsset();// 0x3ff4960
	PhysicsAsset* GetPhysicsAsset();// 0x3ff4940
	NodeMappingContainer*[] GetNodeMappingData();// 0x3ff48b0
	NodeMappingContainer* GetNodeMappingContainer(Blueprint* SourceAsset);// 0x3ff4810
	MorphTarget*[] GetMorphTargets();// 0x3ff47e0
	ClothingAssetBase*[] GetMeshClothingAssets();// 0x3ff47b0
	SkeletalMaterial[] GetMaterials();// 0x3ff4780
	SkeletalMeshLODSettings* GetLODSettings();// 0x3f43960
	BoxSphereBounds GetImportedBounds();// 0x3ff4730
	Object* GetDefaultAnimatingRig();// 0x3ff46c0
	BoxSphereBounds GetBounds();// 0x3ff4670
	SkeletalMeshSocket* FindSocketInfo(FName InSocketName, out Transform OutTransform, out int OutBoneIndex, out int OutIndex);// 0x3ff44a0
	SkeletalMeshSocket* FindSocketAndIndex(FName InSocketName, out int OutIndex);// 0x3ff43c0
	SkeletalMeshSocket* FindSocket(FName InSocketName);// 0x3ff4320

--------------------------------
Class: MorphTarget.Object
	SkeletalMesh* BaseSkelMesh;//[Offset: 0x28, Size: 1]

--------------------------------
Class: ClothingAssetBase.Object
	FString ImportedFilePath;//[Offset: 0x28, Size: 1]
	Guid AssetGuid;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SkeletalMaterial
	MaterialInterface* MaterialInterface;//[Offset: 0x0, Size: 1]
	FName MaterialSlotName;//[Offset: 0x8, Size: 1]
	MeshUVChannelInfo UVChannelData;//[Offset: 0x10, Size: 1]

--------------------------------
Class: BoneMirrorInfo
	int SourceIndex;//[Offset: 0x0, Size: 1]
	byte BoneFlipAxis;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SkeletalMeshLODInfo
	PerPlatformFloat ScreenSize;//[Offset: 0x0, Size: 1]
	float LODHysteresis;//[Offset: 0x4, Size: 1]
	int[] LODMaterialMap;//[Offset: 0x8, Size: 1]
	SkeletalMeshBuildSettings BuildSettings;//[Offset: 0x18, Size: 1]
	SkeletalMeshOptimizationSettings ReductionSettings;//[Offset: 0x2c, Size: 1]
	BoneReference[] BonesToRemove;//[Offset: 0x68, Size: 1]
	BoneReference[] BonesToPrioritize;//[Offset: 0x78, Size: 1]
	float WeightOfPrioritization;//[Offset: 0x88, Size: 1]
	AnimSequence* BakePose;//[Offset: 0x90, Size: 1]
	AnimSequence* BakePoseOverride;//[Offset: 0x98, Size: 1]
	FString SourceImportFilename;//[Offset: 0xa0, Size: 1]
	enum SkinCacheUsage;//[Offset: 0xb0, Size: 1]
	bool bHasBeenSimplified;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb1, Size: 1]
	bool bHasPerLODVertexColors;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb1, Size: 1]
	bool bAllowCPUAccess;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb1, Size: 1]
	bool bSupportUniformlyDistributedSampling;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb1, Size: 1]

--------------------------------
Class: SkeletalMeshBuildSettings
	bool bRecomputeNormals;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bRecomputeTangents;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bUseMikkTSpace;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bComputeWeightedNormals;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bRemoveDegenerates;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]
	bool bUseHighPrecisionTangentBasis;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x0, Size: 1]
	bool bUseFullPrecisionUVs;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x0, Size: 1]
	bool bBuildAdjacencyBuffer;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x0, Size: 1]
	float ThresholdPosition;//[Offset: 0x4, Size: 1]
	float ThresholdTangentNormal;//[Offset: 0x8, Size: 1]
	float ThresholdUV;//[Offset: 0xc, Size: 1]
	float MorphThresholdPosition;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SkeletalMeshOptimizationSettings
	byte TerminationCriterion;//[Offset: 0x0, Size: 1]
	float NumOfTrianglesPercentage;//[Offset: 0x4, Size: 1]
	float NumOfVertPercentage;//[Offset: 0x8, Size: 1]
	uint32 MaxNumOfTriangles;//[Offset: 0xc, Size: 1]
	uint32 MaxNumOfVerts;//[Offset: 0x10, Size: 1]
	float MaxDeviationPercentage;//[Offset: 0x14, Size: 1]
	byte ReductionMethod;//[Offset: 0x18, Size: 1]
	byte SilhouetteImportance;//[Offset: 0x19, Size: 1]
	byte TextureImportance;//[Offset: 0x1a, Size: 1]
	byte ShadingImportance;//[Offset: 0x1b, Size: 1]
	byte SkinningImportance;//[Offset: 0x1c, Size: 1]
	bool bRemapMorphTargets;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1d, Size: 1]
	bool bRecalcNormals;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1d, Size: 1]
	float WeldingThreshold;//[Offset: 0x20, Size: 1]
	float NormalsThreshold;//[Offset: 0x24, Size: 1]
	int MaxBonesPerVertex;//[Offset: 0x28, Size: 1]
	bool bEnforceBoneBoundaries;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2c, Size: 1]
	float VolumeImportance;//[Offset: 0x30, Size: 1]
	bool bLockEdges;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x34, Size: 1]
	bool bLockColorBounaries;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x34, Size: 1]
	int BaseLOD;//[Offset: 0x38, Size: 1]

--------------------------------
Class: BoneReference
	FName BoneName;//[Offset: 0x0, Size: 1]

--------------------------------
Class: AnimSequence.AnimSequenceBase.AnimationAsset.Object
	int NumFrames;//[Offset: 0xa8, Size: 1]
	TrackToSkeletonMap[] TrackToSkeletonMapTable;//[Offset: 0xb0, Size: 1]
	AnimBoneCompressionSettings* BoneCompressionSettings;//[Offset: 0xd0, Size: 1]
	AnimCurveCompressionSettings* CurveCompressionSettings;//[Offset: 0xd8, Size: 1]
	byte AdditiveAnimType;//[Offset: 0x150, Size: 1]
	byte RefPoseType;//[Offset: 0x151, Size: 1]
	AnimSequence* RefPoseSeq;//[Offset: 0x158, Size: 1]
	int RefFrameIndex;//[Offset: 0x160, Size: 1]
	FName RetargetSource;//[Offset: 0x164, Size: 1]
	Transform[] RetargetSourceAssetReferencePose;//[Offset: 0x170, Size: 1]
	enum Interpolation;//[Offset: 0x180, Size: 1]
	bool bEnableRootMotion;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x181, Size: 1]
	byte RootMotionRootLock;//[Offset: 0x182, Size: 1]
	bool bForceRootLock;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x183, Size: 1]
	bool bUseNormalizedRootMotionScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x184, Size: 1]
	bool bRootMotionSettingsCopiedFromMontage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x185, Size: 1]
	AnimSyncMarker[] AuthoredSyncMarkers;//[Offset: 0x188, Size: 1]
	BakedCustomAttributePerBoneData[] BakedPerBoneCustomAttributeData;//[Offset: 0x1b0, Size: 1]

--------------------------------
Class: TrackToSkeletonMap
	int BoneTreeIndex;//[Offset: 0x0, Size: 1]

--------------------------------
Class: AnimBoneCompressionSettings.Object
	AnimBoneCompressionCodec*[] Codecs;//[Offset: 0x28, Size: 1]

--------------------------------
Class: AnimBoneCompressionCodec.Object
	FString Description;//[Offset: 0x28, Size: 1]

--------------------------------
Class: AnimCurveCompressionSettings.Object
	AnimCurveCompressionCodec* Codec;//[Offset: 0x28, Size: 1]

--------------------------------
Class: AnimCurveCompressionCodec.Object

--------------------------------
Class: BakedCustomAttributePerBoneData
	int BoneTreeIndex;//[Offset: 0x0, Size: 1]
	BakedStringCustomAttribute[] StringAttributes;//[Offset: 0x8, Size: 1]
	BakedIntegerCustomAttribute[] IntAttributes;//[Offset: 0x18, Size: 1]
	BakedFloatCustomAttribute[] FloatAttributes;//[Offset: 0x28, Size: 1]

--------------------------------
Class: BakedStringCustomAttribute
	FName AttributeName;//[Offset: 0x0, Size: 1]
	StringCurve StringCurve;//[Offset: 0x8, Size: 1]

--------------------------------
Class: StringCurve.IndexedCurve
	FString DefaultValue;//[Offset: 0x68, Size: 1]
	StringCurveKey[] Keys;//[Offset: 0x78, Size: 1]

--------------------------------
Class: StringCurveKey
	float Time;//[Offset: 0x0, Size: 1]
	FString Value;//[Offset: 0x8, Size: 1]

--------------------------------
Class: BakedIntegerCustomAttribute
	FName AttributeName;//[Offset: 0x0, Size: 1]
	IntegralCurve IntCurve;//[Offset: 0x8, Size: 1]

--------------------------------
Class: IntegralCurve.IndexedCurve
	IntegralKey[] Keys;//[Offset: 0x68, Size: 1]
	int DefaultValue;//[Offset: 0x78, Size: 1]
	bool bUseDefaultValueBeforeFirstKey;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7c, Size: 1]

--------------------------------
Class: IntegralKey
	float Time;//[Offset: 0x0, Size: 1]
	int Value;//[Offset: 0x4, Size: 1]

--------------------------------
Class: BakedFloatCustomAttribute
	FName AttributeName;//[Offset: 0x0, Size: 1]
	SimpleCurve FloatCurve;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SimpleCurve.RealCurve.IndexedCurve
	byte InterpMode;//[Offset: 0x70, Size: 1]
	SimpleCurveKey[] Keys;//[Offset: 0x78, Size: 1]

--------------------------------
Class: SimpleCurveKey
	float Time;//[Offset: 0x0, Size: 1]
	float Value;//[Offset: 0x4, Size: 1]

--------------------------------
Class: PerPlatformBool
	bool Default;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]

--------------------------------
Class: PhysicsAsset.Object
	int[] BoundsBodies;//[Offset: 0x30, Size: 1]
	SkeletalBodySetup*[] SkeletalBodySetups;//[Offset: 0x40, Size: 1]
	PhysicsConstraintTemplate*[] ConstraintSetup;//[Offset: 0x50, Size: 1]
	SolverIterations SolverIterations;//[Offset: 0x60, Size: 1]
	enum SolverType;//[Offset: 0x7c, Size: 1]
	bool bNotForDedicatedServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x7d, Size: 1]
	ThumbnailInfo* ThumbnailInfo;//[Offset: 0x120, Size: 1]
	BodySetup*[] BodySetup;//[Offset: 0x128, Size: 1]

--------------------------------
Class: SkeletalBodySetup.BodySetup.BodySetupCore.Object
	bool bSkipScaleFromAnimation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	PhysicalAnimationProfile[] PhysicalAnimationData;//[Offset: 0x2a8, Size: 1]

--------------------------------
Class: PhysicalAnimationProfile
	FName ProfileName;//[Offset: 0x0, Size: 1]
	PhysicalAnimationData PhysicalAnimationData;//[Offset: 0x8, Size: 1]

--------------------------------
Class: PhysicalAnimationData
	FName BodyName;//[Offset: 0x0, Size: 1]
	bool bIsLocalSimulation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]
	float OrientationStrength;//[Offset: 0xc, Size: 1]
	float AngularVelocityStrength;//[Offset: 0x10, Size: 1]
	float PositionStrength;//[Offset: 0x14, Size: 1]
	float VelocityStrength;//[Offset: 0x18, Size: 1]
	float MaxLinearForce;//[Offset: 0x1c, Size: 1]
	float MaxAngularForce;//[Offset: 0x20, Size: 1]

--------------------------------
Class: PhysicsConstraintTemplate.Object
	ConstraintInstance DefaultInstance;//[Offset: 0x28, Size: 1]
	PhysicsConstraintProfileHandle[] ProfileHandles;//[Offset: 0x1f0, Size: 1]
	ConstraintProfileProperties DefaultProfile;//[Offset: 0x200, Size: 1]

--------------------------------
Class: ConstraintInstance.ConstraintInstanceBase
	FName JointName;//[Offset: 0x18, Size: 1]
	FName ConstraintBone1;//[Offset: 0x20, Size: 1]
	FName ConstraintBone2;//[Offset: 0x28, Size: 1]
	Vector Pos1;//[Offset: 0x30, Size: 1]
	Vector PriAxis1;//[Offset: 0x3c, Size: 1]
	Vector SecAxis1;//[Offset: 0x48, Size: 1]
	Vector Pos2;//[Offset: 0x54, Size: 1]
	Vector PriAxis2;//[Offset: 0x60, Size: 1]
	Vector SecAxis2;//[Offset: 0x6c, Size: 1]
	Rotator AngularRotationOffset;//[Offset: 0x78, Size: 1]
	bool bScaleLinearLimits;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x84, Size: 1]
	ConstraintProfileProperties ProfileInstance;//[Offset: 0x8c, Size: 1]

--------------------------------
Class: ConstraintInstanceBase

--------------------------------
Class: ConstraintProfileProperties
	float ProjectionLinearTolerance;//[Offset: 0x0, Size: 1]
	float ProjectionAngularTolerance;//[Offset: 0x4, Size: 1]
	float ProjectionLinearAlpha;//[Offset: 0x8, Size: 1]
	float ProjectionAngularAlpha;//[Offset: 0xc, Size: 1]
	float LinearBreakThreshold;//[Offset: 0x10, Size: 1]
	float LinearPlasticityThreshold;//[Offset: 0x14, Size: 1]
	float AngularBreakThreshold;//[Offset: 0x18, Size: 1]
	float AngularPlasticityThreshold;//[Offset: 0x1c, Size: 1]
	LinearConstraint LinearLimit;//[Offset: 0x20, Size: 1]
	ConeConstraint ConeLimit;//[Offset: 0x3c, Size: 1]
	TwistConstraint TwistLimit;//[Offset: 0x5c, Size: 1]
	LinearDriveConstraint LinearDrive;//[Offset: 0x78, Size: 1]
	AngularDriveConstraint AngularDrive;//[Offset: 0xc4, Size: 1]
	bool bDisableCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x110, Size: 1]
	bool bParentDominates;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x110, Size: 1]
	bool bEnableProjection;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x110, Size: 1]
	bool bEnableSoftProjection;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x110, Size: 1]
	bool bAngularBreakable;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x110, Size: 1]
	bool bAngularPlasticity;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x110, Size: 1]
	bool bLinearBreakable;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x110, Size: 1]
	bool bLinearPlasticity;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x110, Size: 1]

--------------------------------
Class: LinearConstraint.ConstraintBaseParams
	float Limit;//[Offset: 0x14, Size: 1]
	byte XMotion;//[Offset: 0x18, Size: 1]
	byte YMotion;//[Offset: 0x19, Size: 1]
	byte ZMotion;//[Offset: 0x1a, Size: 1]

--------------------------------
Class: ConstraintBaseParams
	float Stiffness;//[Offset: 0x0, Size: 1]
	float Damping;//[Offset: 0x4, Size: 1]
	float Restitution;//[Offset: 0x8, Size: 1]
	float ContactDistance;//[Offset: 0xc, Size: 1]
	bool bSoftConstraint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x10, Size: 1]

--------------------------------
Class: ConeConstraint.ConstraintBaseParams
	float Swing1LimitDegrees;//[Offset: 0x14, Size: 1]
	float Swing2LimitDegrees;//[Offset: 0x18, Size: 1]
	byte Swing1Motion;//[Offset: 0x1c, Size: 1]
	byte Swing2Motion;//[Offset: 0x1d, Size: 1]

--------------------------------
Class: TwistConstraint.ConstraintBaseParams
	float TwistLimitDegrees;//[Offset: 0x14, Size: 1]
	byte TwistMotion;//[Offset: 0x18, Size: 1]

--------------------------------
Class: LinearDriveConstraint
	Vector PositionTarget;//[Offset: 0x0, Size: 1]
	Vector VelocityTarget;//[Offset: 0xc, Size: 1]
	ConstraintDrive XDrive;//[Offset: 0x18, Size: 1]
	ConstraintDrive YDrive;//[Offset: 0x28, Size: 1]
	ConstraintDrive ZDrive;//[Offset: 0x38, Size: 1]
	bool bEnablePositionDrive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x48, Size: 1]

--------------------------------
Class: ConstraintDrive
	float Stiffness;//[Offset: 0x0, Size: 1]
	float Damping;//[Offset: 0x4, Size: 1]
	float MaxForce;//[Offset: 0x8, Size: 1]
	bool bEnablePositionDrive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]
	bool bEnableVelocityDrive;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xc, Size: 1]

--------------------------------
Class: AngularDriveConstraint
	ConstraintDrive TwistDrive;//[Offset: 0x0, Size: 1]
	ConstraintDrive SwingDrive;//[Offset: 0x10, Size: 1]
	ConstraintDrive SlerpDrive;//[Offset: 0x20, Size: 1]
	Rotator OrientationTarget;//[Offset: 0x30, Size: 1]
	Vector AngularVelocityTarget;//[Offset: 0x3c, Size: 1]
	byte AngularDriveMode;//[Offset: 0x48, Size: 1]

--------------------------------
Class: PhysicsConstraintProfileHandle
	ConstraintProfileProperties ProfileProperties;//[Offset: 0x0, Size: 1]
	FName ProfileName;//[Offset: 0x114, Size: 1]

--------------------------------
Class: SolverIterations
	float FixedTimeStep;//[Offset: 0x0, Size: 1]
	int SolverIterations;//[Offset: 0x4, Size: 1]
	int JointIterations;//[Offset: 0x8, Size: 1]
	int CollisionIterations;//[Offset: 0xc, Size: 1]
	int SolverPushOutIterations;//[Offset: 0x10, Size: 1]
	int JointPushOutIterations;//[Offset: 0x14, Size: 1]
	int CollisionPushOutIterations;//[Offset: 0x18, Size: 1]

--------------------------------
Class: ThumbnailInfo.Object

--------------------------------
Class: NodeMappingContainer.Object
	<FName,NodeItem> SourceItems;//[Offset: 0x28, Size: 1]
	<FName,NodeItem> TargetItems;//[Offset: 0x78, Size: 1]
	<FName,FName> SourceToTarget;//[Offset: 0xc8, Size: 1]
	Object* SourceAsset;//[Offset: 0x118, Size: 1]
	Object* TargetAsset;//[Offset: 0x140, Size: 1]

--------------------------------
Class: NodeItem
	FName ParentName;//[Offset: 0x0, Size: 1]
	Transform Transform;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SkeletalMeshSamplingInfo
	SkeletalMeshSamplingRegion[] Regions;//[Offset: 0x0, Size: 1]
	SkeletalMeshSamplingBuiltData BuiltData;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SkeletalMeshSamplingRegion
	FName Name;//[Offset: 0x0, Size: 1]
	int LODIndex;//[Offset: 0x8, Size: 1]
	bool bSupportUniformlyDistributedSampling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]
	SkeletalMeshSamplingRegionMaterialFilter[] MaterialFilters;//[Offset: 0x10, Size: 1]
	SkeletalMeshSamplingRegionBoneFilter[] BoneFilters;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SkeletalMeshSamplingRegionMaterialFilter
	FName MaterialName;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SkeletalMeshSamplingRegionBoneFilter
	FName BoneName;//[Offset: 0x0, Size: 1]
	bool bIncludeOrExclude;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]
	bool bApplyToChildren;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8, Size: 1]

--------------------------------
Class: SkeletalMeshSamplingBuiltData
	SkeletalMeshSamplingLODBuiltData[] WholeMeshBuiltData;//[Offset: 0x0, Size: 1]
	SkeletalMeshSamplingRegionBuiltData[] RegionBuiltData;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SkeletalMeshSamplingLODBuiltData

--------------------------------
Class: SkeletalMeshSamplingRegionBuiltData

--------------------------------
Class: SkeletalMeshLODSettings.DataAsset.Object
	PerPlatformInt MinLOD;//[Offset: 0x30, Size: 1]
	PerPlatformBool DisableBelowMinLodStripping;//[Offset: 0x34, Size: 1]
	bool bOverrideLODStreamingSettings;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x35, Size: 1]
	PerPlatformBool bSupportLODStreaming;//[Offset: 0x36, Size: 1]
	PerPlatformInt MaxNumStreamedLODs;//[Offset: 0x38, Size: 1]
	PerPlatformInt MaxNumOptionalLODs;//[Offset: 0x3c, Size: 1]
	SkeletalMeshLODGroupSettings[] LODGroups;//[Offset: 0x40, Size: 1]

--------------------------------
Class: DataAsset.Object
	class DataAsset* NativeClass;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SkeletalMeshLODGroupSettings
	PerPlatformFloat ScreenSize;//[Offset: 0x0, Size: 1]
	float LODHysteresis;//[Offset: 0x4, Size: 1]
	enum BoneFilterActionOption;//[Offset: 0x8, Size: 1]
	BoneFilter[] BoneList;//[Offset: 0x10, Size: 1]
	FName[] BonesToPrioritize;//[Offset: 0x20, Size: 1]
	float WeightOfPrioritization;//[Offset: 0x30, Size: 1]
	AnimSequence* BakePose;//[Offset: 0x38, Size: 1]
	SkeletalMeshOptimizationSettings ReductionSettings;//[Offset: 0x40, Size: 1]

--------------------------------
Class: BoneFilter
	bool bExcludeSelf;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	FName BoneName;//[Offset: 0x4, Size: 1]

--------------------------------
Class: Blueprint.BlueprintCore.Object
	class Object* ParentClass;//[Offset: 0x50, Size: 1]
	byte BlueprintType;//[Offset: 0x58, Size: 1]
	bool bRecompileOnLoad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x59, Size: 1]
	bool bHasBeenRegenerated;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x59, Size: 1]
	bool bIsRegeneratingOnLoad;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x59, Size: 1]
	int BlueprintSystemVersion;//[Offset: 0x5c, Size: 1]
	SimpleConstructionScript* SimpleConstructionScript;//[Offset: 0x60, Size: 1]
	ActorComponent*[] ComponentTemplates;//[Offset: 0x68, Size: 1]
	TimelineTemplate*[] Timelines;//[Offset: 0x78, Size: 1]
	BPComponentClassOverride[] ComponentClassOverrides;//[Offset: 0x88, Size: 1]
	InheritableComponentHandler* InheritableComponentHandler;//[Offset: 0x98, Size: 1]

--------------------------------
Class: BlueprintCore.Object
	class Object* SkeletonGeneratedClass;//[Offset: 0x28, Size: 1]
	class Object* GeneratedClass;//[Offset: 0x30, Size: 1]
	bool bLegacyNeedToPurgeSkelRefs;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38, Size: 1]
	Guid BlueprintGuid;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: SimpleConstructionScript.Object
	SCS_Node*[] RootNodes;//[Offset: 0x28, Size: 1]
	SCS_Node*[] AllNodes;//[Offset: 0x38, Size: 1]
	SCS_Node* DefaultSceneRootNode;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SCS_Node.Object
	class Object* ComponentClass;//[Offset: 0x28, Size: 1]
	ActorComponent* ComponentTemplate;//[Offset: 0x30, Size: 1]
	BlueprintCookedComponentInstancingData CookedComponentInstancingData;//[Offset: 0x38, Size: 1]
	FName AttachToName;//[Offset: 0x80, Size: 1]
	FName ParentComponentOrVariableName;//[Offset: 0x88, Size: 1]
	FName ParentComponentOwnerClassName;//[Offset: 0x90, Size: 1]
	bool bIsParentComponentNative;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x98, Size: 1]
	SCS_Node*[] ChildNodes;//[Offset: 0xa0, Size: 1]
	BPVariableMetaDataEntry[] MetaDataArray;//[Offset: 0xb0, Size: 1]
	Guid VariableGuid;//[Offset: 0xc0, Size: 1]
	FName InternalVariableName;//[Offset: 0xd0, Size: 1]

--------------------------------
Class: BlueprintCookedComponentInstancingData
	BlueprintComponentChangedPropertyInfo[] ChangedPropertyList;//[Offset: 0x0, Size: 1]
	bool bHasValidCookedData;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x21, Size: 1]

--------------------------------
Class: BlueprintComponentChangedPropertyInfo
	FName PropertyName;//[Offset: 0x0, Size: 1]
	int ArrayIndex;//[Offset: 0x8, Size: 1]
	Struct* PropertyScope;//[Offset: 0x10, Size: 1]

--------------------------------
Class: Struct.Field.Object

--------------------------------
Class: Field.Object

--------------------------------
Class: BPVariableMetaDataEntry
	FName DataKey;//[Offset: 0x0, Size: 1]
	FString DataValue;//[Offset: 0x8, Size: 1]

--------------------------------
Class: TimelineTemplate.Object
	float TimelineLength;//[Offset: 0x28, Size: 1]
	byte LengthMode;//[Offset: 0x2c, Size: 1]
	bool bAutoPlay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2d, Size: 1]
	bool bLoop;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2d, Size: 1]
	bool bReplicated;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2d, Size: 1]
	bool bIgnoreTimeDilation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x2d, Size: 1]
	TTEventTrack[] EventTracks;//[Offset: 0x30, Size: 1]
	TTFloatTrack[] FloatTracks;//[Offset: 0x40, Size: 1]
	TTVectorTrack[] VectorTracks;//[Offset: 0x50, Size: 1]
	TTLinearColorTrack[] LinearColorTracks;//[Offset: 0x60, Size: 1]
	BPVariableMetaDataEntry[] MetaDataArray;//[Offset: 0x70, Size: 1]
	Guid TimelineGuid;//[Offset: 0x80, Size: 1]
	byte TimelineTickGroup;//[Offset: 0x90, Size: 1]
	FName VariableName;//[Offset: 0x94, Size: 1]
	FName DirectionPropertyName;//[Offset: 0x9c, Size: 1]
	FName UpdateFunctionName;//[Offset: 0xa4, Size: 1]
	FName FinishedFunctionName;//[Offset: 0xac, Size: 1]

--------------------------------
Class: TTEventTrack.TTTrackBase
	FName FunctionName;//[Offset: 0x18, Size: 1]
	CurveFloat* CurveKeys;//[Offset: 0x20, Size: 1]

--------------------------------
Class: TTTrackBase
	FName TrackName;//[Offset: 0x8, Size: 1]
	bool bIsExternalCurve;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]

--------------------------------
Class: TTFloatTrack.TTPropertyTrack.TTTrackBase
	CurveFloat* CurveFloat;//[Offset: 0x20, Size: 1]

--------------------------------
Class: TTPropertyTrack.TTTrackBase
	FName PropertyName;//[Offset: 0x18, Size: 1]

--------------------------------
Class: TTVectorTrack.TTPropertyTrack.TTTrackBase
	CurveVector* CurveVector;//[Offset: 0x20, Size: 1]

--------------------------------
Class: CurveVector.CurveBase.Object
	RichCurve FloatCurves;//[Offset: 0x30, Size: 3]
	Vector GetVectorValue(float InTime);// 0x3ef4960

--------------------------------
Class: TTLinearColorTrack.TTPropertyTrack.TTTrackBase
	CurveLinearColor* CurveLinearColor;//[Offset: 0x20, Size: 1]

--------------------------------
Class: CurveLinearColor.CurveBase.Object
	RichCurve FloatCurves;//[Offset: 0x30, Size: 4]
	float AdjustHue;//[Offset: 0x230, Size: 1]
	float AdjustSaturation;//[Offset: 0x234, Size: 1]
	float AdjustBrightness;//[Offset: 0x238, Size: 1]
	float AdjustBrightnessCurve;//[Offset: 0x23c, Size: 1]
	float AdjustVibrance;//[Offset: 0x240, Size: 1]
	float AdjustMinAlpha;//[Offset: 0x244, Size: 1]
	float AdjustMaxAlpha;//[Offset: 0x248, Size: 1]
	LinearColor GetUnadjustedLinearColorValue(float InTime);// 0x3ef48c0
	LinearColor GetLinearColorValue(float InTime);// 0x3ef47f0
	LinearColor GetClampedLinearColorValue(float InTime);// 0x3ef3e40

--------------------------------
Class: BPComponentClassOverride
	FName ComponentName;//[Offset: 0x0, Size: 1]
	class Object* ComponentClass;//[Offset: 0x8, Size: 1]

--------------------------------
Class: InheritableComponentHandler.Object
	ComponentOverrideRecord[] Records;//[Offset: 0x28, Size: 1]
	ActorComponent*[] UnnecessaryComponents;//[Offset: 0x38, Size: 1]

--------------------------------
Class: ComponentOverrideRecord
	class Object* ComponentClass;//[Offset: 0x0, Size: 1]
	ActorComponent* ComponentTemplate;//[Offset: 0x8, Size: 1]
	ComponentKey ComponentKey;//[Offset: 0x10, Size: 1]
	BlueprintCookedComponentInstancingData CookedComponentInstancingData;//[Offset: 0x30, Size: 1]

--------------------------------
Class: ComponentKey
	class Object* OwnerClass;//[Offset: 0x0, Size: 1]
	FName SCSVariableName;//[Offset: 0x8, Size: 1]
	Guid AssociatedGuid;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SkinWeightProfileInfo
	FName Name;//[Offset: 0x0, Size: 1]
	PerPlatformBool DefaultProfile;//[Offset: 0x8, Size: 1]
	PerPlatformInt DefaultProfileFromLODIndex;//[Offset: 0xc, Size: 1]

--------------------------------
Class: ClothingSimulationInteractor.Object
	<None(None),None(None)> ClothingInteractors;//[Offset: 0x28, Size: 1]
	None None;//[Size: 0]

--------------------------------
Class: SingleAnimationPlayData
	AnimationAsset* AnimToPlay;//[Offset: 0x0, Size: 1]
	bool bSavedLooping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]
	bool bSavedPlaying;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8, Size: 1]
	float SavedPosition;//[Offset: 0xc, Size: 1]
	float SavedPlayRate;//[Offset: 0x10, Size: 1]

--------------------------------
Class: ClothingSimulationFactory.Object

--------------------------------
Class: SkelMeshSkinWeightInfo
	int Bones;//[Offset: 0x0, Size: 12]
	byte Weights;//[Offset: 0x30, Size: 12]

--------------------------------
Class: VertexOffsetUsage
	int Usage;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SkelMeshComponentLODInfo
	bool[] HiddenMaterials;//[Offset: 0x0, Size: 1]

--------------------------------
Class: Matrix
	Plane XPlane;//[Offset: 0x0, Size: 1]
	Plane YPlane;//[Offset: 0x10, Size: 1]
	Plane ZPlane;//[Offset: 0x20, Size: 1]
	Plane WPlane;//[Offset: 0x30, Size: 1]

--------------------------------
Class: Plane.Vector
	float W;//[Offset: 0xc, Size: 1]

--------------------------------
Class: CharacterMovementComponent.PawnMovementComponent.NavMovementComponent.MovementComponent.ActorComponent.Object
	Character* CharacterOwner;//[Offset: 0x148, Size: 1]
	float GravityScale;//[Offset: 0x150, Size: 1]
	float MaxStepHeight;//[Offset: 0x154, Size: 1]
	float JumpZVelocity;//[Offset: 0x158, Size: 1]
	float JumpOffJumpZFactor;//[Offset: 0x15c, Size: 1]
	float WalkableFloorAngle;//[Offset: 0x160, Size: 1]
	float WalkableFloorZ;//[Offset: 0x164, Size: 1]
	byte MovementMode;//[Offset: 0x168, Size: 1]
	byte CustomMovementMode;//[Offset: 0x169, Size: 1]
	enum NetworkSmoothingMode;//[Offset: 0x16a, Size: 1]
	float GroundFriction;//[Offset: 0x16c, Size: 1]
	float MaxWalkSpeed;//[Offset: 0x18c, Size: 1]
	float MaxWalkSpeedCrouched;//[Offset: 0x190, Size: 1]
	float MaxSwimSpeed;//[Offset: 0x194, Size: 1]
	float MaxFlySpeed;//[Offset: 0x198, Size: 1]
	float MaxCustomMovementSpeed;//[Offset: 0x19c, Size: 1]
	float MaxAcceleration;//[Offset: 0x1a0, Size: 1]
	float MinAnalogWalkSpeed;//[Offset: 0x1a4, Size: 1]
	float BrakingFrictionFactor;//[Offset: 0x1a8, Size: 1]
	float BrakingFriction;//[Offset: 0x1ac, Size: 1]
	float BrakingSubStepTime;//[Offset: 0x1b0, Size: 1]
	float BrakingDecelerationWalking;//[Offset: 0x1b4, Size: 1]
	float BrakingDecelerationFalling;//[Offset: 0x1b8, Size: 1]
	float BrakingDecelerationSwimming;//[Offset: 0x1bc, Size: 1]
	float BrakingDecelerationFlying;//[Offset: 0x1c0, Size: 1]
	float AirControl;//[Offset: 0x1c4, Size: 1]
	float AirControlBoostMultiplier;//[Offset: 0x1c8, Size: 1]
	float AirControlBoostVelocityThreshold;//[Offset: 0x1cc, Size: 1]
	float FallingLateralFriction;//[Offset: 0x1d0, Size: 1]
	float CrouchedHalfHeight;//[Offset: 0x1d4, Size: 1]
	float Buoyancy;//[Offset: 0x1d8, Size: 1]
	float PerchRadiusThreshold;//[Offset: 0x1dc, Size: 1]
	float PerchAdditionalHeight;//[Offset: 0x1e0, Size: 1]
	Rotator RotationRate;//[Offset: 0x1e4, Size: 1]
	bool bUseSeparateBrakingFriction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1f0, Size: 1]
	bool bApplyGravityWhileJumping;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1f0, Size: 1]
	bool bUseControllerDesiredRotation;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1f0, Size: 1]
	bool bOrientRotationToMovement;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1f0, Size: 1]
	bool bSweepWhileNavWalking;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1f0, Size: 1]
	bool bMovementInProgress;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1f0, Size: 1]
	bool bEnableScopedMovementUpdates;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1f0, Size: 1]
	bool bEnableServerDualMoveScopedMovementUpdates;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1f1, Size: 1]
	bool bForceMaxAccel;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1f1, Size: 1]
	bool bRunPhysicsWithNoController;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1f1, Size: 1]
	bool bForceNextFloorCheck;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1f1, Size: 1]
	bool bShrinkProxyCapsule;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1f1, Size: 1]
	bool bCanWalkOffLedges;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1f1, Size: 1]
	bool bCanWalkOffLedgesWhenCrouching;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1f1, Size: 1]
	bool bNetworkSkipProxyPredictionOnNetUpdate;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1f2, Size: 1]
	bool bNetworkAlwaysReplicateTransformUpdateTimestamp;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1f2, Size: 1]
	bool bDeferUpdateMoveComponent;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1f2, Size: 1]
	bool bEnablePhysicsInteraction;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1f2, Size: 1]
	bool bTouchForceScaledToMass;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1f2, Size: 1]
	bool bPushForceScaledToMass;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1f2, Size: 1]
	bool bPushForceUsingZOffset;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1f2, Size: 1]
	bool bScalePushForceToVelocity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1f3, Size: 1]
	SceneComponent* DeferredUpdatedMoveComponent;//[Offset: 0x1f8, Size: 1]
	float MaxOutOfWaterStepHeight;//[Offset: 0x200, Size: 1]
	float OutofWaterZ;//[Offset: 0x204, Size: 1]
	float Mass;//[Offset: 0x208, Size: 1]
	float StandingDownwardForceScale;//[Offset: 0x20c, Size: 1]
	float InitialPushForceFactor;//[Offset: 0x210, Size: 1]
	float PushForceFactor;//[Offset: 0x214, Size: 1]
	float PushForcePointZOffsetFactor;//[Offset: 0x218, Size: 1]
	float TouchForceFactor;//[Offset: 0x21c, Size: 1]
	float MinTouchForce;//[Offset: 0x220, Size: 1]
	float MaxTouchForce;//[Offset: 0x224, Size: 1]
	float RepulsionForce;//[Offset: 0x228, Size: 1]
	Vector Acceleration;//[Offset: 0x22c, Size: 1]
	Quat LastUpdateRotation;//[Offset: 0x240, Size: 1]
	Vector LastUpdateLocation;//[Offset: 0x250, Size: 1]
	Vector LastUpdateVelocity;//[Offset: 0x25c, Size: 1]
	float ServerLastTransformUpdateTimeStamp;//[Offset: 0x268, Size: 1]
	float ServerLastClientGoodMoveAckTime;//[Offset: 0x26c, Size: 1]
	float ServerLastClientAdjustmentTime;//[Offset: 0x270, Size: 1]
	Vector PendingImpulseToApply;//[Offset: 0x274, Size: 1]
	Vector PendingForceToApply;//[Offset: 0x280, Size: 1]
	float AnalogInputModifier;//[Offset: 0x28c, Size: 1]
	float MaxSimulationTimeStep;//[Offset: 0x29c, Size: 1]
	int MaxSimulationIterations;//[Offset: 0x2a0, Size: 1]
	int MaxJumpApexAttemptsPerSimulation;//[Offset: 0x2a4, Size: 1]
	float MaxDepenetrationWithGeometry;//[Offset: 0x2a8, Size: 1]
	float MaxDepenetrationWithGeometryAsProxy;//[Offset: 0x2ac, Size: 1]
	float MaxDepenetrationWithPawn;//[Offset: 0x2b0, Size: 1]
	float MaxDepenetrationWithPawnAsProxy;//[Offset: 0x2b4, Size: 1]
	float NetworkSimulatedSmoothLocationTime;//[Offset: 0x2b8, Size: 1]
	float NetworkSimulatedSmoothRotationTime;//[Offset: 0x2bc, Size: 1]
	float ListenServerNetworkSimulatedSmoothLocationTime;//[Offset: 0x2c0, Size: 1]
	float ListenServerNetworkSimulatedSmoothRotationTime;//[Offset: 0x2c4, Size: 1]
	float NetProxyShrinkRadius;//[Offset: 0x2c8, Size: 1]
	float NetProxyShrinkHalfHeight;//[Offset: 0x2cc, Size: 1]
	float NetworkMaxSmoothUpdateDistance;//[Offset: 0x2d0, Size: 1]
	float NetworkNoSmoothUpdateDistance;//[Offset: 0x2d4, Size: 1]
	float NetworkMinTimeBetweenClientAckGoodMoves;//[Offset: 0x2d8, Size: 1]
	float NetworkMinTimeBetweenClientAdjustments;//[Offset: 0x2dc, Size: 1]
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection;//[Offset: 0x2e0, Size: 1]
	float NetworkLargeClientCorrectionDistance;//[Offset: 0x2e4, Size: 1]
	float LedgeCheckThreshold;//[Offset: 0x2e8, Size: 1]
	float JumpOutOfWaterPitch;//[Offset: 0x2ec, Size: 1]
	FindFloorResult CurrentFloor;//[Offset: 0x2f0, Size: 1]
	byte DefaultLandMovementMode;//[Offset: 0x384, Size: 1]
	byte DefaultWaterMovementMode;//[Offset: 0x385, Size: 1]
	byte GroundMovementMode;//[Offset: 0x386, Size: 1]
	bool bMaintainHorizontalGroundVelocity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x387, Size: 1]
	bool bImpartBaseVelocityX;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x387, Size: 1]
	bool bImpartBaseVelocityY;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x387, Size: 1]
	bool bImpartBaseVelocityZ;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x387, Size: 1]
	bool bImpartBaseAngularVelocity;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x387, Size: 1]
	bool bJustTeleported;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x387, Size: 1]
	bool bNetworkUpdateReceived;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x387, Size: 1]
	bool bNetworkMovementModeChanged;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x387, Size: 1]
	bool bIgnoreClientMovementErrorChecksAndCorrection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x388, Size: 1]
	bool bServerAcceptClientAuthoritativePosition;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x388, Size: 1]
	bool bNotifyApex;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x388, Size: 1]
	bool bCheatFlying;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x388, Size: 1]
	bool bWantsToCrouch;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x388, Size: 1]
	bool bCrouchMaintainsBaseLocation;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x388, Size: 1]
	bool bIgnoreBaseRotation;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x388, Size: 1]
	bool bFastAttachedMove;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x388, Size: 1]
	bool bAlwaysCheckFloor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x389, Size: 1]
	bool bUseFlatBaseForFloorChecks;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x389, Size: 1]
	bool bPerformingJumpOff;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x389, Size: 1]
	bool bWantsToLeaveNavWalking;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x389, Size: 1]
	bool bUseRVOAvoidance;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x389, Size: 1]
	bool bRequestedMoveUseAcceleration;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x389, Size: 1]
	bool bWasSimulatingRootMotion;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x389, Size: 1]
	bool bAllowPhysicsRotationDuringAnimRootMotion;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x38a, Size: 1]
	bool bHasRequestedVelocity;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x38a, Size: 1]
	bool bRequestedMoveWithMaxSpeed;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x38a, Size: 1]
	bool bWasAvoidanceUpdated;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x38a, Size: 1]
	bool bProjectNavMeshWalking;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x38a, Size: 1]
	bool bProjectNavMeshOnBothWorldChannels;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x38a, Size: 1]
	float AvoidanceConsiderationRadius;//[Offset: 0x39c, Size: 1]
	Vector RequestedVelocity;//[Offset: 0x3a0, Size: 1]
	int AvoidanceUID;//[Offset: 0x3ac, Size: 1]
	NavAvoidanceMask AvoidanceGroup;//[Offset: 0x3b0, Size: 1]
	NavAvoidanceMask GroupsToAvoid;//[Offset: 0x3b4, Size: 1]
	NavAvoidanceMask GroupsToIgnore;//[Offset: 0x3b8, Size: 1]
	float AvoidanceWeight;//[Offset: 0x3bc, Size: 1]
	Vector PendingLaunchVelocity;//[Offset: 0x3c0, Size: 1]
	float NavMeshProjectionInterval;//[Offset: 0x470, Size: 1]
	float NavMeshProjectionTimer;//[Offset: 0x474, Size: 1]
	float NavMeshProjectionInterpSpeed;//[Offset: 0x478, Size: 1]
	float NavMeshProjectionHeightScaleUp;//[Offset: 0x47c, Size: 1]
	float NavMeshProjectionHeightScaleDown;//[Offset: 0x480, Size: 1]
	float NavWalkingFloorDistTolerance;//[Offset: 0x484, Size: 1]
	CharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction;//[Offset: 0x488, Size: 1]
	float MinTimeBetweenTimeStampResets;//[Offset: 0x4d0, Size: 1]
	RootMotionSourceGroup CurrentRootMotion;//[Offset: 0x980, Size: 1]
	RootMotionSourceGroup ServerCorrectionRootMotion;//[Offset: 0x9b8, Size: 1]
	RootMotionMovementParams RootMotionParams;//[Offset: 0xa80, Size: 1]
	Vector AnimRootMotionVelocity;//[Offset: 0xac0, Size: 1]
	void SetWalkableFloorZ(float InWalkableFloorZ);// 0x3ee8690
	void SetWalkableFloorAngle(float InWalkableFloorAngle);// 0x3ee8610
	void SetMovementMode(byte NewMovementMode, byte NewCustomMode);// 0x3ee8540
	void SetGroupsToIgnoreMask(out const NavAvoidanceMask GroupMask);// 0xe80d40
	void SetGroupsToIgnore(int GroupFlags);// 0xe80cb0
	void SetGroupsToAvoidMask(out const NavAvoidanceMask GroupMask);// 0xe80c20
	void SetGroupsToAvoid(int GroupFlags);// 0xe80b90
	void SetAvoidanceGroupMask(out const NavAvoidanceMask GroupMask);// 0xe807c0
	void SetAvoidanceGroup(int GroupFlags);// 0xe80730
	void SetAvoidanceEnabled(bool bEnable);// 0x3ee84b0
	float K2_GetWalkableFloorZ();// 0x3ee8480
	float K2_GetWalkableFloorAngle();// 0x3ee8450
	float K2_GetModifiedMaxAcceleration();// 0x3ee8410
	void K2_FindFloor(Vector CapsuleLocation, out FindFloorResult FloorResult);// 0x3ee82c0
	void K2_ComputeFloorDist(Vector CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, out FindFloorResult FloorResult);// 0x3ee80a0
	bool IsWalking();// 0x3ee8070
	bool IsWalkable(out const HitResult Hit);// 0x3ee7f80
	float GetValidPerchRadius();// 0x3ee7f50
	float GetPerchRadiusThreshold();// 0x3ee7f20
	PrimitiveComponent* GetMovementBase();// 0x3ee7ef0
	float GetMinAnalogSpeed();// 0x3ee7eb0
	float GetMaxJumpHeightWithJumpTime();// 0x3ee7e70
	float GetMaxJumpHeight();// 0x3ee7e30
	float GetMaxBrakingDeceleration();// 0x3ee7df0
	float GetMaxAcceleration();// 0x3ee7db0
	Vector GetLastUpdateVelocity();// 0x3ee7d80
	Rotator GetLastUpdateRotation();// 0x3ee7d30
	Vector GetLastUpdateLocation();// 0x3ee7d00
	Vector GetImpartedMovementBaseVelocity();// 0x3ee7cc0
	Vector GetCurrentAcceleration();// 0x3ee7c80
	Character* GetCharacterOwner();// 0x3ee7c60
	float GetAnalogInputModifier();// 0x3ee7c30
	void DisableMovement();// 0x3ee7c10
	void ClearAccumulatedForces();// 0x3ee7bf0
	void CapsuleTouched(PrimitiveComponent* OverlappedComp, Actor* Other, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x3ee79d0
	void CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration);// 0x3ee7860
	void AddImpulse(Vector Impulse, bool bVelocityChange);// 0x3ee7780
	void AddForce(Vector Force);// 0x3ee76f0

--------------------------------
Class: FindFloorResult
	bool bBlockingHit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bWalkableFloor;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bLineTrace;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	float FloorDist;//[Offset: 0x4, Size: 1]
	float LineDist;//[Offset: 0x8, Size: 1]
	HitResult HitResult;//[Offset: 0xc, Size: 1]

--------------------------------
Class: NavAvoidanceMask
	bool bGroup0;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bGroup1;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bGroup2;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bGroup3;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bGroup4;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]
	bool bGroup5;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x0, Size: 1]
	bool bGroup6;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x0, Size: 1]
	bool bGroup7;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x0, Size: 1]
	bool bGroup8;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1, Size: 1]
	bool bGroup9;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1, Size: 1]
	bool bGroup10;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1, Size: 1]
	bool bGroup11;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1, Size: 1]
	bool bGroup12;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1, Size: 1]
	bool bGroup13;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1, Size: 1]
	bool bGroup14;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1, Size: 1]
	bool bGroup15;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1, Size: 1]
	bool bGroup16;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2, Size: 1]
	bool bGroup17;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2, Size: 1]
	bool bGroup18;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2, Size: 1]
	bool bGroup19;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x2, Size: 1]
	bool bGroup20;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x2, Size: 1]
	bool bGroup21;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x2, Size: 1]
	bool bGroup22;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x2, Size: 1]
	bool bGroup23;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x2, Size: 1]
	bool bGroup24;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x3, Size: 1]
	bool bGroup25;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x3, Size: 1]
	bool bGroup26;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x3, Size: 1]
	bool bGroup27;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x3, Size: 1]
	bool bGroup28;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x3, Size: 1]
	bool bGroup29;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x3, Size: 1]
	bool bGroup30;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x3, Size: 1]
	bool bGroup31;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x3, Size: 1]

--------------------------------
Class: CharacterMovementComponentPostPhysicsTickFunction.TickFunction

--------------------------------
Class: TickFunction
	byte TickGroup;//[Offset: 0x8, Size: 1]
	byte EndTickGroup;//[Offset: 0x9, Size: 1]
	bool bTickEvenWhenPaused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa, Size: 1]
	bool bCanEverTick;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xa, Size: 1]
	bool bStartWithTickEnabled;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xa, Size: 1]
	bool bAllowTickOnDedicatedServer;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xa, Size: 1]
	float TickInterval;//[Offset: 0xc, Size: 1]

--------------------------------
Class: RootMotionSourceGroup
	bool bHasAdditiveSources;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]
	bool bHasOverrideSources;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x28, Size: 1]
	bool bHasOverrideSourcesWithIgnoreZAccumulate;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x28, Size: 1]
	bool bIsAdditiveVelocityApplied;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x28, Size: 1]
	RootMotionSourceSettings LastAccumulatedSettings;//[Offset: 0x29, Size: 1]
	Vector_NetQuantize10 LastPreAdditiveVelocity;//[Offset: 0x2c, Size: 1]

--------------------------------
Class: RootMotionSourceSettings
	byte Flags;//[Offset: 0x0, Size: 1]

--------------------------------
Class: Vector_NetQuantize10.Vector

--------------------------------
Class: RootMotionMovementParams
	bool bHasRootMotion;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	float BlendWeight;//[Offset: 0x4, Size: 1]
	Transform RootMotionTransform;//[Offset: 0x10, Size: 1]

--------------------------------
Class: CapsuleComponent.ShapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	float CapsuleHalfHeight;//[Offset: 0x468, Size: 1]
	float CapsuleRadius;//[Offset: 0x46c, Size: 1]
	void SetCapsuleSize(float InRadius, float InHalfHeight, bool bUpdateOverlaps);// 0x3ee65f0
	void SetCapsuleRadius(float Radius, bool bUpdateOverlaps);// 0x3ee6510
	void SetCapsuleHalfHeight(float HalfHeight, bool bUpdateOverlaps);// 0x3ee6430
	void GetUnscaledCapsuleSize_WithoutHemisphere(out float OutRadius, out float OutHalfHeightWithoutHemisphere);// 0x3ee4830
	void GetUnscaledCapsuleSize(out float OutRadius, out float OutHalfHeight);// 0x3ee4740
	float GetUnscaledCapsuleRadius();// 0x3ee4720
	float GetUnscaledCapsuleHalfHeight_WithoutHemisphere();// 0x3ee46f0
	float GetUnscaledCapsuleHalfHeight();// 0x3ee46d0
	float GetShapeScale();// 0x3ee45b0
	void GetScaledCapsuleSize_WithoutHemisphere(out float OutRadius, out float OutHalfHeightWithoutHemisphere);// 0x3ee4490
	void GetScaledCapsuleSize(out float OutRadius, out float OutHalfHeight);// 0x3ee4380
	float GetScaledCapsuleRadius();// 0x3ee4340
	float GetScaledCapsuleHalfHeight_WithoutHemisphere();// 0x3ee42f0
	float GetScaledCapsuleHalfHeight();// 0x3ee42c0

--------------------------------
Class: ShapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	BodySetup* ShapeBodySetup;//[Offset: 0x450, Size: 1]
	class NavAreaBase* AreaClass;//[Offset: 0x458, Size: 1]
	Color ShapeColor;//[Offset: 0x460, Size: 1]
	bool bDrawOnlyIfSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x464, Size: 1]
	bool bShouldCollideWhenPlacing;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x464, Size: 1]
	bool bDynamicObstacle;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x464, Size: 1]

--------------------------------
Class: NavAreaBase.Object

--------------------------------
Class: BasedMovementInfo
	PrimitiveComponent* MovementBase;//[Offset: 0x0, Size: 1]
	FName BoneName;//[Offset: 0x8, Size: 1]
	Vector_NetQuantize100 Location;//[Offset: 0x10, Size: 1]
	Rotator Rotation;//[Offset: 0x1c, Size: 1]
	bool bServerHasBaseComponent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bRelativeRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	bool bServerHasVelocity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a, Size: 1]

--------------------------------
Class: Vector_NetQuantize100.Vector

--------------------------------
Class: CharacterServerMovePackedBits.CharacterNetworkSerializationPackedBits

--------------------------------
Class: CharacterNetworkSerializationPackedBits

--------------------------------
Class: SimulatedRootMotionReplicatedMove
	float Time;//[Offset: 0x0, Size: 1]
	RepRootMotionMontage RootMotion;//[Offset: 0x8, Size: 1]

--------------------------------
Class: RepRootMotionMontage
	bool bIsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	AnimMontage* AnimMontage;//[Offset: 0x8, Size: 1]
	float Position;//[Offset: 0x10, Size: 1]
	Vector_NetQuantize100 Location;//[Offset: 0x14, Size: 1]
	Rotator Rotation;//[Offset: 0x20, Size: 1]
	PrimitiveComponent* MovementBase;//[Offset: 0x30, Size: 1]
	FName MovementBaseBoneName;//[Offset: 0x38, Size: 1]
	bool bRelativePosition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x40, Size: 1]
	bool bRelativeRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x41, Size: 1]
	RootMotionSourceGroup AuthoritativeRootMotion;//[Offset: 0x48, Size: 1]
	Vector_NetQuantize10 Acceleration;//[Offset: 0x80, Size: 1]
	Vector_NetQuantize10 LinearVelocity;//[Offset: 0x8c, Size: 1]

--------------------------------
Class: CharacterMoveResponsePackedBits.CharacterNetworkSerializationPackedBits

--------------------------------
Class: PlayerController.Controller.Actor.Object
	Player* Player;//[Offset: 0x2a0, Size: 1]
	Pawn* AcknowledgedPawn;//[Offset: 0x2a8, Size: 1]
	InterpTrackInstDirector* ControllingDirTrackInst;//[Offset: 0x2b0, Size: 1]
	HUD* MyHUD;//[Offset: 0x2b8, Size: 1]
	PlayerCameraManager* PlayerCameraManager;//[Offset: 0x2c0, Size: 1]
	class PlayerCameraManager* PlayerCameraManagerClass;//[Offset: 0x2c8, Size: 1]
	bool bAutoManageActiveCameraTarget;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	Rotator TargetViewRotation;//[Offset: 0x2d4, Size: 1]
	float SmoothTargetViewRotationSpeed;//[Offset: 0x2ec, Size: 1]
	Actor*[] HiddenActors;//[Offset: 0x2f8, Size: 1]
	PrimitiveComponent*[] HiddenPrimitiveComponents;//[Offset: 0x308, Size: 1]
	float LastSpectatorStateSynchTime;//[Offset: 0x31c, Size: 1]
	Vector LastSpectatorSyncLocation;//[Offset: 0x320, Size: 1]
	Rotator LastSpectatorSyncRotation;//[Offset: 0x32c, Size: 1]
	int ClientCap;//[Offset: 0x338, Size: 1]
	CheatManager* CheatManager;//[Offset: 0x340, Size: 1]
	class CheatManager* CheatClass;//[Offset: 0x348, Size: 1]
	PlayerInput* PlayerInput;//[Offset: 0x350, Size: 1]
	ActiveForceFeedbackEffect[] ActiveForceFeedbackEffects;//[Offset: 0x358, Size: 1]
	bool bPlayerIsWaiting;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x3d8, Size: 1]
	byte NetPlayerIndex;//[Offset: 0x3dc, Size: 1]
	NetConnection* PendingSwapConnection;//[Offset: 0x418, Size: 1]
	NetConnection* NetConnection;//[Offset: 0x420, Size: 1]
	float InputYawScale;//[Offset: 0x434, Size: 1]
	float InputPitchScale;//[Offset: 0x438, Size: 1]
	float InputRollScale;//[Offset: 0x43c, Size: 1]
	bool bShowMouseCursor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x440, Size: 1]
	bool bEnableClickEvents;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x440, Size: 1]
	bool bEnableTouchEvents;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x440, Size: 1]
	bool bEnableMouseOverEvents;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x440, Size: 1]
	bool bEnableTouchOverEvents;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x440, Size: 1]
	bool bForceFeedbackEnabled;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x440, Size: 1]
	float ForceFeedbackScale;//[Offset: 0x444, Size: 1]
	Key[] ClickEventKeys;//[Offset: 0x448, Size: 1]
	byte DefaultMouseCursor;//[Offset: 0x458, Size: 1]
	byte CurrentMouseCursor;//[Offset: 0x459, Size: 1]
	byte DefaultClickTraceChannel;//[Offset: 0x45a, Size: 1]
	byte CurrentClickTraceChannel;//[Offset: 0x45b, Size: 1]
	float HitResultTraceDistance;//[Offset: 0x45c, Size: 1]
	uint16 SeamlessTravelCount;//[Offset: 0x460, Size: 1]
	uint16 LastCompletedSeamlessTravelCount;//[Offset: 0x462, Size: 1]
	InputComponent* InactiveStateInputComponent;//[Offset: 0x4d8, Size: 1]
	bool bShouldPerformFullTickWhenPaused;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x4e0, Size: 1]
	TouchInterface* CurrentTouchInterface;//[Offset: 0x4f8, Size: 1]
	SpectatorPawn* SpectatorPawn;//[Offset: 0x550, Size: 1]
	bool bIsLocalPlayerController;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x55c, Size: 1]
	Vector SpawnLocation;//[Offset: 0x560, Size: 1]
	bool WasInputKeyJustReleased(Key Key);// 0x3fd3870
	bool WasInputKeyJustPressed(Key Key);// 0x3fd3780
	void ToggleSpeaking(bool bInSpeaking);// 0x3fd36f0
	void TestServerLevelVisibilityChange(const FName PackageName, const FName Filename);// 0x3fd3620
	void SwitchLevel(FString URL);// 0x3fd3570
	void StopHapticEffect(enum Hand);// 0x3fd34d0
	void StartFire(byte FireModeNum);// 0x3fd2ea0
	void SetVirtualJoystickVisibility(bool bVisible);// 0x3fd28b0
	void SetViewTargetWithBlend(Actor* NewViewTarget, float BlendTime, byte BlendFunc, float BlendExp, bool bLockOutgoing);// 0x3fd2710
	void SetName(FString S);// 0x3fd2660
	void SetMouseLocation(const int X, const int Y);// 0x3fd2590
	void SetMouseCursorWidget(byte cursor, UserWidget* CursorWidget);// 0x3fd24c0
	void SetHapticsByValue(const float frequency, const float Amplitude, enum Hand);// 0x3fd2280
	void SetDisableHaptics(bool bNewDisabled);// 0x3fd21d0
	void SetControllerLightColor(Color Color);// 0x3fd2150
	void SetCinematicMode(bool bInCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);// 0x3fd1f70
	void SetAudioListenerOverride(SceneComponent* AttachToComponent, Vector Location, Rotator Rotation);// 0x3fd1e40
	void SetAudioListenerAttenuationOverride(SceneComponent* AttachToComponent, Vector AttenuationLocationOVerride);// 0x3fd1d60
	void ServerViewSelf(ViewTargetTransitionParams TransitionParams);// 0x3fd1c70
	void ServerViewPrevPlayer();// 0x3fd1c20
	void ServerViewNextPlayer();// 0x3fd1bd0
	void ServerVerifyViewTarget();// 0x3fd1b80
	void ServerUpdateMultipleLevelsVisibility(const UpdateLevelVisibilityLevelInfo[] LevelVisibilities);// 0x3fd1ac0
	void ServerUpdateLevelVisibility(const UpdateLevelVisibilityLevelInfo LevelVisibility);// 0x3fd1a00
	void ServerUpdateCamera(Vector_NetQuantize CamLoc, int CamPitchAndYaw);// 0x3fd18d0
	void ServerUnmutePlayer(UniqueNetIdRepl PlayerId);// 0x3fd1760
	void ServerToggleAILogging();// 0x3fd1710
	void ServerShortTimeout();// 0x3fd16c0
	void ServerSetSpectatorWaiting(bool bWaiting);// 0x3fd1600
	void ServerSetSpectatorLocation(Vector NewLoc, Rotator NewRot);// 0x3fd14c0
	void ServerRestartPlayer();// 0x3fd1470
	void ServerPause();// 0x3fd1420
	void ServerNotifyLoadedWorld(FName WorldPackageName);// 0x3fd1360
	void ServerMutePlayer(UniqueNetIdRepl PlayerId);// 0x3fd11f0
	void ServerExecRPC(FString Msg);// 0x3fd1120
	void ServerExec(FString Msg);// 0x3fd1070
	void ServerCheckClientPossessionReliable();// 0x3fd1020
	void ServerCheckClientPossession();// 0x3fd0fd0
	void ServerChangeName(FString S);// 0x3fd0f00
	void ServerCamera(FName NewMode);// 0x3fd0e40
	void ServerAcknowledgePossession(Pawn* P);// 0x3fd0d80
	void SendToConsole(FString Command);// 0x3fd0cd0
	void RestartLevel();// 0xe06800
	void ResetControllerLightColor();// 0x3fd0cb0
	bool ProjectWorldLocationToScreen(Vector WorldLocation, out Vector2D ScreenLocation, bool bPlayerViewportRelative);// 0x3fd0ad0
	void PlayHapticEffect(HapticFeedbackEffect_Base* HapticEffect, enum Hand, float Scale, bool bLoop);// 0x3fd0970
	void PlayDynamicForceFeedback(float Intensity, float Duration, bool bAffectsLeftLarge, bool bAffectsLeftSmall, bool bAffectsRightLarge, bool bAffectsRightSmall, byte Action, LatentActionInfo LatentInfo);// 0x3fd06c0
	void Pause();// 0xe45220
	void OnServerStartedVisualLogger(bool bIsLogging);// 0x3fd0190
	void LocalTravel(FString URL);// 0x3fd00e0
	void K2_ClientPlayForceFeedback(ForceFeedbackEffect* ForceFeedbackEffect, FName Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused);// 0x3fcff20
	bool IsInputKeyDown(Key Key);// 0x3fcfe30
	void GetViewportSize(out int SizeX, out int SizeY);// 0x3fcfd50
	SpectatorPawn* GetSpectatorPawn();// 0x3fcfd30
	bool GetMousePosition(out float LocationX, out float LocationY);// 0x3fcfc10
	Vector GetInputVectorKeyState(Key Key);// 0x3fcfb00
	void GetInputTouchState(byte FingerIndex, out float LocationX, out float LocationY, out bool bIsCurrentlyPressed);// 0x3fcf970
	void GetInputMouseDelta(out float DeltaX, out float DeltaY);// 0x3fcf890
	void GetInputMotionState(out Vector Tilt, out Vector RotationRate, out Vector Gravity, out Vector Acceleration);// 0x3fcf700
	float GetInputKeyTimeDown(Key Key);// 0x3fcf600
	void GetInputAnalogStickState(byte WhichStick, out float StickX, out float StickY);// 0x3fcf4d0
	float GetInputAnalogKeyState(Key Key);// 0x3fcf3d0
	HUD* GetHUD();// 0x3fce9c0
	bool GetHitResultUnderFingerForObjects(byte FingerIndex, out const byte[] ObjectTypes, bool bTraceComplex, out HitResult HitResult);// 0x3fcf200
	bool GetHitResultUnderFingerByChannel(byte FingerIndex, byte TraceChannel, bool bTraceComplex, out HitResult HitResult);// 0x3fcf050
	bool GetHitResultUnderFinger(byte FingerIndex, byte TraceChannel, bool bTraceComplex, out HitResult HitResult);// 0x3fceea0
	bool GetHitResultUnderCursorForObjects(out const byte[] ObjectTypes, bool bTraceComplex, out HitResult HitResult);// 0x3fced10
	bool GetHitResultUnderCursorByChannel(byte TraceChannel, bool bTraceComplex, out HitResult HitResult);// 0x3fceb80
	bool GetHitResultUnderCursor(byte TraceChannel, bool bTraceComplex, out HitResult HitResult);// 0x3fce9f0
	Vector GetFocalLocation();// 0x3fce980
	void FOV(float NewFOV);// 0x3fce790
	void EnableCheats();// 0x3fce770
	bool DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, out Vector WorldLocation, out Vector WorldDirection);// 0x3fce5e0
	bool DeprojectMousePositionToWorld(out Vector WorldLocation, out Vector WorldDirection);// 0x3fce4e0
	void ConsoleKey(Key Key);// 0x3fce3f0
	void ClientWasKicked(const FText KickReason);// 0x3fce330
	void ClientVoiceHandshakeComplete();// 0x3fce310
	void ClientUpdateMultipleLevelsStreamingStatus(const UpdateLevelStreamingLevelStatus[] LevelStatuses);// 0x3fce270
	void ClientUpdateLevelStreamingStatus(FName PackageName, bool bNewShouldBeLoaded, bool bNewShouldBeVisible, bool bNewShouldBlockOnLoad, int LODIndex);// 0x3fce0b0
	void ClientUnmutePlayer(UniqueNetIdRepl PlayerId);// 0x3fcdf80
	void ClientTravelInternal(FString URL, byte TravelType, bool bSeamless, Guid MapPackageGuid);// 0x3fcddf0
	void ClientTravel(FString URL, byte TravelType, bool bSeamless, Guid MapPackageGuid);// 0x3fcdc60
	void ClientTeamMessage(PlayerState* SenderPlayerState, FString S, FName Type, float MsgLifeTime);// 0x3fcdae0
	void ClientStopForceFeedback(ForceFeedbackEffect* ForceFeedbackEffect, FName Tag);// 0x3fcda10
	void ClientStopCameraShakesFromSource(CameraShakeSourceComponent* SourceComponent, bool bImmediately);// 0x3fcd940
	void ClientStopCameraShake(class CameraShakeBase Shake, bool bImmediately);// 0x3fcd870
	void ClientStopCameraAnim(CameraAnim* AnimToStop);// 0x340ad40
	void ClientStartOnlineSession();// 0x3fcd850
	void ClientStartCameraShakeFromSource(class CameraShakeBase Shake, CameraShakeSourceComponent* SourceComponent);// 0x3fcd780
	void ClientStartCameraShake(class CameraShakeBase Shake, float Scale, enum PlaySpace, Rotator UserPlaySpaceRot);// 0x3fcd610
	void ClientSpawnCameraLensEffect(class EmitterCameraLensEffectBase LensEffectEmitterClass);// 0x3fcd580
	void ClientSetViewTarget(Actor* A, ViewTargetTransitionParams TransitionParams);// 0x3fcd480
	void ClientSetSpectatorWaiting(bool bWaiting);// 0x3fcd3f0
	void ClientSetHUD(class HUD NewHUDClass);// 0x3fcd360
	void ClientSetForceMipLevelsToBeResident(MaterialInterface* Material, float ForceDuration, int CinematicTextureGroups);// 0x3fcd250
	void ClientSetCinematicMode(bool bInCinematicMode, bool bAffectsMovement, bool bAffectsTurning, bool bAffectsHUD);// 0x3fcd0d0
	void ClientSetCameraMode(FName NewCamMode);// 0x3fcd040
	void ClientSetCameraFade(bool bEnableFading, Color FadeColor, Vector2D FadeAlpha, float FadeTime, bool bFadeAudio, bool bHoldWhenFinished);// 0x3fcce30
	void ClientSetBlockOnAsyncLoading();// 0x3fcce10
	void ClientReturnToMainMenuWithTextReason(const FText ReturnReason);// 0x3fccd50
	void ClientReturnToMainMenu(FString ReturnReason);// 0x3fccca0
	void ClientRetryClientRestart(Pawn* NewPawn);// 0x3fccc10
	void ClientRestart(Pawn* NewPawn);// 0x3fccb80
	void ClientReset();// 0x3fccb60
	void ClientRepObjRef(Object* Object);// 0xd925c0
	void ClientReceiveLocalizedMessage(class LocalMessage Message, int SWITCH, PlayerState* RelatedPlayerState, PlayerState* RelatedPlayerState, Object* OptionalObject);// 0x3fcc9c0
	void ClientPrestreamTextures(Actor* ForcedActor, float ForceDuration, bool bEnableStreaming, int CinematicTextureGroups);// 0x3fcc860
	void ClientPrepareMapChange(FName LevelName, bool bFirst, bool bLast);// 0x3fcc740
	void ClientPlaySoundAtLocation(SoundBase* Sound, Vector Location, float VolumeMultiplier, float PitchMultiplier);// 0x3fcc5d0
	void ClientPlaySound(SoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);// 0x3fcc4c0
	void ClientPlayForceFeedback_Internal(ForceFeedbackEffect* ForceFeedbackEffect, ForceFeedbackParameters Params);// 0x3fcc3d0
	void ClientPlayCameraAnim(CameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float blendOutTime, bool bLoop, bool bRandomStartTime, enum Space, Rotator CustomPlaySpace);// 0x3fcc100
	void ClientMutePlayer(UniqueNetIdRepl PlayerId);// 0x3fcbfd0
	void ClientMessage(FString S, FName Type, float MsgLifeTime);// 0x3fcbe90
	void ClientIgnoreMoveInput(bool bIgnore);// 0x3fcbe00
	void ClientIgnoreLookInput(bool bIgnore);// 0x3fcbd70
	void ClientGotoState(FName NewState);// 0x3fcbce0
	void ClientGameEnded(Actor* EndGameFocus, bool bIsWinner);// 0x3fcbc10
	void ClientForceGarbageCollection();// 0x3fcbbf0
	void ClientFlushLevelStreaming();// 0x3fcbbd0
	void ClientEndOnlineSession();// 0x3fcbbb0
	void ClientEnableNetworkVoice(bool bEnable);// 0x3fcbb20
	void ClientCommitMapChange();// 0x3fcbb00
	void ClientClearCameraLensEffects();// 0x3fcbae0
	void ClientCapBandwidth(int Cap);// 0x3fcba50
	void ClientCancelPendingMapChange();// 0x3fcba30
	void ClientAddTextureStreamingLoc(Vector InLoc, float Duration, bool bOverrideLocation);// 0x3fcb900
	void ClearAudioListenerOverride();// 0x3fcb8e0
	void ClearAudioListenerAttenuationOverride();// 0x3fcb8c0
	bool CanRestartPlayer();// 0x3fcb890
	void Camera(FName NewMode);// 0x3fcb800
	void AddYawInput(float Val);// 0x3fcb770
	void AddRollInput(float Val);// 0x3fcb6e0
	void AddPitchInput(float Val);// 0x3fcb650
	void ActivateTouchInterface(TouchInterface* NewTouchInterface);// 0x3fcb480

--------------------------------
Class: Player.Object
	PlayerController* PlayerController;//[Offset: 0x30, Size: 1]
	int CurrentNetSpeed;//[Offset: 0x38, Size: 1]
	int ConfiguredInternetSpeed;//[Offset: 0x3c, Size: 1]
	int ConfiguredLanSpeed;//[Offset: 0x40, Size: 1]

--------------------------------
Class: InterpTrackInstDirector.InterpTrackInst.Object
	None None;//[Size: 0]

--------------------------------
Class: InterpTrackInst.Object

--------------------------------
Class: HUD.Actor.Object
	PlayerController* PlayerOwner;//[Offset: 0x228, Size: 1]
	bool bLostFocusPaused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x230, Size: 1]
	bool bShowHUD;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x230, Size: 1]
	bool bShowDebugInfo;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x230, Size: 1]
	int CurrentTargetIndex;//[Offset: 0x234, Size: 1]
	bool bShowHitBoxDebugInfo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x238, Size: 1]
	bool bShowOverlays;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x238, Size: 1]
	bool bEnableDebugTextShadow;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x238, Size: 1]
	Actor*[] PostRenderedActors;//[Offset: 0x240, Size: 1]
	FName[] DebugDisplay;//[Offset: 0x258, Size: 1]
	FName[] ToggledDebugCategories;//[Offset: 0x268, Size: 1]
	Canvas* Canvas;//[Offset: 0x278, Size: 1]
	Canvas* DebugCanvas;//[Offset: 0x280, Size: 1]
	DebugTextInfo[] DebugTextList;//[Offset: 0x288, Size: 1]
	class Actor* ShowDebugTargetDesiredClass;//[Offset: 0x298, Size: 1]
	Actor* ShowDebugTargetActor;//[Offset: 0x2a0, Size: 1]
	void ShowHUD();// 0xd78d00
	void ShowDebugToggleSubCategory(FName Category);// 0x3f20d40
	void ShowDebugForReticleTargetToggle(class Actor DesiredClass);// 0x3f20cb0
	void ShowDebug(FName DebugType);// 0x3f20c20
	void RemoveDebugText(Actor* SrcActor, bool bLeaveDurationText);// 0x3f20a00
	void RemoveAllDebugStrings();// 0x3f209e0
	void ReceiveHitBoxRelease(const FName BoxName);// 0x1d69c50
	void ReceiveHitBoxEndCursorOver(const FName BoxName);// 0x1d69c50
	void ReceiveHitBoxClick(const FName BoxName);// 0x1d69c50
	void ReceiveHitBoxBeginCursorOver(const FName BoxName);// 0x1d69c50
	void ReceiveDrawHUD(int SizeX, int SizeY);// 0x1d69c50
	Vector Project(Vector Location);// 0x3f20530
	void PreviousDebugTarget();// 0xd97c70
	void NextDebugTarget();// 0xd97b40
	void GetTextSize(FString Text, out float OutWidth, out float OutHeight, Font* Font, float Scale);// 0x3f1fa40
	PlayerController* GetOwningPlayerController();// 0x14b0310
	Pawn* GetOwningPawn();// 0x3f1fa10
	void GetActorsInSelectionRectangle(class Actor ClassFilter, out const Vector2D FirstPoint, out const Vector2D SecondPoint, out Actor*[] OutActors, bool bIncludeNonCollidingComponents, bool bActorMustBeFullyEnclosed);// 0x3f1f7f0
	void DrawTextureSimple(Texture* Texture, float ScreenX, float ScreenY, float Scale, bool bScalePosition);// 0x3f1f640
	void DrawTexture(Texture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, LinearColor TintColor, byte BlendMode, float Scale, bool bScalePosition, float Rotation, Vector2D RotPivot);// 0x3f1f1e0
	void DrawText(FString Text, LinearColor TextColor, float ScreenX, float ScreenY, Font* Font, float Scale, bool bScalePosition);// 0x3f1ef90
	void DrawRect(LinearColor RectColor, float ScreenX, float ScreenY, float ScreenW, float ScreenH);// 0x3f1edd0
	void DrawMaterialTriangle(MaterialInterface* Material, Vector2D V0_Pos, Vector2D V1_Pos, Vector2D V2_Pos, Vector2D V0_UV, Vector2D V1_UV, Vector2D V2_UV, LinearColor V0_Color, LinearColor V1_Color, LinearColor V2_Color);// 0x3f1eae0
	void DrawMaterialSimple(MaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float Scale, bool bScalePosition);// 0x3f1e8c0
	void DrawMaterial(MaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float Scale, bool bScalePosition, float Rotation, Vector2D RotPivot);// 0x3f1e4f0
	void DrawLine(float StartScreenX, float StartScreenY, float EndScreenX, float EndScreenY, LinearColor LineColor, float LineThickness);// 0x3f1e2f0
	void Deproject(float ScreenX, float ScreenY, out Vector WorldPosition, out Vector WorldDirection);// 0x3f1e170
	void AddHitBox(Vector2D Position, Vector2D Size, FName InName, bool bConsumesInput, int Priority);// 0x3f1de40
	void AddDebugText(FString DebugText, Actor* SrcActor, float Duration, Vector Offset, Vector DesiredOffset, Color TextColor, bool bSkipOverwriteCheck, bool bAbsoluteLocation, bool bKeepAttachedToActor, Font* InFont, float FontScale, bool bDrawShadow);// 0x3f1da60

--------------------------------
Class: Canvas.Object
	float OrgX;//[Offset: 0x28, Size: 1]
	float OrgY;//[Offset: 0x2c, Size: 1]
	float ClipX;//[Offset: 0x30, Size: 1]
	None None;//[Size: 0]
	void K2_TextSize(None(None) None);// 0x3edf210
	void K2_StrLen(None(None) None);// 0x3edf110
	void K2_Project(None(None) None);// 0x3edf060
	void K2_DrawTriangle(None(None) None);// 0x3edef30
	void K2_DrawTexture(None(None) None);// 0x3edec80
	void K2_DrawText(None(None) None);// 0x3ede8a0
	void K2_DrawPolygon(None(None) None);// 0x3ede6f0
	void K2_DrawMaterialTriangle(None(None) None);// 0x3ede5c0
	void K2_DrawMaterial(None(None) None);// 0x3ede380
	void K2_DrawLine(None(None) None);// 0x3ede220
	void K2_DrawBox(None(None) None);// 0x3ede0c0
	void K2_DrawBorder(None(None) None);// 0x3eddc30
	void K2_Deproject(None(None) None);// 0x3eddb10

--------------------------------
Class: DebugTextInfo
	Actor* SrcActor;//[Offset: 0x0, Size: 1]
	Vector SrcActorOffset;//[Offset: 0x8, Size: 1]
	Vector SrcActorDesiredOffset;//[Offset: 0x14, Size: 1]
	FString DebugText;//[Offset: 0x20, Size: 1]
	float TimeRemaining;//[Offset: 0x30, Size: 1]
	float Duration;//[Offset: 0x34, Size: 1]
	Color TextColor;//[Offset: 0x38, Size: 1]
	bool bAbsoluteLocation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x3c, Size: 1]
	bool bKeepAttachedToActor;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x3c, Size: 1]
	bool bDrawShadow;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x3c, Size: 1]
	Vector OrigActorLocation;//[Offset: 0x40, Size: 1]
	Font* Font;//[Offset: 0x50, Size: 1]
	float FontScale;//[Offset: 0x58, Size: 1]

--------------------------------
Class: PlayerCameraManager.Actor.Object
	PlayerController* PCOwner;//[Offset: 0x228, Size: 1]
	SceneComponent* TransformComponent;//[Offset: 0x230, Size: 1]
	float DefaultFOV;//[Offset: 0x240, Size: 1]
	float DefaultOrthoWidth;//[Offset: 0x248, Size: 1]
	float DefaultAspectRatio;//[Offset: 0x250, Size: 1]
	CameraCacheEntry CameraCache;//[Offset: 0x2a0, Size: 1]
	CameraCacheEntry LastFrameCameraCache;//[Offset: 0x8a0, Size: 1]
	TViewTarget ViewTarget;//[Offset: 0xea0, Size: 1]
	TViewTarget PendingViewTarget;//[Offset: 0x14b0, Size: 1]
	CameraCacheEntry CameraCachePrivate;//[Offset: 0x1af0, Size: 1]
	CameraCacheEntry LastFrameCameraCachePrivate;//[Offset: 0x20f0, Size: 1]
	CameraModifier*[] ModifierList;//[Offset: 0x26f0, Size: 1]
	class CameraModifier[] DefaultModifiers;//[Offset: 0x2700, Size: 1]
	float FreeCamDistance;//[Offset: 0x2710, Size: 1]
	Vector FreeCamOffset;//[Offset: 0x2714, Size: 1]
	Vector ViewTargetOffset;//[Offset: 0x2720, Size: 1]
	MulticastInlineDelegateProperty OnAudioFadeChangeEvent;//[Size: 1]
	EmitterCameraLensEffectBase*[] CameraLensEffects;//[Offset: 0x2750, Size: 1]
	CameraModifier_CameraShake* CachedCameraShakeMod;//[Offset: 0x2760, Size: 1]
	CameraAnimInst* AnimInstPool;//[Offset: 0x2768, Size: 8]
	PostProcessSettings[] PostProcessBlendCache;//[Offset: 0x27a8, Size: 1]
	CameraAnimInst*[] ActiveAnims;//[Offset: 0x27c8, Size: 1]
	CameraAnimInst*[] FreeAnims;//[Offset: 0x27d8, Size: 1]
	CameraActor* AnimCameraActor;//[Offset: 0x27e8, Size: 1]
	bool bIsOrthographic;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x27f0, Size: 1]
	bool bDefaultConstrainAspectRatio;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x27f0, Size: 1]
	bool bClientSimulatingViewTarget;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x27f0, Size: 1]
	bool bUseClientSideCameraUpdates;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x27f0, Size: 1]
	bool bGameCameraCutThisFrame;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x27f1, Size: 1]
	float ViewPitchMin;//[Offset: 0x27f4, Size: 1]
	float ViewPitchMax;//[Offset: 0x27f8, Size: 1]
	float ViewYawMin;//[Offset: 0x27fc, Size: 1]
	float ViewYawMax;//[Offset: 0x2800, Size: 1]
	float ViewRollMin;//[Offset: 0x2804, Size: 1]
	float ViewRollMax;//[Offset: 0x2808, Size: 1]
	float ServerUpdateCameraTimeout;//[Offset: 0x2810, Size: 1]
	void SwapPendingViewTargetWhenUsingClientSideCameraUpdates();// 0x3fd3550
	void StopCameraShake(CameraShakeBase* ShakeInstance, bool bImmediately);// 0x3fd3400
	void StopCameraFade();// 0xd83580
	void StopCameraAnimInst(CameraAnimInst* AnimInst, bool bImmediate);// 0x3fd3330
	void StopAllInstancesOfCameraShakeFromSource(class CameraShakeBase Shake, CameraShakeSourceComponent* SourceComponent, bool bImmediately);// 0x3fd3220
	void StopAllInstancesOfCameraShake(class CameraShakeBase Shake, bool bImmediately);// 0x3fd3150
	void StopAllInstancesOfCameraAnim(CameraAnim* Anim, bool bImmediate);// 0x3fd3080
	void StopAllCameraShakesFromSource(CameraShakeSourceComponent* SourceComponent, bool bImmediately);// 0x3fd2fb0
	void StopAllCameraShakes(bool bImmediately);// 0x3fd2f20
	void StopAllCameraAnims(bool bImmediate);// 0xd830c0
	CameraShakeBase* StartCameraShakeFromSource(class CameraShakeBase ShakeClass, CameraShakeSourceComponent* SourceComponent, float Scale, enum PlaySpace, Rotator UserPlaySpaceRot);// 0x3fd2cb0
	CameraShakeBase* StartCameraShake(class CameraShakeBase ShakeClass, float Scale, enum PlaySpace, Rotator UserPlaySpaceRot);// 0x3fd2b30
	void StartCameraFade(float FromAlpha, float ToAlpha, float Duration, LinearColor Color, bool bShouldFadeAudio, bool bHoldWhenFinished);// 0x3fd2940
	void SetManualCameraFade(float InFadeAmount, LinearColor Color, bool bInFadeAudio);// 0x3fd2390
	void SetGameCameraCutThisFrame();// 0x3fd2260
	bool RemoveCameraModifier(CameraModifier* ModifierToRemove);// 0x3fd0c10
	void RemoveCameraLensEffect(EmitterCameraLensEffectBase* Emitter);// 0xde5260
	CameraAnimInst* PlayCameraAnim(CameraAnim* Anim, float Rate, float Scale, float BlendInTime, float blendOutTime, bool bLoop, bool bRandomStartTime, float Duration, enum PlaySpace, Rotator UserPlaySpaceRot);// 0x3fd03b0
	void PhotographyCameraModify(const Vector NewCameraLocation, const Vector PreviousCameraLocation, const Vector OriginalCameraLocation, out Vector ResultCameraLocation);// 0x3fd0220
	void OnPhotographySessionStart();// 0xd78600
	void OnPhotographySessionEnd();// 0xd7df20
	void OnPhotographyMultiPartCaptureStart();// 0xd7ddb0
	void OnPhotographyMultiPartCaptureEnd();// 0xd78d00
	PlayerController* GetOwningPlayerController();// 0x3fcfd00
	float GetFOVAngle();// 0x3fce940
	Rotator GetCameraRotation();// 0x3fce900
	Vector GetCameraLocation();// 0x3fce8c0
	CameraModifier* FindCameraModifierByClass(class CameraModifier ModifierClass);// 0x3fce820
	void ClearCameraLensEffects();// 0xdc9d10
	bool BlueprintUpdateCamera(Actor* CameraTarget, out Vector NewCameraLocation, out Rotator NewCameraRotation, out float NewCameraFOV);// 0x1d69c50
	CameraModifier* AddNewCameraModifier(class CameraModifier ModifierClass);// 0x3fcb5b0
	EmitterCameraLensEffectBase* AddCameraLensEffect(class EmitterCameraLensEffectBase LensEffectEmitterClass);// 0x3fcb510

--------------------------------
Class: CameraShakeBase.Object
	bool bSingleInstance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	float ShakeScale;//[Offset: 0x2c, Size: 1]
	CameraShakePattern* RootShakePattern;//[Offset: 0x30, Size: 1]
	PlayerCameraManager* CameraManager;//[Offset: 0x38, Size: 1]
	void SetRootShakePattern(CameraShakePattern* InPattern);// 0x3edf8b0
	CameraShakePattern* GetRootShakePattern();// 0x2db1a10

--------------------------------
Class: CameraShakePattern.Object

--------------------------------
Class: CameraAnimInst.Object
	CameraAnim* CamAnim;//[Offset: 0x28, Size: 1]
	InterpGroupInst* InterpGroupInst;//[Offset: 0x30, Size: 1]
	float PlayRate;//[Offset: 0x50, Size: 1]
	InterpTrackMove* MoveTrack;//[Offset: 0x68, Size: 1]
	InterpTrackInstMove* MoveInst;//[Offset: 0x70, Size: 1]
	enum PlaySpace;//[Offset: 0x78, Size: 1]
	void Stop(bool bImmediate);// 0x3edfbf0
	void SetScale(float NewDuration);// 0x3edf940
	void SetDuration(float NewDuration);// 0x3edf5b0

--------------------------------
Class: CameraAnim.Object
	InterpGroup* CameraInterpGroup;//[Offset: 0x28, Size: 1]
	float AnimLength;//[Offset: 0x30, Size: 1]
	Box BoundingBox;//[Offset: 0x34, Size: 1]
	bool bRelativeToInitialTransform;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x50, Size: 1]
	bool bRelativeToInitialFOV;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x50, Size: 1]
	float BaseFOV;//[Offset: 0x54, Size: 1]
	PostProcessSettings BasePostProcessSettings;//[Offset: 0x60, Size: 1]
	float BasePostProcessBlendWeight;//[Offset: 0x5c0, Size: 1]

--------------------------------
Class: InterpGroup.Object
	InterpTrack*[] InterpTracks;//[Offset: 0x30, Size: 1]
	FName GroupName;//[Offset: 0x40, Size: 1]
	Color GroupColor;//[Offset: 0x48, Size: 1]
	bool bCollapsed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4c, Size: 1]
	bool bVisible;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x4c, Size: 1]
	bool bIsFolder;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x4c, Size: 1]
	bool bIsParented;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x4c, Size: 1]
	bool bIsSelected;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x4c, Size: 1]

--------------------------------
Class: InterpTrack.Object
	InterpTrack*[] SubTracks;//[Offset: 0x38, Size: 1]
	class InterpTrackInst* TrackInstClass;//[Offset: 0x48, Size: 1]
	byte ActiveCondition;//[Offset: 0x50, Size: 1]
	FString TrackTitle;//[Offset: 0x58, Size: 1]
	None None;//[Size: 0]

--------------------------------
Class: PostProcessSettings
	bool bOverride_TemperatureType;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bOverride_WhiteTemp;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bOverride_WhiteTint;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bOverride_ColorSaturation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bOverride_ColorContrast;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]
	bool bOverride_ColorGamma;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x0, Size: 1]
	bool bOverride_ColorGain;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x0, Size: 1]
	bool bOverride_ColorOffset;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x0, Size: 1]
	bool bOverride_ColorSaturationShadows;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1, Size: 1]
	bool bOverride_ColorContrastShadows;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1, Size: 1]
	bool bOverride_ColorGammaShadows;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1, Size: 1]
	bool bOverride_ColorGainShadows;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1, Size: 1]
	bool bOverride_ColorOffsetShadows;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1, Size: 1]
	bool bOverride_ColorSaturationMidtones;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1, Size: 1]
	bool bOverride_ColorContrastMidtones;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1, Size: 1]
	bool bOverride_ColorGammaMidtones;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1, Size: 1]
	bool bOverride_ColorGainMidtones;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2, Size: 1]
	bool bOverride_ColorOffsetMidtones;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2, Size: 1]
	bool bOverride_ColorSaturationHighlights;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2, Size: 1]
	bool bOverride_ColorContrastHighlights;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x2, Size: 1]
	bool bOverride_ColorGammaHighlights;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x2, Size: 1]
	bool bOverride_ColorGainHighlights;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x2, Size: 1]
	bool bOverride_ColorOffsetHighlights;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x2, Size: 1]
	bool bOverride_ColorCorrectionShadowsMax;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x2, Size: 1]
	bool bOverride_ColorCorrectionHighlightsMin;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x3, Size: 1]
	bool bOverride_BlueCorrection;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x3, Size: 1]
	bool bOverride_ExpandGamut;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x3, Size: 1]
	bool bOverride_ToneCurveAmount;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x3, Size: 1]
	bool bOverride_FilmWhitePoint;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x3, Size: 1]
	bool bOverride_FilmSaturation;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x3, Size: 1]
	bool bOverride_FilmChannelMixerRed;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x3, Size: 1]
	bool bOverride_FilmChannelMixerGreen;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x3, Size: 1]
	bool bOverride_FilmChannelMixerBlue;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4, Size: 1]
	bool bOverride_FilmContrast;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x4, Size: 1]
	bool bOverride_FilmDynamicRange;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x4, Size: 1]
	bool bOverride_FilmHealAmount;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x4, Size: 1]
	bool bOverride_FilmToeAmount;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x4, Size: 1]
	bool bOverride_FilmShadowTint;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x4, Size: 1]
	bool bOverride_FilmShadowTintBlend;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x4, Size: 1]
	bool bOverride_FilmShadowTintAmount;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x4, Size: 1]
	bool bOverride_FilmSlope;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5, Size: 1]
	bool bOverride_FilmToe;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5, Size: 1]
	bool bOverride_FilmShoulder;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x5, Size: 1]
	bool bOverride_FilmBlackClip;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x5, Size: 1]
	bool bOverride_FilmWhiteClip;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x5, Size: 1]
	bool bOverride_SceneColorTint;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x5, Size: 1]
	bool bOverride_SceneFringeIntensity;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x5, Size: 1]
	bool bOverride_ChromaticAberrationStartOffset;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x5, Size: 1]
	bool bOverride_AmbientCubemapTint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x6, Size: 1]
	bool bOverride_AmbientCubemapIntensity;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x6, Size: 1]
	bool bOverride_BloomMethod;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x6, Size: 1]
	bool bOverride_BloomIntensity;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x6, Size: 1]
	bool bOverride_BloomThreshold;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x6, Size: 1]
	bool bOverride_Bloom1Tint;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x6, Size: 1]
	bool bOverride_Bloom1Size;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x6, Size: 1]
	bool bOverride_Bloom2Size;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x6, Size: 1]
	bool bOverride_Bloom2Tint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom3Tint;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom3Size;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom4Tint;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom4Size;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom5Tint;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom5Size;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom6Tint;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x7, Size: 1]
	bool bOverride_Bloom6Size;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]
	bool bOverride_BloomSizeScale;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionTexture;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionSize;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionCenterUV;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionPreFilter;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionPreFilterMin;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionPreFilterMax;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x8, Size: 1]
	bool bOverride_BloomConvolutionPreFilterMult;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x9, Size: 1]
	bool bOverride_BloomConvolutionBufferScale;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x9, Size: 1]
	bool bOverride_BloomDirtMaskIntensity;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x9, Size: 1]
	bool bOverride_BloomDirtMaskTint;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x9, Size: 1]
	bool bOverride_BloomDirtMask;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x9, Size: 1]
	bool bOverride_CameraShutterSpeed;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x9, Size: 1]
	bool bOverride_CameraISO;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x9, Size: 1]
	bool bOverride_AutoExposureMethod;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x9, Size: 1]
	bool bOverride_AutoExposureLowPercent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureHighPercent;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureMinBrightness;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureMaxBrightness;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureCalibrationConstant;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureSpeedUp;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureSpeedDown;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureBias;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xa, Size: 1]
	bool bOverride_AutoExposureBiasCurve;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb, Size: 1]
	bool bOverride_AutoExposureMeterMask;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb, Size: 1]
	bool bOverride_AutoExposureApplyPhysicalCameraExposure;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb, Size: 1]
	bool bOverride_HistogramLogMin;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb, Size: 1]
	bool bOverride_HistogramLogMax;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xb, Size: 1]
	bool bOverride_LensFlareIntensity;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xb, Size: 1]
	bool bOverride_LensFlareTint;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xb, Size: 1]
	bool bOverride_LensFlareTints;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xb, Size: 1]
	bool bOverride_LensFlareBokehSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]
	bool bOverride_LensFlareBokehShape;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xc, Size: 1]
	bool bOverride_LensFlareThreshold;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xc, Size: 1]
	bool bOverride_VignetteIntensity;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xc, Size: 1]
	bool bOverride_GrainIntensity;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xc, Size: 1]
	bool bOverride_GrainJitter;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xc, Size: 1]
	bool bOverride_AmbientOcclusionIntensity;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xc, Size: 1]
	bool bOverride_AmbientOcclusionStaticFraction;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xc, Size: 1]
	bool bOverride_AmbientOcclusionRadius;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionFadeDistance;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionFadeRadius;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionDistance;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionRadiusInWS;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionPower;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionBias;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionQuality;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xd, Size: 1]
	bool bOverride_AmbientOcclusionMipBlend;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xe, Size: 1]
	bool bOverride_AmbientOcclusionMipScale;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xe, Size: 1]
	bool bOverride_AmbientOcclusionMipThreshold;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xe, Size: 1]
	bool bOverride_AmbientOcclusionTemporalBlendWeight;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xe, Size: 1]
	bool bOverride_RayTracingAO;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x10, Size: 1]
	bool bOverride_RayTracingAOSamplesPerPixel;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x10, Size: 1]
	bool bOverride_RayTracingAOIntensity;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x10, Size: 1]
	bool bOverride_RayTracingAORadius;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x10, Size: 1]
	bool bOverride_LPVIntensity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x14, Size: 1]
	bool bOverride_LPVDirectionalOcclusionIntensity;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x14, Size: 1]
	bool bOverride_LPVDirectionalOcclusionRadius;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x14, Size: 1]
	bool bOverride_LPVDiffuseOcclusionExponent;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x14, Size: 1]
	bool bOverride_LPVSpecularOcclusionExponent;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x14, Size: 1]
	bool bOverride_LPVDiffuseOcclusionIntensity;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x14, Size: 1]
	bool bOverride_LPVSpecularOcclusionIntensity;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x14, Size: 1]
	bool bOverride_LPVSize;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x14, Size: 1]
	bool bOverride_LPVSecondaryOcclusionIntensity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x15, Size: 1]
	bool bOverride_LPVSecondaryBounceIntensity;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x15, Size: 1]
	bool bOverride_LPVGeometryVolumeBias;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x15, Size: 1]
	bool bOverride_LPVVplInjectionBias;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x15, Size: 1]
	bool bOverride_LPVEmissiveInjectionIntensity;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x15, Size: 1]
	bool bOverride_LPVFadeRange;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x15, Size: 1]
	bool bOverride_LPVDirectionalOcclusionFadeRange;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x15, Size: 1]
	bool bOverride_IndirectLightingColor;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x15, Size: 1]
	bool bOverride_IndirectLightingIntensity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x16, Size: 1]
	bool bOverride_ColorGradingIntensity;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x16, Size: 1]
	bool bOverride_ColorGradingLUT;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x16, Size: 1]
	bool bOverride_DepthOfFieldFocalDistance;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x16, Size: 1]
	bool bOverride_DepthOfFieldFstop;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x16, Size: 1]
	bool bOverride_DepthOfFieldMinFstop;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x16, Size: 1]
	bool bOverride_DepthOfFieldBladeCount;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x16, Size: 1]
	bool bOverride_DepthOfFieldSensorWidth;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x16, Size: 1]
	bool bOverride_DepthOfFieldDepthBlurRadius;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldDepthBlurAmount;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldFocalRegion;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldNearTransitionRegion;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldFarTransitionRegion;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldScale;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldNearBlurSize;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x17, Size: 1]
	bool bOverride_DepthOfFieldFarBlurSize;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x17, Size: 1]
	bool bOverride_MobileHQGaussian;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x18, Size: 1]
	bool bOverride_DepthOfFieldOcclusion;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x18, Size: 1]
	bool bOverride_DepthOfFieldSkyFocusDistance;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x18, Size: 1]
	bool bOverride_DepthOfFieldVignetteSize;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x18, Size: 1]
	bool bOverride_MotionBlurAmount;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x18, Size: 1]
	bool bOverride_MotionBlurMax;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x18, Size: 1]
	bool bOverride_MotionBlurTargetFPS;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x18, Size: 1]
	bool bOverride_MotionBlurPerObjectSize;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x18, Size: 1]
	bool bOverride_ScreenPercentage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x19, Size: 1]
	bool bOverride_ScreenSpaceReflectionIntensity;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x19, Size: 1]
	bool bOverride_ScreenSpaceReflectionQuality;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x19, Size: 1]
	bool bOverride_ScreenSpaceReflectionMaxRoughness;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x19, Size: 1]
	bool bOverride_ScreenSpaceReflectionRoughnessScale;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x19, Size: 1]
	bool bOverride_ReflectionsType;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingReflectionsMaxRoughness;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingReflectionsMaxBounces;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingReflectionsSamplesPerPixel;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingReflectionsShadows;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingReflectionsTranslucency;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1c, Size: 1]
	bool bOverride_TranslucencyType;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingTranslucencyMaxRoughness;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1c, Size: 1]
	bool bOverride_RayTracingTranslucencyRefractionRays;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1d, Size: 1]
	bool bOverride_RayTracingTranslucencySamplesPerPixel;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1d, Size: 1]
	bool bOverride_RayTracingTranslucencyShadows;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1d, Size: 1]
	bool bOverride_RayTracingTranslucencyRefraction;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1d, Size: 1]
	bool bOverride_RayTracingGI;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1d, Size: 1]
	bool bOverride_RayTracingGIMaxBounces;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1d, Size: 1]
	bool bOverride_RayTracingGISamplesPerPixel;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1d, Size: 1]
	bool bOverride_PathTracingMaxBounces;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1d, Size: 1]
	bool bOverride_PathTracingSamplesPerPixel;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1e, Size: 1]
	bool bOverride_PathTracingFilterWidth;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1e, Size: 1]
	bool bOverride_PathTracingEnableEmissive;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1e, Size: 1]
	bool bOverride_PathTracingMaxPathExposure;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1e, Size: 1]
	bool bOverride_PathTracingEnableDenoiser;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1e, Size: 1]
	bool bMobileHQGaussian;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20, Size: 1]
	byte BloomMethod;//[Offset: 0x21, Size: 1]
	byte AutoExposureMethod;//[Offset: 0x22, Size: 1]
	byte TemperatureType;//[Offset: 0x23, Size: 1]
	float WhiteTemp;//[Offset: 0x24, Size: 1]
	float WhiteTint;//[Offset: 0x28, Size: 1]
	Vector4 ColorSaturation;//[Offset: 0x30, Size: 1]
	Vector4 ColorContrast;//[Offset: 0x40, Size: 1]
	Vector4 ColorGamma;//[Offset: 0x50, Size: 1]
	Vector4 ColorGain;//[Offset: 0x60, Size: 1]
	Vector4 ColorOffset;//[Offset: 0x70, Size: 1]
	Vector4 ColorSaturationShadows;//[Offset: 0x80, Size: 1]
	Vector4 ColorContrastShadows;//[Offset: 0x90, Size: 1]
	Vector4 ColorGammaShadows;//[Offset: 0xa0, Size: 1]
	Vector4 ColorGainShadows;//[Offset: 0xb0, Size: 1]
	Vector4 ColorOffsetShadows;//[Offset: 0xc0, Size: 1]
	Vector4 ColorSaturationMidtones;//[Offset: 0xd0, Size: 1]
	Vector4 ColorContrastMidtones;//[Offset: 0xe0, Size: 1]
	Vector4 ColorGammaMidtones;//[Offset: 0xf0, Size: 1]
	Vector4 ColorGainMidtones;//[Offset: 0x100, Size: 1]
	Vector4 ColorOffsetMidtones;//[Offset: 0x110, Size: 1]
	Vector4 ColorSaturationHighlights;//[Offset: 0x120, Size: 1]
	Vector4 ColorContrastHighlights;//[Offset: 0x130, Size: 1]
	Vector4 ColorGammaHighlights;//[Offset: 0x140, Size: 1]
	Vector4 ColorGainHighlights;//[Offset: 0x150, Size: 1]
	Vector4 ColorOffsetHighlights;//[Offset: 0x160, Size: 1]
	float ColorCorrectionHighlightsMin;//[Offset: 0x170, Size: 1]
	float ColorCorrectionShadowsMax;//[Offset: 0x174, Size: 1]
	float BlueCorrection;//[Offset: 0x178, Size: 1]
	float ExpandGamut;//[Offset: 0x17c, Size: 1]
	float ToneCurveAmount;//[Offset: 0x180, Size: 1]
	float FilmSlope;//[Offset: 0x184, Size: 1]
	float FilmToe;//[Offset: 0x188, Size: 1]
	float FilmShoulder;//[Offset: 0x18c, Size: 1]
	float FilmBlackClip;//[Offset: 0x190, Size: 1]
	float FilmWhiteClip;//[Offset: 0x194, Size: 1]
	LinearColor FilmWhitePoint;//[Offset: 0x198, Size: 1]
	LinearColor FilmShadowTint;//[Offset: 0x1a8, Size: 1]
	float FilmShadowTintBlend;//[Offset: 0x1b8, Size: 1]
	float FilmShadowTintAmount;//[Offset: 0x1bc, Size: 1]
	float FilmSaturation;//[Offset: 0x1c0, Size: 1]
	LinearColor FilmChannelMixerRed;//[Offset: 0x1c4, Size: 1]
	LinearColor FilmChannelMixerGreen;//[Offset: 0x1d4, Size: 1]
	LinearColor FilmChannelMixerBlue;//[Offset: 0x1e4, Size: 1]
	float FilmContrast;//[Offset: 0x1f4, Size: 1]
	float FilmToeAmount;//[Offset: 0x1f8, Size: 1]
	float FilmHealAmount;//[Offset: 0x1fc, Size: 1]
	float FilmDynamicRange;//[Offset: 0x200, Size: 1]
	LinearColor SceneColorTint;//[Offset: 0x204, Size: 1]
	float SceneFringeIntensity;//[Offset: 0x214, Size: 1]
	float ChromaticAberrationStartOffset;//[Offset: 0x218, Size: 1]
	float BloomIntensity;//[Offset: 0x21c, Size: 1]
	float BloomThreshold;//[Offset: 0x220, Size: 1]
	float BloomSizeScale;//[Offset: 0x224, Size: 1]
	float Bloom1Size;//[Offset: 0x228, Size: 1]
	float Bloom2Size;//[Offset: 0x22c, Size: 1]
	float Bloom3Size;//[Offset: 0x230, Size: 1]
	float Bloom4Size;//[Offset: 0x234, Size: 1]
	float Bloom5Size;//[Offset: 0x238, Size: 1]
	float Bloom6Size;//[Offset: 0x23c, Size: 1]
	LinearColor Bloom1Tint;//[Offset: 0x240, Size: 1]
	LinearColor Bloom2Tint;//[Offset: 0x250, Size: 1]
	LinearColor Bloom3Tint;//[Offset: 0x260, Size: 1]
	LinearColor Bloom4Tint;//[Offset: 0x270, Size: 1]
	LinearColor Bloom5Tint;//[Offset: 0x280, Size: 1]
	LinearColor Bloom6Tint;//[Offset: 0x290, Size: 1]
	float BloomConvolutionSize;//[Offset: 0x2a0, Size: 1]
	Texture2D* BloomConvolutionTexture;//[Offset: 0x2a8, Size: 1]
	Vector2D BloomConvolutionCenterUV;//[Offset: 0x2b0, Size: 1]
	float BloomConvolutionPreFilterMin;//[Offset: 0x2b8, Size: 1]
	float BloomConvolutionPreFilterMax;//[Offset: 0x2bc, Size: 1]
	float BloomConvolutionPreFilterMult;//[Offset: 0x2c0, Size: 1]
	float BloomConvolutionBufferScale;//[Offset: 0x2c4, Size: 1]
	Texture* BloomDirtMask;//[Offset: 0x2c8, Size: 1]
	float BloomDirtMaskIntensity;//[Offset: 0x2d0, Size: 1]
	LinearColor BloomDirtMaskTint;//[Offset: 0x2d4, Size: 1]
	LinearColor AmbientCubemapTint;//[Offset: 0x2e4, Size: 1]
	float AmbientCubemapIntensity;//[Offset: 0x2f4, Size: 1]
	Texture* AmbientCubemap;//[Offset: 0x2f8, Size: 1]
	float CameraShutterSpeed;//[Offset: 0x300, Size: 1]
	float CameraISO;//[Offset: 0x304, Size: 1]
	float DepthOfFieldFstop;//[Offset: 0x308, Size: 1]
	float DepthOfFieldMinFstop;//[Offset: 0x30c, Size: 1]
	int DepthOfFieldBladeCount;//[Offset: 0x310, Size: 1]
	float AutoExposureBias;//[Offset: 0x314, Size: 1]
	float AutoExposureBiasBackup;//[Offset: 0x318, Size: 1]
	bool bOverride_AutoExposureBiasBackup;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x31c, Size: 1]
	bool AutoExposureApplyPhysicalCameraExposure;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x320, Size: 1]
	CurveFloat* AutoExposureBiasCurve;//[Offset: 0x328, Size: 1]
	Texture* AutoExposureMeterMask;//[Offset: 0x330, Size: 1]
	float AutoExposureLowPercent;//[Offset: 0x338, Size: 1]
	float AutoExposureHighPercent;//[Offset: 0x33c, Size: 1]
	float AutoExposureMinBrightness;//[Offset: 0x340, Size: 1]
	float AutoExposureMaxBrightness;//[Offset: 0x344, Size: 1]
	float AutoExposureSpeedUp;//[Offset: 0x348, Size: 1]
	float AutoExposureSpeedDown;//[Offset: 0x34c, Size: 1]
	float HistogramLogMin;//[Offset: 0x350, Size: 1]
	float HistogramLogMax;//[Offset: 0x354, Size: 1]
	float AutoExposureCalibrationConstant;//[Offset: 0x358, Size: 1]
	float LensFlareIntensity;//[Offset: 0x35c, Size: 1]
	LinearColor LensFlareTint;//[Offset: 0x360, Size: 1]
	float LensFlareBokehSize;//[Offset: 0x370, Size: 1]
	float LensFlareThreshold;//[Offset: 0x374, Size: 1]
	Texture* LensFlareBokehShape;//[Offset: 0x378, Size: 1]
	LinearColor LensFlareTints;//[Offset: 0x380, Size: 8]
	float VignetteIntensity;//[Offset: 0x400, Size: 1]
	float GrainJitter;//[Offset: 0x404, Size: 1]
	float GrainIntensity;//[Offset: 0x408, Size: 1]
	float AmbientOcclusionIntensity;//[Offset: 0x40c, Size: 1]
	float AmbientOcclusionStaticFraction;//[Offset: 0x410, Size: 1]
	float AmbientOcclusionRadius;//[Offset: 0x414, Size: 1]
	bool AmbientOcclusionRadiusInWS;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x418, Size: 1]
	float AmbientOcclusionFadeDistance;//[Offset: 0x41c, Size: 1]
	float AmbientOcclusionFadeRadius;//[Offset: 0x420, Size: 1]
	float AmbientOcclusionDistance;//[Offset: 0x424, Size: 1]
	float AmbientOcclusionPower;//[Offset: 0x428, Size: 1]
	float AmbientOcclusionBias;//[Offset: 0x42c, Size: 1]
	float AmbientOcclusionQuality;//[Offset: 0x430, Size: 1]
	float AmbientOcclusionMipBlend;//[Offset: 0x434, Size: 1]
	float AmbientOcclusionMipScale;//[Offset: 0x438, Size: 1]
	float AmbientOcclusionMipThreshold;//[Offset: 0x43c, Size: 1]
	float AmbientOcclusionTemporalBlendWeight;//[Offset: 0x440, Size: 1]
	bool RayTracingAO;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x444, Size: 1]
	int RayTracingAOSamplesPerPixel;//[Offset: 0x448, Size: 1]
	float RayTracingAOIntensity;//[Offset: 0x44c, Size: 1]
	float RayTracingAORadius;//[Offset: 0x450, Size: 1]
	LinearColor IndirectLightingColor;//[Offset: 0x454, Size: 1]
	float IndirectLightingIntensity;//[Offset: 0x464, Size: 1]
	enum RayTracingGIType;//[Offset: 0x468, Size: 1]
	int RayTracingGIMaxBounces;//[Offset: 0x46c, Size: 1]
	int RayTracingGISamplesPerPixel;//[Offset: 0x470, Size: 1]
	float ColorGradingIntensity;//[Offset: 0x474, Size: 1]
	Texture* ColorGradingLUT;//[Offset: 0x478, Size: 1]
	float DepthOfFieldSensorWidth;//[Offset: 0x480, Size: 1]
	float DepthOfFieldFocalDistance;//[Offset: 0x484, Size: 1]
	float DepthOfFieldDepthBlurAmount;//[Offset: 0x488, Size: 1]
	float DepthOfFieldDepthBlurRadius;//[Offset: 0x48c, Size: 1]
	float DepthOfFieldFocalRegion;//[Offset: 0x490, Size: 1]
	float DepthOfFieldNearTransitionRegion;//[Offset: 0x494, Size: 1]
	float DepthOfFieldFarTransitionRegion;//[Offset: 0x498, Size: 1]
	float DepthOfFieldScale;//[Offset: 0x49c, Size: 1]
	float DepthOfFieldNearBlurSize;//[Offset: 0x4a0, Size: 1]
	float DepthOfFieldFarBlurSize;//[Offset: 0x4a4, Size: 1]
	float DepthOfFieldOcclusion;//[Offset: 0x4a8, Size: 1]
	float DepthOfFieldSkyFocusDistance;//[Offset: 0x4ac, Size: 1]
	float DepthOfFieldVignetteSize;//[Offset: 0x4b0, Size: 1]
	float MotionBlurAmount;//[Offset: 0x4b4, Size: 1]
	float MotionBlurMax;//[Offset: 0x4b8, Size: 1]
	int MotionBlurTargetFPS;//[Offset: 0x4bc, Size: 1]
	float MotionBlurPerObjectSize;//[Offset: 0x4c0, Size: 1]
	float LPVIntensity;//[Offset: 0x4c4, Size: 1]
	float LPVVplInjectionBias;//[Offset: 0x4c8, Size: 1]
	float LPVSize;//[Offset: 0x4cc, Size: 1]
	float LPVSecondaryOcclusionIntensity;//[Offset: 0x4d0, Size: 1]
	float LPVSecondaryBounceIntensity;//[Offset: 0x4d4, Size: 1]
	float LPVGeometryVolumeBias;//[Offset: 0x4d8, Size: 1]
	float LPVEmissiveInjectionIntensity;//[Offset: 0x4dc, Size: 1]
	float LPVDirectionalOcclusionIntensity;//[Offset: 0x4e0, Size: 1]
	float LPVDirectionalOcclusionRadius;//[Offset: 0x4e4, Size: 1]
	float LPVDiffuseOcclusionExponent;//[Offset: 0x4e8, Size: 1]
	float LPVSpecularOcclusionExponent;//[Offset: 0x4ec, Size: 1]
	float LPVDiffuseOcclusionIntensity;//[Offset: 0x4f0, Size: 1]
	float LPVSpecularOcclusionIntensity;//[Offset: 0x4f4, Size: 1]
	enum ReflectionsType;//[Offset: 0x4f8, Size: 1]
	float ScreenSpaceReflectionIntensity;//[Offset: 0x4fc, Size: 1]
	float ScreenSpaceReflectionQuality;//[Offset: 0x500, Size: 1]
	float ScreenSpaceReflectionMaxRoughness;//[Offset: 0x504, Size: 1]
	float RayTracingReflectionsMaxRoughness;//[Offset: 0x508, Size: 1]
	int RayTracingReflectionsMaxBounces;//[Offset: 0x50c, Size: 1]
	int RayTracingReflectionsSamplesPerPixel;//[Offset: 0x510, Size: 1]
	enum RayTracingReflectionsShadows;//[Offset: 0x514, Size: 1]
	bool RayTracingReflectionsTranslucency;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x515, Size: 1]
	enum TranslucencyType;//[Offset: 0x516, Size: 1]
	float RayTracingTranslucencyMaxRoughness;//[Offset: 0x518, Size: 1]
	int RayTracingTranslucencyRefractionRays;//[Offset: 0x51c, Size: 1]
	int RayTracingTranslucencySamplesPerPixel;//[Offset: 0x520, Size: 1]
	enum RayTracingTranslucencyShadows;//[Offset: 0x524, Size: 1]
	bool RayTracingTranslucencyRefraction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x525, Size: 1]
	int PathTracingMaxBounces;//[Offset: 0x528, Size: 1]
	int PathTracingSamplesPerPixel;//[Offset: 0x52c, Size: 1]
	float PathTracingFilterWidth;//[Offset: 0x530, Size: 1]
	bool PathTracingEnableEmissive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x534, Size: 1]
	float PathTracingMaxPathExposure;//[Offset: 0x538, Size: 1]
	bool PathTracingEnableDenoiser;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x53c, Size: 1]
	float LPVFadeRange;//[Offset: 0x540, Size: 1]
	float LPVDirectionalOcclusionFadeRange;//[Offset: 0x544, Size: 1]
	float ScreenPercentage;//[Offset: 0x548, Size: 1]
	WeightedBlendables WeightedBlendables;//[Offset: 0x550, Size: 1]

--------------------------------
Class: Vector4
	float X;//[Offset: 0x0, Size: 1]
	float Y;//[Offset: 0x4, Size: 1]
	float Z;//[Offset: 0x8, Size: 1]
	float W;//[Offset: 0xc, Size: 1]

--------------------------------
Class: WeightedBlendables
	WeightedBlendable[] Array;//[Offset: 0x0, Size: 1]

--------------------------------
Class: WeightedBlendable
	float Weight;//[Offset: 0x0, Size: 1]
	Object* Object;//[Offset: 0x8, Size: 1]

--------------------------------
Class: InterpGroupInst.Object
	None None;//[Size: 0]

--------------------------------
Class: InterpTrackMove.InterpTrack.Object
	None None;//[Size: 0]

--------------------------------
Class: InterpTrackInstMove.InterpTrackInst.Object
	None None;//[Size: 0]

--------------------------------
Class: CameraShakeSourceComponent.SceneComponent.ActorComponent.Object
	enum Attenuation;//[Offset: 0x1f8, Size: 1]
	float InnerAttenuationRadius;//[Offset: 0x1fc, Size: 1]
	float OuterAttenuationRadius;//[Offset: 0x200, Size: 1]
	class CameraShakeBase* CameraShake;//[Offset: 0x208, Size: 1]
	bool bAutoStart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x210, Size: 1]
	void StopAllCameraShakesOfType(class CameraShakeBase InCameraShake, bool bImmediately);// 0x3edfd10
	void StopAllCameraShakes(bool bImmediately);// 0x3edfc80
	void StartCameraShake(class CameraShakeBase InCameraShake, float Scale, enum PlaySpace, Rotator UserPlaySpaceRot);// 0x3edfa70
	void Start();// 0x3edfa50
	float GetAttenuationFactor(out const Vector Location);// 0x3edd8c0

--------------------------------
Class: CameraModifier.Object
	bool bDebug;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]
	bool bExclusive;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x28, Size: 1]
	None None;//[Size: 0]
	void IsDisabled(None(None) None);// 0x2da8cb0
	void GetViewTarget(None(None) None);// 0x3402720
	void EnableModifier();// 0x3edd8a0
	void DisableModifier(None(None) None);// 0x3edd810
	void BlueprintModifyPostProcess(None(None) None);// 0x1d69c50
	void BlueprintModifyCamera(None(None) None);// 0x1d69c50

--------------------------------
Class: EmitterCameraLensEffectBase.Emitter.Actor.Object
	None None;//[Size: 0]

--------------------------------
Class: Emitter.Actor.Object
	ParticleSystemComponent* ParticleSystemComponent;//[Offset: 0x228, Size: 1]
	bool bDestroyOnSystemFinish;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x230, Size: 1]
	bool bPostUpdateTickGroup;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x230, Size: 1]
	bool bCurrentlyActive;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x230, Size: 1]
	MulticastInlineDelegateProperty OnParticleSpawn;//[Size: 1]
	MulticastInlineDelegateProperty OnParticleBurst;//[Size: 1]
	MulticastInlineDelegateProperty OnParticleDeath;//[Size: 1]
	MulticastInlineDelegateProperty OnParticleCollide;//[Size: 1]
	void ToggleActive();// 0x3efc640
	void SetVectorParameter(FName ParameterName, Vector Param);// 0x3efc560
	void SetTemplate(ParticleSystem* NewTemplate);// 0xd91e70
	void SetMaterialParameter(FName ParameterName, MaterialInterface* Param);// 0x3efc490
	void SetFloatParameter(FName ParameterName, float Param);// 0x3efc3c0
	void SetColorParameter(FName ParameterName, LinearColor Param);// 0x3efc2f0
	void SetActorParameter(FName ParameterName, Actor* Param);// 0x3efc220
	void OnRep_bCurrentlyActive();// 0xd7ddb0
	void OnParticleSystemFinished(ParticleSystemComponent* FinishedComponent);// 0xd5a5b0
	bool IsActive();// 0x3efc1f0
	void Deactivate();// 0x3efc1d0
	void Activate();// 0x3efc1b0

--------------------------------
Class: ParticleSystemComponent.FXSystemComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	ParticleSystem* Template;//[Offset: 0x450, Size: 1]
	MaterialInterface*[] EmitterMaterials;//[Offset: 0x458, Size: 1]
	SkeletalMeshComponent*[] SkelMeshComponents;//[Offset: 0x468, Size: 1]
	bool bResetOnDetach;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x479, Size: 1]
	bool bUpdateOnDedicatedServer;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x479, Size: 1]
	bool bAllowRecycling;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x479, Size: 1]
	bool bAutoManageAttachment;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x479, Size: 1]
	bool bAutoAttachWeldSimulatedBodies;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x479, Size: 1]
	bool bWarmingUp;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x47a, Size: 1]
	bool bOverrideLODMethod;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x47a, Size: 1]
	bool bSkipUpdateDynamicDataDuringTick;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x47a, Size: 1]
	byte LODMethod;//[Offset: 0x485, Size: 1]
	enum RequiredSignificance;//[Offset: 0x486, Size: 1]
	ParticleSysParam[] InstanceParameters;//[Offset: 0x488, Size: 1]
	MulticastInlineDelegateProperty OnParticleSpawn;//[Size: 1]
	MulticastInlineDelegateProperty OnParticleBurst;//[Size: 1]
	MulticastInlineDelegateProperty OnParticleDeath;//[Size: 1]
	MulticastInlineDelegateProperty OnParticleCollide;//[Size: 1]
	bool bOldPositionValid;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4d8, Size: 1]
	Vector OldPosition;//[Offset: 0x4dc, Size: 1]
	Vector PartSysVelocity;//[Offset: 0x4e8, Size: 1]
	float WarmupTime;//[Offset: 0x4f4, Size: 1]
	float WarmupTickRate;//[Offset: 0x4f8, Size: 1]
	float SecondsBeforeInactive;//[Offset: 0x500, Size: 1]
	float MaxTimeBeforeForceUpdateTransform;//[Offset: 0x508, Size: 1]
	ParticleSystemReplay*[] ReplayClips;//[Offset: 0x528, Size: 1]
	float CustomTimeDilation;//[Offset: 0x540, Size: 1]
	SceneComponent* AutoAttachParent;//[Offset: 0x598, Size: 1]
	FName AutoAttachSocketName;//[Offset: 0x5a0, Size: 1]
	enum AutoAttachLocationRule;//[Offset: 0x5a8, Size: 1]
	enum AutoAttachRotationRule;//[Offset: 0x5a9, Size: 1]
	enum AutoAttachScaleRule;//[Offset: 0x5aa, Size: 1]
	MulticastInlineDelegateProperty OnSystemFinished;//[Size: 1]
	void SetTrailSourceData(FName InFirstSocketName, FName InSecondSocketName, byte InWidthMode, float InWidth);// 0x3fbe570
	void SetTemplate(ParticleSystem* NewTemplate);// 0x3fbe4e0
	void SetMaterialParameter(FName ParameterName, MaterialInterface* Param);// 0x3fbe410
	void SetBeamTargetTangent(int EmitterIndex, Vector NewTangentPoint, int TargetIndex);// 0x3fbdec0
	void SetBeamTargetStrength(int EmitterIndex, float NewTargetStrength, int TargetIndex);// 0x3fbddb0
	void SetBeamTargetPoint(int EmitterIndex, Vector NewTargetPoint, int TargetIndex);// 0x3fbdc90
	void SetBeamSourceTangent(int EmitterIndex, Vector NewTangentPoint, int SourceIndex);// 0x3fbdb70
	void SetBeamSourceStrength(int EmitterIndex, float NewSourceStrength, int SourceIndex);// 0x3fbda60
	void SetBeamSourcePoint(int EmitterIndex, Vector NewSourcePoint, int SourceIndex);// 0x3fbd940
	void SetBeamEndPoint(int EmitterIndex, Vector NewEndPoint);// 0x3fbd860
	void SetAutoAttachParams(SceneComponent* Parent, FName SocketName, byte LocationType);// 0x3fbd590
	int GetNumActiveParticles();// 0x3fbd490
	MaterialInterface* GetNamedMaterial(FName InName);// 0x3fbd3f0
	bool GetBeamTargetTangent(int EmitterIndex, int TargetIndex, out Vector OutTangentPoint);// 0x3fbd2a0
	bool GetBeamTargetStrength(int EmitterIndex, int TargetIndex, out float OutTargetStrength);// 0x3fbd180
	bool GetBeamTargetPoint(int EmitterIndex, int TargetIndex, out Vector OutTargetPoint);// 0x3fbd060
	bool GetBeamSourceTangent(int EmitterIndex, int SourceIndex, out Vector OutTangentPoint);// 0x3fbcf40
	bool GetBeamSourceStrength(int EmitterIndex, int SourceIndex, out float OutSourceStrength);// 0x3fbce20
	bool GetBeamSourcePoint(int EmitterIndex, int SourceIndex, out Vector OutSourcePoint);// 0x3fbcd00
	bool GetBeamEndPoint(int EmitterIndex, out Vector OutEndPoint);// 0x3fbcc10
	void GenerateParticleEvent(const FName InEventName, const float InEmitterTime, const Vector InLocation, const Vector InDirection, const Vector InVelocity);// 0x3fbca50
	void EndTrails();// 0x3fbca30
	MaterialInstanceDynamic* CreateNamedDynamicMaterialInstance(FName InName, MaterialInterface* SourceMaterial);// 0x3fbc960
	void BeginTrails(FName InFirstSocketName, FName InSecondSocketName, byte InWidthMode, float InWidth);// 0x3fbc760

--------------------------------
Class: FXSystemComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	void SetVectorParameter(None(None) None);// 0x3fbe760
	void SetUseAutoManageAttachment(None(None) None);// 0x3fbe6d0
	void SetIntParameter(None(None) None);// 0x3fbe340
	void SetFloatParameter(None(None) None);// 0x3fbe260
	void SetEmitterEnable(None(None) None);// 0x3fbe190
	void SetColorParameter(None(None) None);// 0x3fbe0b0
	void SetBoolParameter(None(None) None);// 0x3fbdfe0
	void SetAutoAttachmentParameters(None(None) None);// 0x3fbd6c0
	void SetActorParameter(None(None) None);// 0x3fbd4c0
	void ReleaseToPool();// 0xe304d0
	void GetFXSystemAsset(None(None) None);// 0x3fbd3c0

--------------------------------
Class: ParticleSystem.None
	float UpdateTime_FPS;//[Offset: 0x30, Size: 1]
	float UpdateTime_Delta;//[Offset: 0x34, Size: 1]
	float WarmupTime;//[Offset: 0x38, Size: 1]
	float WarmupTickRate;//[Offset: 0x3c, Size: 1]
	ParticleEmitter*[] Emitters;//[Offset: 0x40, Size: 1]
	ParticleSystemComponent* PreviewComponent;//[Offset: 0x50, Size: 1]
	InterpCurveEdSetup* CurveEdSetup;//[Offset: 0x58, Size: 1]
	float LODDistanceCheckTime;//[Offset: 0x60, Size: 1]
	float MacroUVRadius;//[Offset: 0x64, Size: 1]
	float[] LODDistances;//[Offset: 0x68, Size: 1]
	ParticleSystemLOD[] LODSettings;//[Offset: 0x78, Size: 1]
	Box FixedRelativeBoundingBox;//[Offset: 0x88, Size: 1]
	float SecondsBeforeInactive;//[Offset: 0xa4, Size: 1]
	float Delay;//[Offset: 0xa8, Size: 1]
	float DelayLow;//[Offset: 0xac, Size: 1]
	bool bOrientZAxisTowardCamera;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb0, Size: 1]
	bool bUseFixedRelativeBoundingBox;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb0, Size: 1]
	bool bShouldResetPeakCounts;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb0, Size: 1]
	bool bHasPhysics;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb0, Size: 1]
	bool bUseRealtimeThumbnail;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xb0, Size: 1]
	bool ThumbnailImageOutOfDate;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xb0, Size: 1]
	bool bUseDelayRange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb1, Size: 1]
	bool bAllowManagedTicking;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb1, Size: 1]
	bool bAutoDeactivate;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb1, Size: 1]
	bool bRegenerateLODDuplicate;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb1, Size: 1]
	byte SystemUpdateMode;//[Offset: 0xb2, Size: 1]
	byte LODMethod;//[Offset: 0xb3, Size: 1]
	enum InsignificantReaction;//[Offset: 0xb4, Size: 1]
	byte OcclusionBoundsMethod;//[Offset: 0xb5, Size: 1]
	enum MaxSignificanceLevel;//[Offset: 0xb7, Size: 1]
	uint32 MinTimeBetweenTicks;//[Offset: 0xb8, Size: 1]
	uint32[] LODBasedMinTimeBetweenTicks;//[Offset: 0xc0, Size: 1]
	float InsignificanceDelay;//[Offset: 0xd0, Size: 1]
	Vector MacroUVPosition;//[Offset: 0xd4, Size: 1]
	Box CustomOcclusionBounds;//[Offset: 0xe0, Size: 1]
	LODSoloTrack[] SoloTracking;//[Offset: 0x100, Size: 1]
	NamedEmitterMaterial[] NamedMaterialSlots;//[Offset: 0x110, Size: 1]
	bool ContainsEmitterType(class Object TypeData);// 0x3fbc8c0

--------------------------------
Class: ParticleEmitter.Object
	FName EmitterName;//[Offset: 0x28, Size: 1]
	int SubUVDataOffset;//[Offset: 0x30, Size: 1]
	byte EmitterRenderMode;//[Offset: 0x34, Size: 1]
	enum SignificanceLevel;//[Offset: 0x35, Size: 1]
	bool bUseLegacySpawningBehavior;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x37, Size: 1]
	bool ConvertedModules;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x37, Size: 1]
	bool bIsSoloing;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x37, Size: 1]
	bool bCookedOut;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x37, Size: 1]
	bool bDisabledLODsKeepEmitterAlive;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x37, Size: 1]
	bool bDisableWhenInsignficant;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x38, Size: 1]
	ParticleLODLevel*[] LODLevels;//[Offset: 0x40, Size: 1]
	int PeakActiveParticles;//[Offset: 0x50, Size: 1]
	int InitialAllocationCount;//[Offset: 0x54, Size: 1]
	float QualityLevelSpawnRateScale;//[Offset: 0x58, Size: 1]
	uint32 DetailModeBitmask;//[Offset: 0x5c, Size: 1]

--------------------------------
Class: ParticleLODLevel.Object
	int Level;//[Offset: 0x28, Size: 1]
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2c, Size: 1]
	ParticleModuleRequired* RequiredModule;//[Offset: 0x30, Size: 1]
	ParticleModule*[] Modules;//[Offset: 0x38, Size: 1]
	ParticleModuleTypeDataBase* TypeDataModule;//[Offset: 0x48, Size: 1]
	ParticleModuleSpawn* SpawnModule;//[Offset: 0x50, Size: 1]
	ParticleModuleEventGenerator* EventGenerator;//[Offset: 0x58, Size: 1]
	ParticleModuleSpawnBase*[] SpawningModules;//[Offset: 0x60, Size: 1]
	ParticleModule*[] SpawnModules;//[Offset: 0x70, Size: 1]
	ParticleModule*[] UpdateModules;//[Offset: 0x80, Size: 1]
	ParticleModuleOrbit*[] OrbitModules;//[Offset: 0x90, Size: 1]
	ParticleModuleEventReceiverBase*[] EventReceiverModules;//[Offset: 0xa0, Size: 1]
	bool ConvertedModules;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb0, Size: 1]
	int PeakActiveParticles;//[Offset: 0xb4, Size: 1]

--------------------------------
Class: ParticleModuleRequired.ParticleModule.Object
	MaterialInterface* Material;//[Offset: 0x30, Size: 1]
	float MinFacingCameraBlendDistance;//[Offset: 0x38, Size: 1]
	float MaxFacingCameraBlendDistance;//[Offset: 0x3c, Size: 1]
	Vector EmitterOrigin;//[Offset: 0x40, Size: 1]
	Rotator EmitterRotation;//[Offset: 0x4c, Size: 1]
	byte ScreenAlignment;//[Offset: 0x58, Size: 1]
	bool bUseLocalSpace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x59, Size: 1]
	bool bKillOnDeactivate;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x59, Size: 1]
	bool bKillOnCompleted;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x59, Size: 1]
	byte SortMode;//[Offset: 0x5a, Size: 1]
	bool bUseLegacyEmitterTime;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5b, Size: 1]
	bool bRemoveHMDRoll;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5b, Size: 1]
	bool bEmitterDurationUseRange;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x5b, Size: 1]
	float EmitterDuration;//[Offset: 0x5c, Size: 1]
	RawDistributionFloat SpawnRate;//[Offset: 0x60, Size: 1]
	ParticleBurst[] BurstList;//[Offset: 0x90, Size: 1]
	float EmitterDelay;//[Offset: 0xa0, Size: 1]
	float EmitterDelayLow;//[Offset: 0xa4, Size: 1]
	bool bDelayFirstLoopOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa8, Size: 1]
	byte InterpolationMethod;//[Offset: 0xa9, Size: 1]
	bool bScaleUV;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xaa, Size: 1]
	bool bEmitterDelayUseRange;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xaa, Size: 1]
	byte ParticleBurstMethod;//[Offset: 0xab, Size: 1]
	bool bOverrideSystemMacroUV;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xac, Size: 1]
	bool bUseMaxDrawCount;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xac, Size: 1]
	byte OpacitySourceMode;//[Offset: 0xad, Size: 1]
	byte EmitterNormalsMode;//[Offset: 0xae, Size: 1]
	bool bOrbitModuleAffectsVelocityAlignment;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xaf, Size: 1]
	int SubImages_Horizontal;//[Offset: 0xb0, Size: 1]
	int SubImages_Vertical;//[Offset: 0xb4, Size: 1]
	float RandomImageTime;//[Offset: 0xb8, Size: 1]
	int RandomImageChanges;//[Offset: 0xbc, Size: 1]
	Vector MacroUVPosition;//[Offset: 0xc0, Size: 1]
	float MacroUVRadius;//[Offset: 0xcc, Size: 1]
	enum UVFlippingMode;//[Offset: 0xd0, Size: 1]
	byte BoundingMode;//[Offset: 0xd1, Size: 1]
	bool bDurationRecalcEachLoop;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xd2, Size: 1]
	Vector NormalsSphereCenter;//[Offset: 0xd4, Size: 1]
	float AlphaThreshold;//[Offset: 0xe0, Size: 1]
	int EmitterLoops;//[Offset: 0xe4, Size: 1]
	Texture2D* CutoutTexture;//[Offset: 0xe8, Size: 1]
	int MaxDrawCount;//[Offset: 0xf0, Size: 1]
	float EmitterDurationLow;//[Offset: 0xf4, Size: 1]
	Vector NormalsCylinderDirection;//[Offset: 0xf8, Size: 1]
	FName[] NamedMaterialOverrides;//[Offset: 0x108, Size: 1]

--------------------------------
Class: ParticleModule.Object
	bool bSpawnModule;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]
	bool bUpdateModule;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x28, Size: 1]
	bool bFinalUpdateModule;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x28, Size: 1]
	bool bUpdateForGPUEmitter;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x28, Size: 1]
	bool bCurvesAsColor;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x28, Size: 1]
	bool b3DDrawMode;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x28, Size: 1]
	bool bSupported3DDrawMode;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x28, Size: 1]
	bool bEnabled;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x28, Size: 1]
	bool bEditable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x29, Size: 1]
	bool LODDuplicate;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x29, Size: 1]
	bool bSupportsRandomSeed;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x29, Size: 1]
	bool bRequiresLoopingNotification;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x29, Size: 1]
	byte LODValidity;//[Offset: 0x2a, Size: 1]

--------------------------------
Class: RawDistributionFloat.RawDistribution
	float MinValue;//[Offset: 0x20, Size: 1]
	float MaxValue;//[Offset: 0x24, Size: 1]
	DistributionFloat* Distribution;//[Offset: 0x28, Size: 1]

--------------------------------
Class: RawDistribution
	DistributionLookupTable table;//[Offset: 0x0, Size: 1]

--------------------------------
Class: DistributionLookupTable
	float TimeScale;//[Offset: 0x0, Size: 1]
	float TimeBias;//[Offset: 0x4, Size: 1]
	float[] Values;//[Offset: 0x8, Size: 1]
	byte Op;//[Offset: 0x18, Size: 1]
	byte EntryCount;//[Offset: 0x19, Size: 1]
	byte EntryStride;//[Offset: 0x1a, Size: 1]
	byte SubEntryStride;//[Offset: 0x1b, Size: 1]
	byte LockFlag;//[Offset: 0x1c, Size: 1]

--------------------------------
Class: DistributionFloat.Distribution.Object
	bool bCanBeBaked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x30, Size: 1]
	bool bBakedDataSuccesfully;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x30, Size: 1]

--------------------------------
Class: Distribution.Object

--------------------------------
Class: ParticleBurst
	int Count;//[Offset: 0x0, Size: 1]
	int CountLow;//[Offset: 0x4, Size: 1]
	float Time;//[Offset: 0x8, Size: 1]

--------------------------------
Class: ParticleModuleTypeDataBase.ParticleModule.Object

--------------------------------
Class: ParticleModuleSpawn.ParticleModuleSpawnBase.ParticleModule.Object
	RawDistributionFloat Rate;//[Offset: 0x38, Size: 1]
	RawDistributionFloat RateScale;//[Offset: 0x68, Size: 1]
	byte ParticleBurstMethod;//[Offset: 0x98, Size: 1]
	ParticleBurst[] BurstList;//[Offset: 0xa0, Size: 1]
	RawDistributionFloat BurstScale;//[Offset: 0xb0, Size: 1]
	bool bApplyGlobalSpawnRateScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xe0, Size: 1]

--------------------------------
Class: ParticleModuleSpawnBase.ParticleModule.Object
	bool bProcessSpawnRate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x30, Size: 1]
	bool bProcessBurstList;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x30, Size: 1]

--------------------------------
Class: ParticleModuleEventGenerator.ParticleModuleEventBase.ParticleModule.Object
	ParticleEvent_GenerateInfo[] Events;//[Offset: 0x30, Size: 1]

--------------------------------
Class: ParticleModuleEventBase.ParticleModule.Object

--------------------------------
Class: ParticleEvent_GenerateInfo
	byte Type;//[Offset: 0x0, Size: 1]
	int frequency;//[Offset: 0x4, Size: 1]
	int ParticleFrequency;//[Offset: 0x8, Size: 1]
	bool FirstTimeOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]
	bool LastTimeOnly;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xc, Size: 1]
	bool UseReflectedImpactVector;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xc, Size: 1]
	bool bUseOrbitOffset;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xc, Size: 1]
	FName CustomName;//[Offset: 0x10, Size: 1]
	ParticleModuleEventSendToGame*[] ParticleModuleEventsToSendToGame;//[Offset: 0x18, Size: 1]

--------------------------------
Class: ParticleModuleEventSendToGame.Object

--------------------------------
Class: ParticleModuleOrbit.ParticleModuleOrbitBase.ParticleModule.Object
	byte ChainMode;//[Offset: 0x38, Size: 1]
	RawDistributionVector OffsetAmount;//[Offset: 0x40, Size: 1]
	OrbitOptions OffsetOptions;//[Offset: 0x88, Size: 1]
	RawDistributionVector RotationAmount;//[Offset: 0x90, Size: 1]
	OrbitOptions RotationOptions;//[Offset: 0xd8, Size: 1]
	RawDistributionVector RotationRateAmount;//[Offset: 0xe0, Size: 1]
	OrbitOptions RotationRateOptions;//[Offset: 0x128, Size: 1]

--------------------------------
Class: ParticleModuleOrbitBase.ParticleModule.Object
	bool bUseEmitterTime;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x30, Size: 1]

--------------------------------
Class: RawDistributionVector.RawDistribution
	float MinValue;//[Offset: 0x20, Size: 1]
	float MaxValue;//[Offset: 0x24, Size: 1]
	Vector MinValueVec;//[Offset: 0x28, Size: 1]
	Vector MaxValueVec;//[Offset: 0x34, Size: 1]
	DistributionVector* Distribution;//[Offset: 0x40, Size: 1]

--------------------------------
Class: DistributionVector.Distribution.Object
	bool bCanBeBaked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x30, Size: 1]
	bool bIsDirty;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x30, Size: 1]
	bool bBakedDataSuccesfully;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x30, Size: 1]

--------------------------------
Class: OrbitOptions
	bool bProcessDuringSpawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bProcessDuringUpdate;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bUseEmitterTime;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]

--------------------------------
Class: ParticleModuleEventReceiverBase.ParticleModuleEventBase.ParticleModule.Object
	byte EventGeneratorType;//[Offset: 0x30, Size: 1]
	FName EventName;//[Offset: 0x34, Size: 1]

--------------------------------
Class: InterpCurveEdSetup.Object
	CurveEdTab[] Tabs;//[Offset: 0x28, Size: 1]
	int ActiveTab;//[Offset: 0x38, Size: 1]

--------------------------------
Class: CurveEdTab
	FString TabName;//[Offset: 0x0, Size: 1]
	CurveEdEntry[] Curves;//[Offset: 0x10, Size: 1]
	float ViewStartInput;//[Offset: 0x20, Size: 1]
	float ViewEndInput;//[Offset: 0x24, Size: 1]
	float ViewStartOutput;//[Offset: 0x28, Size: 1]
	float ViewEndOutput;//[Offset: 0x2c, Size: 1]

--------------------------------
Class: CurveEdEntry
	Object* CurveObject;//[Offset: 0x0, Size: 1]
	Color CurveColor;//[Offset: 0x8, Size: 1]
	FString CurveName;//[Offset: 0x10, Size: 1]
	int bHideCurve;//[Offset: 0x20, Size: 1]
	int bColorCurve;//[Offset: 0x24, Size: 1]
	int bFloatingPointColorCurve;//[Offset: 0x28, Size: 1]
	int bClamp;//[Offset: 0x2c, Size: 1]
	float ClampLow;//[Offset: 0x30, Size: 1]
	float ClampHigh;//[Offset: 0x34, Size: 1]

--------------------------------
Class: ParticleSystemLOD

--------------------------------
Class: LODSoloTrack
	byte[] SoloEnableSetting;//[Offset: 0x0, Size: 1]

--------------------------------
Class: NamedEmitterMaterial
	FName Name;//[Offset: 0x0, Size: 1]
	MaterialInterface* Material;//[Offset: 0x8, Size: 1]

--------------------------------
Class: MaterialInstanceDynamic.MaterialInstance.MaterialInterface.Object
	void SetVectorParameterValueByInfo(out const MaterialParameterInfo ParameterInfo, LinearColor Value);// 0x3fa7990
	void SetVectorParameterValue(FName ParameterName, LinearColor Value);// 0x3fa78c0
	void SetTextureParameterValueByInfo(out const MaterialParameterInfo ParameterInfo, Texture* Value);// 0x3fa77d0
	void SetTextureParameterValue(FName ParameterName, Texture* Value);// 0x3fa7700
	void SetScalarParameterValueByInfo(out const MaterialParameterInfo ParameterInfo, float Value);// 0x3fa7610
	void SetScalarParameterValue(FName ParameterName, None(None) None);// 0x3fa7540
	void K2_InterpolateMaterialInstanceParams(None(None) None);// 0x3fa7180
	void K2_GetVectorParameterValueByInfo(None(None) None);// 0x3fa70d0
	void K2_GetVectorParameterValue(None(None) None);// 0x3fa7030
	void K2_GetTextureParameterValueByInfo(None(None) None);// 0x3fa6f80
	Texture* K2_GetTextureParameterValue(FName ParameterName);// 0x3fa6ee0
	float K2_GetScalarParameterValueByInfo(out const MaterialParameterInfo ParameterInfo);// 0x3fa6e30
	float K2_GetScalarParameterValue(FName ParameterName);// 0x3fa6d90
	void K2_CopyMaterialInstanceParameters(MaterialInterface* Source, bool bQuickParametersOnly);// 0x3fa6c20
	void CopyParameterOverrides(MaterialInstance* MaterialInstance);// 0x3fa6820
	void CopyInterpParameters(MaterialInstance* Source);// 0x3fa6790

--------------------------------
Class: MaterialInstance.MaterialInterface.Object
	PhysicalMaterial* PhysMaterial;//[Offset: 0x88, Size: 1]
	PhysicalMaterial* PhysicalMaterialMap;//[Offset: 0x90, Size: 8]
	MaterialInterface* Parent;//[Offset: 0xd0, Size: 1]
	bool bHasStaticPermutationResource;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xd8, Size: 1]
	bool bOverrideSubsurfaceProfile;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xd8, Size: 1]
	ScalarParameterValue[] ScalarParameterValues;//[Offset: 0xe0, Size: 1]
	VectorParameterValue[] VectorParameterValues;//[Offset: 0xf0, Size: 1]
	TextureParameterValue[] TextureParameterValues;//[Offset: 0x100, Size: 1]
	RuntimeVirtualTextureParameterValue[] RuntimeVirtualTextureParameterValues;//[Offset: 0x110, Size: 1]
	FontParameterValue[] FontParameterValues;//[Offset: 0x120, Size: 1]
	MaterialInstanceBasePropertyOverrides BasePropertyOverrides;//[Offset: 0x130, Size: 1]
	StaticParameterSet StaticParameters;//[Offset: 0x148, Size: 1]
	MaterialCachedParameters CachedLayerParameters;//[Offset: 0x188, Size: 1]
	Object*[] CachedReferencedTextures;//[Offset: 0x2d8, Size: 1]

--------------------------------
Class: ScalarParameterValue
	MaterialParameterInfo ParameterInfo;//[Offset: 0x0, Size: 1]
	float ParameterValue;//[Offset: 0x10, Size: 1]
	Guid ExpressionGUID;//[Offset: 0x14, Size: 1]

--------------------------------
Class: VectorParameterValue
	MaterialParameterInfo ParameterInfo;//[Offset: 0x0, Size: 1]
	LinearColor ParameterValue;//[Offset: 0x10, Size: 1]
	Guid ExpressionGUID;//[Offset: 0x20, Size: 1]

--------------------------------
Class: TextureParameterValue
	MaterialParameterInfo ParameterInfo;//[Offset: 0x0, Size: 1]
	Texture* ParameterValue;//[Offset: 0x10, Size: 1]
	Guid ExpressionGUID;//[Offset: 0x18, Size: 1]

--------------------------------
Class: RuntimeVirtualTextureParameterValue
	MaterialParameterInfo ParameterInfo;//[Offset: 0x0, Size: 1]
	RuntimeVirtualTexture* ParameterValue;//[Offset: 0x10, Size: 1]
	Guid ExpressionGUID;//[Offset: 0x18, Size: 1]

--------------------------------
Class: FontParameterValue
	MaterialParameterInfo ParameterInfo;//[Offset: 0x0, Size: 1]
	Font* FontValue;//[Offset: 0x10, Size: 1]
	int FontPage;//[Offset: 0x18, Size: 1]
	Guid ExpressionGUID;//[Offset: 0x1c, Size: 1]

--------------------------------
Class: MaterialInstanceBasePropertyOverrides
	bool bOverride_OpacityMaskClipValue;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bOverride_BlendMode;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bOverride_ShadingModel;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bOverride_DitheredLODTransition;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bOverride_CastDynamicShadowAsMasked;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]
	bool bOverride_TwoSided;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x0, Size: 1]
	bool TwoSided;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x0, Size: 1]
	bool DitheredLODTransition;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x0, Size: 1]
	bool bCastDynamicShadowAsMasked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1, Size: 1]
	byte BlendMode;//[Offset: 0x2, Size: 1]
	byte ShadingModel;//[Offset: 0x3, Size: 1]
	float OpacityMaskClipValue;//[Offset: 0x4, Size: 1]

--------------------------------
Class: StaticParameterSet
	StaticSwitchParameter[] StaticSwitchParameters;//[Offset: 0x0, Size: 1]
	StaticComponentMaskParameter[] StaticComponentMaskParameters;//[Offset: 0x10, Size: 1]
	StaticTerrainLayerWeightParameter[] TerrainLayerWeightParameters;//[Offset: 0x20, Size: 1]
	StaticMaterialLayersParameter[] MaterialLayersParameters;//[Offset: 0x30, Size: 1]

--------------------------------
Class: StaticSwitchParameter.StaticParameterBase
	bool Value;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24, Size: 1]

--------------------------------
Class: StaticParameterBase
	MaterialParameterInfo ParameterInfo;//[Offset: 0x0, Size: 1]
	bool bOverride;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	Guid ExpressionGUID;//[Offset: 0x14, Size: 1]

--------------------------------
Class: StaticComponentMaskParameter.StaticParameterBase
	bool R;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24, Size: 1]
	bool G;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x25, Size: 1]
	bool B;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x26, Size: 1]
	bool A;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27, Size: 1]

--------------------------------
Class: StaticTerrainLayerWeightParameter.StaticParameterBase
	int WeightmapIndex;//[Offset: 0x24, Size: 1]
	bool bWeightBasedBlend;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]

--------------------------------
Class: StaticMaterialLayersParameter.StaticParameterBase
	MaterialLayersFunctions Value;//[Offset: 0x28, Size: 1]

--------------------------------
Class: MaterialLayersFunctions
	MaterialFunctionInterface*[] Layers;//[Offset: 0x0, Size: 1]
	MaterialFunctionInterface*[] Blends;//[Offset: 0x10, Size: 1]
	bool[] LayerStates;//[Offset: 0x20, Size: 1]
	FString KeyString;//[Offset: 0x30, Size: 1]

--------------------------------
Class: ParticleSysParam
	FName Name;//[Offset: 0x0, Size: 1]
	byte ParamType;//[Offset: 0x8, Size: 1]
	float Scalar;//[Offset: 0xc, Size: 1]
	float Scalar_Low;//[Offset: 0x10, Size: 1]
	Vector Vector;//[Offset: 0x14, Size: 1]
	Vector Vector_Low;//[Offset: 0x20, Size: 1]
	Color Color;//[Offset: 0x2c, Size: 1]
	Actor* Actor;//[Offset: 0x30, Size: 1]
	MaterialInterface* Material;//[Offset: 0x38, Size: 1]

--------------------------------
Class: ParticleSystemReplay.Object
	int ClipIDNumber;//[Offset: 0x28, Size: 1]

--------------------------------
Class: CameraCacheEntry
	float Timestamp;//[Offset: 0x0, Size: 1]
	MinimalViewInfo POV;//[Offset: 0x10, Size: 1]

--------------------------------
Class: MinimalViewInfo
	Vector Location;//[Offset: 0x0, Size: 1]
	Rotator Rotation;//[Offset: 0xc, Size: 1]
	float FOV;//[Offset: 0x18, Size: 1]
	float DesiredFOV;//[Offset: 0x1c, Size: 1]
	float OrthoWidth;//[Offset: 0x20, Size: 1]
	float OrthoNearClipPlane;//[Offset: 0x24, Size: 1]
	float OrthoFarClipPlane;//[Offset: 0x28, Size: 1]
	float AspectRatio;//[Offset: 0x2c, Size: 1]
	bool bConstrainAspectRatio;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x30, Size: 1]
	bool bUseFieldOfViewForLOD;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x30, Size: 1]
	byte ProjectionMode;//[Offset: 0x34, Size: 1]
	float PostProcessBlendWeight;//[Offset: 0x38, Size: 1]
	PostProcessSettings PostProcessSettings;//[Offset: 0x40, Size: 1]
	Vector2D OffCenterProjectionOffset;//[Offset: 0x5a0, Size: 1]

--------------------------------
Class: TViewTarget
	Actor* Target;//[Offset: 0x0, Size: 1]
	MinimalViewInfo POV;//[Offset: 0x10, Size: 1]
	PlayerState* PlayerState;//[Offset: 0x600, Size: 1]

--------------------------------
Class: CameraModifier_CameraShake.CameraModifier.Object
	ActiveCameraShakeInfo[] ActiveShakes;//[Offset: 0x48, Size: 1]
	<class CameraShakeBase,PooledCameraShakes> ExpiredPooledShakesMap;//[Offset: 0x58, Size: 1]
	float SplitScreenShakeScale;//[Offset: 0xa8, Size: 1]

--------------------------------
Class: ActiveCameraShakeInfo
	CameraShakeBase* ShakeInstance;//[Offset: 0x0, Size: 1]
	CameraShakeSourceComponent* ShakeSource;//[Offset: 0x8, Size: 1]
	bool bIsCustomInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]

--------------------------------
Class: PooledCameraShakes
	CameraShakeBase*[] PooledShakes;//[Offset: 0x0, Size: 1]

--------------------------------
Class: CameraActor.Actor.Object
	byte AutoActivateForPlayer;//[Offset: 0x228, Size: 1]
	CameraComponent* CameraComponent;//[Offset: 0x230, Size: 1]
	SceneComponent* SceneComponent;//[Offset: 0x238, Size: 1]
	bool bConstrainAspectRatio;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x248, Size: 1]
	float AspectRatio;//[Offset: 0x24c, Size: 1]
	float FOVAngle;//[Offset: 0x250, Size: 1]
	float PostProcessBlendWeight;//[Offset: 0x254, Size: 1]
	PostProcessSettings PostProcessSettings;//[Offset: 0x260, Size: 1]
	int GetAutoActivatePlayerIndex();// 0x3edd960

--------------------------------
Class: CameraComponent.SceneComponent.ActorComponent.Object
	float FieldOfView;//[Offset: 0x1f8, Size: 1]
	float OrthoWidth;//[Offset: 0x1fc, Size: 1]
	float OrthoNearClipPlane;//[Offset: 0x200, Size: 1]
	float OrthoFarClipPlane;//[Offset: 0x204, Size: 1]
	float AspectRatio;//[Offset: 0x208, Size: 1]
	bool bConstrainAspectRatio;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20c, Size: 1]
	bool bUseFieldOfViewForLOD;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x20c, Size: 1]
	bool bLockToHmd;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x20c, Size: 1]
	bool bUsePawnControlRotation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x20c, Size: 1]
	byte ProjectionMode;//[Offset: 0x20d, Size: 1]
	float PostProcessBlendWeight;//[Offset: 0x240, Size: 1]
	PostProcessSettings PostProcessSettings;//[Offset: 0x270, Size: 1]
	void SetUseFieldOfViewForLOD(bool bInUseFieldOfViewForLOD);// 0x3edf9c0
	void SetProjectionMode(byte InProjectionMode);// 0x3edf830
	void SetPostProcessBlendWeight(float InPostProcessBlendWeight);// 0x3edf7b0
	void SetOrthoWidth(float InOrthoWidth);// 0x3edf730
	void SetOrthoNearClipPlane(float InOrthoNearClipPlane);// 0x3edf6b0
	void SetOrthoFarClipPlane(float InOrthoFarClipPlane);// 0x3edf630
	void SetFieldOfView(float InFieldOfView);// 0x34a0ca0
	void SetConstraintAspectRatio(bool bInConstrainAspectRatio);// 0x3edf520
	void SetAspectRatio(float InAspectRatio);// 0x3edf4a0
	void RemoveBlendable(interface classNone InBlendableObject);// 0x3edf350
	void OnCameraMeshHiddenChanged();// 0xd59a20
	void GetCameraView(float DeltaTime, out MinimalViewInfo DesiredView);// 0x3edd990
	void AddOrUpdateBlendable(interface classNone InBlendableObject, float InWeight);// 0x3edd5c0

--------------------------------
Class: CheatManager.Object
	DebugCameraController* DebugCameraControllerRef;//[Offset: 0x28, Size: 1]
	class DebugCameraController* DebugCameraControllerClass;//[Offset: 0x30, Size: 1]
	CheatManagerExtension*[] CheatManagerExtensions;//[Offset: 0x78, Size: 1]
	void Walk();// 0x2d86400
	void ViewSelf();// 0x3eecc30
	void ViewPlayer(FString S);// 0x3eecb80
	void ViewClass(class Actor DesiredClass);// 0x3eecaf0
	void ViewActor(FName ActorName);// 0x3eeca60
	void UpdateSafeArea();// 0x3eeca40
	void ToggleServerStatReplicatorUpdateStatNet();// 0x3eeca20
	void ToggleServerStatReplicatorClientOverwrite();// 0x3eeca00
	void ToggleDebugCamera();// 0x3eec9e0
	void ToggleAILogging();// 0x3eec9c0
	void TestCollisionDistance();// 0x3eec9a0
	void Teleport();// 0xdefb40
	void Summon(FString ClassName);// 0x3eec8f0
	void StreamLevelOut(FName PackageName);// 0x3eec860
	void StreamLevelIn(FName PackageName);// 0x3eec7d0
	void SpawnServerStatReplicator();// 0x3eec7b0
	void Slomo(float NewTimeDilation);// 0x3eec720
	void SetWorldOrigin();// 0x3eec700
	void SetMouseSensitivityToDefault();// 0x3eec6e0
	void ServerToggleAILogging();// 0x3eec600
	void ReceiveInitCheatManager();// 0x1d69c50
	void ReceiveEndPlay();// 0x1d69c50
	void PlayersOnly();// 0x3eaad70
	void OnlyLoadLevel(FName PackageName);// 0x3eec570
	void LogLoc();// 0x3eec550
	void InvertMouse();// 0x3eec530
	void God();// 0x3edd8a0
	void Ghost();// 0x3eaad50
	void FreezeFrame(float Delay);// 0x3eec4a0
	void Fly();// 0x3eaad90
	void FlushLog();// 0x3eec480
	void EnableDebugCamera();// 0x3eec460
	void DumpVoiceMutingState();// 0x3eec440
	void DumpPartyState();// 0xd8b9a0
	void DumpOnlineSessionState();// 0x3eec420
	void DumpChatState();// 0x3eec400
	void DisableDebugCamera();// 0x134f380
	void DestroyTarget();// 0x3eec3e0
	void DestroyServerStatReplicator();// 0x3eec3c0
	void DestroyPawns(class Pawn aClass);// 0x33fe9f0
	void DestroyAllPawnsExceptTarget();// 0x3eec3a0
	void DestroyAll(class Actor aClass);// 0x3eec310
	void DebugCapsuleSweepSize(float HalfHeight, float Radius);// 0x3eec240
	void DebugCapsuleSweepPawn();// 0x3eec220
	void DebugCapsuleSweepComplex(bool bTraceComplex);// 0x3eec190
	void DebugCapsuleSweepClear();// 0x3eec170
	void DebugCapsuleSweepChannel(byte Channel);// 0x3eec0f0
	void DebugCapsuleSweepCapture();// 0x13e03e0
	void DebugCapsuleSweep();// 0x3eec0d0
	void DamageTarget(float DamageAmount);// 0x3eec040
	void CheatScript(FString ScriptName);// 0x3eebf40
	void ChangeSize(float F);// 0x357b970
	void BugItStringCreator(Vector ViewLocation, Rotator ViewRotation, out FString GoString, out FString LocString);// 0x3eebd70
	void BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);// 0x3eebb80
	void BugIt(FString ScreenShotDescription);// 0x3eebad0

--------------------------------
Class: DebugCameraController.PlayerController.Controller.Actor.Object
	bool bShowSelectedInfo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x578, Size: 1]
	bool bIsFrozenRendering;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x578, Size: 1]
	bool bIsOrbitingSelectedActor;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x578, Size: 1]
	bool bOrbitPivotUseCenter;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x578, Size: 1]
	bool bEnableBufferVisualization;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x578, Size: 1]
	bool bEnableBufferVisualizationFullMode;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x578, Size: 1]
	bool bIsBufferVisualizationInputSetup;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x578, Size: 1]
	bool bLastDisplayEnabled;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x578, Size: 1]
	DrawFrustumComponent* DrawFrustum;//[Offset: 0x580, Size: 1]
	Actor* SelectedActor;//[Offset: 0x588, Size: 1]
	PrimitiveComponent* SelectedComponent;//[Offset: 0x590, Size: 1]
	HitResult SelectedHitPoint;//[Offset: 0x598, Size: 1]
	PlayerController* OriginalControllerRef;//[Offset: 0x620, Size: 1]
	Player* OriginalPlayer;//[Offset: 0x628, Size: 1]
	float SpeedScale;//[Offset: 0x630, Size: 1]
	float InitialMaxSpeed;//[Offset: 0x634, Size: 1]
	float InitialAccel;//[Offset: 0x638, Size: 1]
	float InitialDecel;//[Offset: 0x63c, Size: 1]
	void ToggleDisplay();// 0x3ef4aa0
	void ShowDebugSelectedInfo();// 0x3ef4a80
	void SetPawnMovementSpeedScale(float NewSpeedScale);// 0x3ef4a00
	void ReceiveOnDeactivate(PlayerController* RestoredPC);// 0x1d69c50
	void ReceiveOnActorSelected(Actor* NewSelectedActor, out const Vector SelectHitLocation, out const Vector SelectHitNormal, out const HitResult Hit);// 0x1d69c50
	void ReceiveOnActivate(PlayerController* OriginalPC);// 0x1d69c50
	Actor* GetSelectedActor();// 0x3ef4890

--------------------------------
Class: DrawFrustumComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	Color FrustumColor;//[Offset: 0x450, Size: 1]
	float FrustumAngle;//[Offset: 0x454, Size: 1]
	float FrustumAspectRatio;//[Offset: 0x458, Size: 1]
	float FrustumStartDist;//[Offset: 0x45c, Size: 1]
	float FrustumEndDist;//[Offset: 0x460, Size: 1]
	Texture* Texture;//[Offset: 0x468, Size: 1]

--------------------------------
Class: CheatManagerExtension.Object

--------------------------------
Class: PlayerInput.Object
	KeyBind[] DebugExecBindings;//[Offset: 0x120, Size: 1]
	FName[] InvertedAxis;//[Offset: 0x160, Size: 1]
	void SetMouseSensitivity(const float Sensitivity);// 0x3fd8a10
	void SetBind(FName BindName, FString Command);// 0x3fd8360
	void InvertAxisKey(const Key AxisKey);// 0x3fd81b0
	void InvertAxis(const FName AxisName);// 0x3fd8120
	void ClearSmoothing();// 0x3fd7c70

--------------------------------
Class: Key
	FName KeyName;//[Offset: 0x0, Size: 1]

--------------------------------
Class: KeyBind
	Key Key;//[Offset: 0x0, Size: 1]
	FString Command;//[Offset: 0x18, Size: 1]
	bool Control;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]
	bool Shift;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x28, Size: 1]
	bool Alt;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x28, Size: 1]
	bool Cmd;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x28, Size: 1]
	bool bIgnoreCtrl;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x28, Size: 1]
	bool bIgnoreShift;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x28, Size: 1]
	bool bIgnoreAlt;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x28, Size: 1]
	bool bIgnoreCmd;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x28, Size: 1]
	bool bDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x29, Size: 1]

--------------------------------
Class: UserWidget.Widget.Visual.Object
	LinearColor ColorAndOpacity;//[Offset: 0x110, Size: 1]
	delegate ColorAndOpacityDelegate;//[Offset: 0x120, Size: 1]
	SlateColor ForegroundColor;//[Offset: 0x130, Size: 1]
	delegate ForegroundColorDelegate;//[Offset: 0x158, Size: 1]
	MulticastInlineDelegateProperty OnVisibilityChanged;//[Size: 1]
	Margin Padding;//[Offset: 0x190, Size: 1]
	UMGSequencePlayer*[] ActiveSequencePlayers;//[Offset: 0x1a0, Size: 1]
	UMGSequenceTickManager* AnimationTickManager;//[Offset: 0x1b0, Size: 1]
	UMGSequencePlayer*[] StoppedSequencePlayers;//[Offset: 0x1b8, Size: 1]
	NamedSlotBinding[] NamedSlotBindings;//[Offset: 0x1c8, Size: 1]
	WidgetTree* WidgetTree;//[Offset: 0x1d8, Size: 1]
	int Priority;//[Offset: 0x1e0, Size: 1]
	bool bSupportsKeyboardFocus;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1e4, Size: 1]
	bool bIsFocusable;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1e4, Size: 1]
	bool bStopAction;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1e4, Size: 1]
	bool bHasScriptImplementedTick;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1e4, Size: 1]
	bool bHasScriptImplementedPaint;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1e4, Size: 1]
	enum TickFrequency;//[Offset: 0x1f0, Size: 1]
	InputComponent* InputComponent;//[Offset: 0x1f8, Size: 1]
	AnimationEventBinding[] AnimationCallbacks;//[Offset: 0x200, Size: 1]
	void UnregisterInputComponent();// 0x34004f0
	void UnbindFromAnimationStarted(WidgetAnimation* Animation, delegate Delegate);// 0x3400410
	void UnbindFromAnimationFinished(WidgetAnimation* Animation, delegate Delegate);// 0x3400330
	void UnbindAllFromAnimationStarted(WidgetAnimation* Animation);// 0x34002a0
	void UnbindAllFromAnimationFinished(WidgetAnimation* Animation);// 0x3400210
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void StopListeningForInputAction(FName ActionName, byte EventType);// 0x3400140
	void StopListeningForAllInputActions();// 0x3400120
	void StopAnimationsAndLatentActions();// 0x3400100
	void StopAnimation(const WidgetAnimation* InAnimation);// 0x3400070
	void StopAllAnimations();// 0x3400050
	void SetPositionInViewport(Vector2D Position, bool bRemoveDPIScale);// 0x33ffd50
	void SetPlaybackSpeed(const WidgetAnimation* InAnimation, float PlaybackSpeed);// 0x33ffc80
	void SetPadding(Margin InPadding);// 0x33ffbf0
	void SetOwningPlayer(PlayerController* LocalPlayerController);// 0x33ffb60
	void SetNumLoopsToPlay(const WidgetAnimation* InAnimation, int NumLoopsToPlay);// 0x33ffa90
	void SetInputActionPriority(int NewPriority);// 0x33ff830
	void SetInputActionBlocking(bool bShouldBlock);// 0x33ff7a0
	void SetForegroundColor(SlateColor InForegroundColor);// 0x33ff630
	void SetDesiredSizeInViewport(Vector2D Size);// 0x33ff5b0
	void SetColorAndOpacity(LinearColor InColorAndOpacity);// 0x33ff490
	void SetAnimationCurrentTime(const WidgetAnimation* InAnimation, float InTime);// 0x33ff3c0
	void SetAnchorsInViewport(Anchors Anchors);// 0x33ff330
	void SetAlignmentInViewport(Vector2D Alignment);// 0x33ff2b0
	void ReverseAnimation(const WidgetAnimation* InAnimation);// 0x33ff220
	void RemoveFromViewport();// 0x33ff200
	void RegisterInputComponent();// 0x33ff1e0
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void PlaySound(SoundBase* SoundToPlay);// 0x33ff150
	UMGSequencePlayer* PlayAnimationTimeRange(WidgetAnimation* InAnimation, float StartAtTime, float EndAtTime, int NumLoopsToPlay, byte PlayMode, float PlaybackSpeed, bool bRestoreState);// 0x33fef30
	UMGSequencePlayer* PlayAnimationReverse(WidgetAnimation* InAnimation, float PlaybackSpeed, bool bRestoreState);// 0x33fee10
	UMGSequencePlayer* PlayAnimationForward(WidgetAnimation* InAnimation, float PlaybackSpeed, bool bRestoreState);// 0x33fecf0
	UMGSequencePlayer* PlayAnimation(WidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, byte PlayMode, float PlaybackSpeed, bool bRestoreState);// 0x33feb20
	float PauseAnimation(const WidgetAnimation* InAnimation);// 0x33fea80
	EventReply OnTouchStarted(Geometry MyGeometry, out const PointerEvent InTouchEvent);// 0x1d69c50
	EventReply OnTouchMoved(Geometry MyGeometry, out const PointerEvent InTouchEvent);// 0x1d69c50
	EventReply OnTouchGesture(Geometry MyGeometry, out const PointerEvent GestureEvent);// 0x1d69c50
	EventReply OnTouchForceChanged(Geometry MyGeometry, out const PointerEvent InTouchEvent);// 0x1d69c50
	EventReply OnTouchEnded(Geometry MyGeometry, out const PointerEvent InTouchEvent);// 0x1d69c50
	void OnRemovedFromFocusPath(FocusEvent InFocusEvent);// 0x1d69c50
	EventReply OnPreviewMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	EventReply OnPreviewKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent);// 0x1d69c50
	void OnPaint(out PaintContext Context);// 0x1d69c50
	EventReply OnMouseWheel(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	EventReply OnMouseMove(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseCaptureLost();// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	EventReply OnMouseButtonDoubleClick(Geometry InMyGeometry, out const PointerEvent InMouseEvent);// 0x1d69c50
	EventReply OnMotionDetected(Geometry MyGeometry, MotionEvent InMotionEvent);// 0x1d69c50
	EventReply OnKeyUp(Geometry MyGeometry, KeyEvent InKeyEvent);// 0x1d69c50
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent);// 0x1d69c50
	EventReply OnKeyChar(Geometry MyGeometry, CharacterEvent InCharacterEvent);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	EventReply OnFocusReceived(Geometry MyGeometry, FocusEvent InFocusEvent);// 0x1d69c50
	void OnFocusLost(FocusEvent InFocusEvent);// 0x1d69c50
	bool OnDrop(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	bool OnDragOver(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void OnDragLeave(PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void OnDragEnter(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void OnDragDetected(Geometry MyGeometry, out const PointerEvent PointerEvent, out DragDropOperation* Operation);// 0x1d69c50
	void OnDragCancelled(out const PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void OnAnimationStarted(const WidgetAnimation* Animation);// 0x33fe9f0
	void OnAnimationFinished(const WidgetAnimation* Animation);// 0x33fe960
	EventReply OnAnalogValueChanged(Geometry MyGeometry, AnalogInputEvent InAnalogInputEvent);// 0x1d69c50
	void OnAddedToFocusPath(FocusEvent InFocusEvent);// 0x1d69c50
	void ListenForInputAction(FName ActionName, byte EventType, bool bConsume, delegate Callback);// 0x33fe7d0
	bool IsPlayingAnimation();// 0x33fe7a0
	bool IsListeningForInputAction(FName ActionName);// 0x33fe700
	bool IsInViewport();// 0x33fe4e0
	bool IsInteractable();// 0x1d69c50
	bool IsAnyAnimationPlaying();// 0x33fe6d0
	bool IsAnimationPlayingForward(const WidgetAnimation* InAnimation);// 0x33fe630
	bool IsAnimationPlaying(const WidgetAnimation* InAnimation);// 0x33fe590
	Pawn* GetOwningPlayerPawn();// 0x33fe540
	PlayerCameraManager* GetOwningPlayerCameraManager();// 0x33fe510
	bool GetIsVisible();// 0x33fe4e0
	float GetAnimationCurrentTime(const WidgetAnimation* InAnimation);// 0x33fe440
	Anchors GetAnchorsInViewport();// 0x33fe400
	Vector2D GetAlignmentInViewport();// 0x33fe3c0
	void FlushAnimations();// 0x33fe3a0
	void Destruct();// 0x1d69c50
	void Construct();// 0x1d69c50
	void CancelLatentActions();// 0x33fe340
	void BindToAnimationStarted(WidgetAnimation* Animation, delegate Delegate);// 0x33fe260
	void BindToAnimationFinished(WidgetAnimation* Animation, delegate Delegate);// 0x33fe180
	void BindToAnimationEvent(WidgetAnimation* Animation, delegate Delegate, enum AnimationEvent, FName UserTag);// 0x33fe000
	void AddToViewport(int ZOrder);// 0x33fdf70
	bool AddToPlayerScreen(int ZOrder);// 0x33fded0

--------------------------------
Class: Widget.Visual.Object
	PanelSlot* Slot;//[Offset: 0x28, Size: 1]
	delegate bIsEnabledDelegate;//[Offset: 0x30, Size: 1]
	FText ToolTipText;//[Offset: 0x40, Size: 1]
	delegate ToolTipTextDelegate;//[Offset: 0x58, Size: 1]
	Widget* ToolTipWidget;//[Offset: 0x68, Size: 1]
	delegate ToolTipWidgetDelegate;//[Offset: 0x70, Size: 1]
	delegate VisibilityDelegate;//[Offset: 0x80, Size: 1]
	WidgetTransform RenderTransform;//[Offset: 0x90, Size: 1]
	Vector2D RenderTransformPivot;//[Offset: 0xac, Size: 1]
	bool bIsVariable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb4, Size: 1]
	bool bCreatedByConstructionScript;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb4, Size: 1]
	bool bIsEnabled;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb4, Size: 1]
	bool bOverride_Cursor;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb4, Size: 1]
	SlateAccessibleWidgetData* AccessibleWidgetData;//[Offset: 0xb8, Size: 1]
	bool bIsVolatile;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc0, Size: 1]
	byte cursor;//[Offset: 0xc1, Size: 1]
	enum Clipping;//[Offset: 0xc2, Size: 1]
	enum Visibility;//[Offset: 0xc3, Size: 1]
	float RenderOpacity;//[Offset: 0xc4, Size: 1]
	WidgetNavigation* Navigation;//[Offset: 0xc8, Size: 1]
	enum FlowDirectionPreference;//[Offset: 0xd0, Size: 1]
	PropertyBinding*[] NativeBindings;//[Offset: 0xf8, Size: 1]
	void SetVisibility(enum InVisibility);// 0x3403d70
	void SetUserFocus(PlayerController* PlayerController);// 0x3403b40
	void SetToolTipText(out const FText InToolTipText);// 0x3403a70
	void SetToolTip(Widget* Widget);// 0x34039e0
	void SetRenderTranslation(Vector2D Translation);// 0x34038d0
	void SetRenderTransformPivot(Vector2D Pivot);// 0x3403850
	void SetRenderTransformAngle(float Angle);// 0x34037d0
	void SetRenderTransform(WidgetTransform InTransform);// 0x34036f0
	void SetRenderShear(Vector2D Shear);// 0x3403670
	void SetRenderScale(Vector2D Scale);// 0x34035f0
	void SetRenderOpacity(float InOpacity);// 0x3403570
	void SetNavigationRuleExplicit(enum Direction, Widget* InWidget);// 0x3403410
	void SetNavigationRuleCustomBoundary(enum Direction, delegate InCustomDelegate);// 0x3403320
	void SetNavigationRuleCustom(enum Direction, delegate InCustomDelegate);// 0x3403230
	void SetNavigationRuleBase(enum Direction, enum Rule);// 0x3403160
	void SetNavigationRule(enum Direction, enum Rule, FName WidgetToFocus);// 0x3403050
	void SetKeyboardFocus();// 0x3403030
	void SetIsEnabled(bool bInIsEnabled);// 0x3402fa0
	void SetFocus();// 0x3402f00
	void SetCursor(byte InCursor);// 0x3402e80
	void SetClipping(enum InClipping);// 0x3402e00
	void SetAllNavigationRules(enum Rule, FName WidgetToFocus);// 0x3402d30
	void ResetCursor();// 0x3402d10
	void RemoveFromParent();// 0x3402cf0
	EventReply OnReply__DelegateSignature();// 0x1d69c50
	EventReply OnPointerEvent__DelegateSignature(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	bool IsVisible();// 0x3402cc0
	bool IsHovered();// 0xd45870
	void InvalidateLayoutAndVolatility();// 0x3402ca0
	bool HasUserFocusedDescendants(PlayerController* PlayerController);// 0x3402c00
	bool HasUserFocus(PlayerController* PlayerController);// 0x3402b60
	bool HasMouseCaptureByUser(int UserIndex, int PointerIndex);// 0x3402a90
	bool HasMouseCapture();// 0x3402a60
	bool HasKeyboardFocus();// 0x3402a30
	bool HasFocusedDescendants();// 0x3402a00
	bool HasAnyUserFocus();// 0x34029d0
	Widget* GetWidget__DelegateSignature();// 0x1d69c50
	enum GetVisibility();// 0x34029a0
	Geometry GetTickSpaceGeometry();// 0x3402880
	FText GetText__DelegateSignature();// 0x1d69c50
	enum GetSlateVisibility__DelegateSignature();// 0x1d69c50
	SlateColor GetSlateColor__DelegateSignature();// 0x1d69c50
	SlateBrush GetSlateBrush__DelegateSignature();// 0x1d69c50
	float GetRenderTransformAngle();// 0x3402820
	float GetRenderOpacity();// 0x34027f0
	PanelWidget* GetParent();// 0x34027c0
	Geometry GetPaintSpaceGeometry();// 0x3402780
	PlayerController* GetOwningPlayer();// 0x3402750
	LocalPlayer* GetOwningLocalPlayer();// 0x3402720
	byte GetMouseCursor__DelegateSignature();// 0x1d69c50
	LinearColor GetLinearColor__DelegateSignature();// 0x1d69c50
	bool GetIsEnabled();// 0x34026f0
	int GetInt32__DelegateSignature();// 0x1d69c50
	GameInstance* GetGameInstance();// 0x34026c0
	float GetFloat__DelegateSignature();// 0x1d69c50
	Vector2D GetDesiredSize();// 0x3402650
	enum GetClipping();// 0x3402620
	enum GetCheckBoxState__DelegateSignature();// 0x1d69c50
	Geometry GetCachedGeometry();// 0x34025e0
	bool GetBool__DelegateSignature();// 0x1d69c50
	FText GetAccessibleText();// 0x3402540
	FText GetAccessibleSummaryText();// 0x34024a0
	Widget* GenerateWidgetForString__DelegateSignature(FString Item);// 0x1d69c50
	Widget* GenerateWidgetForObject__DelegateSignature(Object* Item);// 0x1d69c50
	void ForceVolatile(bool bForce);// 0x3402410
	void ForceLayoutPrepass();// 0x34023f0

--------------------------------
Class: Visual.Object

--------------------------------
Class: PanelSlot.Visual.Object
	PanelWidget* Parent;//[Offset: 0x28, Size: 1]
	Widget* Content;//[Offset: 0x30, Size: 1]

--------------------------------
Class: PanelWidget.Widget.Visual.Object
	PanelSlot*[] Slots;//[Offset: 0x108, Size: 1]
	bool RemoveChildAt(int Index);// 0x33ef2a0
	bool RemoveChild(Widget* Content);// 0x33ef200
	bool HasChild(Widget* Content);// 0x33ef070
	bool HasAnyChildren();// 0x33ef040
	int GetChildrenCount();// 0x33eecf0
	int GetChildIndex(const Widget* Content);// 0x33eec50
	Widget* GetChildAt(int Index);// 0x33eebb0
	Widget*[] GetAllChildren();// 0x33eeb10
	void ClearChildren();// 0x33eea40
	PanelSlot* AddChild(Widget* Content);// 0x33ee900

--------------------------------
Class: WidgetAnimation.MovieSceneSequence.MovieSceneSignedObject.Object
	MovieScene* MovieScene;//[Offset: 0x60, Size: 1]
	WidgetAnimationBinding[] AnimationBindings;//[Offset: 0x68, Size: 1]
	bool bLegacyFinishOnStop;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x78, Size: 1]
	FString DisplayLabel;//[Offset: 0x80, Size: 1]
	void UnbindFromAnimationStarted(UserWidget* Widget, delegate Delegate);// 0x3404090
	void UnbindFromAnimationFinished(UserWidget* Widget, delegate Delegate);// 0x3403fb0
	void UnbindAllFromAnimationStarted(UserWidget* Widget);// 0x3403f20
	void UnbindAllFromAnimationFinished(UserWidget* Widget);// 0x3403e90
	float GetStartTime();// 0x3402850
	float GetEndTime();// 0x3402690
	void BindToAnimationStarted(UserWidget* Widget, delegate Delegate);// 0x3402310
	void BindToAnimationFinished(UserWidget* Widget, delegate Delegate);// 0x3402230

--------------------------------
Class: MovieSceneSequence.MovieSceneSignedObject.Object
	MovieSceneCompiledData* CompiledData;//[Offset: 0x50, Size: 1]
	enum DefaultCompletionMode;//[Offset: 0x58, Size: 1]
	bool bParentContextsAreSignificant;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x59, Size: 1]
	bool bPlayableDirectly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5a, Size: 1]
	enum SequenceFlags;//[Offset: 0x5b, Size: 1]
	MovieSceneObjectBindingID[] FindBindingsByTag(FName InBindingName);// 0x3175e80
	MovieSceneObjectBindingID FindBindingByTag(FName InBindingName);// 0x3175dd0

--------------------------------
Class: MovieSceneSignedObject.Object
	Guid Signature;//[Offset: 0x28, Size: 1]

--------------------------------
Class: MovieScene.MovieSceneSignedObject.Object
	MovieSceneSpawnable[] Spawnables;//[Offset: 0x50, Size: 1]
	MovieScenePossessable[] Possessables;//[Offset: 0x60, Size: 1]
	MovieSceneBinding[] ObjectBindings;//[Offset: 0x70, Size: 1]
	<FName,MovieSceneObjectBindingIDs> BindingGroups;//[Offset: 0x80, Size: 1]
	MovieSceneTrack*[] MasterTracks;//[Offset: 0xd0, Size: 1]
	MovieSceneTrack* CameraCutTrack;//[Offset: 0xe0, Size: 1]
	MovieSceneFrameRange SelectionRange;//[Offset: 0xe8, Size: 1]
	MovieSceneFrameRange PlaybackRange;//[Offset: 0xf8, Size: 1]
	FrameRate TickResolution;//[Offset: 0x108, Size: 1]
	FrameRate DisplayRate;//[Offset: 0x110, Size: 1]
	enum EvaluationType;//[Offset: 0x118, Size: 1]
	enum ClockSource;//[Offset: 0x119, Size: 1]
	SoftObjectPath CustomClockSourcePath;//[Offset: 0x120, Size: 1]
	MovieSceneMarkedFrame[] MarkedFrames;//[Offset: 0x138, Size: 1]

--------------------------------
Class: MovieSceneSpawnable
	Transform SpawnTransform;//[Offset: 0x0, Size: 1]
	FName[] Tags;//[Offset: 0x30, Size: 1]
	bool bContinuouslyRespawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x40, Size: 1]
	bool bNetAddressableName;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x41, Size: 1]
	bool bEvaluateTracksWhenNotSpawned;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x42, Size: 1]
	Guid Guid;//[Offset: 0x44, Size: 1]
	FString Name;//[Offset: 0x58, Size: 1]
	Object* ObjectTemplate;//[Offset: 0x68, Size: 1]
	Guid[] ChildPossessables;//[Offset: 0x70, Size: 1]
	enum Ownership;//[Offset: 0x80, Size: 1]
	FName LevelName;//[Offset: 0x84, Size: 1]

--------------------------------
Class: MovieScenePossessable
	FName[] Tags;//[Offset: 0x0, Size: 1]
	Guid Guid;//[Offset: 0x10, Size: 1]
	FString Name;//[Offset: 0x20, Size: 1]
	class Object* PossessedObjectClass;//[Offset: 0x30, Size: 1]
	Guid ParentGuid;//[Offset: 0x38, Size: 1]

--------------------------------
Class: MovieSceneBinding
	Guid ObjectGuid;//[Offset: 0x0, Size: 1]
	FString BindingName;//[Offset: 0x10, Size: 1]
	MovieSceneTrack*[] Tracks;//[Offset: 0x20, Size: 1]

--------------------------------
Class: MovieSceneTrack.MovieSceneSignedObject.Object
	MovieSceneTrackEvalOptions EvalOptions;//[Offset: 0x50, Size: 1]
	bool bIsEvalDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x55, Size: 1]
	int[] RowsDisabled;//[Offset: 0x58, Size: 1]
	Guid EvaluationFieldGuid;//[Offset: 0x6c, Size: 1]
	MovieSceneTrackEvaluationField EvaluationField;//[Offset: 0x80, Size: 1]

--------------------------------
Class: MovieSceneTrackEvalOptions
	bool bCanEvaluateNearestSection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bEvalNearestSection;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bEvaluateInPreroll;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bEvaluateInPostroll;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bEvaluateNearestSection;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneTrackEvaluationField
	MovieSceneTrackEvaluationFieldEntry[] Entries;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneTrackEvaluationFieldEntry
	MovieSceneSection* Section;//[Offset: 0x0, Size: 1]
	FrameNumberRange Range;//[Offset: 0x8, Size: 1]
	FrameNumber ForcedTime;//[Offset: 0x18, Size: 1]
	enum Flags;//[Offset: 0x1c, Size: 1]
	int16 LegacySortOrder;//[Offset: 0x1e, Size: 1]

--------------------------------
Class: MovieSceneSection.MovieSceneSignedObject.Object
	MovieSceneSectionEvalOptions EvalOptions;//[Offset: 0x50, Size: 1]
	MovieSceneEasingSettings Easing;//[Offset: 0x58, Size: 1]
	MovieSceneFrameRange SectionRange;//[Offset: 0x90, Size: 1]
	FrameNumber PreRollFrames;//[Offset: 0xa0, Size: 1]
	FrameNumber PostRollFrames;//[Offset: 0xa4, Size: 1]
	int RowIndex;//[Offset: 0xa8, Size: 1]
	int OverlapPriority;//[Offset: 0xac, Size: 1]
	bool bIsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb0, Size: 1]
	bool bIsLocked;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb0, Size: 1]
	float StartTime;//[Offset: 0xb4, Size: 1]
	float EndTime;//[Offset: 0xb8, Size: 1]
	float PrerollTime;//[Offset: 0xbc, Size: 1]
	float PostrollTime;//[Offset: 0xc0, Size: 1]
	bool bIsInfinite;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc4, Size: 1]
	bool bSupportsInfiniteRange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8, Size: 1]
	OptionalMovieSceneBlendType BlendType;//[Offset: 0xc9, Size: 1]
	None None;//[Size: 0]

--------------------------------
Class: MovieSceneSectionEvalOptions
	bool bCanEditCompletionMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	enum CompletionMode;//[Offset: 0x1, Size: 1]

--------------------------------
Class: MovieSceneEasingSettings
	int AutoEaseInDuration;//[Offset: 0x0, Size: 1]
	int AutoEaseOutDuration;//[Offset: 0x4, Size: 1]
	interface class None* EaseIn;//[Offset: 0x8, Size: 1]
	bool bManualEaseIn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x18, Size: 1]
	int ManualEaseInDuration;//[Offset: 0x1c, Size: 1]
	interface class None* EaseOut;//[Offset: 0x20, Size: 1]
	bool bManualEaseOut;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x30, Size: 1]
	int ManualEaseOutDuration;//[Offset: 0x34, Size: 1]

--------------------------------
Class: MovieSceneFrameRange

--------------------------------
Class: FrameNumber
	int Value;//[Offset: 0x0, Size: 1]

--------------------------------
Class: OptionalMovieSceneBlendType
	enum BlendType;//[Offset: 0x0, Size: 1]
	bool bIsValid;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]

--------------------------------
Class: FrameNumberRange
	FrameNumberRangeBound LowerBound;//[Offset: 0x0, Size: 1]
	FrameNumberRangeBound UpperBound;//[Offset: 0x8, Size: 1]

--------------------------------
Class: FrameNumberRangeBound
	byte Type;//[Offset: 0x0, Size: 1]
	FrameNumber Value;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MovieSceneObjectBindingIDs
	MovieSceneObjectBindingID[] Ids;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneObjectBindingID
	Guid Guid;//[Offset: 0x0, Size: 1]
	int SequenceID;//[Offset: 0x10, Size: 1]
	int ResolveParentIndex;//[Offset: 0x14, Size: 1]

--------------------------------
Class: FrameRate
	int Numerator;//[Offset: 0x0, Size: 1]
	int Denominator;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MovieSceneMarkedFrame
	FrameNumber FrameNumber;//[Offset: 0x0, Size: 1]
	FString Label;//[Offset: 0x8, Size: 1]
	bool bIsDeterminismFence;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x18, Size: 1]

--------------------------------
Class: MovieSceneCompiledData.Object
	MovieSceneEvaluationTemplate EvaluationTemplate;//[Offset: 0x28, Size: 1]
	MovieSceneSequenceHierarchy Hierarchy;//[Offset: 0x188, Size: 1]
	MovieSceneEntityComponentField EntityComponentField;//[Offset: 0x2a0, Size: 1]
	MovieSceneEvaluationField TrackTemplateField;//[Offset: 0x390, Size: 1]
	FrameTime[] DeterminismFences;//[Offset: 0x3c0, Size: 1]
	Guid CompiledSignature;//[Offset: 0x3d0, Size: 1]
	Guid CompilerVersion;//[Offset: 0x3e0, Size: 1]
	MovieSceneSequenceCompilerMaskStruct AccumulatedMask;//[Offset: 0x3f0, Size: 1]
	MovieSceneSequenceCompilerMaskStruct AllocatedMask;//[Offset: 0x3f1, Size: 1]
	enum AccumulatedFlags;//[Offset: 0x3f2, Size: 1]

--------------------------------
Class: MovieSceneEvaluationTemplate
	<MovieSceneTrackIdentifier,MovieSceneEvaluationTrack> Tracks;//[Offset: 0x0, Size: 1]
	Guid SequenceSignature;//[Offset: 0xa0, Size: 1]
	MovieSceneEvaluationTemplateSerialNumber TemplateSerialNumber;//[Offset: 0xb0, Size: 1]
	MovieSceneTemplateGenerationLedger TemplateLedger;//[Offset: 0xb8, Size: 1]

--------------------------------
Class: MovieSceneEvaluationTrack
	Guid ObjectBindingId;//[Offset: 0x0, Size: 1]
	uint16 EvaluationPriority;//[Offset: 0x10, Size: 1]
	enum EvaluationMethod;//[Offset: 0x12, Size: 1]
	MovieSceneTrack* SourceTrack;//[Offset: 0x14, Size: 1]
	MovieSceneEvalTemplatePtr[] ChildTemplates;//[Offset: 0x20, Size: 1]
	MovieSceneTrackImplementationPtr TrackTemplate;//[Offset: 0x30, Size: 1]
	FName EvaluationGroup;//[Offset: 0x68, Size: 1]
	bool bEvaluateInPreroll;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x70, Size: 1]
	bool bEvaluateInPostroll;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x70, Size: 1]
	bool bTearDownPriority;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x70, Size: 1]

--------------------------------
Class: MovieSceneEvalTemplatePtr

--------------------------------
Class: MovieSceneTrackImplementationPtr

--------------------------------
Class: MovieSceneTrackIdentifier
	uint32 Value;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneEvaluationTemplateSerialNumber
	uint32 Value;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneTemplateGenerationLedger
	MovieSceneTrackIdentifier LastTrackIdentifier;//[Offset: 0x0, Size: 1]
	<Guid,MovieSceneTrackIdentifier> TrackSignatureToTrackIdentifier;//[Offset: 0x8, Size: 1]
	<Guid,MovieSceneFrameRange> SubSectionRanges;//[Offset: 0x58, Size: 1]

--------------------------------
Class: MovieSceneSequenceHierarchy
	None None;//[Size: 0]

--------------------------------
Class: MovieSceneEntityComponentField
	MovieSceneEvaluationFieldEntityTree PersistentEntityTree;//[Offset: 0x0, Size: 1]
	MovieSceneEvaluationFieldEntityTree OneShotEntityTree;//[Offset: 0x60, Size: 1]
	MovieSceneEvaluationFieldEntity[] Entities;//[Offset: 0xc0, Size: 1]
	MovieSceneEvaluationFieldEntityMetaData[] EntityMetaData;//[Offset: 0xd0, Size: 1]
	MovieSceneEvaluationFieldSharedEntityMetaData[] SharedMetaData;//[Offset: 0xe0, Size: 1]

--------------------------------
Class: MovieSceneEvaluationFieldEntityTree

--------------------------------
Class: MovieSceneEvaluationFieldEntity
	MovieSceneEvaluationFieldEntityKey Key;//[Offset: 0x0, Size: 1]
	int SharedMetaDataIndex;//[Offset: 0xc, Size: 1]

--------------------------------
Class: MovieSceneEvaluationFieldEntityKey
	Object* EntityOwner;//[Offset: 0x0, Size: 1]
	uint32 EntityID;//[Offset: 0x8, Size: 1]

--------------------------------
Class: MovieSceneEvaluationFieldEntityMetaData
	FString OverrideBoundPropertyPath;//[Offset: 0x0, Size: 1]
	FrameNumber ForcedTime;//[Offset: 0x10, Size: 1]
	enum Flags;//[Offset: 0x18, Size: 1]
	bool bEvaluateInSequencePreRoll;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x19, Size: 1]
	bool bEvaluateInSequencePostRoll;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x19, Size: 1]

--------------------------------
Class: MovieSceneEvaluationFieldSharedEntityMetaData
	Guid ObjectBindingId;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneEvaluationField
	MovieSceneFrameRange[] Ranges;//[Offset: 0x0, Size: 1]
	MovieSceneEvaluationGroup[] Groups;//[Offset: 0x10, Size: 1]
	MovieSceneEvaluationMetaData[] MetaData;//[Offset: 0x20, Size: 1]

--------------------------------
Class: MovieSceneEvaluationGroup
	MovieSceneEvaluationGroupLUTIndex[] LUTIndices;//[Offset: 0x0, Size: 1]
	MovieSceneFieldEntry_EvaluationTrack[] TrackLUT;//[Offset: 0x10, Size: 1]
	MovieSceneFieldEntry_ChildTemplate[] SectionLUT;//[Offset: 0x20, Size: 1]

--------------------------------
Class: MovieSceneEvaluationGroupLUTIndex
	int NumInitPtrs;//[Offset: 0x0, Size: 1]
	int NumEvalPtrs;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MovieSceneFieldEntry_EvaluationTrack
	MovieSceneEvaluationFieldTrackPtr TrackPtr;//[Offset: 0x0, Size: 1]
	uint16 NumChildren;//[Offset: 0x8, Size: 1]

--------------------------------
Class: MovieSceneEvaluationFieldTrackPtr
	MovieSceneSequenceID SequenceID;//[Offset: 0x0, Size: 1]
	MovieSceneTrackIdentifier TrackIdentifier;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MovieSceneSequenceID
	uint32 Value;//[Offset: 0x0, Size: 1]

--------------------------------
Class: MovieSceneFieldEntry_ChildTemplate
	uint16 ChildIndex;//[Offset: 0x0, Size: 1]
	enum Flags;//[Offset: 0x2, Size: 1]
	FrameNumber ForcedTime;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MovieSceneEvaluationMetaData
	MovieSceneSequenceID[] ActiveSequences;//[Offset: 0x0, Size: 1]
	MovieSceneOrderedEvaluationKey[] ActiveEntities;//[Offset: 0x10, Size: 1]

--------------------------------
Class: MovieSceneOrderedEvaluationKey
	MovieSceneEvaluationKey Key;//[Offset: 0x0, Size: 1]
	uint16 SetupIndex;//[Offset: 0xc, Size: 1]
	uint16 TearDownIndex;//[Offset: 0xe, Size: 1]

--------------------------------
Class: MovieSceneEvaluationKey
	MovieSceneSequenceID SequenceID;//[Offset: 0x0, Size: 1]
	MovieSceneTrackIdentifier TrackIdentifier;//[Offset: 0x4, Size: 1]
	uint32 SectionIndex;//[Offset: 0x8, Size: 1]

--------------------------------
Class: FrameTime
	FrameNumber FrameNumber;//[Offset: 0x0, Size: 1]
	float SubFrame;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MovieSceneSequenceCompilerMaskStruct
	bool bHierarchy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bEvaluationTemplate;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bEvaluationTemplateField;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bEntityComponentField;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]

--------------------------------
Class: WidgetAnimationBinding
	FName WidgetName;//[Offset: 0x0, Size: 1]
	FName SlotWidgetName;//[Offset: 0x8, Size: 1]
	Guid AnimationGuid;//[Offset: 0x10, Size: 1]
	bool bIsRootWidget;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20, Size: 1]

--------------------------------
Class: Geometry

--------------------------------
Class: SlateColor
	LinearColor SpecifiedColor;//[Offset: 0x0, Size: 1]
	byte ColorUseRule;//[Offset: 0x10, Size: 1]

--------------------------------
Class: Margin
	float Left;//[Offset: 0x0, Size: 1]
	float Top;//[Offset: 0x4, Size: 1]
	float Right;//[Offset: 0x8, Size: 1]
	float Bottom;//[Offset: 0xc, Size: 1]

--------------------------------
Class: UMGSequencePlayer.Object
	WidgetAnimation* Animation;//[Offset: 0x260, Size: 1]
	MovieSceneRootEvaluationTemplateInstance RootTemplateInstance;//[Offset: 0x270, Size: 1]
	void SetUserTag(FName InUserTag);// 0x33fff40
	FName GetUserTag();// 0x33fe570

--------------------------------
Class: MovieSceneRootEvaluationTemplateInstance
	MovieSceneSequence* WeakRootSequence;//[Offset: 0x0, Size: 1]
	MovieSceneCompiledDataManager* CompiledDataManager;//[Offset: 0x8, Size: 1]
	MovieSceneEntitySystemLinker* EntitySystemLinker;//[Offset: 0x18, Size: 1]
	<MovieSceneSequenceID,Object*> DirectorInstances;//[Offset: 0x90, Size: 1]

--------------------------------
Class: MovieSceneCompiledDataManager.Object
	<int,MovieSceneSequenceHierarchy> Hierarchies;//[Offset: 0xd8, Size: 1]
	<int,MovieSceneEvaluationTemplate> TrackTemplates;//[Offset: 0x128, Size: 1]
	<int,MovieSceneEvaluationField> TrackTemplateFields;//[Offset: 0x178, Size: 1]
	<int,MovieSceneEntityComponentField> EntityComponentFields;//[Offset: 0x1c8, Size: 1]

--------------------------------
Class: MovieSceneEntitySystemLinker.Object
	MovieSceneEntitySystemGraph SystemGraph;//[Offset: 0x298, Size: 1]

--------------------------------
Class: MovieSceneEntitySystemGraph
	MovieSceneEntitySystemGraphNodes Nodes;//[Offset: 0x80, Size: 1]

--------------------------------
Class: MovieSceneEntitySystemGraphNodes

--------------------------------
Class: UMGSequenceTickManager.Object
	<UserWidget*> WeakUserWidgets;//[Offset: 0x28, Size: 1]
	MovieSceneEntitySystemLinker* Linker;//[Offset: 0x78, Size: 1]

--------------------------------
Class: NamedSlotBinding
	FName Name;//[Offset: 0x0, Size: 1]
	Widget* Content;//[Offset: 0x8, Size: 1]

--------------------------------
Class: WidgetTree.Object
	Widget* RootWidget;//[Offset: 0x28, Size: 1]

--------------------------------
Class: InputComponent.ActorComponent.Object
	CachedKeyToActionInfo[] CachedKeyToActionInfo;//[Offset: 0x120, Size: 1]
	bool WasControllerKeyJustReleased(Key Key);// 0x3f25fc0
	bool WasControllerKeyJustPressed(Key Key);// 0x3f25fc0
	bool IsControllerKeyDown(Key Key);// 0x3f25fc0
	void GetTouchState(int FingerIndex, out float LocationX, out float LocationY, out bool bIsCurrentlyPressed);// 0x3f25e40
	Vector GetControllerVectorKeyState(Key Key);// 0x3f25910
	void GetControllerMouseDelta(out float DeltaX, out float DeltaY);// 0x3f25830
	float GetControllerKeyTimeDown(Key Key);// 0x3f25600
	void GetControllerAnalogStickState(byte WhichStick, out float StickX, out float StickY);// 0x3f25700
	float GetControllerAnalogKeyState(Key Key);// 0x3f25600

--------------------------------
Class: CachedKeyToActionInfo
	PlayerInput* PlayerInput;//[Offset: 0x0, Size: 1]

--------------------------------
Class: AnimationEventBinding
	WidgetAnimation* Animation;//[Offset: 0x0, Size: 1]
	delegate Delegate;//[Offset: 0x8, Size: 1]
	enum AnimationEvent;//[Offset: 0x18, Size: 1]
	FName UserTag;//[Offset: 0x1c, Size: 1]

--------------------------------
Class: Anchors
	Vector2D Minimum;//[Offset: 0x0, Size: 1]
	Vector2D Maximum;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SoundBase.Object
	SoundClass* SoundClassObject;//[Offset: 0x30, Size: 1]
	bool bDebug;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x38, Size: 1]
	bool bOverrideConcurrency;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x38, Size: 1]
	bool bEnableBusSends;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x38, Size: 1]
	bool bEnableBaseSubmix;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x38, Size: 1]
	bool bEnableSubmixSends;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x38, Size: 1]
	bool bHasDelayNode;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x38, Size: 1]
	bool bHasConcatenatorNode;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x38, Size: 1]
	bool bBypassVolumeScaleForPriority;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x38, Size: 1]
	enum VirtualizationMode;//[Offset: 0x39, Size: 1]
	<SoundConcurrency*> ConcurrencySet;//[Offset: 0x90, Size: 1]
	SoundConcurrencySettings ConcurrencyOverrides;//[Offset: 0xe0, Size: 1]
	float Duration;//[Offset: 0x108, Size: 1]
	float MaxDistance;//[Offset: 0x10c, Size: 1]
	float TotalSamples;//[Offset: 0x110, Size: 1]
	float Priority;//[Offset: 0x114, Size: 1]
	SoundAttenuation* AttenuationSettings;//[Offset: 0x118, Size: 1]
	SoundSubmixBase* SoundSubmixObject;//[Offset: 0x120, Size: 1]
	SoundSubmixSendInfo[] SoundSubmixSends;//[Offset: 0x128, Size: 1]
	SoundEffectSourcePresetChain* SourceEffectChain;//[Offset: 0x138, Size: 1]
	SoundSourceBusSendInfo[] BusSends;//[Offset: 0x140, Size: 1]
	SoundSourceBusSendInfo[] PreEffectBusSends;//[Offset: 0x150, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x160, Size: 1]

--------------------------------
Class: SoundClass.Object
	SoundClassProperties properties;//[Offset: 0x28, Size: 1]
	SoundClass*[] ChildClasses;//[Offset: 0xa0, Size: 1]
	PassiveSoundMixModifier[] PassiveSoundMixModifiers;//[Offset: 0xb0, Size: 1]
	SoundClass* ParentClass;//[Offset: 0xc0, Size: 1]

--------------------------------
Class: SoundClassProperties
	float Volume;//[Offset: 0x0, Size: 1]
	float Pitch;//[Offset: 0x4, Size: 1]
	float LowPassFilterFrequency;//[Offset: 0x8, Size: 1]
	float AttenuationDistanceScale;//[Offset: 0xc, Size: 1]
	float LFEBleed;//[Offset: 0x10, Size: 1]
	float VoiceCenterChannelVolume;//[Offset: 0x14, Size: 1]
	float RadioFilterVolume;//[Offset: 0x18, Size: 1]
	float RadioFilterVolumeThreshold;//[Offset: 0x1c, Size: 1]
	bool bApplyEffects;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x20, Size: 1]
	bool bAlwaysPlay;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x20, Size: 1]
	bool bIsUISound;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x20, Size: 1]
	bool bIsMusic;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x20, Size: 1]
	bool bCenterChannelOnly;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x20, Size: 1]
	bool bApplyAmbientVolumes;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x20, Size: 1]
	bool bReverb;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x20, Size: 1]
	float Default2DReverbSendAmount;//[Offset: 0x24, Size: 1]
	SoundModulationDefaultSettings ModulationSettings;//[Offset: 0x28, Size: 1]
	byte OutputTarget;//[Offset: 0x68, Size: 1]
	enum LoadingBehavior;//[Offset: 0x69, Size: 1]
	SoundSubmix* DefaultSubmix;//[Offset: 0x70, Size: 1]

--------------------------------
Class: SoundModulationDefaultSettings
	SoundModulationDestinationSettings VolumeModulationDestination;//[Offset: 0x0, Size: 1]
	SoundModulationDestinationSettings PitchModulationDestination;//[Offset: 0x10, Size: 1]
	SoundModulationDestinationSettings HighpassModulationDestination;//[Offset: 0x20, Size: 1]
	SoundModulationDestinationSettings LowpassModulationDestination;//[Offset: 0x30, Size: 1]

--------------------------------
Class: SoundModulationDestinationSettings
	float Value;//[Offset: 0x0, Size: 1]
	SoundModulatorBase* Modulator;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SoundModulatorBase.Object

--------------------------------
Class: SoundSubmix.SoundSubmixWithParentBase.SoundSubmixBase.Object
	bool bMuteWhenBackgrounded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x40, Size: 1]
	None*[] SubmixEffectChain;//[Offset: 0x48, Size: 1]
	None* AmbisonicsPluginSettings;//[Offset: 0x58, Size: 1]
	int EnvelopeFollowerAttackTime;//[Offset: 0x60, Size: 1]
	int EnvelopeFollowerReleaseTime;//[Offset: 0x64, Size: 1]
	enum GainMode;//[Offset: 0x68, Size: 1]
	float OutputVolume;//[Offset: 0x6c, Size: 1]
	float WetLevel;//[Offset: 0x70, Size: 1]
	float DryLevel;//[Offset: 0x74, Size: 1]
	SoundModulationDestinationSettings OutputVolumeModulation;//[Offset: 0x78, Size: 1]
	SoundModulationDestinationSettings WetLevelModulation;//[Offset: 0x88, Size: 1]
	SoundModulationDestinationSettings DryLevelModulation;//[Offset: 0x98, Size: 1]
	MulticastInlineDelegateProperty OnSubmixRecordedFileDone;//[Size: 1]
	void StopSpectralAnalysis(const Object* WorldContextObject);// 0x400a870
	void StopRecordingOutput(const Object* WorldContextObject, enum ExportType, FString Name, FString Path, SoundWave* ExistingSoundWaveToOverwrite);// 0x400a650
	void StopEnvelopeFollowing(const Object* WorldContextObject);// 0x400a5c0
	void StartSpectralAnalysis(const Object* WorldContextObject, enum FFTSize, enum InterpolationMethod, enum WindowType, float HopSize, enum SpectrumType);// 0x400a3e0
	void StartRecordingOutput(const Object* WorldContextObject, float ExpectedDuration);// 0x400a310
	void StartEnvelopeFollowing(const Object* WorldContextObject);// 0x400a280
	void SetSubmixOutputVolume(const Object* WorldContextObject, float InOutputVolume);// 0x400a1b0
	void RemoveSpectralAnalysisDelegate(const Object* WorldContextObject, out const delegate OnSubmixSpectralAnalysisBP);// 0x400a0c0
	void AddSpectralAnalysisDelegate(const Object* WorldContextObject, out const SoundSubmixSpectralAnalysisBandSettings[] InBandSettings, out const delegate OnSubmixSpectralAnalysisBP, float UpdateRate, float DecibelNoiseFloor, bool bDoNormalize, bool bDoAutoRange, float AutoRangeAttackTime, float AutoRangeReleaseTime);// 0x4009da0
	void AddEnvelopeFollowerDelegate(const Object* WorldContextObject, out const delegate OnSubmixEnvelopeBP);// 0x4009cb0

--------------------------------
Class: SoundSubmixWithParentBase.SoundSubmixBase.Object
	SoundSubmixBase* ParentSubmix;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SoundSubmixBase.Object
	SoundSubmixBase*[] ChildSubmixes;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SoundWave.SoundBase.Object
	int CompressionQuality;//[Offset: 0x170, Size: 1]
	int StreamingPriority;//[Offset: 0x174, Size: 1]
	enum SampleRateQuality;//[Offset: 0x178, Size: 1]
	byte SoundGroup;//[Offset: 0x17a, Size: 1]
	bool bLooping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x17b, Size: 1]
	bool bStreaming;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x17b, Size: 1]
	bool bSeekableStreaming;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x17b, Size: 1]
	enum LoadingBehavior;//[Offset: 0x17c, Size: 1]
	bool bMature;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x17d, Size: 1]
	bool bManualWordWrap;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x17d, Size: 1]
	bool bSingleLine;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x17e, Size: 1]
	bool bIsAmbisonics;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x17e, Size: 1]
	SoundModulationDefaultRoutingSettings ModulationSettings;//[Offset: 0x180, Size: 1]
	float[] FrequenciesToAnalyze;//[Offset: 0x1c8, Size: 1]
	SoundWaveSpectralTimeData[] CookedSpectralTimeData;//[Offset: 0x1d8, Size: 1]
	SoundWaveEnvelopeTimeData[] CookedEnvelopeTimeData;//[Offset: 0x1e8, Size: 1]
	int InitialChunkSize;//[Offset: 0x1f8, Size: 1]
	FString SpokenText;//[Offset: 0x240, Size: 1]
	float SubtitlePriority;//[Offset: 0x250, Size: 1]
	float Volume;//[Offset: 0x254, Size: 1]
	float Pitch;//[Offset: 0x258, Size: 1]
	int NumChannels;//[Offset: 0x25c, Size: 1]
	int SampleRate;//[Offset: 0x260, Size: 1]
	SubtitleCue[] Subtitles;//[Offset: 0x270, Size: 1]
	CurveTable* Curves;//[Offset: 0x280, Size: 1]
	CurveTable* InternalCurves;//[Offset: 0x288, Size: 1]

--------------------------------
Class: SoundModulationDefaultRoutingSettings.SoundModulationDefaultSettings
	enum VolumeRouting;//[Offset: 0x40, Size: 1]
	enum PitchRouting;//[Offset: 0x41, Size: 1]
	enum HighpassRouting;//[Offset: 0x42, Size: 1]
	enum LowpassRouting;//[Offset: 0x43, Size: 1]

--------------------------------
Class: SoundWaveSpectralTimeData
	SoundWaveSpectralDataEntry[] Data;//[Offset: 0x0, Size: 1]
	float TimeSec;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SoundWaveSpectralDataEntry
	float Magnitude;//[Offset: 0x0, Size: 1]
	float NormalizedMagnitude;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SoundWaveEnvelopeTimeData
	float Amplitude;//[Offset: 0x0, Size: 1]
	float TimeSec;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SubtitleCue
	FText Text;//[Offset: 0x0, Size: 1]
	float Time;//[Offset: 0x18, Size: 1]

--------------------------------
Class: CurveTable.Object

--------------------------------
Class: SoundSubmixSpectralAnalysisBandSettings
	float BandFrequency;//[Offset: 0x0, Size: 1]
	int AttackTimeMsec;//[Offset: 0x4, Size: 1]
	int ReleaseTimeMsec;//[Offset: 0x8, Size: 1]
	float QFactor;//[Offset: 0xc, Size: 1]

--------------------------------
Class: PassiveSoundMixModifier
	SoundMix* SoundMix;//[Offset: 0x0, Size: 1]
	float MinVolumeThreshold;//[Offset: 0x8, Size: 1]
	float MaxVolumeThreshold;//[Offset: 0xc, Size: 1]

--------------------------------
Class: SoundMix.Object
	bool bApplyEQ;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28, Size: 1]
	float EQPriority;//[Offset: 0x2c, Size: 1]
	AudioEQEffect EQSettings;//[Offset: 0x30, Size: 1]
	SoundClassAdjuster[] SoundClassEffects;//[Offset: 0x70, Size: 1]
	float InitialDelay;//[Offset: 0x80, Size: 1]
	float FadeInTime;//[Offset: 0x84, Size: 1]
	float Duration;//[Offset: 0x88, Size: 1]
	float FadeOutTime;//[Offset: 0x8c, Size: 1]

--------------------------------
Class: AudioEQEffect.AudioEffectParameters
	float FrequencyCenter0;//[Offset: 0x10, Size: 1]
	float Gain0;//[Offset: 0x14, Size: 1]
	float Bandwidth0;//[Offset: 0x18, Size: 1]
	float FrequencyCenter1;//[Offset: 0x1c, Size: 1]
	float Gain1;//[Offset: 0x20, Size: 1]
	float Bandwidth1;//[Offset: 0x24, Size: 1]
	float FrequencyCenter2;//[Offset: 0x28, Size: 1]
	float Gain2;//[Offset: 0x2c, Size: 1]
	float Bandwidth2;//[Offset: 0x30, Size: 1]
	float FrequencyCenter3;//[Offset: 0x34, Size: 1]
	float Gain3;//[Offset: 0x38, Size: 1]
	float Bandwidth3;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: AudioEffectParameters

--------------------------------
Class: SoundClassAdjuster
	SoundClass* SoundClassObject;//[Offset: 0x0, Size: 1]
	float VolumeAdjuster;//[Offset: 0x8, Size: 1]
	float PitchAdjuster;//[Offset: 0xc, Size: 1]
	float LowPassFilterFrequency;//[Offset: 0x10, Size: 1]
	bool bApplyToChildren;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x14, Size: 1]
	float VoiceCenterChannelVolumeAdjuster;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SoundConcurrency.Object
	SoundConcurrencySettings Concurrency;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SoundConcurrencySettings
	int MaxCount;//[Offset: 0x0, Size: 1]
	bool bLimitToOwner;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4, Size: 1]
	byte ResolutionRule;//[Offset: 0x8, Size: 1]
	float RetriggerTime;//[Offset: 0xc, Size: 1]
	float VolumeScale;//[Offset: 0x10, Size: 1]
	enum VolumeScaleMode;//[Offset: 0x14, Size: 1]
	float VolumeScaleAttackTime;//[Offset: 0x18, Size: 1]
	bool bVolumeScaleCanRelease;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c, Size: 1]
	float VolumeScaleReleaseTime;//[Offset: 0x20, Size: 1]
	float VoiceStealReleaseTime;//[Offset: 0x24, Size: 1]

--------------------------------
Class: SoundAttenuation.Object
	SoundAttenuationSettings Attenuation;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SoundAttenuationSettings.BaseAttenuationSettings
	bool bAttenuate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb0, Size: 1]
	bool bSpatialize;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb0, Size: 1]
	bool bAttenuateWithLPF;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb0, Size: 1]
	bool bEnableListenerFocus;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb0, Size: 1]
	bool bEnableFocusInterpolation;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xb0, Size: 1]
	bool bEnableOcclusion;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xb0, Size: 1]
	bool bUseComplexCollisionForOcclusion;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xb0, Size: 1]
	bool bEnableReverbSend;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xb0, Size: 1]
	bool bEnablePriorityAttenuation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb1, Size: 1]
	bool bApplyNormalizationToStereoSounds;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb1, Size: 1]
	bool bEnableLogFrequencyScaling;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb1, Size: 1]
	bool bEnableSubmixSends;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb1, Size: 1]
	byte SpatializationAlgorithm;//[Offset: 0xb2, Size: 1]
	float BinauralRadius;//[Offset: 0xb4, Size: 1]
	enum AbsorptionMethod;//[Offset: 0xb8, Size: 1]
	byte OcclusionTraceChannel;//[Offset: 0xb9, Size: 1]
	enum ReverbSendMethod;//[Offset: 0xba, Size: 1]
	enum PriorityAttenuationMethod;//[Offset: 0xbb, Size: 1]
	float OmniRadius;//[Offset: 0xbc, Size: 1]
	float StereoSpread;//[Offset: 0xc0, Size: 1]
	float LPFRadiusMin;//[Offset: 0xc4, Size: 1]
	float LPFRadiusMax;//[Offset: 0xc8, Size: 1]
	RuntimeFloatCurve CustomLowpassAirAbsorptionCurve;//[Offset: 0xd0, Size: 1]
	RuntimeFloatCurve CustomHighpassAirAbsorptionCurve;//[Offset: 0x158, Size: 1]
	float LPFFrequencyAtMin;//[Offset: 0x1e0, Size: 1]
	float LPFFrequencyAtMax;//[Offset: 0x1e4, Size: 1]
	float HPFFrequencyAtMin;//[Offset: 0x1e8, Size: 1]
	float HPFFrequencyAtMax;//[Offset: 0x1ec, Size: 1]
	float FocusAzimuth;//[Offset: 0x1f0, Size: 1]
	float NonFocusAzimuth;//[Offset: 0x1f4, Size: 1]
	float FocusDistanceScale;//[Offset: 0x1f8, Size: 1]
	float NonFocusDistanceScale;//[Offset: 0x1fc, Size: 1]
	float FocusPriorityScale;//[Offset: 0x200, Size: 1]
	float NonFocusPriorityScale;//[Offset: 0x204, Size: 1]
	float FocusVolumeAttenuation;//[Offset: 0x208, Size: 1]
	float NonFocusVolumeAttenuation;//[Offset: 0x20c, Size: 1]
	float FocusAttackInterpSpeed;//[Offset: 0x210, Size: 1]
	float FocusReleaseInterpSpeed;//[Offset: 0x214, Size: 1]
	float OcclusionLowPassFilterFrequency;//[Offset: 0x218, Size: 1]
	float OcclusionVolumeAttenuation;//[Offset: 0x21c, Size: 1]
	float OcclusionInterpolationTime;//[Offset: 0x220, Size: 1]
	float ReverbWetLevelMin;//[Offset: 0x224, Size: 1]
	float ReverbWetLevelMax;//[Offset: 0x228, Size: 1]
	float ReverbDistanceMin;//[Offset: 0x22c, Size: 1]
	float ReverbDistanceMax;//[Offset: 0x230, Size: 1]
	float ManualReverbSendLevel;//[Offset: 0x234, Size: 1]
	RuntimeFloatCurve CustomReverbSendCurve;//[Offset: 0x238, Size: 1]
	AttenuationSubmixSendSettings[] SubmixSendSettings;//[Offset: 0x2c0, Size: 1]
	float PriorityAttenuationMin;//[Offset: 0x2d0, Size: 1]
	float PriorityAttenuationMax;//[Offset: 0x2d4, Size: 1]
	float PriorityAttenuationDistanceMin;//[Offset: 0x2d8, Size: 1]
	float PriorityAttenuationDistanceMax;//[Offset: 0x2dc, Size: 1]
	float ManualPriorityAttenuation;//[Offset: 0x2e0, Size: 1]
	RuntimeFloatCurve CustomPriorityAttenuationCurve;//[Offset: 0x2e8, Size: 1]
	SoundAttenuationPluginSettings PluginSettings;//[Offset: 0x370, Size: 1]

--------------------------------
Class: BaseAttenuationSettings
	enum DistanceAlgorithm;//[Offset: 0x8, Size: 1]
	byte AttenuationShape;//[Offset: 0x9, Size: 1]
	float dBAttenuationAtMax;//[Offset: 0xc, Size: 1]
	enum FalloffMode;//[Offset: 0x10, Size: 1]
	Vector AttenuationShapeExtents;//[Offset: 0x14, Size: 1]
	float ConeOffset;//[Offset: 0x20, Size: 1]
	float FalloffDistance;//[Offset: 0x24, Size: 1]
	RuntimeFloatCurve CustomAttenuationCurve;//[Offset: 0x28, Size: 1]

--------------------------------
Class: RuntimeFloatCurve
	RichCurve EditorCurveData;//[Offset: 0x0, Size: 1]
	CurveFloat* ExternalCurve;//[Offset: 0x80, Size: 1]

--------------------------------
Class: AttenuationSubmixSendSettings
	SoundSubmixBase* Submix;//[Offset: 0x0, Size: 1]
	enum SubmixSendMethod;//[Offset: 0x8, Size: 1]
	float SubmixSendLevelMin;//[Offset: 0xc, Size: 1]
	float SubmixSendLevelMax;//[Offset: 0x10, Size: 1]
	float SubmixSendDistanceMin;//[Offset: 0x14, Size: 1]
	float SubmixSendDistanceMax;//[Offset: 0x18, Size: 1]
	float ManualSubmixSendLevel;//[Offset: 0x1c, Size: 1]
	RuntimeFloatCurve CustomSubmixSendCurve;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SoundAttenuationPluginSettings
	SpatializationPluginSourceSettingsBase*[] SpatializationPluginSettingsArray;//[Offset: 0x0, Size: 1]
	OcclusionPluginSourceSettingsBase*[] OcclusionPluginSettingsArray;//[Offset: 0x10, Size: 1]
	ReverbPluginSourceSettingsBase*[] ReverbPluginSettingsArray;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SpatializationPluginSourceSettingsBase.Object

--------------------------------
Class: OcclusionPluginSourceSettingsBase.Object

--------------------------------
Class: ReverbPluginSourceSettingsBase.Object

--------------------------------
Class: SoundSubmixSendInfo
	enum SendLevelControlMethod;//[Offset: 0x0, Size: 1]
	enum SendStage;//[Offset: 0x1, Size: 1]
	SoundSubmixBase* SoundSubmix;//[Offset: 0x8, Size: 1]
	float SendLevel;//[Offset: 0x10, Size: 1]
	float MinSendLevel;//[Offset: 0x14, Size: 1]
	float MaxSendLevel;//[Offset: 0x18, Size: 1]
	float MinSendDistance;//[Offset: 0x1c, Size: 1]
	float MaxSendDistance;//[Offset: 0x20, Size: 1]
	RuntimeFloatCurve CustomSendLevelCurve;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SoundEffectSourcePresetChain.Object
	SourceEffectChainEntry[] Chain;//[Offset: 0x28, Size: 1]
	bool bPlayEffectChainTails;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x38, Size: 1]

--------------------------------
Class: SourceEffectChainEntry
	None* Preset;//[Offset: 0x0, Size: 1]
	bool bBypass;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]

--------------------------------
Class: SoundSourceBusSendInfo
	enum SourceBusSendLevelControlMethod;//[Offset: 0x0, Size: 1]
	SoundSourceBus* SoundSourceBus;//[Offset: 0x8, Size: 1]
	AudioBus* AudioBus;//[Offset: 0x10, Size: 1]
	float SendLevel;//[Offset: 0x18, Size: 1]
	float MinSendLevel;//[Offset: 0x1c, Size: 1]
	float MaxSendLevel;//[Offset: 0x20, Size: 1]
	float MinSendDistance;//[Offset: 0x24, Size: 1]
	float MaxSendDistance;//[Offset: 0x28, Size: 1]
	RuntimeFloatCurve CustomSendLevelCurve;//[Offset: 0x30, Size: 1]

--------------------------------
Class: SoundSourceBus.SoundWave.SoundBase.Object
	enum SourceBusChannels;//[Offset: 0x370, Size: 1]
	float SourceBusDuration;//[Offset: 0x374, Size: 1]
	AudioBus* AudioBus;//[Offset: 0x378, Size: 1]
	bool bAutoDeactivateWhenSilent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x380, Size: 1]

--------------------------------
Class: AudioBus.Object
	enum AudioBusChannels;//[Offset: 0x28, Size: 1]

--------------------------------
Class: PointerEvent.InputEvent

--------------------------------
Class: InputEvent

--------------------------------
Class: EventReply

--------------------------------
Class: FocusEvent

--------------------------------
Class: KeyEvent.InputEvent

--------------------------------
Class: WidgetTransform
	Vector2D Translation;//[Offset: 0x0, Size: 1]
	Vector2D Scale;//[Offset: 0x8, Size: 1]
	Vector2D Shear;//[Offset: 0x10, Size: 1]
	float Angle;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SlateAccessibleWidgetData.Object
	bool bCanChildrenBeAccessible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	enum AccessibleBehavior;//[Offset: 0x29, Size: 1]
	enum AccessibleSummaryBehavior;//[Offset: 0x2a, Size: 1]
	FText AccessibleText;//[Offset: 0x30, Size: 1]
	delegate AccessibleTextDelegate;//[Offset: 0x48, Size: 1]
	FText AccessibleSummaryText;//[Offset: 0x58, Size: 1]
	delegate AccessibleSummaryTextDelegate;//[Offset: 0x70, Size: 1]

--------------------------------
Class: WidgetNavigation.Object
	WidgetNavigationData Up;//[Offset: 0x28, Size: 1]
	WidgetNavigationData Down;//[Offset: 0x4c, Size: 1]
	WidgetNavigationData Left;//[Offset: 0x70, Size: 1]
	WidgetNavigationData Right;//[Offset: 0x94, Size: 1]
	WidgetNavigationData Next;//[Offset: 0xb8, Size: 1]
	WidgetNavigationData Previous;//[Offset: 0xdc, Size: 1]

--------------------------------
Class: WidgetNavigationData
	enum Rule;//[Offset: 0x0, Size: 1]
	FName WidgetToFocus;//[Offset: 0x4, Size: 1]
	Widget* Widget;//[Offset: 0xc, Size: 1]
	delegate CustomDelegate;//[Offset: 0x14, Size: 1]

--------------------------------
Class: PropertyBinding.Object
	Object* SourceObject;//[Offset: 0x28, Size: 1]
	DynamicPropertyPath SourcePath;//[Offset: 0x30, Size: 1]
	FName DestinationProperty;//[Offset: 0x60, Size: 1]

--------------------------------
Class: DynamicPropertyPath.CachedPropertyPath

--------------------------------
Class: CachedPropertyPath
	PropertyPathSegment[] Segments;//[Offset: 0x0, Size: 1]
	Function* CachedFunction;//[Offset: 0x18, Size: 1]

--------------------------------
Class: PropertyPathSegment
	FName Name;//[Offset: 0x0, Size: 1]
	int ArrayIndex;//[Offset: 0x8, Size: 1]
	Struct* Struct;//[Offset: 0x10, Size: 1]

--------------------------------
Class: Function.Struct.Field.Object

--------------------------------
Class: SlateBrush
	Vector2D ImageSize;//[Offset: 0x8, Size: 1]
	Margin Margin;//[Offset: 0x10, Size: 1]
	SlateColor TintColor;//[Offset: 0x20, Size: 1]
	Object* ResourceObject;//[Offset: 0x48, Size: 1]
	FName ResourceName;//[Offset: 0x50, Size: 1]
	Box2D UVRegion;//[Offset: 0x58, Size: 1]
	byte DrawAs;//[Offset: 0x6c, Size: 1]
	byte Tiling;//[Offset: 0x6d, Size: 1]
	byte Mirroring;//[Offset: 0x6e, Size: 1]
	byte ImageType;//[Offset: 0x6f, Size: 1]
	bool bIsDynamicallyLoaded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x80, Size: 1]
	bool bHasUObject;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x80, Size: 1]

--------------------------------
Class: Box2D
	Vector2D Min;//[Offset: 0x0, Size: 1]
	Vector2D Max;//[Offset: 0x8, Size: 1]
	byte bIsValid;//[Offset: 0x10, Size: 1]

--------------------------------
Class: LocalPlayer.Player.Object
	GameViewportClient* ViewportClient;//[Offset: 0x70, Size: 1]
	byte AspectRatioAxisConstraint;//[Offset: 0x94, Size: 1]
	class PlayerController* PendingLevelPlayerControllerClass;//[Offset: 0x98, Size: 1]
	bool bSentSplitJoin;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa0, Size: 1]
	int ControllerId;//[Offset: 0xb8, Size: 1]

--------------------------------
Class: GameViewportClient.ScriptViewportClient.Object
	Console* ViewportConsole;//[Offset: 0x40, Size: 1]
	DebugDisplayProperty[] DebugProperties;//[Offset: 0x48, Size: 1]
	int MaxSplitscreenPlayers;//[Offset: 0x68, Size: 1]
	World* World;//[Offset: 0x78, Size: 1]
	GameInstance* GameInstance;//[Offset: 0x80, Size: 1]
	void SSSwapControllers();// 0x2d867e0
	void ShowTitleSafeArea();// 0x2d86800
	void SetConsoleTarget(int PlayerIndex);// 0x3f20b90

--------------------------------
Class: ScriptViewportClient.Object

--------------------------------
Class: Console.Object
	LocalPlayer* ConsoleTargetPlayer;//[Offset: 0x38, Size: 1]
	Texture2D* DefaultTexture_Black;//[Offset: 0x40, Size: 1]
	Texture2D* DefaultTexture_White;//[Offset: 0x48, Size: 1]
	FString[] HistoryBuffer;//[Offset: 0x68, Size: 1]

--------------------------------
Class: DebugDisplayProperty
	Object* Obj;//[Offset: 0x0, Size: 1]
	class Object* WithinClass;//[Offset: 0x8, Size: 1]

--------------------------------
Class: GameInstance.Object
	LocalPlayer*[] LocalPlayers;//[Offset: 0x38, Size: 1]
	OnlineSession* OnlineSession;//[Offset: 0x48, Size: 1]
	Object*[] ReferencedObjects;//[Offset: 0x50, Size: 1]
	MulticastInlineDelegateProperty OnPawnControllerChangedDelegates;//[Size: 1]
	void ReceiveShutdown();// 0x1d69c50
	void ReceiveInit();// 0x1d69c50
	void HandleTravelError(byte FailureType);// 0x1d69c50
	void HandleNetworkError(byte FailureType, bool bIsServer);// 0x1d69c50
	void DebugRemovePlayer(int ControllerId);// 0x3f07720
	void DebugCreatePlayer(int ControllerId);// 0x3f07690

--------------------------------
Class: OnlineSession.Object

--------------------------------
Class: PaintContext

--------------------------------
Class: MotionEvent.InputEvent

--------------------------------
Class: CharacterEvent.InputEvent

--------------------------------
Class: DragDropOperation.Object
	FString Tag;//[Offset: 0x28, Size: 1]
	Object* Payload;//[Offset: 0x38, Size: 1]
	Widget* DefaultDragVisual;//[Offset: 0x40, Size: 1]
	enum Pivot;//[Offset: 0x48, Size: 1]
	Vector2D Offset;//[Offset: 0x4c, Size: 1]
	MulticastInlineDelegateProperty OnDrop;//[Size: 1]
	MulticastInlineDelegateProperty OnDragCancelled;//[Size: 1]
	MulticastInlineDelegateProperty OnDragged;//[Size: 1]
	void Drop(out const PointerEvent PointerEvent);// 0x33e6050
	void Dragged(out const PointerEvent PointerEvent);// 0x33e5f20
	void DragCancelled(out const PointerEvent PointerEvent);// 0x33e5df0

--------------------------------
Class: AnalogInputEvent.KeyEvent.InputEvent

--------------------------------
Class: ActiveForceFeedbackEffect
	ForceFeedbackEffect* ForceFeedbackEffect;//[Offset: 0x0, Size: 1]

--------------------------------
Class: ForceFeedbackEffect.Object
	ForceFeedbackChannelDetails[] ChannelDetails;//[Offset: 0x28, Size: 1]
	float Duration;//[Offset: 0x38, Size: 1]

--------------------------------
Class: ForceFeedbackChannelDetails
	bool bAffectsLeftLarge;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bAffectsLeftSmall;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bAffectsRightLarge;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bAffectsRightSmall;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	RuntimeFloatCurve Curve;//[Offset: 0x8, Size: 1]

--------------------------------
Class: NetConnection.Player.Object
	ChildConnection*[] Children;//[Offset: 0x48, Size: 1]
	NetDriver* Driver;//[Offset: 0x58, Size: 1]
	class PackageMap* PackageMapClass;//[Offset: 0x60, Size: 1]
	PackageMap* PackageMap;//[Offset: 0x68, Size: 1]
	Channel*[] OpenChannels;//[Offset: 0x70, Size: 1]
	Actor*[] SentTemporaries;//[Offset: 0x80, Size: 1]
	Actor* ViewTarget;//[Offset: 0x90, Size: 1]
	Actor* OwningActor;//[Offset: 0x98, Size: 1]
	int MaxPacket;//[Offset: 0xa0, Size: 1]
	bool InternalAck;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xa4, Size: 1]
	UniqueNetIdRepl PlayerId;//[Offset: 0x160, Size: 1]
	double LastReceiveTime;//[Offset: 0x1d0, Size: 1]
	Channel*[] ChannelsToTick;//[Offset: 0x1510, Size: 1]

--------------------------------
Class: ChildConnection.NetConnection.Player.Object
	NetConnection* Parent;//[Offset: 0x1ba8, Size: 1]

--------------------------------
Class: NetDriver.Object
	FString NetConnectionClassName;//[Offset: 0x30, Size: 1]
	FString ReplicationDriverClassName;//[Offset: 0x40, Size: 1]
	int MaxDownloadSize;//[Offset: 0x50, Size: 1]
	bool bClampListenServerTickRate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x54, Size: 1]
	int NetServerMaxTickRate;//[Offset: 0x58, Size: 1]
	int MaxNetTickRate;//[Offset: 0x5c, Size: 1]
	int MaxInternetClientRate;//[Offset: 0x60, Size: 1]
	int MaxClientRate;//[Offset: 0x64, Size: 1]
	float ServerTravelPause;//[Offset: 0x68, Size: 1]
	float SpawnPrioritySeconds;//[Offset: 0x6c, Size: 1]
	float RelevantTimeout;//[Offset: 0x70, Size: 1]
	float KeepAliveTime;//[Offset: 0x74, Size: 1]
	float InitialConnectTimeout;//[Offset: 0x78, Size: 1]
	float ConnectionTimeout;//[Offset: 0x7c, Size: 1]
	float TimeoutMultiplierForUnoptimizedBuilds;//[Offset: 0x80, Size: 1]
	bool bNoTimeouts;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x84, Size: 1]
	bool bNeverApplyNetworkEmulationSettings;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x85, Size: 1]
	NetConnection* ServerConnection;//[Offset: 0x88, Size: 1]
	NetConnection*[] ClientConnections;//[Offset: 0x90, Size: 1]
	int RecentlyDisconnectedTrackingTime;//[Offset: 0x100, Size: 1]
	World* World;//[Offset: 0x140, Size: 1]
	Package* WorldPackage;//[Offset: 0x148, Size: 1]
	class Object* NetConnectionClass;//[Offset: 0x170, Size: 1]
	class Object* ReplicationDriverClass;//[Offset: 0x178, Size: 1]
	FName NetDriverName;//[Offset: 0x190, Size: 1]
	ChannelDefinition[] ChannelDefinitions;//[Offset: 0x198, Size: 1]
	<FName,ChannelDefinition> ChannelDefinitionMap;//[Offset: 0x1a8, Size: 1]
	Channel*[] ActorChannelPool;//[Offset: 0x1f8, Size: 1]
	float Time;//[Offset: 0x210, Size: 1]
	ReplicationDriver* ReplicationDriver;//[Offset: 0x700, Size: 1]

--------------------------------
Class: Package.Object

--------------------------------
Class: ChannelDefinition
	FName ChannelName;//[Offset: 0x0, Size: 1]
	FName ClassName;//[Offset: 0x8, Size: 1]
	class Object* ChannelClass;//[Offset: 0x10, Size: 1]
	int StaticChannelIndex;//[Offset: 0x18, Size: 1]
	bool bTickOnCreate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c, Size: 1]
	bool bServerOpen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1d, Size: 1]
	bool bClientOpen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1e, Size: 1]
	bool bInitialServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f, Size: 1]
	bool bInitialClient;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20, Size: 1]

--------------------------------
Class: Channel.Object
	NetConnection* Connection;//[Offset: 0x28, Size: 1]

--------------------------------
Class: ReplicationDriver.Object

--------------------------------
Class: PackageMap.Object

--------------------------------
Class: TouchInterface.Object
	TouchInputControl[] Controls;//[Offset: 0x28, Size: 1]
	float ActiveOpacity;//[Offset: 0x38, Size: 1]
	float InactiveOpacity;//[Offset: 0x3c, Size: 1]
	float TimeUntilDeactive;//[Offset: 0x40, Size: 1]
	float TimeUntilReset;//[Offset: 0x44, Size: 1]
	float ActivationDelay;//[Offset: 0x48, Size: 1]
	bool bPreventRecenter;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4c, Size: 1]
	float StartupDelay;//[Offset: 0x50, Size: 1]

--------------------------------
Class: TouchInputControl
	Texture2D* Image1;//[Offset: 0x0, Size: 1]
	Texture2D* Image2;//[Offset: 0x8, Size: 1]
	Vector2D Center;//[Offset: 0x10, Size: 1]
	Vector2D VisualSize;//[Offset: 0x18, Size: 1]
	Vector2D ThumbSize;//[Offset: 0x20, Size: 1]
	Vector2D InteractionSize;//[Offset: 0x28, Size: 1]
	Vector2D InputScale;//[Offset: 0x30, Size: 1]
	Key MainInputKey;//[Offset: 0x38, Size: 1]
	Key AltInputKey;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SpectatorPawn.DefaultPawn.Pawn.Actor.Object

--------------------------------
Class: DefaultPawn.Pawn.Actor.Object
	float BaseTurnRate;//[Offset: 0x288, Size: 1]
	float BaseLookUpRate;//[Offset: 0x28c, Size: 1]
	PawnMovementComponent* MovementComponent;//[Offset: 0x290, Size: 1]
	SphereComponent* CollisionComponent;//[Offset: 0x298, Size: 1]
	StaticMeshComponent* MeshComponent;//[Offset: 0x2a0, Size: 1]
	bool bAddDefaultMovementBindings;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2a8, Size: 1]
	void TurnAtRate(float Rate);// 0x3ef8630
	void MoveUp_World(float Val);// 0x3ef7b30
	void MoveRight(float Val);// 0xdc8720
	void MoveForward(float Val);// 0x3ef7aa0
	void LookUpAtRate(float Rate);// 0x3ef7a10

--------------------------------
Class: SphereComponent.ShapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	float SphereRadius;//[Offset: 0x468, Size: 1]
	void SetSphereRadius(float InSphereRadius, bool bUpdateOverlaps);// 0x4012090
	float GetUnscaledSphereRadius();// 0x3ee46d0
	float GetShapeScale();// 0x40101f0
	float GetScaledSphereRadius();// 0x40101a0

--------------------------------
Class: StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	int ForcedLodModel;//[Offset: 0x478, Size: 1]
	int PreviousLODLevel;//[Offset: 0x47c, Size: 1]
	int MinLOD;//[Offset: 0x480, Size: 1]
	int SubDivisionStepSize;//[Offset: 0x484, Size: 1]
	StaticMesh* StaticMesh;//[Offset: 0x488, Size: 1]
	Color WireframeColorOverride;//[Offset: 0x490, Size: 1]
	bool bEvaluateWorldPositionOffset;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x494, Size: 1]
	bool bOverrideWireframeColor;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x494, Size: 1]
	bool bOverrideMinLOD;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x494, Size: 1]
	bool bOverrideNavigationExport;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x494, Size: 1]
	bool bForceNavigationObstacle;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x494, Size: 1]
	bool bDisallowMeshPaintPerInstance;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x494, Size: 1]
	bool bIgnoreInstanceForTextureStreaming;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x494, Size: 1]
	bool bOverrideLightMapRes;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x494, Size: 1]
	bool bCastDistanceFieldIndirectShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x495, Size: 1]
	bool bOverrideDistanceFieldSelfShadowBias;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x495, Size: 1]
	bool bUseSubDivisions;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x495, Size: 1]
	bool bUseDefaultCollision;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x495, Size: 1]
	bool bReverseCulling;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x495, Size: 1]
	int OverriddenLightMapRes;//[Offset: 0x498, Size: 1]
	float DistanceFieldIndirectShadowMinVisibility;//[Offset: 0x49c, Size: 1]
	float DistanceFieldSelfShadowBias;//[Offset: 0x4a0, Size: 1]
	float StreamingDistanceMultiplier;//[Offset: 0x4a4, Size: 1]
	StaticMeshComponentLODInfo[] LODData;//[Offset: 0x4a8, Size: 1]
	StreamingTextureBuildInfo[] StreamingTextureData;//[Offset: 0x4b8, Size: 1]
	LightmassPrimitiveSettings LightmassSettings;//[Offset: 0x4c8, Size: 1]
	bool SetStaticMesh(StaticMesh* NewMesh);// 0x401a710
	void SetReverseCulling(bool ReverseCulling);// 0x401a4c0
	void SetForcedLodModel(int NewForcedLodModel);// 0x401a100
	void SetEvaluateWorldPositionOffsetInRayTracing(bool NewValue);// 0x401a070
	void SetDistanceFieldSelfShadowBias(float NewValue);// 0x4019df0
	void OnRep_StaticMesh(StaticMesh* OldStaticMesh);// 0x4019d60
	void GetLocalBounds(out Vector Min, out Vector Max);// 0x4019bc0

--------------------------------
Class: StaticMeshComponentLODInfo

--------------------------------
Class: StreamingTextureBuildInfo
	uint32 PackedRelativeBox;//[Offset: 0x0, Size: 1]
	int TextureLevelIndex;//[Offset: 0x4, Size: 1]
	float TexelFactor;//[Offset: 0x8, Size: 1]

--------------------------------
Class: LightmassPrimitiveSettings
	bool bUseTwoSidedLighting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bShadowIndirectOnly;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bUseEmissiveForStaticLighting;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bUseVertexNormalForHemisphereGather;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	float EmissiveLightFalloffExponent;//[Offset: 0x4, Size: 1]
	float EmissiveLightExplicitInfluenceRadius;//[Offset: 0x8, Size: 1]
	float EmissiveBoost;//[Offset: 0xc, Size: 1]
	float DiffuseBoost;//[Offset: 0x10, Size: 1]
	float FullyOccludedSamplesFraction;//[Offset: 0x14, Size: 1]

--------------------------------
Class: ViewTargetTransitionParams
	float BlendTime;//[Offset: 0x0, Size: 1]
	byte BlendFunction;//[Offset: 0x4, Size: 1]
	float BlendExp;//[Offset: 0x8, Size: 1]
	bool bLockOutgoing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]

--------------------------------
Class: UpdateLevelVisibilityLevelInfo
	FName PackageName;//[Offset: 0x0, Size: 1]
	FName Filename;//[Offset: 0x8, Size: 1]
	bool bIsVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x10, Size: 1]

--------------------------------
Class: HapticFeedbackEffect_Base.Object

--------------------------------
Class: LatentActionInfo
	int Linkage;//[Offset: 0x0, Size: 1]
	int UUID;//[Offset: 0x4, Size: 1]
	FName ExecutionFunction;//[Offset: 0x8, Size: 1]
	Object* CallbackTarget;//[Offset: 0x10, Size: 1]

--------------------------------
Class: UpdateLevelStreamingLevelStatus
	FName PackageName;//[Offset: 0x0, Size: 1]
	int LODIndex;//[Offset: 0x8, Size: 1]
	bool bNewShouldBeLoaded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	bool bNewShouldBeVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd, Size: 1]
	bool bNewShouldBlockOnLoad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe, Size: 1]

--------------------------------
Class: ForceFeedbackParameters
	FName Tag;//[Offset: 0x0, Size: 1]
	bool bLooping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	bool bIgnoreTimeDilation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]
	bool bPlayWhilePaused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa, Size: 1]

--------------------------------
Class: ChildActorComponent.SceneComponent.ActorComponent.Object
	class Actor* ChildActorClass;//[Offset: 0x1f8, Size: 1]
	Actor* ChildActor;//[Offset: 0x200, Size: 1]
	Actor* ChildActorTemplate;//[Offset: 0x208, Size: 1]
	void SetChildActorClass(class Actor InClass);// 0x3eec650

--------------------------------
Class: Interface.Object

--------------------------------
Class: ActorTickFunction.TickFunction

--------------------------------
Class: RepMovement
	Vector LinearVelocity;//[Offset: 0x0, Size: 1]
	Vector AngularVelocity;//[Offset: 0xc, Size: 1]
	Vector Location;//[Offset: 0x18, Size: 1]
	Rotator Rotation;//[Offset: 0x24, Size: 1]
	bool bSimulatedPhysicSleep;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x30, Size: 1]
	bool bRepPhysics;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x30, Size: 1]
	enum LocationQuantizationLevel;//[Offset: 0x31, Size: 1]
	enum VelocityQuantizationLevel;//[Offset: 0x32, Size: 1]
	enum RotationQuantizationLevel;//[Offset: 0x33, Size: 1]

--------------------------------
Class: RepAttachment
	Actor* AttachParent;//[Offset: 0x0, Size: 1]
	Vector_NetQuantize100 LocationOffset;//[Offset: 0x8, Size: 1]
	Vector_NetQuantize100 RelativeScale3D;//[Offset: 0x14, Size: 1]
	Rotator RotationOffset;//[Offset: 0x20, Size: 1]
	FName AttachSocket;//[Offset: 0x2c, Size: 1]
	SceneComponent* AttachComponent;//[Offset: 0x38, Size: 1]

--------------------------------
Class: MatineeActor.Actor.Object
	None None;//[Size: 0]
	void Stop();// 0xd7df20
	void SetPosition(float NewPosition, bool bJump);// 0x3fa7460
	void SetLoopingState(bool bNewLooping);// 0xdc1c50
	void Reverse();// 0xd78600
	void Play();// 0xd7ddb0
	void Pause();// 0xd81a80
	void EnableGroupByName(FString GroupName, bool bEnable);// 0x3fa68b0
	void ChangePlaybackDirection();// 0xd78700

--------------------------------
Class: CustomPrimitiveData
	float[] Data;//[Offset: 0x0, Size: 1]

--------------------------------
Class: ActorComponentTickFunction.TickFunction

--------------------------------
Class: SimpleMemberReference
	Object* MemberParent;//[Offset: 0x0, Size: 1]
	FName MemberName;//[Offset: 0x8, Size: 1]
	Guid MemberGuid;//[Offset: 0x10, Size: 1]

--------------------------------
Class: LevelActorContainer.Object
	Actor*[] Actors;//[Offset: 0x28, Size: 1]

--------------------------------
Class: LevelScriptActor.Actor.Object
	bool bInputEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x228, Size: 1]
	void WorldOriginLocationChanged(IntVector OldOriginLocation, IntVector NewOriginLocation);// 0x1d69c50
	void SetCinematicMode(bool bCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);// 0x3f8e260
	bool RemoteEvent(FName EventName);// 0x3f8d9a0
	void LevelReset();// 0x1d69c50

--------------------------------
Class: IntVector
	int X;//[Offset: 0x0, Size: 1]
	int Y;//[Offset: 0x4, Size: 1]
	int Z;//[Offset: 0x8, Size: 1]

--------------------------------
Class: NavigationObjectBase.Actor.Object
	CapsuleComponent* CapsuleComponent;//[Offset: 0x230, Size: 1]
	BillboardComponent* GoodSprite;//[Offset: 0x238, Size: 1]
	BillboardComponent* BadSprite;//[Offset: 0x240, Size: 1]
	bool bIsPIEPlayerStart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x248, Size: 1]

--------------------------------
Class: BillboardComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	Texture2D* Sprite;//[Offset: 0x450, Size: 1]
	bool bIsScreenSizeScaled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x458, Size: 1]
	float ScreenSize;//[Offset: 0x45c, Size: 1]
	float U;//[Offset: 0x460, Size: 1]
	float UL;//[Offset: 0x464, Size: 1]
	float V;//[Offset: 0x468, Size: 1]
	float VL;//[Offset: 0x46c, Size: 1]
	void SetUV(int NewU, int NewUL, int NewV, int NewVL);// 0x3ecdb00
	void SetSpriteAndUV(Texture2D* NewSprite, int NewU, int NewUL, int NewV, int NewVL);// 0x3ecd7d0
	void SetSprite(Texture2D* NewSprite);// 0x2d86750

--------------------------------
Class: NavigationDataChunk.Object
	FName NavigationDataName;//[Offset: 0x28, Size: 1]

--------------------------------
Class: MapBuildDataRegistry.Object
	byte LevelLightingQuality;//[Offset: 0x28, Size: 1]

--------------------------------
Class: WorldSettings.Info.Actor.Object
	int VisibilityCellSize;//[Offset: 0x230, Size: 1]
	byte VisibilityAggressiveness;//[Offset: 0x234, Size: 1]
	bool bPrecomputeVisibility;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x235, Size: 1]
	bool bPlaceCellsOnlyAlongCameraTracks;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x235, Size: 1]
	bool bEnableWorldBoundsChecks;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x235, Size: 1]
	bool bEnableNavigationSystem;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x235, Size: 1]
	bool bEnableAISystem;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x235, Size: 1]
	bool bEnableWorldComposition;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x235, Size: 1]
	bool bUseClientSideLevelStreamingVolumes;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x235, Size: 1]
	bool bEnableWorldOriginRebasing;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x235, Size: 1]
	bool bWorldGravitySet;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x236, Size: 1]
	bool bGlobalGravitySet;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x236, Size: 1]
	bool bMinimizeBSPSections;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x236, Size: 1]
	bool bForceNoPrecomputedLighting;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x236, Size: 1]
	bool bHighPriorityLoading;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x236, Size: 1]
	bool bHighPriorityLoadingLocal;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x236, Size: 1]
	bool bOverrideDefaultBroadphaseSettings;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x236, Size: 1]
	NavigationSystemConfig* NavigationSystemConfig;//[Offset: 0x238, Size: 1]
	NavigationSystemConfig* NavigationSystemConfigOverride;//[Offset: 0x240, Size: 1]
	float WorldToMeters;//[Offset: 0x248, Size: 1]
	float KillZ;//[Offset: 0x24c, Size: 1]
	class DamageType* KillZDamageType;//[Offset: 0x250, Size: 1]
	float WorldGravityZ;//[Offset: 0x258, Size: 1]
	float GlobalGravityZ;//[Offset: 0x25c, Size: 1]
	class DefaultPhysicsVolume* DefaultPhysicsVolumeClass;//[Offset: 0x260, Size: 1]
	class PhysicsCollisionHandler* PhysicsCollisionHandlerClass;//[Offset: 0x268, Size: 1]
	class GameModeBase* DefaultGameMode;//[Offset: 0x270, Size: 1]
	class GameNetworkManager* GameNetworkManagerClass;//[Offset: 0x278, Size: 1]
	int PackedLightAndShadowMapTextureSize;//[Offset: 0x280, Size: 1]
	Vector DefaultColorScale;//[Offset: 0x284, Size: 1]
	float DefaultMaxDistanceFieldOcclusionDistance;//[Offset: 0x290, Size: 1]
	float GlobalDistanceFieldViewDistance;//[Offset: 0x294, Size: 1]
	float DynamicIndirectShadowsSelfShadowingIntensity;//[Offset: 0x298, Size: 1]
	ReverbSettings DefaultReverbSettings;//[Offset: 0x2a0, Size: 1]
	InteriorSettings DefaultAmbientZoneSettings;//[Offset: 0x2c0, Size: 1]
	SoundMix* DefaultBaseSoundMix;//[Offset: 0x2e8, Size: 1]
	float TimeDilation;//[Offset: 0x2f0, Size: 1]
	float MatineeTimeDilation;//[Offset: 0x2f4, Size: 1]
	float DemoPlayTimeDilation;//[Offset: 0x2f8, Size: 1]
	float MinGlobalTimeDilation;//[Offset: 0x2fc, Size: 1]
	float MaxGlobalTimeDilation;//[Offset: 0x300, Size: 1]
	float MinUndilatedFrameTime;//[Offset: 0x304, Size: 1]
	float MaxUndilatedFrameTime;//[Offset: 0x308, Size: 1]
	BroadphaseSettings BroadphaseSettings;//[Offset: 0x30c, Size: 1]
	PlayerState* Pauser;//[Offset: 0x350, Size: 1]
	NetViewer[] ReplicationViewers;//[Offset: 0x358, Size: 1]
	AssetUserData*[] AssetUserData;//[Offset: 0x368, Size: 1]
	PlayerState* PauserPlayerState;//[Offset: 0x378, Size: 1]
	int MaxNumberOfBookmarks;//[Offset: 0x380, Size: 1]
	class BookmarkBase* DefaultBookmarkClass;//[Offset: 0x388, Size: 1]
	BookmarkBase*[] BookmarkArray;//[Offset: 0x390, Size: 1]
	class BookmarkBase* LastBookmarkClass;//[Offset: 0x3a0, Size: 1]
	void OnRep_WorldGravityZ();// 0xd78d00

--------------------------------
Class: NavigationSystemConfig.Object
	SoftClassPath NavigationSystemClass;//[Offset: 0x28, Size: 1]
	NavAgentSelector SupportedAgentsMask;//[Offset: 0x40, Size: 1]
	FName DefaultAgentName;//[Offset: 0x44, Size: 1]
	bool bIsOverriden;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4c, Size: 1]

--------------------------------
Class: NavAgentSelector
	bool bSupportsAgent0;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bSupportsAgent1;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	bool bSupportsAgent2;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x0, Size: 1]
	bool bSupportsAgent3;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x0, Size: 1]
	bool bSupportsAgent4;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x0, Size: 1]
	bool bSupportsAgent5;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x0, Size: 1]
	bool bSupportsAgent6;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x0, Size: 1]
	bool bSupportsAgent7;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x0, Size: 1]
	bool bSupportsAgent8;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1, Size: 1]
	bool bSupportsAgent9;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1, Size: 1]
	bool bSupportsAgent10;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1, Size: 1]
	bool bSupportsAgent11;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1, Size: 1]
	bool bSupportsAgent12;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x1, Size: 1]
	bool bSupportsAgent13;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1, Size: 1]
	bool bSupportsAgent14;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x1, Size: 1]
	bool bSupportsAgent15;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x1, Size: 1]

--------------------------------
Class: DefaultPhysicsVolume.PhysicsVolume.Volume.Brush.Actor.Object

--------------------------------
Class: PhysicsCollisionHandler.Object
	float ImpactThreshold;//[Offset: 0x28, Size: 1]
	float ImpactReFireDelay;//[Offset: 0x2c, Size: 1]
	SoundBase* DefaultImpactSound;//[Offset: 0x30, Size: 1]
	float LastImpactSoundTime;//[Offset: 0x38, Size: 1]

--------------------------------
Class: GameModeBase.Info.Actor.Object
	FString OptionsString;//[Offset: 0x228, Size: 1]
	class GameSession* GameSessionClass;//[Offset: 0x238, Size: 1]
	class GameStateBase* GameStateClass;//[Offset: 0x240, Size: 1]
	class PlayerController* PlayerControllerClass;//[Offset: 0x248, Size: 1]
	class PlayerState* PlayerStateClass;//[Offset: 0x250, Size: 1]
	class HUD* HUDClass;//[Offset: 0x258, Size: 1]
	class Pawn* DefaultPawnClass;//[Offset: 0x260, Size: 1]
	class SpectatorPawn* SpectatorClass;//[Offset: 0x268, Size: 1]
	class PlayerController* ReplaySpectatorPlayerControllerClass;//[Offset: 0x270, Size: 1]
	class ServerStatReplicator* ServerStatReplicatorClass;//[Offset: 0x278, Size: 1]
	GameSession* GameSession;//[Offset: 0x280, Size: 1]
	GameStateBase* GameState;//[Offset: 0x288, Size: 1]
	ServerStatReplicator* ServerStatReplicator;//[Offset: 0x290, Size: 1]
	FText DefaultPlayerName;//[Offset: 0x298, Size: 1]
	bool bUseSeamlessTravel;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2b0, Size: 1]
	bool bStartPlayersAsSpectators;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2b0, Size: 1]
	bool bPauseable;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2b0, Size: 1]
	void StartPlay();// 0xd99590
	Pawn* SpawnDefaultPawnFor(Controller* NewPlayer, Actor* StartSpot);// 0x3f154e0
	Pawn* SpawnDefaultPawnAtTransform(Controller* NewPlayer, out const Transform SpawnTransform);// 0x3f153c0
	bool ShouldReset(Actor* ActorToReset);// 0x3f14e90
	void ReturnToMainMenuHost();// 0xd88c40
	void RestartPlayerAtTransform(Controller* NewPlayer, out const Transform SpawnTransform);// 0x3f13c90
	void RestartPlayerAtPlayerStart(Controller* NewPlayer, Actor* StartSpot);// 0x3f13bc0
	void RestartPlayer(Controller* NewPlayer);// 0xde51d0
	void ResetLevel();// 0xd88d30
	bool PlayerCanRestart(PlayerController* Player);// 0x3f13450
	bool MustSpectate(PlayerController* NewPlayerController);// 0x3f121b0
	void K2_PostLogin(PlayerController* NewPlayer);// 0x1d69c50
	void K2_OnSwapPlayerControllers(PlayerController* OldPC, PlayerController* NewPC);// 0x1d69c50
	void K2_OnRestartPlayer(Controller* NewPlayer);// 0x1d69c50
	void K2_OnLogout(Controller* ExitingController);// 0x1d69c50
	void K2_OnChangeName(Controller* Other, FString NewName, bool bNameChange);// 0x1d69c50
	Actor* K2_FindPlayerStart(Controller* Player, FString IncomingName);// 0x3f11610
	void InitStartSpot(Actor* StartSpot, Controller* NewPlayer);// 0x3f113f0
	void InitializeHUDForPlayer(PlayerController* NewPlayer);// 0xd5a5b0
	bool HasMatchStarted();// 0x3eeee60
	bool HasMatchEnded();// 0x3f11270
	void HandleStartingNewPlayer(PlayerController* NewPlayer);// 0xd91750
	int GetNumSpectators();// 0x3f10280
	int GetNumPlayers();// 0x3f10250
	class Object GetDefaultPawnClassForController(Controller* InController);// 0x3f0fb70
	Actor* FindPlayerStart(Controller* Player, FString IncomingName);// 0x3f0ec20
	Actor* ChoosePlayerStart(Controller* Player);// 0x3f0de30
	void ChangeName(None(None) None);// 0x3f0dcf0
	void CanSpectate(None(None) None);// 0x3f0dc00

--------------------------------
Class: GameSession.Info.Actor.Object
	int MaxSpectators;//[Offset: 0x228, Size: 1]
	int MaxPlayers;//[Offset: 0x22c, Size: 1]
	int MaxPartySize;//[Offset: 0x230, Size: 1]
	byte MaxSplitscreensPerConnection;//[Offset: 0x234, Size: 1]
	bool bRequiresPushToTalk;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x235, Size: 1]
	FName SessionName;//[Offset: 0x238, Size: 1]

--------------------------------
Class: GameStateBase.Info.Actor.Object
	class GameModeBase* GameModeClass;//[Offset: 0x228, Size: 1]
	GameModeBase* AuthorityGameMode;//[Offset: 0x230, Size: 1]
	class SpectatorPawn* SpectatorClass;//[Offset: 0x238, Size: 1]
	PlayerState*[] PlayerArray;//[Offset: 0x240, Size: 1]
	bool bReplicatedHasBegunPlay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x250, Size: 1]
	float ReplicatedWorldTimeSeconds;//[Offset: 0x254, Size: 1]
	float ServerWorldTimeSecondsDelta;//[Offset: 0x258, Size: 1]
	float ServerWorldTimeSecondsUpdateFrequency;//[Offset: 0x25c, Size: 1]
	void OnRep_SpectatorClass();// 0xd97a30
	void OnRep_ReplicatedWorldTimeSeconds();// 0xd99590
	void OnRep_ReplicatedHasBegunPlay();// 0xd97b40
	void OnRep_GameModeClass();// 0xd97b00
	bool HasMatchStarted();// 0x3f1a7b0
	bool HasMatchEnded();// 0x3f1a780
	bool HasBegunPlay();// 0xe0b940
	float GetServerWorldTimeSeconds();// 0xde95a0
	float GetPlayerStartTime(Controller* Controller);// 0x3f1a170
	float GetPlayerRespawnDelay(Controller* Controller);// 0x3f1a0d0

--------------------------------
Class: ServerStatReplicator.Info.Actor.Object
	bool bUpdateStatNet;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x228, Size: 1]
	bool bOverwriteClientStats;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x229, Size: 1]
	uint32 Channels;//[Offset: 0x22c, Size: 1]
	uint32 InRate;//[Offset: 0x230, Size: 1]
	uint32 OutRate;//[Offset: 0x234, Size: 1]
	uint32 MaxPacketOverhead;//[Offset: 0x23c, Size: 1]
	uint32 InRateClientMax;//[Offset: 0x240, Size: 1]
	uint32 InRateClientMin;//[Offset: 0x244, Size: 1]
	uint32 InRateClientAvg;//[Offset: 0x248, Size: 1]
	uint32 InPacketsClientMax;//[Offset: 0x24c, Size: 1]
	uint32 InPacketsClientMin;//[Offset: 0x250, Size: 1]
	uint32 InPacketsClientAvg;//[Offset: 0x254, Size: 1]
	uint32 OutRateClientMax;//[Offset: 0x258, Size: 1]
	uint32 OutRateClientMin;//[Offset: 0x25c, Size: 1]
	uint32 OutRateClientAvg;//[Offset: 0x260, Size: 1]
	uint32 OutPacketsClientMax;//[Offset: 0x264, Size: 1]
	uint32 OutPacketsClientMin;//[Offset: 0x268, Size: 1]
	uint32 OutPacketsClientAvg;//[Offset: 0x26c, Size: 1]
	uint32 NetNumClients;//[Offset: 0x270, Size: 1]
	uint32 InPackets;//[Offset: 0x274, Size: 1]
	uint32 OutPackets;//[Offset: 0x278, Size: 1]
	uint32 InBunches;//[Offset: 0x27c, Size: 1]
	uint32 OutBunches;//[Offset: 0x280, Size: 1]
	uint32 OutLoss;//[Offset: 0x284, Size: 1]
	uint32 InLoss;//[Offset: 0x288, Size: 1]
	uint32 VoiceBytesSent;//[Offset: 0x28c, Size: 1]
	uint32 VoiceBytesRecv;//[Offset: 0x290, Size: 1]
	uint32 VoicePacketsSent;//[Offset: 0x294, Size: 1]
	uint32 VoicePacketsRecv;//[Offset: 0x298, Size: 1]
	uint32 PercentInVoice;//[Offset: 0x29c, Size: 1]
	uint32 PercentOutVoice;//[Offset: 0x2a0, Size: 1]
	uint32 NumActorChannels;//[Offset: 0x2a4, Size: 1]
	uint32 NumConsideredActors;//[Offset: 0x2a8, Size: 1]
	uint32 PrioritizedActors;//[Offset: 0x2ac, Size: 1]
	uint32 NumRelevantActors;//[Offset: 0x2b0, Size: 1]
	uint32 NumRelevantDeletedActors;//[Offset: 0x2b4, Size: 1]
	uint32 NumReplicatedActorAttempts;//[Offset: 0x2b8, Size: 1]
	uint32 NumReplicatedActors;//[Offset: 0x2bc, Size: 1]
	uint32 NumActors;//[Offset: 0x2c0, Size: 1]
	uint32 NumNetActors;//[Offset: 0x2c4, Size: 1]
	uint32 NumDormantActors;//[Offset: 0x2c8, Size: 1]
	uint32 NumInitiallyDormantActors;//[Offset: 0x2cc, Size: 1]
	uint32 NumNetGUIDsAckd;//[Offset: 0x2d0, Size: 1]
	uint32 NumNetGUIDsPending;//[Offset: 0x2d4, Size: 1]
	uint32 NumNetGUIDsUnAckd;//[Offset: 0x2d8, Size: 1]
	uint32 ObjPathBytes;//[Offset: 0x2dc, Size: 1]
	uint32 NetGUIDOutRate;//[Offset: 0x2e0, Size: 1]
	uint32 NetGUIDInRate;//[Offset: 0x2e4, Size: 1]
	uint32 NetSaturated;//[Offset: 0x2e8, Size: 1]

--------------------------------
Class: GameNetworkManager.Info.Actor.Object
	float BadPacketLossThreshold;//[Offset: 0x228, Size: 1]
	float SeverePacketLossThreshold;//[Offset: 0x22c, Size: 1]
	int BadPingThreshold;//[Offset: 0x230, Size: 1]
	int SeverePingThreshold;//[Offset: 0x234, Size: 1]
	int AdjustedNetSpeed;//[Offset: 0x238, Size: 1]
	float LastNetSpeedUpdateTime;//[Offset: 0x23c, Size: 1]
	int TotalNetBandwidth;//[Offset: 0x240, Size: 1]
	int MinDynamicBandwidth;//[Offset: 0x244, Size: 1]
	int MaxDynamicBandwidth;//[Offset: 0x248, Size: 1]
	bool bIsStandbyCheckingEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x24c, Size: 1]
	bool bHasStandbyCheatTriggered;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x24c, Size: 1]
	float StandbyRxCheatTime;//[Offset: 0x250, Size: 1]
	float StandbyTxCheatTime;//[Offset: 0x254, Size: 1]
	float PercentMissingForRxStandby;//[Offset: 0x258, Size: 1]
	float PercentMissingForTxStandby;//[Offset: 0x25c, Size: 1]
	float PercentForBadPing;//[Offset: 0x260, Size: 1]
	float JoinInProgressStandbyWaitTime;//[Offset: 0x264, Size: 1]
	float MoveRepSize;//[Offset: 0x268, Size: 1]
	float MAXPOSITIONERRORSQUARED;//[Offset: 0x26c, Size: 1]
	float MAXNEARZEROVELOCITYSQUARED;//[Offset: 0x270, Size: 1]
	float CLIENTADJUSTUPDATECOST;//[Offset: 0x274, Size: 1]
	float MAXCLIENTUPDATEINTERVAL;//[Offset: 0x278, Size: 1]
	float MaxClientForcedUpdateDuration;//[Offset: 0x27c, Size: 1]
	float ServerForcedUpdateHitchThreshold;//[Offset: 0x280, Size: 1]
	float ServerForcedUpdateHitchCooldown;//[Offset: 0x284, Size: 1]
	float MaxMoveDeltaTime;//[Offset: 0x288, Size: 1]
	float MaxClientSmoothingDeltaTime;//[Offset: 0x28c, Size: 1]
	float ClientNetSendMoveDeltaTime;//[Offset: 0x290, Size: 1]
	float ClientNetSendMoveDeltaTimeThrottled;//[Offset: 0x294, Size: 1]
	float ClientNetSendMoveDeltaTimeStationary;//[Offset: 0x298, Size: 1]
	int ClientNetSendMoveThrottleAtNetSpeed;//[Offset: 0x29c, Size: 1]
	int ClientNetSendMoveThrottleOverPlayerCount;//[Offset: 0x2a0, Size: 1]
	bool ClientAuthorativePosition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a4, Size: 1]
	float ClientErrorUpdateRateLimit;//[Offset: 0x2a8, Size: 1]
	float ClientNetCamUpdateDeltaTime;//[Offset: 0x2ac, Size: 1]
	float ClientNetCamUpdatePositionLimit;//[Offset: 0x2b0, Size: 1]
	bool bMovementTimeDiscrepancyDetection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b4, Size: 1]
	bool bMovementTimeDiscrepancyResolution;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b5, Size: 1]
	float MovementTimeDiscrepancyMaxTimeMargin;//[Offset: 0x2b8, Size: 1]
	float MovementTimeDiscrepancyMinTimeMargin;//[Offset: 0x2bc, Size: 1]
	float MovementTimeDiscrepancyResolutionRate;//[Offset: 0x2c0, Size: 1]
	float MovementTimeDiscrepancyDriftAllowance;//[Offset: 0x2c4, Size: 1]
	bool bMovementTimeDiscrepancyForceCorrectionsDuringResolution;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	bool bUseDistanceBasedRelevancy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c9, Size: 1]

--------------------------------
Class: ReverbSettings
	bool bApplyReverb;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	ReverbEffect* ReverbEffect;//[Offset: 0x8, Size: 1]
	None* ReverbPluginEffect;//[Offset: 0x10, Size: 1]
	float Volume;//[Offset: 0x18, Size: 1]
	float FadeTime;//[Offset: 0x1c, Size: 1]

--------------------------------
Class: ReverbEffect.Object
	bool bBypassEarlyReflections;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	float ReflectionsDelay;//[Offset: 0x2c, Size: 1]
	float GainHF;//[Offset: 0x30, Size: 1]
	float ReflectionsGain;//[Offset: 0x34, Size: 1]
	bool bBypassLateReflections;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38, Size: 1]
	float LateDelay;//[Offset: 0x3c, Size: 1]
	float DecayTime;//[Offset: 0x40, Size: 1]
	float Density;//[Offset: 0x44, Size: 1]
	float Diffusion;//[Offset: 0x48, Size: 1]
	float AirAbsorptionGainHF;//[Offset: 0x4c, Size: 1]
	float DecayHFRatio;//[Offset: 0x50, Size: 1]
	float LateGain;//[Offset: 0x54, Size: 1]
	float Gain;//[Offset: 0x58, Size: 1]
	float RoomRolloffFactor;//[Offset: 0x5c, Size: 1]

--------------------------------
Class: InteriorSettings
	bool bIsWorldSettings;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	float ExteriorVolume;//[Offset: 0x4, Size: 1]
	float ExteriorTime;//[Offset: 0x8, Size: 1]
	float ExteriorLPF;//[Offset: 0xc, Size: 1]
	float ExteriorLPFTime;//[Offset: 0x10, Size: 1]
	float InteriorVolume;//[Offset: 0x14, Size: 1]
	float InteriorTime;//[Offset: 0x18, Size: 1]
	float InteriorLPF;//[Offset: 0x1c, Size: 1]
	float InteriorLPFTime;//[Offset: 0x20, Size: 1]

--------------------------------
Class: BroadphaseSettings
	bool bUseMBPOnClient;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool bUseMBPOnServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	bool bUseMBPOuterBounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2, Size: 1]
	Box MBPBounds;//[Offset: 0x4, Size: 1]
	Box MBPOuterBounds;//[Offset: 0x20, Size: 1]
	uint32 MBPNumSubdivs;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: NetViewer
	NetConnection* Connection;//[Offset: 0x0, Size: 1]
	Actor* InViewer;//[Offset: 0x8, Size: 1]
	Actor* ViewTarget;//[Offset: 0x10, Size: 1]
	Vector ViewLocation;//[Offset: 0x18, Size: 1]
	Vector ViewDir;//[Offset: 0x24, Size: 1]

--------------------------------
Class: BookmarkBase.Object

--------------------------------
Class: ReplicatedStaticActorDestructionInfo
	class Object* ObjClass;//[Offset: 0x30, Size: 1]

--------------------------------
Class: LineBatchComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object

--------------------------------
Class: LevelStreaming.Object
	World* WorldAsset;//[Offset: 0x28, Size: 1]
	FName PackageNameToLoad;//[Offset: 0x50, Size: 1]
	FName[] LODPackageNames;//[Offset: 0x58, Size: 1]
	Transform LevelTransform;//[Offset: 0x80, Size: 1]
	int LevelLODIndex;//[Offset: 0xb0, Size: 1]
	int StreamingPriority;//[Offset: 0xb4, Size: 1]
	bool bShouldBeVisible;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xba, Size: 1]
	bool bShouldBeLoaded;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xba, Size: 1]
	bool bLocked;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xba, Size: 1]
	bool bIsStatic;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xba, Size: 1]
	bool bShouldBlockOnLoad;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xba, Size: 1]
	bool bShouldBlockOnUnload;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xbb, Size: 1]
	bool bDisableDistanceStreaming;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xbb, Size: 1]
	bool bDrawOnLevelStatusMap;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xbb, Size: 1]
	LinearColor LevelColor;//[Offset: 0xbc, Size: 1]
	LevelStreamingVolume*[] EditorStreamingVolumes;//[Offset: 0xd0, Size: 1]
	float MinTimeBetweenVolumeUnloadRequests;//[Offset: 0xe0, Size: 1]
	MulticastInlineDelegateProperty OnLevelLoaded;//[Size: 1]
	MulticastInlineDelegateProperty OnLevelUnloaded;//[Size: 1]
	MulticastInlineDelegateProperty OnLevelShown;//[Size: 1]
	MulticastInlineDelegateProperty OnLevelHidden;//[Size: 1]
	Level* LoadedLevel;//[Offset: 0x128, Size: 1]
	Level* PendingUnloadLevel;//[Offset: 0x130, Size: 1]
	bool ShouldBeLoaded();// 0xd457e0
	void SetShouldBeVisible(bool bInShouldBeVisible);// 0x3f8f1a0
	void SetShouldBeLoaded(bool bInShouldBeLoaded);// 0x3f19c80
	void SetPriority(int NewPriority);// 0x3f8ef80
	void SetLevelLODIndex(int LODIndex);// 0x3f8e890
	void SetIsRequestingUnloadAndRemoval(bool bInIsRequestingUnloadAndRemoval);// 0x3f8e800
	bool IsStreamingStatePending();// 0x3f8d450
	bool IsLevelVisible();// 0x3f8d420
	bool IsLevelLoaded();// 0x3f8d3f0
	FName GetWorldAssetPackageFName();// 0x3f8d380
	Level* GetLoadedLevel();// 0x2db2030
	LevelScriptActor* GetLevelScriptActor();// 0x3f8d2d0
	bool GetIsRequestingUnloadAndRemoval();// 0x3f8d2a0
	LevelStreaming* CreateInstance(FString UniqueInstanceName);// 0x3f8d1b0

--------------------------------
Class: LevelStreamingVolume.Volume.Brush.Actor.Object
	FName[] StreamingLevelNames;//[Offset: 0x260, Size: 1]
	bool bEditorPreVisOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x270, Size: 1]
	bool bDisabled;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x270, Size: 1]
	byte StreamingUsage;//[Offset: 0x274, Size: 1]

--------------------------------
Class: StreamingLevelsToConsider
	LevelStreaming*[] StreamingLevels;//[Offset: 0x0, Size: 1]

--------------------------------
Class: DemoNetDriver.NetDriver.Object
	<FString,RollbackNetStartupActorInfo> RollbackNetStartupActors;//[Offset: 0x858, Size: 1]
	float CheckpointSaveMaxMSPerFrame;//[Offset: 0xa04, Size: 1]
	MulticastRecordOptions[] MulticastRecordOptions;//[Offset: 0xa28, Size: 1]
	bool bIsLocalReplay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa38, Size: 1]
	PlayerController*[] SpectatorControllers;//[Offset: 0xa40, Size: 1]

--------------------------------
Class: RollbackNetStartupActorInfo
	Object* Archetype;//[Offset: 0x8, Size: 1]
	Level* Level;//[Offset: 0x38, Size: 1]
	Object*[] ObjReferences;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: MulticastRecordOptions
	FString FuncPathName;//[Offset: 0x0, Size: 1]
	bool bServerSkip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	bool bClientSkip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x11, Size: 1]

--------------------------------
Class: ParticleEventManager.Actor.Object

--------------------------------
Class: NavigationSystemBase.Object

--------------------------------
Class: AISystemBase.Object
	SoftClassPath AISystemClassName;//[Offset: 0x28, Size: 1]
	FName AISystemModuleName;//[Offset: 0x40, Size: 1]
	bool bInstantiateAISystemOnClient;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x50, Size: 1]

--------------------------------
Class: AvoidanceManager.Object
	float DefaultTimeToLive;//[Offset: 0x30, Size: 1]
	float LockTimeAfterAvoid;//[Offset: 0x34, Size: 1]
	float LockTimeAfterClean;//[Offset: 0x38, Size: 1]
	float DeltaTimeToPredict;//[Offset: 0x3c, Size: 1]
	float ArtificialRadiusExpansion;//[Offset: 0x40, Size: 1]
	float TestHeightDifference;//[Offset: 0x44, Size: 1]
	float HeightCheckMargin;//[Offset: 0x48, Size: 1]
	bool RegisterMovementComponent(MovementComponent* MovementComp, float AvoidanceWeight);// 0x3ecd400
	int GetObjectCount();// 0x3ecd300
	int GetNewAvoidanceUID();// 0x3ecd2d0
	Vector GetAvoidanceVelocityForComponent(MovementComponent* MovementComp);// 0x3ecd220

--------------------------------
Class: LevelCollection
	GameStateBase* GameState;//[Offset: 0x8, Size: 1]
	NetDriver* NetDriver;//[Offset: 0x10, Size: 1]
	DemoNetDriver* DemoNetDriver;//[Offset: 0x18, Size: 1]
	Level* PersistentLevel;//[Offset: 0x20, Size: 1]
	<Level*> Levels;//[Offset: 0x28, Size: 1]

--------------------------------
Class: MaterialParameterCollectionInstance.Object
	MaterialParameterCollection* Collection;//[Offset: 0x30, Size: 1]

--------------------------------
Class: PhysicsFieldComponent.SceneComponent.ActorComponent.Object

--------------------------------
Class: WorldComposition.Object
	LevelStreaming*[] TilesStreaming;//[Offset: 0x48, Size: 1]
	double TilesStreamingTimeThreshold;//[Offset: 0x58, Size: 1]
	bool bLoadAllTilesDuringCinematic;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x60, Size: 1]
	bool bRebaseOriginIn3DSpace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x61, Size: 1]
	float RebaseOriginDistance;//[Offset: 0x64, Size: 1]

--------------------------------
Class: WorldPSCPool
	<ParticleSystem*,PSCPool> WorldParticleSystemPools;//[Offset: 0x0, Size: 1]

--------------------------------
Class: PSCPool
	PSCPoolElem[] FreeElements;//[Offset: 0x0, Size: 1]

--------------------------------
Class: PSCPoolElem
	ParticleSystemComponent* PSC;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQWorldSettings.WorldSettings.Info.Actor.Object
	Vector2D MapGridSpacing;//[Offset: 0x3a8, Size: 1]
	Actor* MapTextureCornerZero;//[Offset: 0x3b0, Size: 1]
	Actor* MapTextureCornerOne;//[Offset: 0x3b8, Size: 1]
	SQMinimapMakerSettings MinimapMakerSettings;//[Offset: 0x3c0, Size: 1]
	Actor* MapCameraLocation;//[Offset: 0x940, Size: 1]
	class SQGameRuleSet[] MapRulesets;//[Offset: 0x948, Size: 1]
	FText DisplayTitle;//[Offset: 0x958, Size: 1]
	MulticastInlineDelegateProperty OnMapTextureChange;//[Size: 1]
	int SeaLevel;//[Offset: 0x980, Size: 1]
	int HelicoptersAltitudeThreshold;//[Offset: 0x984, Size: 1]
	bool bCanDriverSwitchTo3rdPerson;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x988, Size: 1]
	Texture* MapTexture;//[Offset: 0x990, Size: 1]
	void SetMapTexture(Texture* Value);// 0xe4a2a0
	bool GetCanDriverSwitchTo3rdPerson();// 0xe49f70

--------------------------------
Class: SQMinimapMakerSettings
	enum TileResolution;//[Offset: 0x0, Size: 1]
	enum TileCount;//[Offset: 0x1, Size: 1]
	PostProcessSettings MinimapPostProcessor;//[Offset: 0x10, Size: 1]
	int MinimapFOV;//[Offset: 0x570, Size: 1]

--------------------------------
Class: SQGameRuleSet.Actor.Object
	class SQRulesetState* RulesetStateClass;//[Offset: 0x228, Size: 1]
	SQRulesetState* RulesetState;//[Offset: 0x230, Size: 1]
	bool bUseTickets;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x238, Size: 1]
	int RoundTimeOverride;//[Offset: 0x23c, Size: 1]
	FString DisplayName;//[Offset: 0x240, Size: 1]
	bool bRulesetEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x250, Size: 1]
	void VehicleDestroyed(SQPlayerController* Killer, SQPlayerController* Victim, SQVehicle* DestroyedVehicle);// 0xd93c00
	void UnregisterActor(Actor* Actor);// 0xd93990
	void SetRulesetEnabled(const bool Value);// 0xd92b10
	void SetRoundTimeOverride(int InRoundTimeOverride);// 0xd92a80
	void SendChatMessage(enum ChatType, FString Message, enum Team, int Squad, bool bBroadcastToAdmin, FString StreamerModeVariantMessage);// 0xd926e0
	void SecondPassed();// 0xd88af0
	void RegisterActor(Actor* Actor);// 0xd92530
	enum ReadyToEndMatch();// 0xd92500
	void PostPlayerSpawn(SQSoldier* SpawningSoldier);// 0xd92470
	void PostPlayerLogout(Controller* Controller);// 0xd923e0
	void PostPlayerLogin(PlayerController* Controller);// 0xd92350
	void PlayerWounded(SQPlayerController* Killer, SQPlayerController* Victim);// 0xd92280
	void PlayerWound(SQPlayerController* Victim);// 0xd920a0
	void PlayerTeamWounded(SQPlayerController* Killer, SQPlayerController* Victim);// 0xd91fd0
	void PlayerTeamKilled(SQPlayerController* Killer, SQPlayerController* Victim);// 0xd91f00
	void PlayerSuicide(SQPlayerController* Victim);// 0xd78f90
	void PlayerSpawned(SQPlayerController* NewPlayer);// 0xd91e70
	void PlayerSelfWound(SQPlayerController* Victim);// 0xd91de0
	void PlayerSelfHealed(SQPlayerController* Healer);// 0xd91d50
	void PlayerSelfBandaged(SQPlayerController* Bandager);// 0xd91cc0
	void PlayerRevived(SQPlayerController* Reviver, SQPlayerController* RevivedPlayer);// 0xd91bf0
	void PlayerKilled(SQPlayerController* Killer, SQPlayerController* Victim);// 0xd91a50
	void PlayerJoinedTeam(SQPlayerController* Player, int TeamIndex);// 0xd91980
	void PlayerJoined(SQPlayerController* NewPlayer);// 0xd5a5b0
	void PlayerHealed(SQPlayerController* Healer, SQPlayerController* HealedPlayer);// 0xd918b0
	void PlayerDied(SQPlayerController* Victim);// 0xd91750
	void PlayerBandaged(SQPlayerController* Bandager, SQPlayerController* BandagedPlayer);// 0xd91530
	void NotifyPlayerOnScoreEvent(SQPlayerController* Player, out const SQScoreEvent ScoreEvent);// 0xd90f40
	void NotifyPlayer(SQPlayerController* Player, FString Message, enum NotificationType, FString StreamerModeVariantMessage);// 0xd90db0
	void ModifySoldierInventory(SQSoldier* Soldier);// 0xd90d20
	void MatchStarted();// 0xd88c00
	void MatchIsWaitingToStart();// 0xd825b0
	void LogisticsDropOff(Actor* VehicleActor, float AmmoDroppedOff, float ConstructionDroppedOff);// 0xd90c10
	bool GetRulesetEnabled();// 0xd90960
	int GetRoundTimeRemaining();// 0xd90930
	int GetRoundTimeOverride();// 0xd90900
	SQGameMode* GetGameMode();// 0xd908b0
	FString GetDisplayName();// 0xd90790
	void BPRulesetEnabled();// 0x1d69c50
	void BPRulesetDisabled();// 0x1d69c50

--------------------------------
Class: SQPlayerController.PlayerController.Controller.Actor.Object
	SQTeam* AuthorityTeam;//[Offset: 0x580, Size: 1]
	SQTeamState* TeamState;//[Offset: 0x588, Size: 1]
	SQTeamStatePrivate* PrivateTeamState;//[Offset: 0x590, Size: 1]
	SQSquad* AuthoritySquad;//[Offset: 0x598, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x5a0, Size: 1]
	SQSquadStatePrivateToTeam* TeamPrivateSquadState;//[Offset: 0x5a8, Size: 1]
	SQCoreStateConnection* StateConnection;//[Offset: 0x5b0, Size: 1]
	float SpawnMenuPopupDelay;//[Offset: 0x5b8, Size: 1]
	SQSoldier* LastSpawnedSoldier;//[Offset: 0x5c0, Size: 1]
	bool AreCommunicationButtonsAllowed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c9, Size: 1]
	bool bIsCrouchedDuringMenu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5ca, Size: 1]
	bool bIsPronedDuringMenu;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5ca, Size: 1]
	bool IsWinner;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5cb, Size: 1]
	float TimeBecameIncapacitated;//[Offset: 0x5cc, Size: 1]
	float SpawnDelayPenalties;//[Offset: 0x5d0, Size: 1]
	float MaxSpawnDelay;//[Offset: 0x5d4, Size: 1]
	bool bWasInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d8, Size: 1]
	SQBitFlag AccessLevel;//[Offset: 0x5dc, Size: 1]
	MulticastInlineDelegateProperty OnPlayerEnterVehicleEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerExitVehicleEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnRallyCreated;//[Size: 1]
	MulticastInlineDelegateProperty OnChatStarted;//[Size: 1]
	class SQToastWidget* ToastWidgetClass;//[Offset: 0x640, Size: 1]
	FText ChangeRoleNoAmmoText;//[Offset: 0x648, Size: 1]
	FText AmmoBagNoAmmoText;//[Offset: 0x660, Size: 1]
	FText MaxAmmoBagText;//[Offset: 0x678, Size: 1]
	FText RearmFromAmmoBagText;//[Offset: 0x690, Size: 1]
	FText RoleCannotPickupAmmoBagText;//[Offset: 0x6a8, Size: 1]
	FText RearmFromVehicleNoAmmoText;//[Offset: 0x6c0, Size: 1]
	FText RearmFromVehicleConfirmationText;//[Offset: 0x6d8, Size: 1]
	FText RearmFromVehiclePromptText;//[Offset: 0x6f0, Size: 1]
	FText CannotStartVehicleInStagingPhaseText;//[Offset: 0x708, Size: 1]
	float WalkingOriginRebaseThreshold;//[Offset: 0x720, Size: 1]
	float RidingOriginRebaseThreshold;//[Offset: 0x724, Size: 1]
	float FlyingOriginRebaseThreshold;//[Offset: 0x728, Size: 1]
	float LeaveVehicleOriginRebaseThreshold;//[Offset: 0x72c, Size: 1]
	float OriginRebaseFrequency;//[Offset: 0x730, Size: 1]
	class SQMapMarker[] MapMarkerArray;//[Offset: 0x738, Size: 1]
	SQMapMarkerInputComponent* MapMarkerInputComponent;//[Offset: 0x748, Size: 1]
	MulticastInlineDelegateProperty OnNewMarkerCreatedEvent;//[Size: 1]
	SQAdminStats* AdminStats;//[Offset: 0x760, Size: 1]
	class Actor[] SpawnableActors;//[Offset: 0x768, Size: 1]
	DataTable* ApprovalMessages;//[Offset: 0x778, Size: 1]
	SQVehicleSeatComponent* CurrentSeat;//[Offset: 0x780, Size: 1]
	float AlwaysRenderPawnsDistance;//[Offset: 0x880, Size: 1]
	AudioComponent* MusicAC;//[Offset: 0x8b8, Size: 1]
	SoundBase* MusicSound;//[Offset: 0x8c0, Size: 1]
	SQSystemHUDMessage[] QueuedSystemMessages;//[Offset: 0x8c8, Size: 1]
	class Pawn[] RefreshTypes;//[Offset: 0x8d8, Size: 1]
	SQDataGatheringComponent* DataGatheringComponent;//[Offset: 0x8e8, Size: 1]
	SQCommanderInputComponent* CommanderInputComponent;//[Offset: 0x8f0, Size: 1]
	EOSReplicationManagerComponent* ReplicationManagerComponent;//[Offset: 0x8f8, Size: 1]
	SQBoundaryListener* BoundaryListener;//[Offset: 0x900, Size: 1]
	float OutOfMapBoundsKillTimestamp;//[Offset: 0x908, Size: 1]
	float PendingDeathKillTimestamp;//[Offset: 0x90c, Size: 1]
	Pawn* LastRefreshedPawn;//[Offset: 0x910, Size: 1]
	SQGameSpawn* SelectedSpawn;//[Offset: 0x918, Size: 1]
	<uint32,SQApprovalEntryRequest> ApprovalEntries;//[Offset: 0x928, Size: 1]
	<uint32,SQApprovalEntryClientDesc> ApprovalEntriesOnClient;//[Offset: 0x978, Size: 1]
	float PawnRenderDistance;//[Offset: 0x9e8, Size: 1]
	<UniqueNetIdRepl,SQPlayerState*> CachedPlayersToMute;//[Offset: 0xa20, Size: 1]
	SQMovementComponentNetworker* Networker;//[Offset: 0xa70, Size: 1]
	SQDeployable* ActiveGhost;//[Offset: 0xa78, Size: 1]
	bool IsDeployingItem;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa80, Size: 1]
	class SQVotingComponent* VotingComponentClass;//[Offset: 0xa88, Size: 1]
	SQVotingComponent* VotingComponent;//[Offset: 0xa90, Size: 1]
	void UnpossessAdminCam();// 0xddd910
	void UnmuteSquad(SQSquadState* MuteSquadState);// 0xddd880
	void UnmuteAllPlayersExceptSquad();// 0xddd860
	bool TryClaimVehicle(SQVehicle* Vehicle);// 0xddd7c0
	void ToggleShowRebase(bool Value);// 0xddd730
	void ToggleMutePlayer(SQPlayerState* MutePlayerState);// 0xddd6a0
	float TimeUntilCanSpawn();// 0xddd670
	void StopMusic();// 0xddd650
	void StartPlaceDeployable(SQDeployableSettings* InDeployableSettings, bool InIsItem);// 0xddd580
	void SQSM_SetServerUpdateRate(float Value);// 0xdd9390
	void SQSM_SetNonRenderedUpdateRate(float Value);// 0xdd9310
	void SQSM_SetDistanceFactorThesholds(int Index, float Value);// 0xdd9240
	void SQSM_RemoveDistanceFactorThesholds(int srcIndex, int Count);// 0xdd9170
	void SQSM_PrintDistanceFactorThesholds();// 0xdd9150
	void SQSM_InsertDistanceFactorThesholds(int Index, float Value);// 0xdd9080
	void SQBugit(FString ScreenShotDescription);// 0xdd8fd0
	void SpawnGhost(class SQDeployable InDeployableReference, SQDeployableSettings* InDeployableSettings);// 0xddd430
	void SimulateInputKey(Key Key, bool bPressed);// 0xddd300
	void ShowToast(out const FText ToastText, float Lifetime, bool bForceSlate);// 0xddd190
	bool ShouldSkipPassword();// 0xddd160
	void ShareRallyPoint(int SquadId);// 0xddd0d0
	void SetWorldOrigin(out const IntVector NewOrigin);// 0xddd040
	void SetSelectionMode(bool bEnabled);// 0xddcfb0
	void SetRoamingMapOpen(bool bOpen);// 0xddcf20
	void SetPendingDeathKillTimestamp(float Timestamp);// 0xddcea0
	void SetOutOfMapBoundsKillTimestamp(float Timestamp);// 0xddce20
	void SetIgnoreWeaponInput(bool bNewClickInput);// 0xddcd90
	void SetDeployRole(SQRoleSettings* NewRoleSettings);// 0xddcd00
	void SetCurrentRole(SQRoleSettings* NewRoleSettings, enum SpawnInventoryReason);// 0xddcc30
	void ServerUnpossessAdminCam();// 0xddcc10
	void ServerUnmuteSquad(SQSquadState* MuteSquadState);// 0xddcb50
	void ServerTryClaimVehicle(SQVehicle* VehicleToClaim);// 0xddca90
	void ServerTryApproveVehicleClaim();// 0xddca40
	void ServerSwitchSeat(int Index);// 0xddc980
	void ServerSuicide(bool bLeavingServer);// 0xddc8c0
	void ServerStartHealing(SQSoldier* HealedSoldier);// 0xddc800
	void ServerSLInviteMember(SQPlayerState* PlayerToInvite);// 0xddc440
	void ServerShareRallyPoint(int SquadId);// 0xddc740
	void ServerSetVoipHandAnim(enum VoiceChannel);// 0xddc690
	void ServerSetMuteAllPlayersExceptSquad(bool bMute);// 0xddc5d0
	void ServerSay(FString Msg);// 0xddc500
	void ServerRequestServerTime(DateTime InClientUTCTime);// 0xddc390
	void ServerRequestRoleRearm(const FName InRoleId, Object* InRearmSource);// 0xddc280
	void ServerRequestRole(const FName InRoleId);// 0xddc1c0
	void ServerRequestRestartPlayer(SQGameSpawn* Spawn);// 0xddc100
	void ServerRequestPlaceDeployableItem(const FName InDeployableItemId, const Transform InPosition);// 0xddbfc0
	void ServerRequestPlaceDeployable(const FName InDeployableId, const Transform InPosition);// 0xddbe80
	void ServerRequestDeployRole(SQRoleSettings* NewRole);// 0xddbdf0
	void ServerRemoveVehicleOverlayWidget();// 0xddbda0
	void ServerRearmWeapons(Object* RearmObject, const SQRearmWeaponRequest[] RearmRequest);// 0xddbc90
	void ServerProcessApprovalEntry(byte Mode, uint32 VerifyKey);// 0xddbb80
	void ServerPlayEmoteAnim(enum Emote);// 0xddbad0
	void ServerPlayEmote(const FName EmoteDataName);// 0xddba10
	void ServerPlayCustomEmote(const FName CustomName);// 0xddb950
	void ServerOnPlayerToggleVoice_Editor(UniqueNetIdRepl TalkingPlayerId, enum VoiceChannel);// 0xddb7a0
	void ServerNotifyExplosiveHit(const SQShotInfo ShotInfoZeroBased, const SQPenetrationTrace[] TargetsZeroBased, const HitResult HitResult, const ArmorPenetration CachedPenetration, const SQWeaponData WeaponConfig);// 0xddb4e0
	void ServerMuteSquad(SQSquadState* MuteSquadState);// 0xddb420
	void ServerMovePlayerToFireTeam(SQPlayerState* TargetPlayerState, int FireTeamIndex, int Position);// 0xddb2e0
	void ServerLeaveSquad();// 0xddb290
	void ServerKickPlayerFromSquad(SQPlayerState* ToKick);// 0xddb1d0
	void ServerJoinSquad(SQSquadStatePrivateToTeam* ToJoin);// 0xddb110
	void ServerGiveUp();// 0xddb0c0
	void ServerGiveSquadLeader(SQPlayerState* NewLeader);// 0xddb000
	void ServerGiveFireTeamLeader(SQPlayerState* NewLeader, int FireTeamIndex);// 0xddaef0
	void ServerGameplayUnmutePlayer(UniqueNetIdRepl MutePlayerId);// 0xddad80
	void ServerGameplayMutePlayer(UniqueNetIdRepl MutePlayerId);// 0xddac10
	void ServerGameCommandFromRemotePlayer(FString Cmd);// 0xddab40
	void ServerFinishSeatProgress(SQVehicle* Vehicle);// 0xddaa80
	void ServerEndHealing();// 0xddaa30
	void ServerEmergencyTeleport(SQVehicle* Vehicle, byte RecoveryMethod, float DesiredYawRotation);// 0xdda8f0
	void ServerDisbandSquad();// 0xdda8a0
	void ServerDisbandFireTeam(int FireTeamIndex);// 0xdda7e0
	void ServerDebugToggleVehicleGodMode(bool Value);// 0xdda720
	void ServerDebugToggleShowVehicleDamageReceived(bool Value);// 0xdda660
	void ServerDebugToggleShowRebase(bool Value);// 0xdda5a0
	void ServerDebugToggleShowHitreg(bool Value);// 0xdda4e0
	void ServerDebugToggleNoStaminaDrain(bool Value);// 0xdda420
	void ServerDebugToggleInfiniteMags(bool Value);// 0xdda360
	void ServerDebugToggleForceNoCommanderCooldowns(bool Value);// 0xdda2a0
	void ServerDebugToggleForceAllowCommanderActions(bool Value);// 0xdda1e0
	void ServerDebugSkipStaging();// 0xdda190
	void ServerDebugSetServerTickRate(float NewTickRate);// 0xdda0d0
	void ServerDebugSetServerSecondsNonSeamlessForced(float Seconds);// 0xdda010
	void ServerDebugRemoveSteamTestItem(int ID, int Amount);// 0xdd9f10
	void ServerDebugEndMatch();// 0xdd9ec0
	void ServerDebugBugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);// 0xdd9c80
	void ServerDebugAssignSteamTestItem(int ID, int Amount);// 0xdd9b80
	void ServerCreateVehicleOverlayWidget(class SQVehicleViewWidget WidgetClass);// 0xdd9ac0
	void ServerCreateSquad(FString Name, bool Locked);// 0xdd9990
	void ServerCreateRallyPoint();// 0xdd9940
	void ServerChat(FString Msg, const enum ChatType);// 0xdd9820
	void ServerChangeSquadLock(SQSquadState* Squad);// 0xdd9760
	void ServerCancelRestartPlayer();// 0xdd9710
	void ServerCancelEmote(const FName EmoteDataName);// 0xdd9650
	void ServerAddApprovalEntry(const SQApprovalEntryRequest Entry, enum Filter);// 0xdd9550
	void SelectSpawn(SQGameSpawn* Spawn);// 0xdd94c0
	void Say(FString Msg);// 0xdd9410
	void Respawn();// 0xdd8fb0
	bool RequestRoleRearm(const SQRoleSettings* InRoleSettings, out const interface classNone InRearmSource);// 0xdd8ec0
	bool RequestRole(const SQRoleSettings* InRoleSettings);// 0xdd8e20
	void RandomizeOriginOffset();// 0xdd8e00
	void ProcessApprovalEntry(byte Mode);// 0xdd8d80
	void PrintWeaponHashes();// 0xdd8d60
	void PlayMusic();// 0xdd8d40
	void PlayEmoteAnim(enum Emote, const FName CustomName);// 0xdd8c70
	void PlayEmote(const SQEmotesData* EmoteData);// 0xdd8be0
	void OnWorldOriginLocationChangedEventHandler(Vector WorldOrigin);// 0xdd8b50
	void OnSpawningEnabledStateChanged(SQGameSpawn* SpawnPoint);// 0xdd8ac0
	void OnSelectedSpawnSiegedStateChanged(SQGameSpawn* SpawnPoint);// 0xdd89a0
	void OnSelectedSpawnerDestroyed(Actor* Actor);// 0xdd8a30
	void OnSelectedSpawnActivatedTimeStampChangedSignal(SQGameSpawn* SpawnPoint);// 0xdd8910
	void OnRep_TeamState();// 0xdd88f0
	void OnRep_SquadState(SQSquadState* OldSquadState);// 0xdd8860
	void OnRep_PendingDeathKillTimestamp();// 0xdd8840
	void OnRep_OutOfMapBoundsKillTimestamp();// 0xdd8820
	void OnRep_CurrentSeat();// 0xdd8800
	void OnReceiveChat(SQPlayerState* Speaker, FString Message, enum Channel, enum NotificationType, FString StreamerModeVariantMessage);// 0xdd8630
	void OnPendingDeathChanged(float KillTimestamp, bool bDeathIsPending);// 0x1d69c50
	void OnOutOfMapBoundsChanged(float KillTimestamp, bool bIsOutOfBounds);// 0x1d69c50
	bool OnFireWeaponOverride();// 0xdd8600
	void OnExitBoundary(SQBoundaryListener* Listener, SQBoundary* Boundary);// 0xdd8530
	void OnEnterBoundary(SQBoundaryListener* Listener, SQBoundary* Boundary);// 0xdd8460
	void OnDelayedSpawnCallback();// 0xdd8440
	bool OnAltFireWeaponOverride();// 0xdd8410
	void MuteSquad(SQSquadState* MuteSquadState);// 0xdd8380
	void MuteAllPlayersExceptSquad();// 0xdd8360
	void MovePlayerToFireTeam(SQPlayerState* TargetPlayerState, int FireTeamIndex, int Position);// 0xdd8250
	void LeaveSquad();// 0xdd81b0
	void KickPlayerFromSquad(SQPlayerState* ToKick);// 0xdd8120
	void JoinSquadWithName(FString Name);// 0xdd8070
	void JoinSquadWithId(int ID);// 0xdd7fe0
	bool IsWounded();// 0xdd7fb0
	bool IsWeaponInputIgnored();// 0xdd7f80
	bool IsUsingFreeLook();// 0xdd7f50
	bool IsSquadLeader();// 0xdd7f20
	bool IsShowingSpawnMenu();// 0xdd7ef0
	bool IsRoamingMapOpen();// 0xdd7ec0
	bool IsQA();// 0xdd7e90
	bool IsPlayer();// 0xdd7e60
	bool IsOutOfMapBounds();// 0xdd7e30
	bool IsMember();// 0xdd7e00
	bool IsInVehicle();// 0xdd7da0
	bool IsInactive();// 0xdd7dd0
	bool IsFireTeamLeader();// 0xdd7d70
	bool IsEntryMap();// 0xdd7d40
	bool IsDev();// 0xdd7d10
	bool IsDeployRoleAvailable();// 0xdd7ce0
	bool IsDeathPending();// 0xdd7cb0
	bool IsCommander();// 0xdd7c80
	bool IsCameraMan();// 0xdd7c50
	bool IsAlive();// 0xdd7c20
	bool IsAdminCamera();// 0xdd7bf0
	bool IsAdmin();// 0xdd7bc0
	void GiveUp();// 0xdd7ba0
	void GiveSquadLeader(SQPlayerState* NewLeader);// 0xdd7b10
	void GiveFireTeamLeader(SQPlayerState* NewLeader, int FireTeamIndex);// 0xdd7a40
	float GetYawInputScale();// 0xdd7a10
	int GetTeam();// 0xdd7940
	SQPlayerState* GetSquadPlayerState();// 0xdd7910
	SQSoldier* GetSoldier();// 0xdd78e0
	SQGameSpawn* GetSelectedSpawn();// 0xdd7760
	float GetPitchInputScale();// 0xdd7690
	float GetPendingDeathKillTimestamp();// 0xdd7670
	float GetOutOfMapBoundsKillTimestamp();// 0xdd74f0
	float GetLastDeathTime();// 0xdd7440
	SQRoleSettings* GetDeployRole();// 0xdd70f0
	void GetDeployableReference(SQDeployableSettings* InDeployableSettings, out class SQDeployable OutDeployableReference);// 0x1d69c50
	SQVehicle* GetCurrentVehicle();// 0xdd6f60
	SQVehicleSeat* GetCurrentSeatPawn();// 0xdd6f30
	SQVehicleSeatComponent* GetCurrentSeat();// 0xdd6f00
	SQRoleSettings* GetCurrentRole();// 0xdd6ed0
	void FinalizePendingDeployableItem(out bool OutSuccess);// 0xdd6da0
	void FinalizePendingDeployable(out bool OutSuccess);// 0xdd6d10
	void DisbandSquad();// 0xdd6cf0
	void DisbandFireTeam(int FireTeamIndex);// 0xdd6c60
	void DisapproveQueue();// 0xdd6c40
	void DebugToggleVehicleGodMode(bool Value);// 0xdd6bb0
	void DebugToggleShowVehicleSpawners(bool Value);// 0xdd6b20
	void DebugToggleShowVehicleDamageReceived(bool Value);// 0xdd6a90
	void DebugToggleShowRebase(bool Value);// 0xdd6a00
	void DebugToggleShowMapBoundary(bool bShowMapBoundary);// 0xdd6970
	void DebugToggleShowHitreg(bool Value);// 0xdd68e0
	void DebugToggleNoStaminaDrain(bool Value);// 0xdd6850
	void DebugToggleInfiniteMags(bool Value);// 0xdd67c0
	void DebugToggleForceNoCommanderCooldowns(bool Value);// 0xdd6730
	void DebugToggleForceAllowCommanderActions(bool Value);// 0xdd66a0
	void DebugToggleEditorBlastCones(bool Value);// 0xdd6610
	void DebugToggleCenterDot();// 0xdd65f0
	void DebugSkipStaging();// 0xdd65d0
	void DebugSetServerTickRate(float NewTickRate);// 0xdd6550
	void DebugSetServerSecondsNonSeamlessForced(float Seconds);// 0xdd6550
	void DebugRemoveSteamTestItem(int ID, int Amount);// 0xdd6480
	void DebugPlayEmote(FString EmoteDataName);// 0xdd63d0
	void DebugForceOriginRebase();// 0xdd63b0
	void DebugEndMatch();// 0xdd6390
	void DebugBugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);// 0xdd6190
	void DebugAssignSteamTestItem(int ID, int Amount);// 0xdd60c0
	void CreateSquad(FString Name, bool Locked);// 0xdd5fd0
	void CreateRallyPoint();// 0xdd5fb0
	void CreateMarker(int TeamId, int ClientId, Texture2D* IconTexture, Vector2D MapPosition, float LifeT, Actor* MyOwner);// 0xdd5d80
	void CoreStateRefreshVisibility();// 0xdd5d60
	void CommitSpawn();// 0xdd5d40
	void CloseConsole();// 0xdd5d20
	void ClientWasKickedFromSquad(const FText KickReason, int SquadId, float DurationOfBan);// 0xdd5bc0
	void ClientSystemMessage(FString Message, const LinearColor Color, const float MessageLifetime, enum NotificationType);// 0xdd5a40
	void ClientStartSeatProgressBar(float Timer, SQVehicle* Vehicle, enum MenuMode);// 0xdd58e0
	void ClientStartOnlineGame();// 0xdd58c0
	void ClientStartingNewPlayer();// 0xdd59f0
	void ClientShowVehicleInventory(SQVehicle* Vehicle, enum MenuMode);// 0xdd57f0
	void ClientShowToast(const FText ToastText, float Lifetime);// 0xdd56e0
	void ClientSetSpectatorCamera(Vector CameraLocation, Rotator CameraRotation);// 0xdd55f0
	void ClientSendRoundEndEvent(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets);// 0xdd54a0
	void ClientSendLineToConsole(FString Line);// 0xdd53f0
	void ClientResetInventoryWeaponIndex();// 0xdd53d0
	void ClientReportServerTime(DateTime InRequestClientUTCTime, DateTime InServerUTCTime, float WaterTimeSeconds);// 0xdd52c0
	void ClientRemoveVehicleOverlayWidget();// 0xdd52a0
	void ClientPushApprovalMessage(uint32 Key, const SQApprovalEntryRequest ApprovalEntry, const SQPlayerState* Requester);// 0xdd5180
	void ClientOpenDeployableInteractableMenu(SQDeployableInteractable* DeployableInteractable);// 0xdd50f0
	void ClientOpenAmmoBag(SQDeployableAmmoBag* ammobag);// 0xdd5060
	void ClientOnPlayerToggleVoice_Editor(UniqueNetIdRepl TalkingPlayerId, enum VoiceChannel);// 0xdd4f00
	void ClientIgnoreWeaponInput(bool bIgnore);// 0xdd4e70
	void ClientHideVehicleRadial();// 0xdd4e50
	void ClientGameStarted();// 0xdd4e30
	void ClientExposeUnavailabilityReason(const DataTableRowHandle InReason);// 0xdd4d70
	void ClientEndOnlineGame();// 0xdd4d50
	void ClientEndHealing();// 0xdd4d30
	void ClientDrawSphere(const Vector ZeroLocation, float Radius, int Segments, const Color Color, bool RebaseOntoLocal, bool bPersistentLines, float Lifetime, FString LogLabel, byte DepthPriority, float Thickness);// 0xdd4a10
	void ClientCreateVehicleOverlayWidget(class SQVehicleViewWidget WidgetClass);// 0xdd4980
	void ClientCloseDeployableInteractableMenu(SQDeployableInteractable* DeployableInteractable);// 0xdd48f0
	void ClientCloseAmmoBag(SQDeployableAmmoBag* ammobag);// 0xdd4860
	void ClientChat(SQPlayerState* Speaker, FString Message, enum Channel, enum NotificationType, FString StreamerModeVariantMessage);// 0xdd4690
	void CheckForAdmin();// 0xdd4670
	void ChatToTeam(FString Msg);// 0xdd45c0
	void ChatToSquad(FString Msg);// 0xdd4510
	void ChatToAll(FString Msg);// 0xdd4460
	void Chat(FString Msg, const enum ChatType);// 0xdd4370
	void ChangeTeamsWithId(int NewTeam);// 0xdd42e0
	void ChangeTeams();// 0xdd42c0
	void ChangeRoleFromDeployable(SQRoleSettings* NewRole, SQDeployable* Deployable);// 0xdd41f0
	void ChangeRole(SQRoleSettings* NewRole, bool bGivePartialAmmo, bool bLeavingSquad);// 0xdd40e0
	void CancelPendingDeployable();// 0xdd40c0
	void CancelEmote(const SQEmotesData* EmoteData);// 0xdd4030
	void BPTraceMarkerLocation(class SQMapMarker MarkerClass, out const Vector Start, out const Vector End);// 0x1d69c50
	void BPServerRearmWeapons(out const interface classNone RearmSource, out const SQRearmWeaponRequest[] RearmRequest);// 0xdd3df0
	bool BPHasAccessLevel(enum RequestedLevel);// 0xdd3d60
	void BP_InitializeDeployableFromEquippable(SQDeployableItem* DeployableItem, SQEquipableItem* Equippable);// 0x1d69c50
	void BP_FailPlaceDeployableFromEquippable(SQEquipableItem* Equippable);// 0x1d69c50
	void BP_ExposeUnavailabilityReason(out const DataTableRowHandle InReason);// 0x1d69c50
	void BlueprintPlayerSpawned();// 0x1d69c50
	void BlueprintPlayerDied();// 0x1d69c50
	void BlueprintOnMatchStarted();// 0x1d69c50
	void BlueprintOnMatchEnded(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets);// 0x1d69c50
	void ApproveVehicleClaim();// 0xdd3d40
	void ApproveQueue();// 0xdd3d20
	void ApprovalEntryExpireOnServer(uint32 Index);// 0xdd3c90
	void ApprovalEntryExpireOnClient(uint32 Index);// 0xdd3c00

--------------------------------
Class: SQTeam.Info.Actor.Object
	class SQTeamState* TeamStateClass;//[Offset: 0x228, Size: 1]
	class SQTeamStatePrivate* PrivateTeamStateClass;//[Offset: 0x230, Size: 1]
	SQTeamState* TeamState;//[Offset: 0x238, Size: 1]
	SQTeamStatePrivate* PrivateTeamState;//[Offset: 0x240, Size: 1]
	SQSquad*[] Squads;//[Offset: 0x248, Size: 1]
	SQSquad*[] IndexedSquads;//[Offset: 0x258, Size: 1]
	SQPlayerController* Commander;//[Offset: 0x268, Size: 1]
	SQSquad* CommandSquad;//[Offset: 0x270, Size: 1]
	SQCommanderManager* CommanderManager;//[Offset: 0x278, Size: 1]
	SQLayerTeamConfig* TeamLayerConfig;//[Offset: 0x280, Size: 1]
	void UpdateAvailabilities();// 0xe1c1a0
	bool TryGetFactionSetupDisplayName(out FText OutDisplayName);// 0xe1c0c0
	bool TryGetFactionDisplayName(out FText OutDisplayName);// 0xe1bfe0
	void SetTeamConfig(SQLayerTeamConfig* InLayerTeamConfig);// 0xe1bf50
	void SetFactionSetup(SQFactionSetup* InFactionSetup);// 0xe1be40
	bool Request_Team_Vehicle(out const SQAvailabilityState_Vehicle VehicleStatus);// 0xe1bca0
	bool Request_Team_Deployable(out const SQAvailabilityState_Deployable DeployableStatus);// 0xe1bbe0
	bool Request_Player_Vehicle(out const FName VehicleId, SQPlayerController* InPlayer, out SQVehicleSettings* OutSetting, out DataTableRowHandle OutUnavailabilityReason);// 0xe1ba40
	bool Request_Player_Role_Rearm(out const FName RoleId, SQPlayerController* InPlayer, out const interface classNone InRearmSource, out SQRoleSettings* OutSetting, out DataTableRowHandle OutUnavailabilityReason);// 0xe1b840
	bool Request_Player_Role(out const FName RoleId, SQPlayerController* InPlayer, out SQRoleSettings* OutSetting, out DataTableRowHandle OutUnavailabilityReason);// 0xe1b6a0
	bool Request_Player_Deployable_Refund(SQPlayerController* InPlayer, SQDeployable* InDeployable);// 0xe1b5d0
	bool Request_Player_Action(out const FName ActionId, SQPlayerController* InPlayer, SQActionSettings* OutSetting, out DataTableRowHandle OutUnavailabilityReason);// 0xe1b440
	void Release_Vehicle(out const FName SettingId, const int Index);// 0xe1b370
	void Release_Role(out const FName SettingId);// 0xe1b2e0
	void Release_Deployable(out const FName SettingId);// 0xe1b250
	void Release_Action(out const FName SettingId);// 0xe1b1c0
	bool IsConfigured();// 0xe1af00
	void InitializeAvailabilities();// 0xe1ae40
	bool HasFactionSetup();// 0xe1ae10
	int GetTeamId();// 0xe1adb0
	int GetPlayerCount();// 0xe1acf0
	static FString GetNatoStringOrSquadString(int Idx);// 0xe1ac40
	SQRoleSettings* GetLeaveSquadRole();// 0xe1ac10
	FName GetFactionSetupId();// 0xe1a950
	FString GetFactionSetupDisplayName();// 0xe1a900
	SQFactionSetup* GetFactionSetup();// 0xe1a8d0
	FName GetFactionId();// 0xe1a890
	FString GetFactionDisplayName();// 0xe1a840
	SQFaction* GetFaction();// 0xe1a810
	SQRoleSettings* GetDefaultSquadLeaderRole();// 0xe1a7e0
	SQRoleSettings* GetDefaultRole();// 0xe1a7b0
	void ApplySlomoFactor(float TimeDilationFactor);// 0xe1a650

--------------------------------
Class: SQLayerTeamConfig.Object
	enum Index;//[Offset: 0x28, Size: 1]
	SQFactionSetup* SpecificFactionSetup;//[Offset: 0x30, Size: 1]
	int Tickets;//[Offset: 0x58, Size: 1]
	int PlayerPercentage;//[Offset: 0x5c, Size: 1]
	bool TryGetAvailabilityModifierPct(const SQAvailability* InAvailability, out int OutModifierPct);// 0xd75840
	bool HasFactionSetupChoice(out SQFactionSetup* OutSpecificFaction);// 0xdaaa60
	bool GetCompatibleFactionSetups(const SQLayer* InOuterLayer, out const <FName,SQFactionSetup*> InAvailableFactionSetups, out SQFactionSetup*[] OutCompatibleFactionSetups);// 0xdaa450
	bool EditorOnly_ShouldUseSpecificFaction();// 0xd45810

--------------------------------
Class: SQAvailability.Object
	SQRestriction_Delay_Base* Delay;//[Offset: 0x28, Size: 1]
	SQRestriction_Cost* Cost;//[Offset: 0x30, Size: 1]
	SQRestriction_Count* LimitedCount;//[Offset: 0x38, Size: 1]
	SQRestriction_Boolean*[] OtherRestrictions;//[Offset: 0x40, Size: 1]
	void UpdateTeamAvailability(SQTeam* InTeam, out SQAvailabilityState OutTeamStatus);// 0xd474f0
	void OnTeamRemoveUsage(SQTeam* InTeam, out SQAvailabilityState Status);// 0xd46710
	void OnTeamAddUsage(SQTeam* InTeam, out SQAvailabilityState Status);// 0xd46610
	void OnPlayerRemoveUsage(SQPlayerController* InPlayer, out SQAvailabilityState Status);// 0xd46510
	void OnPlayerAddUsage(SQPlayerController* InPlayer, out SQAvailabilityState Status);// 0xd46410
	bool IsRestrictedForTeam(SQTeam* InTeam, out DataTableRowHandle OutRestrictionReason);// 0xd460d0
	bool IsRestrictedForPlayer(SQPlayerController* InPlayer, out DataTableRowHandle OutRestrictionReason);// 0xd45fe0
	void InitializeTeamAvailability(SQTeam* InTeam, SQLayer* InActiveLayer, out SQAvailabilityState OutTeamStatus);// 0xd45a50
	bool HasTeamBasedCost();// 0xd45a00
	bool HasPlayerBasedCost();// 0xd45870
	bool HasLimitedCount();// 0xd45840
	bool HasDelay();// 0xd45810
	bool HasCost();// 0xd457e0
	void GetAvailabilityForPlayer(SQPlayerController* InPlayer, out const SQAvailabilityState InTeamStatus, out SQAvailabilityState OutPlayerStatus);// 0xd45130

--------------------------------
Class: SQRestriction_Delay_Base.SQRestriction.SQSettings.DataAsset.Object
	bool OnTeamRemoveUsage(SQTeam* InTeam, out Timespan OutNextAvailabilityDelay, out DataTableRowHandle OutDelayReason);// 0xdf4110
	bool OnTeamAddUsage(SQTeam* InTeam, out Timespan OutNextAvailabilityDelay, out DataTableRowHandle OutDelayReason);// 0xdf3ef0
	bool OnPlayerRemoveUsage(SQPlayerController* InPlayer, out Timespan OutNextAvailabilityDelay, out DataTableRowHandle OutDelayReason);// 0xdf3cd0
	bool OnPlayerAddUsage(SQPlayerController* InPlayer, out Timespan OutNextAvailabilityDelay, out DataTableRowHandle OutDelayReason);// 0xdf3ab0
	bool HasInitialDelay(SQTeam* InTeam, out Timespan OutInitialDelay, out int OutDelayedUsage, out DataTableRowHandle OutDelayReason);// 0xdf3620
	void GetDefaultDelay(out Timespan OutDefaultDelay);// 0xdf3450

--------------------------------
Class: SQRestriction.SQSettings.DataAsset.Object
	static bool TryGetLocalVehicle(SQPlayerController* InPlayer, out SQVehicle* OutVehicle);// 0xdef8c0
	static bool TryGetLocalFOB(SQPlayerController* InPlayer, out SQForwardBase* OutFOB);// 0xdef7e0
	bool GetRestrictionReason(out DataTableRowHandle OutRestrictionReason);// 0xdeebb0

--------------------------------
Class: SQSettings.DataAsset.Object
	FName ID;//[Offset: 0x30, Size: 1]
	DataTableRowHandle Data;//[Offset: 0x38, Size: 1]
	FString ModId;//[Offset: 0x48, Size: 1]
	FString GetLogId();// 0xde9830
	FString GetIdAsString();// 0xde97e0
	FName GetId();// 0xde97a0
	bool GetDisplayName(out FText OutDisplayName);// 0xde96c0

--------------------------------
Class: SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	SQUsableData UsableData;//[Offset: 0x3c0, Size: 1]
	class SQDestroyedVehicle* DefaultDestroyedVehicleActorClass;//[Offset: 0x400, Size: 1]
	SQVehicleDestroyedConfig[] DestroyedVehicleConfig;//[Offset: 0x408, Size: 1]
	class SQLastingEffect* TemperatureLastingEffectClass;//[Offset: 0x418, Size: 1]
	FName TemperatureLastingEffectAttachSocket;//[Offset: 0x420, Size: 1]
	SQLastingEffect* TemperatureLastingEffect;//[Offset: 0x428, Size: 1]
	SQVehicleBurningComponent* BurningComponent;//[Offset: 0x430, Size: 1]
	class CameraShakeBase* ImpactCameraShake;//[Offset: 0x438, Size: 1]
	float ImpactEffectNormalForceThreshold;//[Offset: 0x440, Size: 1]
	SoundCue* LightImpactSound;//[Offset: 0x448, Size: 1]
	ParticleSystem* LightImpactEffect;//[Offset: 0x450, Size: 1]
	SoundCue* ImpactSound;//[Offset: 0x458, Size: 1]
	ParticleSystem* ImpactEffect;//[Offset: 0x460, Size: 1]
	bool bDoParticlesUseRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x468, Size: 1]
	class SQPhysicalMaterialVehiclesEffects* PhysMatEffectsClass;//[Offset: 0x470, Size: 1]
	ParticleSystemComponent* MistPSC;//[Offset: 0x478, Size: 1]
	ParticleSystemComponent* PropellerMistPSC;//[Offset: 0x480, Size: 1]
	AudioComponent* MistAC;//[Offset: 0x488, Size: 1]
	AudioComponent* PropellerMistAC;//[Offset: 0x490, Size: 1]
	float MistACFadeOutTime;//[Offset: 0x4a0, Size: 1]
	float PropellerMistACFadeOutTime;//[Offset: 0x4a4, Size: 1]
	TimerHandle MistTimerHandle;//[Offset: 0x4a8, Size: 1]
	float MistDepthUpdateInterval;//[Offset: 0x4b0, Size: 1]
	SQVehicleCenterOfMassFXComponent* CenterOfMassFXComponent;//[Offset: 0x4b8, Size: 1]
	MulticastInlineDelegateProperty OnVehicleRepairEvent;//[Size: 1]
	SQDestroyedVehicle* DestroyedVehicleActor;//[Offset: 0x4d0, Size: 1]
	SQVehicleClaim* ClaimInfo;//[Offset: 0x4d8, Size: 1]
	SQSquadState* ClaimedBySquad;//[Offset: 0x4e0, Size: 1]
	bool bClaimable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e8, Size: 1]
	bool bEnterableWithoutClaim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e9, Size: 1]
	bool bDrivableWithoutClaim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ea, Size: 1]
	bool bNonSquadMembersMayEnterWhenClaimed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4eb, Size: 1]
	FText NotClaimedCantEnterErrorMessage;//[Offset: 0x4f0, Size: 1]
	FText FullVehicleCantEnterErrorMessage;//[Offset: 0x508, Size: 1]
	FText EnemyVehicleCantEnterErrorMessage;//[Offset: 0x520, Size: 1]
	FText NotClaimedNeedsApprovalErrorMessage;//[Offset: 0x538, Size: 1]
	FText NotClaimedNotInSquadErrorMessage;//[Offset: 0x550, Size: 1]
	FText WrongRoleForClaimErrorMessage;//[Offset: 0x568, Size: 1]
	FText WrongRoleForSeatErrorMessage;//[Offset: 0x580, Size: 1]
	FText FullVehicleOrWrongRoleCantEnterErrorMessage;//[Offset: 0x598, Size: 1]
	FText SeatFilledErrorMessage;//[Offset: 0x5b0, Size: 1]
	FText SeatBeingEnteredErrorMessage;//[Offset: 0x5c8, Size: 1]
	FText ClaimedByAnotherSquadCantEnterErrorMessage;//[Offset: 0x5e0, Size: 1]
	FText CrewmanRole;//[Offset: 0x5f8, Size: 1]
	FText PilotRole;//[Offset: 0x610, Size: 1]
	CurveFloat* VelocityVsCollisionDamageCurve;//[Offset: 0x628, Size: 1]
	float CollisionDamageThesholdGs;//[Offset: 0x630, Size: 1]
	float CollisionsDamageVelocityThreshold;//[Offset: 0x634, Size: 1]
	float VehicleToOccupantCollisionDamageScaler;//[Offset: 0x638, Size: 1]
	SQBoundaryListener* BoundaryListener;//[Offset: 0x640, Size: 1]
	SQCollisionDamage* CollisionDamage;//[Offset: 0x648, Size: 1]
	SQVehicleBuoyancyComponent* BuoyancyComponent;//[Offset: 0x650, Size: 1]
	enum VehicleType;//[Offset: 0x660, Size: 1]
	Texture* VehicleIconTexture;//[Offset: 0x668, Size: 1]
	LinearColor VehicleIconColor;//[Offset: 0x670, Size: 1]
	Vector2D VehicleIconOffset;//[Offset: 0x680, Size: 1]
	Vector2D VehicleIconSize;//[Offset: 0x688, Size: 1]
	float LastRepairedTime;//[Offset: 0x690, Size: 1]
	float PercentDriverGetsForKill;//[Offset: 0x694, Size: 1]
	float LastSeatEventTime;//[Offset: 0x698, Size: 1]
	bool bPreventVehicleEntrance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x69c, Size: 1]
	float MaxVehicleEntryDistance;//[Offset: 0x6a0, Size: 1]
	SQVehicleSeatConfig DriverSeatConfig;//[Offset: 0x6a8, Size: 1]
	SQVehicleSeatConfig[] AdditionalSeatsConfig;//[Offset: 0x6f8, Size: 1]
	SQVehicleSeatComponent*[] VehicleSeats;//[Offset: 0x708, Size: 1]
	SkeletalMeshComponent* VehicleMesh;//[Offset: 0x718, Size: 1]
	bool bIsVehicleDamagedByRadialExplosions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x720, Size: 1]
	MulticastInlineDelegateProperty OnVehicleDestroyed;//[Size: 1]
	MulticastInlineDelegateProperty OnVehicleDamaged;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerEntered;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerExited;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerSwitchedSeats;//[Size: 1]
	MulticastInlineDelegateProperty AmmoUpdatedEvent;//[Size: 1]
	SoundCue* OnVehicleEnterSound;//[Offset: 0x788, Size: 1]
	SoundCue* OnVehicleExitSound;//[Offset: 0x790, Size: 1]
	SoundCue* OnSeatSwitchSound;//[Offset: 0x798, Size: 1]
	float ExitSpeedOffset;//[Offset: 0x7a0, Size: 1]
	SQBuffManager* Buffs;//[Offset: 0x7a8, Size: 1]
	float Health;//[Offset: 0x7b0, Size: 1]
	float MaxHealth;//[Offset: 0x7b4, Size: 1]
	class DamageType* LastDamageTypeClass;//[Offset: 0x7b8, Size: 1]
	Controller* LastDamageInstigator;//[Offset: 0x7c0, Size: 1]
	bool bCanStackRepairers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7c8, Size: 1]
	bool bUseDelayBeforeWreck;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7c9, Size: 1]
	float WreckDelay;//[Offset: 0x7cc, Size: 1]
	float MaxRepairToolLimit;//[Offset: 0x7d0, Size: 1]
	float LastDamageInstigatorTimeoutThreshold;//[Offset: 0x7d4, Size: 1]
	float FlipPitchThreshold;//[Offset: 0x7e0, Size: 1]
	float FlipRollThreshold;//[Offset: 0x7e4, Size: 1]
	float FlipSpeedThreshold;//[Offset: 0x7e8, Size: 1]
	float FlipRotationExceededTimeThreshold;//[Offset: 0x7f0, Size: 1]
	float DestroyTime;//[Offset: 0x7f4, Size: 1]
	bool bHasBeenDestroyed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7f8, Size: 1]
	SQDamageModifier[] AllowableDamageTypes;//[Offset: 0x800, Size: 1]
	SQDamageTypeEffects DamageEffects;//[Offset: 0x810, Size: 1]
	SQVehicleUIStaticDataAsset* StaticUIData;//[Offset: 0x838, Size: 1]
	float MaxThrottle;//[Offset: 0x840, Size: 1]
	SQVehicleEmergencyRecoveryComponent* EmergencyRecoveryComponent;//[Offset: 0x848, Size: 1]
	SQVehicleQueueEntry[] PlayerSeatPairInfoArray;//[Offset: 0x850, Size: 1]
	Actor*[] CurrentRepairers;//[Offset: 0x868, Size: 1]
	SQVehicleSettingEntry Setting;//[Offset: 0x878, Size: 1]
	void UpdateMistParticleSystemsDepthCalculations();// 0xe31000
	void ToggleMistParticleSystemsDepthCalculation(bool bActivate);// 0xe30ee0
	void SwitchedSeat(SQSoldier* Soldier, SQVehicleSeatComponent* PreviousSeat, SQVehicleSeatComponent* NewSeat);// 0xe30dd0
	void SetEffectPhysmatParams(ParticleSystemComponent* ParticleSystem, SQPhysicalMaterial* SQPhysMat);// 0xe30b70
	void ServerDebugVehicleFullHealth();// 0xe30a00
	void ResetLastSeatEventTime();// 0xe309c0
	void RepairVehicle(const Actor* SourceRepairer, enum RepairSource, float RepairAmount, float SoldierHealAmount);// 0xe30870
	void PlayerRequestLeaveSeat(SQPlayerController* Player);// 0xe30750
	void OutOfBoundsKillCallback();// 0xe30730
	void OnWaterBodyExited();// 0xe30710
	void OnWaterBodyEntered();// 0xe306f0
	void OnVehicleRepaired();// 0xe306d0
	void OnRep_HealthChanged();// 0xd59a20
	void OnRep_HasBeenDestroyed();// 0xe306b0
	void OnRep_DestroyedState();// 0xe04480
	void OnExitBoundary(SQBoundaryListener* Listener, SQBoundary* Boundary);// 0xe305e0
	void OnEnterBoundary(SQBoundaryListener* Listener, SQBoundary* Boundary);// 0xe30510
	void OnCenterOfMassExitWaterBody();// 0xe028e0
	void OnCenterOfMassEnterWaterBody();// 0xe304d0
	void MulticastPlayDamageEffects(class DamageType DamageTypeClass, const Vector ImpactLocationZeroBased);// 0xe30400
	void LeftVehicle(SQSoldier* Soldier, SQVehicleSeatComponent* PreviousSeat);// 0xe30330
	bool IsVehicleFull();// 0xe30300
	bool IsVehicleEmpty();// 0xe302d0
	bool IsValidSeat(int Seat);// 0xe30230
	bool IsSeatHeldByClaimingSquad(int Seat);// 0xe30190
	bool IsOutOfMapBounds();// 0xe30160
	SQVehicleSeatComponent*[] GetSeats();// 0xe30030
	int GetPlayersSeat(const SQPlayerController* Player);// 0xe2ff90
	int GetNumOccupants();// 0xe2fdb0
	int GetInventoryAmmoPoints();// 0xe2fa30
	void GetExitPoints(out Transform[] OutTransforms);// 0xe2f950
	SQVehicleEmergencyRecoveryComponent* GetEmergencyRecoveryComponent();// 0xe2f920
	SQVehicleSeatComponent* GetDriverSeat();// 0xe2f8f0
	int FindFirstAvailableSeat(SQPlayerController* SPC, bool bIncludeDriverSeat);// 0xe2f670
	void ExitTurnOut(SQVehicleSeatComponent* Seat);// 0xe2f5e0
	void EnterTurnOut(SQVehicleSeatComponent* Seat);// 0xe2f480
	void EnteredVehicle(SQSoldier* Soldier, SQVehicleSeatComponent* NewSeat);// 0xe2f510
	void EjectPlayerFromSeat(int Seat);// 0xe2f3f0
	void EjectAllPlayers();// 0xe2f3d0
	void DrivetrainComponentRepaired(SQDriveTrainComponent* DriveTrainComponent);// 0x1d69c50
	void DrivetrainComponentDestroyed(SQDriveTrainComponent* DriveTrainComponent);// 0x1d69c50
	void DebugVehicleFullHealth();// 0xe2f3b0
	void DeactivateMistOnCenterOfMassEntry();// 0xe062d0
	bool CanActAsRearmSource();// 0xe2f360
	void BurnVehicle(float VehicleBurnAmount, float SoldierBurnAmount, Controller* BurnCauser);// 0xe2f240
	void BPClientDestroyed();// 0x1d69c50
	void AmmoUpdated();// 0xe2f220
	void ActivateMistOnCenterOfMassEntry();// 0xe028c0

--------------------------------
Class: SQVehicleSeat.SQPawn.Pawn.Actor.Object
	float ADSSpeed;//[Offset: 0x340, Size: 1]
	float PitchLimit;//[Offset: 0x344, Size: 1]
	float MinPitchLimit;//[Offset: 0x348, Size: 1]
	float YawLimit;//[Offset: 0x34c, Size: 1]
	float MinYawLimit;//[Offset: 0x350, Size: 1]
	SQVehicleSeatComponent* ParentSeatComponent;//[Offset: 0x358, Size: 1]
	enum ListenerType;//[Offset: 0x360, Size: 1]
	bool bIsCameraInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x361, Size: 1]
	bool bShouldSendClientSideCameraUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x362, Size: 1]
	SQVehicleComponent*[] VehicleComponents;//[Offset: 0x368, Size: 1]
	SQVehicleComponent* CachedVehicleEngine;//[Offset: 0x378, Size: 1]
	bool bTurnOut;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x380, Size: 1]
	SQVehicleInventoryComponent* CachedVehicleInventory;//[Offset: 0x388, Size: 1]
	CameraComponent* CachedCameraComponent;//[Offset: 0x390, Size: 1]
	float SeatHealth;//[Offset: 0x398, Size: 1]
	SQFreeLookComponent* FreeLookComponent;//[Offset: 0x3a0, Size: 1]
	SQMovementComponentManager* MovementComponentManager;//[Offset: 0x3a8, Size: 1]
	void SetTurnOut(bool bEnabled);// 0xe38710
	void ServerSetTurnOut(bool bEnabled);// 0xe37fe0
	void ServerOnInteract();// 0xe37e10
	void ServerCancelPlayerExit(SQPlayerController* SPC);// 0xe37d00
	void RequestChangeSeat(SQPlayerController* Player, int RequestedSeat);// 0xe37af0
	void OverlayZoom();// 0xe37ad0
	void OverlayUnzoom();// 0xe37ab0
	void OnRep_TurnOut();// 0xe37a90
	void OnRep_SeatHealth(float PreviousHealth);// 0xe37a10
	void OnPrevItem();// 0xe37990
	void OnNextItem();// 0xe37750
	SceneComponent* GetWeaponAttachComponent();// 0xd9eca0
	SQVehicleSeatComponent* GetVehicleSeatComponent();// 0xe37610
	SQVehicleResourceWeaponInventoryComponent* GetVehicleResourceInventory();// 0xe375e0
	SQVehicleInventoryComponent* GetVehicleInventory();// 0xe375b0
	SQVehicleComponent* GetVehicleEngine();// 0xe37580
	SQVehicle* GetVehicle();// 0xd98d40
	SceneComponent* GetSoldierAttachComponent();// 0xe37440
	float GetSeatHealth();// 0xe373f0
	float GetNormalizedSeatHealth();// 0xe37360
	SkinnedMeshComponent* GetMasterPoseComponent();// 0xe372f0
	SceneComponent* GetDefaultCameraLocationComponent();// 0xe37290
	CameraComponent* GetCameraComponent();// 0xe371b0
	SceneComponent* GetADSCameraLocationComponent();// 0xe37120
	SceneComponent* Get3PAttachComponent();// 0xe370f0
	SceneComponent* Get1PAttachComponent();// 0xe370c0

--------------------------------
Class: SQPawn.Pawn.Actor.Object
	bool bClientUpdating;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x290, Size: 1]
	bool bUseEngineActorReplication;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x294, Size: 1]
	bool bIsUsingNewMovementComponent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x295, Size: 1]
	enum Team;//[Offset: 0x296, Size: 1]
	SQBasedMovementInfo BasedMovement;//[Offset: 0x298, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x2c8, Size: 1]
	Vector BaseTranslationOffset;//[Offset: 0x2d0, Size: 1]
	Quat BaseRotationOffset;//[Offset: 0x2e0, Size: 1]
	bool bInBaseReplication;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f0, Size: 1]
	MulticastInlineDelegateProperty OnPawnPossessedEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnPawnUnPossessedEvent;//[Size: 1]
	void SetTeam(enum Team);// 0xdca910
	void OnRep_Team();// 0xdc9d10
	void OnPossessionChanged__DelegateSignature();// 0x1d69c50
	enum GetTeam();// 0xdc8ba0
	void BlueprintCalcCamera(float DeltaTime, Vector InLocation, Rotator InRotation, float InFOV, out Vector OutLocation, out Rotator OutRotation, out float OutFOV);// 0x1d69c50

--------------------------------
Class: SQSoldier.Character.Pawn.Actor.Object
	float BuddyBoosterMaximumVelocitySquared;//[Offset: 0x4f4, Size: 1]
	SQUsableData UsableData;//[Offset: 0x4f8, Size: 1]
	SkeletalMeshComponent* Mesh1P;//[Offset: 0x538, Size: 1]
	SkeletalMeshComponent* Mesh1PShadow;//[Offset: 0x540, Size: 1]
	bool bEnableTickUpdateShiftMesh;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x548, Size: 1]
	Vector ShiftMeshOffset;//[Offset: 0x54c, Size: 1]
	float Prone2SprintMovementRecovery;//[Offset: 0x558, Size: 1]
	float Prone2SprintAlpha;//[Offset: 0x55c, Size: 1]
	SQConsoleVariablesComponent* ConsoleVariablesComponent;//[Offset: 0x560, Size: 1]
	SkeletalMesh*[] SoldierMeshSkins;//[Offset: 0x568, Size: 1]
	MaterialInterface* BasePatchMaterial;//[Offset: 0x578, Size: 1]
	CameraComponent* FirstPersonCameraComponent;//[Offset: 0x580, Size: 1]
	float WeaponBasedFOV;//[Offset: 0x588, Size: 1]
	SQSoldierMovement* SoldierMovement;//[Offset: 0x590, Size: 1]
	SphereComponent* SnapZone;//[Offset: 0x598, Size: 1]
	PostProcessSettings LowHealthPostProcessSettings;//[Offset: 0x5a0, Size: 1]
	PostProcessSettings BleedingPostProcessSettings;//[Offset: 0xb00, Size: 1]
	PostProcessSettings SuppressionPostProcessSettings;//[Offset: 0x1060, Size: 1]
	bool bAllowEffectsForProjectilesFiredWithinSuppressionRange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x15c0, Size: 1]
	float UnderSuppressionPercentage;//[Offset: 0x15c4, Size: 1]
	float SuppressionEffectsDecayRate;//[Offset: 0x15c8, Size: 1]
	float BaseTurnRate;//[Offset: 0x15cc, Size: 1]
	float BaseLookUpRate;//[Offset: 0x15d0, Size: 1]
	float ADSToSprintDot;//[Offset: 0x15d4, Size: 1]
	bool bIsDoubleTapWalking;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x15d8, Size: 1]
	Vector GunOffset;//[Offset: 0x15dc, Size: 1]
	float ProneEyeHeight;//[Offset: 0x15e8, Size: 1]
	bool bIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x15ec, Size: 1]
	bool bInThirdPersonView;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x15fc, Size: 1]
	bool bCachedInThirdPerson;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x15fc, Size: 1]
	FName AttachSocket1PName;//[Offset: 0x1600, Size: 1]
	FName AttachSocket3PName;//[Offset: 0x1608, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x1610, Size: 1]
	SQMapIconComponent* MapIcon;//[Offset: 0x1618, Size: 1]
	float SecondsUntilIgnoreDistanceForAliveTeamMates;//[Offset: 0x1620, Size: 1]
	float SecondsOfSpawnProtection;//[Offset: 0x1624, Size: 1]
	float InvulnerableDelay;//[Offset: 0x1628, Size: 1]
	float RagdollLifeSpan;//[Offset: 0x162c, Size: 1]
	float UnpossessionDelayAfterDeath;//[Offset: 0x1630, Size: 1]
	SQBoneDamageMod[] BoneDamageModifiers;//[Offset: 0x1638, Size: 1]
	byte LeaningDirection;//[Offset: 0x1678, Size: 1]
	float BlockLeanTraceDistance;//[Offset: 0x167c, Size: 1]
	float PitchAngleAdjust;//[Offset: 0x1680, Size: 1]
	float BlockLeanTraceRotation;//[Offset: 0x1684, Size: 1]
	float ProneBlockLeanTraceDistance;//[Offset: 0x1688, Size: 1]
	float PronePitchAngleAdjust;//[Offset: 0x168c, Size: 1]
	float ProneBlockLeanTraceRotation;//[Offset: 0x1690, Size: 1]
	float UseInteractDistance;//[Offset: 0x1694, Size: 1]
	Actor* UseFocus;//[Offset: 0x1698, Size: 1]
	float SnapZoneRadius;//[Offset: 0x16a4, Size: 1]
	float MinDistanceToSuppressedTarget;//[Offset: 0x16a8, Size: 1]
	float FullSuppressionRadius;//[Offset: 0x16ac, Size: 1]
	float SuppressionRadius;//[Offset: 0x16b0, Size: 1]
	SQVehicleSeatComponent* CurrentSeat;//[Offset: 0x16b8, Size: 1]
	bool bTestingMove;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x16c0, Size: 1]
	float CachedMoveRotation;//[Offset: 0x16c4, Size: 1]
	Vector CachedMoveRotationPoint;//[Offset: 0x16c8, Size: 1]
	Vector CachedForwardVector;//[Offset: 0x16d4, Size: 1]
	MulticastInlineDelegateProperty OnChangedSeat;//[Size: 1]
	bool bStopADSWhenSprintPressed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x16f0, Size: 1]
	bool bStopADSWhenPronePressed;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x16f0, Size: 1]
	bool bStopADSWhenUnpronePressed;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x16f0, Size: 1]
	bool bStopSprintWhenADSPressed;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x16f0, Size: 1]
	bool bStopUsingPrimaryItemWhenPronePressed;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x16f0, Size: 1]
	bool bStopUsingAltItemWhenPronePressed;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x16f0, Size: 1]
	bool bStopUsingPrimaryItemWhenUnpronePressed;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x16f0, Size: 1]
	bool bStopUsingAltItemWhenUnpronePressed;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x16f0, Size: 1]
	bool bItemLoweredDueToCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x16f1, Size: 1]
	bool bCachedADSDuringItemCollision;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x16f1, Size: 1]
	Actor* UsingObject;//[Offset: 0x16f8, Size: 1]
	int VehicleSeatEntryWeaponSlot;//[Offset: 0x1700, Size: 1]
	int VehicleSeatEntryWeaponOffset;//[Offset: 0x1704, Size: 1]
	SQTakeHitInfo LastTakeHitInfo;//[Offset: 0x1ae8, Size: 1]
	byte SoldierSkinIndex;//[Offset: 0x1c20, Size: 1]
	bool bIsDying;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c24, Size: 1]
	bool bIsBleeding;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1c24, Size: 1]
	bool bIsWounded;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x1c24, Size: 1]
	bool bAllowWoundedState;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x1c24, Size: 1]
	float Health;//[Offset: 0x1c28, Size: 1]
	float LastHealedTime;//[Offset: 0x1c2c, Size: 1]
	float WoundedThreshold;//[Offset: 0x1c30, Size: 1]
	float HealthBleedableThreshold;//[Offset: 0x1c34, Size: 1]
	float HealthHurtMovementThreshold;//[Offset: 0x1c38, Size: 1]
	float DamageBleedableThreshold;//[Offset: 0x1c3c, Size: 1]
	float WoundedHealthLossRate;//[Offset: 0x1c40, Size: 1]
	float WoundedBandagedHealthLossRate;//[Offset: 0x1c44, Size: 1]
	float BleedingHealthLossRate;//[Offset: 0x1c48, Size: 1]
	float KillDamageThreshold;//[Offset: 0x1c4c, Size: 1]
	float HealthUponRevival;//[Offset: 0x1c50, Size: 1]
	float TimeBecameWounded;//[Offset: 0x1c54, Size: 1]
	float TimeBecameRevived;//[Offset: 0x1c58, Size: 1]
	float PostRecoveryUpdateRate;//[Offset: 0x1c5c, Size: 1]
	TimerHandle PostRecoveryTimerHandle;//[Offset: 0x1c60, Size: 1]
	float PostRecoveryTimeLeft;//[Offset: 0x1c68, Size: 1]
	CurveFloat* PostRecoveryRateByHealthCurve;//[Offset: 0x1c70, Size: 1]
	float CumulativeRevivePenalty;//[Offset: 0x1c78, Size: 1]
	bool bIsHoldingBreath;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c7c, Size: 1]
	float BreathHoldStamina;//[Offset: 0x1c80, Size: 1]
	float BreathHoldStaminaMax;//[Offset: 0x1c84, Size: 1]
	float BreathHoldRecoveryDuration;//[Offset: 0x1c88, Size: 1]
	float BreathHoldConsumptionDuration;//[Offset: 0x1c8c, Size: 1]
	float BreathHoldFadeDuration;//[Offset: 0x1c90, Size: 1]
	float BreathHoldPct;//[Offset: 0x1c94, Size: 1]
	float FocusZoomAlpha;//[Offset: 0x1c98, Size: 1]
	CurveFloat* FallSpeedToFallDamageCurve;//[Offset: 0x1ca0, Size: 1]
	float FallingDamageMultiplier;//[Offset: 0x1ca8, Size: 1]
	float MaximumSafeFallingSpeed;//[Offset: 0x1cac, Size: 1]
	float BonkOnHeadFallDamageMultiplier;//[Offset: 0x1cb0, Size: 1]
	MulticastInlineDelegateProperty OnRevivedEvent;//[Size: 1]
	bool bIsLeavingServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1cc8, Size: 1]
	SoundMix* WoundedSoundMix;//[Offset: 0x1cd0, Size: 1]
	SoundMix* BleedingSoundMix;//[Offset: 0x1cd8, Size: 1]
	SoundBase* WaterFeetBottomEnterSound;//[Offset: 0x1ce0, Size: 1]
	SoundBase* WaterAboveHipEnterSound;//[Offset: 0x1ce8, Size: 1]
	SoundBase* WaterJumpSound;//[Offset: 0x1cf0, Size: 1]
	AudioComponent* WaterAC;//[Offset: 0x1cf8, Size: 1]
	AudioComponent* DeepWaterAC;//[Offset: 0x1d00, Size: 1]
	enum ListenerType;//[Offset: 0x1d08, Size: 1]
	CurveLinearColor* HealthBasedFilterGainCurve;//[Offset: 0x1d10, Size: 1]
	bool bUseHealthBasedFilterGainCurveForWoundedSoundMix;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1d18, Size: 1]
	bool bUseHealthBasedFilterGainCurveForBleedingSoundMix;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1d18, Size: 1]
	CurveFloat* HeartbeatVolumeCurve;//[Offset: 0x1d20, Size: 1]
	SoundBase* HeartbeatSound;//[Offset: 0x1d28, Size: 1]
	SoundBase* HeartbeatIncapSound;//[Offset: 0x1d30, Size: 1]
	SoundBase* DefaultLandedSound;//[Offset: 0x1d38, Size: 1]
	SoundBase* HitSound;//[Offset: 0x1d40, Size: 1]
	SoundBase* FirstPersonHitSound;//[Offset: 0x1d48, Size: 1]
	SoundBase* IncapSound;//[Offset: 0x1d50, Size: 1]
	SQBoneHitSound[] BoneHitSounds;//[Offset: 0x1d58, Size: 1]
	float IncapSoundOccurrencePercentage;//[Offset: 0x1d68, Size: 1]
	float WoundedSoundMixDelaySeconds;//[Offset: 0x1d6c, Size: 1]
	bool bPlayIncapSound;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1d70, Size: 1]
	SoundBase* DeathSound;//[Offset: 0x1d78, Size: 1]
	SoundBase* ClothingSound;//[Offset: 0x1d80, Size: 1]
	SoundBase* EquipmentSound;//[Offset: 0x1d88, Size: 1]
	SoundBase* ResupplyCrateSound;//[Offset: 0x1d90, Size: 1]
	float DeathSoundOccurrencePercentage;//[Offset: 0x1d98, Size: 1]
	bool bPlayDeathSound;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1d9c, Size: 1]
	AudioComponent* FoleyAC;//[Offset: 0x1da0, Size: 1]
	AudioComponent* HeartbeatAC;//[Offset: 0x1da8, Size: 1]
	AudioComponent* HeartbeatIncapAC;//[Offset: 0x1db0, Size: 1]
	class SQPhysicalMaterialSoldiersEffects* PhysMatEffectsClass;//[Offset: 0x1db8, Size: 1]
	bool bPerfToggleMultiCastLean;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1dc0, Size: 1]
	TimerHandle DelayedUnposessTimer;//[Offset: 0x1dc8, Size: 1]
	PhysicsHandleComponent* DraggingHandle;//[Offset: 0x1dd0, Size: 1]
	SQDraggingData DraggingData;//[Offset: 0x1dd8, Size: 1]
	float DraggingDistanceMultiplier;//[Offset: 0x1de8, Size: 1]
	TimerHandle StartDraggingTimerHandle;//[Offset: 0x1df0, Size: 1]
	float StartDraggingDelay;//[Offset: 0x1df8, Size: 1]
	SQDraggableBone[] DraggableBones;//[Offset: 0x1e00, Size: 1]
	SQSoldierRagdollComponent* RagdollComponent;//[Offset: 0x1e10, Size: 1]
	SQBuffManager* Buffs;//[Offset: 0x1e18, Size: 1]
	MulticastInlineDelegateProperty OnWoundEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnDeathEvent;//[Size: 1]
	bool bBodyDraggingActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1e48, Size: 1]
	SQSoldierStaticInfo* SoldierStaticInfo;//[Offset: 0x1e50, Size: 1]
	float DefaultDrowningHeight;//[Offset: 0x1e58, Size: 1]
	float CrouchedDrowningHeight;//[Offset: 0x1e5c, Size: 1]
	float ProneDrowningHeight;//[Offset: 0x1e60, Size: 1]
	SQUnderwaterBoneData UnderwaterBoneData;//[Offset: 0x1e64, Size: 1]
	ParticleSystem* WaterFeetEnterEffect;//[Offset: 0x1e90, Size: 1]
	ParticleSystem* WaterDeepEnterEffect;//[Offset: 0x1e98, Size: 1]
	SQBaseWaterComponent* BaseWaterComponent;//[Offset: 0x1ea0, Size: 1]
	SQSoldierWaterDamageComponent* WaterDamageComponent;//[Offset: 0x1ea8, Size: 1]
	SQWaterPointTestComponent* WaterPointTestComponent;//[Offset: 0x1eb0, Size: 1]
	SQPawnInventoryComponent* InventoryComponent;//[Offset: 0x1ec8, Size: 1]
	SoundMix* CurrentSoundMix;//[Offset: 0x1ed8, Size: 1]
	Vector_NetQuantize[] ZeroBasedBoneLocs;//[Offset: 0x1ee0, Size: 1]
	SQItemStaticInfo* CurrentItemStaticInfo;//[Offset: 0x1ef0, Size: 1]
	SQBotComponent* BotComponent;//[Offset: 0x1f08, Size: 1]
	SkeletalMeshComponent* UpperMesh1P;//[Offset: 0x1f10, Size: 1]
	SpringArmComponent* SpringArm1P;//[Offset: 0x1f18, Size: 1]
	AnimMontage* IdleMontage;//[Offset: 0x1f20, Size: 1]
	Rotator ControlRotation;//[Offset: 0x1f28, Size: 1]
	Rotator AimRotation1P;//[Offset: 0x1f34, Size: 1]
	float RequiredProneTransitionTime;//[Offset: 0x1f40, Size: 1]
	bool bCachedIsUsingItem;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f44, Size: 1]
	bool bCachedIsUsingGrenade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f45, Size: 1]
	bool bCachedLeanLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f46, Size: 1]
	bool bCachedLeanRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f47, Size: 1]
	float CachedFwdPct;//[Offset: 0x1f48, Size: 1]
	float CachedStrafePct;//[Offset: 0x1f4c, Size: 1]
	bool bShot;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f50, Size: 1]
	bool bWasCrouchedBeforeProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f51, Size: 1]
	bool bIsCameraRecoilActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f52, Size: 1]
	float SpringArmTargetHeight1p;//[Offset: 0x1f54, Size: 1]
	float SpringArmHeight1pInterpSpeed;//[Offset: 0x1f58, Size: 1]
	float TempSpringArmHeight1p;//[Offset: 0x1f5c, Size: 1]
	float CurrentSpringArmHeight1p;//[Offset: 0x1f60, Size: 1]
	float SpringArmClimbingHeight;//[Offset: 0x1f64, Size: 1]
	float SpringArmCrouchingMovingHeight;//[Offset: 0x1f68, Size: 1]
	float SpringArmCrouchingStaticHeight;//[Offset: 0x1f6c, Size: 1]
	float SpringArmProneHeight;//[Offset: 0x1f70, Size: 1]
	Vector Base1pOffset;//[Offset: 0x1f74, Size: 1]
	Vector RawBase1pOffset;//[Offset: 0x1f80, Size: 1]
	bool bSwitchedSoldierStance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f8c, Size: 1]
	enum ViewMode3p;//[Offset: 0x1f8d, Size: 1]
	Vector ViewPos3p;//[Offset: 0x1f90, Size: 1]
	float ViewDistance3p;//[Offset: 0x1f9c, Size: 1]
	Rotator ViewOrientation3p;//[Offset: 0x1fa0, Size: 1]
	int ViewScrollDistance3p;//[Offset: 0x1fac, Size: 1]
	Rotator ViewAdjustingDelta3p;//[Offset: 0x1fb0, Size: 1]
	float ViewTogglePressTime;//[Offset: 0x1fbc, Size: 1]
	bool bAdjustingView3p;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1fc0, Size: 1]
	bool bLastInThirdPersonView;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1fc1, Size: 1]
	AnimMontage* StartCrouch_1P_Montage;//[Offset: 0x1fc8, Size: 1]
	AnimMontage* EndCrouch_1P_Montage;//[Offset: 0x1fd0, Size: 1]
	AnimMontage* DraggingStart1pMontage;//[Offset: 0x1fd8, Size: 1]
	AnimMontage* DraggingStart3pMontage;//[Offset: 0x1fe0, Size: 1]
	AnimMontage* DraggingEnd1pMontage;//[Offset: 0x1fe8, Size: 1]
	AnimMontage* DraggingEnd3pMontage;//[Offset: 0x1ff0, Size: 1]
	SQEquipableItem* PreviousWeapon;//[Offset: 0x1ff8, Size: 1]
	bool bPreviousWeaponMagHasAmmo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2000, Size: 1]
	bool bCachedIsSprinting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2001, Size: 1]
	SceneComponent* WeaponDeviationRot;//[Offset: 0x2008, Size: 1]
	bool bAccuracyDebugVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2010, Size: 1]
	SQAnimInstanceSoldier3P* CachedAnimInstance3p;//[Offset: 0x2018, Size: 1]
	SQAnimInstanceSoldier1P* CachedAnimInstance1p;//[Offset: 0x2020, Size: 1]
	float SoldierPlayTime1p;//[Offset: 0x2028, Size: 1]
	float SoldierPlayTime3p;//[Offset: 0x202c, Size: 1]
	MulticastInlineDelegateProperty OnPawnPossessedEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnPawnUnPossessedEvent;//[Size: 1]
	SQClimbData ClimbData;//[Offset: 0x2050, Size: 1]
	bool bClimbingEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x21c8, Size: 1]
	SQClimbInfo ClimbInfo;//[Offset: 0x21d0, Size: 1]
	SQBoundaryListener* BoundaryListener;//[Offset: 0x2288, Size: 1]
	SQFreeLookComponent* FreeLookComponent;//[Offset: 0x2298, Size: 1]
	Rotator VaultClimbAo;//[Offset: 0x22a0, Size: 1]
	Rotator CachedVaultClimbAo2;//[Offset: 0x22ac, Size: 1]
	float CachedVaultClimbAoYawInterpSpeed;//[Offset: 0x22b8, Size: 1]
	float CachedVaultClimbAoPitchInterpSpeed;//[Offset: 0x22bc, Size: 1]
	float Bipod3pSkelMeshOffset;//[Offset: 0x22c0, Size: 1]
	float BeginBipod3pSkelMeshOffset;//[Offset: 0x22c4, Size: 1]
	float CachedBipodTransitionAlpha;//[Offset: 0x22c8, Size: 1]
	bool bIsBipodDeployed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x22cc, Size: 1]
	Vector BipodHitLocZeroBased;//[Offset: 0x22d0, Size: 1]
	SceneComponent* BipodObject;//[Offset: 0x22e0, Size: 1]
	Vector CachedDeployed1pBipodLocation;//[Offset: 0x22f4, Size: 1]
	float BipodHitLocSpringArm1PHeight;//[Offset: 0x2300, Size: 1]
	float BipodNonDeployedSpringArm1pRelativeHeight;//[Offset: 0x2304, Size: 1]
	float BipodSpringArmFloorTraceLength;//[Offset: 0x237c, Size: 1]
	float DeployedBipodCapsuleRadius;//[Offset: 0x2380, Size: 1]
	float BipodClientServerAcceptableRange;//[Offset: 0x2384, Size: 1]
	float BipodObjectMaxDelta;//[Offset: 0x2388, Size: 1]
	float BipodDepth;//[Offset: 0x238c, Size: 1]
	float BipodStandingMinDeployHeight;//[Offset: 0x2390, Size: 1]
	float BipodStandingMaxDeployHeight;//[Offset: 0x2394, Size: 1]
	float BipodCrouchingMinDeployHeight;//[Offset: 0x2398, Size: 1]
	float BipodCrouchingMaxDeployHeight;//[Offset: 0x239c, Size: 1]
	float BipodProneMinDeployHeight;//[Offset: 0x23a0, Size: 1]
	float BipodProneMaxDeployHeight;//[Offset: 0x23a4, Size: 1]
	float BipodCameraProbeSize;//[Offset: 0x23a8, Size: 1]
	bool bWeaponLowered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x23b0, Size: 1]
	FName ChestSocketName;//[Offset: 0x23b4, Size: 1]
	bool bIsChestImmersed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x23bc, Size: 1]
	bool bItemRaisedAboveHead;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x23bc, Size: 1]
	SQAnimDataEmotes* EmoteData;//[Offset: 0x23c0, Size: 1]
	SQVoipAnim MouthAnim;//[Offset: 0x23c8, Size: 1]
	SQVoipAnim HandActionRadioAnim;//[Offset: 0x23e8, Size: 1]
	bool bIsPlayingVoipHandAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2408, Size: 1]
	SQEmotePlayer* EmotePlayer;//[Offset: 0x2410, Size: 1]
	bool Wound(float KillingDamage, out const DamageEvent DamageEvent, Controller* Killer, Actor* DamageCauser);// 0xe06a80
	bool WeaponMagazineHasAmmo();// 0xe06a50
	void UserSettingsChanged(const SQGameUserSettings* Settings);// 0xe069c0
	void UpdateStaticItemInfo(SQItemStaticInfo* InfoObject);// 0xe06930
	void UpdatePatches();// 0xe06910
	void UpdateFirstPersonVisibility();// 0xe068f0
	void UpdateCachedAnimInstance3p();// 0xe068d0
	void Update1pRelativeLocation();// 0xe068b0
	void Update1pCamStanceHeight(const float DeltaSeconds);// 0xe06820
	void UnProne();// 0xe06800
	void ToggleViewReleased();// 0xe067e0
	void ToggleViewPressed();// 0xe067c0
	void ToggleThirdPersonView();// 0xe067a0
	void ToggleBipod();// 0xe06780
	void TickUpdateThirdPersonView(float DeltaTime);// 0xe06700
	bool SwitchWeapon(int NewWeaponSlotla);// 0xe06590
	void SwitchedSeat(SQVehicleSeatComponent* PreviousSeat, SQVehicleSeatComponent* NewSeat);// 0xe06630
	void Suicide();// 0xe06570
	void StopBodyDragging();// 0xd9e650
	void StopBleeding();// 0xe06550
	bool StartBodyDragging();// 0xe06520
	void StartAimDownSights();// 0xe06500
	void SetSeatState(enum SoldierSeatState);// 0xe06480
	void SetFirstPersonVisibility(bool bIsFirstPersonVisible);// 0xe063f0
	void ServerVehicleCollision(SQVehicle* Vehicle, bool bShouldKill);// 0xe062f0
	void ServerRetractBipod();// 0xe062d0
	void ServerRaiseItemAboveHead(const bool bShouldRaise);// 0xe06240
	void ServerPickupAmmoBag(SQDeployableAmmoBag* ammobag);// 0xe06180
	void ServerLowerWeapon(const bool bValue);// 0xe060f0
	void ServerEndInteract();// 0xe060a0
	void ServerDragBody(const bool bDrag, SQSoldier* SoldierToDrag, FName BoneName);// 0xe05f50
	void ServerDisableSpawnProtection();// 0xe05f00
	void ServerDeployBipod(const Vector RemoteBipodDeploymentLocationZeroBased, const Vector RemoteActorLocationZeroBased);// 0xe05d80
	void ServerDeployableInteractable(SQDeployableInteractable* Deployable);// 0xe05e40
	void ServerDebugTogglePostRecovery(bool Value);// 0xe05cc0
	void ServerDebugToggleGodMode();// 0xe05c70
	void ServerDebugStopBleeding();// 0xe05c20
	void ServerDebugSetHealth(float Value);// 0xe05b60
	void ServerDebugRevive();// 0xe05b10
	void ServerDebugRearm();// 0xe05ac0
	void ServerDebugRagdoll();// 0xe05a70
	void ServerDebugFullHealth();// 0xe05a20
	void ServerDebugAddBuildSupply(int Amount);// 0xe05960
	void ServerDebugAddAmmoSupply(int Amount);// 0xe058a0
	void ServerClimb(const Transform ClientTransformZeroBased, const SQClimbInfo ClientInfo);// 0xe05760
	void ServerBeginInteract();// 0xe05710
	void ReviveServerOnly();// 0xe056f0
	void Prone();// 0xe056d0
	void PlayOrStopMontage(AnimInstance* AnimInstance, AnimMontage* Montage, bool bStopAnimation, float blendOutTime);// 0xe05570
	void PlayOrStopAnimations(AnimMontage* FirstPersonAnim, AnimMontage* ThirdPersonAnim, bool bStopAnimation, float blendOutTime);// 0xe05410
	void PlayFootStep(const FName SocketName, const FName OpposingKneeSocketName, float MaxDistanceInMeters);// 0xe052f0
	void PlayEquipmentSound(float MaxDistanceInMeters);// 0xe05270
	void PlayClothingSound(float MaxDistanceInMeters);// 0xe051f0
	void OutOfBoundsKillCallback();// 0xe051d0
	void OnSnapZoneOverlapEnd(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0xe05060
	void OnSnapZoneOverlapBegin(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xe04e40
	void OnRep_WeaponLoweredChanged(bool bVal);// 0xe04db0
	void OnRep_SoldierSkinIndex();// 0xe04d90
	void OnRep_LastTakeHitInfo();// 0xe04d70
	void OnRep_ItemRaisedAboveHeadChanged(bool bVal);// 0xe04ce0
	void OnRep_IsWounded();// 0xe04cc0
	void OnRep_IsDying();// 0xe04ca0
	void OnRep_IsBleeding();// 0xe04c80
	void OnRep_Health(float OldHealth);// 0xe04bf0
	void OnRep_CurrentSeat(SQVehicleSeatComponent* PreviousSeat);// 0xe04b60
	void OnRep_ClimbInfo(SQClimbInfo PrevClimbInfo);// 0xe049f0
	void OnRep_Bipod(bool bBipodWasDeployed);// 0xe04960
	void OnRagdollHit(PrimitiveComponent* HitComp, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0xe04780
	void OnPrevItem();// 0xe04760
	void OnPossessionChanged__DelegateSignature();// 0x1d69c50
	void OnNextItem();// 0xe04740
	void OnHipHeightCollideWithWaterLevel(float ImmersionDepth);// 0xe046c0
	void OnFeetBottomCollideWithWaterLevel(float ImmersionDepth);// 0xe04640
	void OnExitBoundary(SQBoundaryListener* Listener, SQBoundary* Boundary);// 0xe04570
	void OnEquip__DelegateSignature(SQItemStaticInfo* StaticInfo);// 0x1d69c50
	void OnEnterBoundary(SQBoundaryListener* Listener, SQBoundary* Boundary);// 0xe044a0
	void On_RepIsPlayingVoipHandAnim();// 0xe051b0
	void MulticastToggleGodMode();// 0xe04480
	void MulticastSetDragging(const bool bDrag, SQSoldier* SoldierToDrag, FName BoneName);// 0xe04360
	void MulticastPlayEmoteAnim(enum Emote);// 0xe042e0
	void MulticastPlayCustomEmote(const FName CustomName);// 0xe04250
	void MulticastLean(byte NewLeanDirection);// 0xe041d0
	void MulticastChangeRootComponent(const bool bSetMeshAsRoot);// 0xe04140
	void LeftVehicle(SQVehicleSeatComponent* PreviousSeat);// 0xe040b0
	void LeftSeat(SQVehicleSeatComponent* PreviousSeat, bool bSwitchedSeats, bool bLeftVehicle);// 0xe03f90
	bool IsWeaponLowered();// 0xe03f60
	bool IsSprinting();// 0xe03f30
	bool IsPullingTriggerOnWeapon();// 0xe03f00
	bool IsOutOfMapBounds();// 0xe03ed0
	bool IsMontagePlaying(AnimMontage* FirstPersonAnim, AnimMontage* ThirdPersonAnim);// 0xe03e00
	bool IsInVehicle();// 0xe03da0
	bool IsInteracting();// 0xe03dd0
	bool IsImmersedPastKneeHeight();// 0xe03d70
	bool IsImmersedPastHipHeight();// 0xe03d40
	bool IsImmersedPastHeadHeight();// 0xe03d10
	bool IsImmersedPastFootHeight();// 0xe03ce0
	bool IsImmersedPastChestHeight();// 0xe03cb0
	bool IsFirstPersonViewTarget();// 0xe03c70
	bool IsDragging();// 0xe03c40
	bool IsClimbing(bool bRequiredOnly);// 0xe03b90
	bool IsAlive();// 0xe03b50
	void InputClimb();// 0xe03b30
	void InitiateDragging(SQSoldier* SoldierToDrag, int BoneIndex);// 0xe03a60
	void IncreaseCameraDistance();// 0xe03a40
	void Heal(float AmountHealed);// 0xe039b0
	SQTeamState* GetTeamState();// 0xe03980
	int GetTeam();// 0xe03950
	enum GetSeatState();// 0xe038f0
	SQEquipableItem* GetPendingWeapon();// 0xe038b0
	SQForwardBase* GetNearestFOB(bool bIsFriendly);// 0xe03810
	float GetMaxHealth();// 0xe037e0
	float GetKneeHeight(Vector TestLocation);// 0xe03740
	SQPawnInventoryComponent* GetInventory();// 0xe03700
	float GetHipHeight(Vector TestLocation);// 0xe03660
	float GetHeadHeight(Vector TestLocation);// 0xe035c0
	float GetFootHeight(Vector TestLocation);// 0xe03520
	bool GetFirstPersonVisibility();// 0xe034f0
	float GetDrowningHeight();// 0xe034c0
	float GetDamageForFallingAtSpeed(const float InFallSpeed, const float InBaseHealth);// 0xe033e0
	SQEquipableItem* GetCurrentWeapon();// 0xe033a0
	SQVehicle* GetCurrentVehicle();// 0xe03370
	Rotator GetCurrentSeatWeaponRotation();// 0xe03330
	SQVehicleSeat* GetCurrentSeatPawn();// 0xe03300
	SQVehicleSeatComponent* GetCurrentSeat();// 0xe032d0
	float GetCurrentHealthPercentage();// 0xe03280
	float GetChestHeight(Vector TestLocation);// 0xe031e0
	void EnteredVehicle(SQVehicleSeatComponent* NewSeat);// 0xe03030
	void EnteredSeat(SQVehicleSeatComponent* PreviousSeat, SQVehicleSeatComponent* NewSeat, bool bSwitchedSeats, bool bEnteredVehicle);// 0xe02ed0
	void EndInteract();// 0xe02eb0
	void EndFireWeapon();// 0xe02e90
	void EndAltFireWeapon();// 0xe02e70
	void EndAimDownSights();// 0xe02e50
	void DisableSpawnProtection();// 0xe02e30
	bool Die(float KillingDamage, out const DamageEvent DamageEvent, Controller* Killer, Actor* DamageCauser);// 0xe02ca0
	void DecreaseCameraDistance();// 0xe02c80
	void DebugTogglePostRecovery(bool Value);// 0xe02bf0
	void DebugToggleOriginRebaseTest(bool Value);// 0xe02b60
	void DebugToggleGodMode();// 0xe02b40
	void DebugStopBleeding();// 0xe02b20
	void DebugSetHealth(float Value);// 0xe02aa0
	void DebugRevive();// 0xe02a80
	void DebugRearm();// 0xe02a60
	void DebugRagdoll();// 0xe02a40
	void DebugFullHealth();// 0xe02a20
	void DebugAddBuildSupply(int Amount);// 0xe02990
	void DebugAddAmmoSupply(int Amount);// 0xe02900
	void ClientRejectClimb();// 0xe028e0
	void ClientRejectBipod();// 0xe028c0
	void ClearSeatState();// 0xe028a0
	bool CheckItemCollision();// 0xe02870
	void ChangeSoundMix(SoundMix* NewSoundMix);// 0xe027e0
	bool CanZoom();// 0xe027b0
	bool CanStartWithMaxAmmo();// 0xe02780
	void CalcCamera_BP(float DeltaTime, out const Vector InLocation, out const Rotator InRotation, float InFOV, out Vector OutLocation, out Rotator OutRotation, out float OutFOV);// 0xe02520
	void BPWoundedDamageTaken(float damage);// 0x1d69c50
	void BPWound(float KillingDamage, out const DamageEvent DamageEvent, Controller* Killer, Actor* DamageCauser);// 0x1d69c50
	void BPOnSuppression(out const Vector ClosestPoint, float ClosenessRatio, bool bAppliedSuppression);// 0x1d69c50
	void BPOnStartProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust);// 0x1d69c50
	void BPOnSnapZoneOverlapEnd(Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0x1d69c50
	void BPOnSnapZoneOverlapBegin(Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void BPOnEndProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust);// 0x1d69c50
	Vector2D BPGetYawViewLimits(out const Vector2D YawViewLimits);// 0xe02400
	void BPDie(float KillingDamage, out const DamageEvent DamageEvent, Controller* Killer, Actor* DamageCauser);// 0x1d69c50
	void BPBleedingDamageTaken(float damage);// 0x1d69c50
	void BlueprintUpdateSkin();// 0xe02500
	void BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible);// 0x1d69c50
	void BlueprintCalcCamera(float DeltaTime, Vector InLocation, Rotator InRotation, float InFOV, out Vector OutLocation, out Rotator OutRotation, out float OutFOV);// 0x1d69c50
	void BeginInteract();// 0xe024e0
	void BeginFireWeapon();// 0xe024c0
	void BeginAltFireWeapon();// 0xe024a0
	bool AttemptToRearmWeapons(interface classNone RearmSource, out const SQRearmWeaponRequest[] RearmRequest);// 0xe022e0
	bool AttemptSuppression(out const Vector SuppressionStart, out const Vector SuppressionEnd, const Actor* ProjectileInstigator, class SQSuppressionInfo SuppressionInfoClass, out Vector OutClosestPoint, out bool bOutApplySuppression);// 0xe020a0

--------------------------------
Class: DamageEvent
	class DamageType* DamageTypeClass;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQGameUserSettings.GameUserSettings.Object
	FString PlayerNamePrefix;//[Offset: 0x138, Size: 1]
	float NameTagOpacity;//[Offset: 0x148, Size: 1]
	float NameTagScale;//[Offset: 0x14c, Size: 1]
	bool bShowNameTagText;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x150, Size: 1]
	bool bShowNameTagKit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x151, Size: 1]
	bool bClientAutoRecord;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x152, Size: 1]
	int NumberAutoRecordedGames;//[Offset: 0x154, Size: 1]
	bool bIsAAEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x158, Size: 1]
	int LastSavedAASamples;//[Offset: 0x15c, Size: 1]
	bool bInvertedYAxis;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x160, Size: 1]
	bool bEnableMouseSmoothing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x161, Size: 1]
	bool bKeyboardHighlight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x162, Size: 1]
	FText ControlsPresetName;//[Offset: 0x168, Size: 1]
	bool bUseMenuToolTips;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x180, Size: 1]
	bool bUseRadialMenuToolTips;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x181, Size: 1]
	bool bUseInGameHelp;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x182, Size: 1]
	SQInt32CVarSetting HZBOcclusion;//[Offset: 0x188, Size: 1]
	SQInt32CVarSetting TextureStreamPoolSizeStorage;//[Offset: 0x1c8, Size: 1]
	MulticastInlineDelegateProperty OnBenchmarkComplete;//[Size: 1]
	bool bCompassBackgroundEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x218, Size: 1]
	bool bCompassTopViewEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x219, Size: 1]
	float FOV;//[Offset: 0x21c, Size: 1]
	float GlobalSensitivity;//[Offset: 0x220, Size: 1]
	float DoubleKeyPressTime;//[Offset: 0x224, Size: 1]
	SQInt32CVarSetting Tessellation;//[Offset: 0x230, Size: 1]
	SQInt32CVarSetting TessellationMode;//[Offset: 0x270, Size: 1]
	enum CrouchMode;//[Offset: 0x2b0, Size: 1]
	enum ADSMode;//[Offset: 0x2b1, Size: 1]
	enum LeanMode;//[Offset: 0x2b2, Size: 1]
	enum FreelookMode;//[Offset: 0x2b3, Size: 1]
	enum SprintMode;//[Offset: 0x2b4, Size: 1]
	float FreelookSensitivitySliderValue;//[Offset: 0x2b8, Size: 1]
	float FreelookSensitivity;//[Offset: 0x2bc, Size: 1]
	bool bHelicopterInvertMousePitch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	float HelicopterPitchSensitivitySliderValue;//[Offset: 0x2c4, Size: 1]
	float HelicopterPitchSensitivity;//[Offset: 0x2c8, Size: 1]
	float HelicopterRollSensitivitySliderValue;//[Offset: 0x2cc, Size: 1]
	bool bUncapTexturePoolSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	float HelicopterRollSensitivity;//[Offset: 0x2d4, Size: 1]
	bool bUseSensivityScaling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	float GlobalSensitivitySliderValue;//[Offset: 0x2dc, Size: 1]
	float SoldierSensitivitySliderValue;//[Offset: 0x2e0, Size: 1]
	float SoldierSensitivity;//[Offset: 0x2e4, Size: 1]
	<float,float> SoldierZoomSensitivitiesSliderValues;//[Offset: 0x2e8, Size: 1]
	<float,float> SoldierZoomSensitivities;//[Offset: 0x338, Size: 1]
	float VehicleSensitivitySliderValue;//[Offset: 0x388, Size: 1]
	float VehicleSensitivity;//[Offset: 0x38c, Size: 1]
	float PostFX_Brightness;//[Offset: 0x390, Size: 1]
	float PostFX_BrightnessSliderValue;//[Offset: 0x394, Size: 1]
	float PostFX_Contrast;//[Offset: 0x398, Size: 1]
	float PostFX_ContrastSliderValue;//[Offset: 0x39c, Size: 1]
	float PostFX_Saturation;//[Offset: 0x3a0, Size: 1]
	float PostFX_SaturationSliderValue;//[Offset: 0x3a4, Size: 1]
	SQScalabilitySetting ShadowQuality;//[Offset: 0x3a8, Size: 1]
	SQInt32CVarSetting ContactShadows;//[Offset: 0x400, Size: 1]
	SQScalabilitySetting FoliageQuality;//[Offset: 0x440, Size: 1]
	SQInt32CVarSetting FoliageMinLOD;//[Offset: 0x498, Size: 1]
	<float,float> VehicleZoomSensitivitiesSliderValues;//[Offset: 0x4d8, Size: 1]
	<float,float> VehicleZoomSensitivities;//[Offset: 0x528, Size: 1]
	bool bFreelookRecentersWeapon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x578, Size: 1]
	bool bJumpCausesUnCrouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x579, Size: 1]
	bool bJumpCausesUnProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x57a, Size: 1]
	bool bIsDoubleTapWalkingEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x57b, Size: 1]
	bool bShowDiffVerServers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x57c, Size: 1]
	bool bShowEmptyServers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x57d, Size: 1]
	bool bShowQueuesSeparately;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x57e, Size: 1]
	bool bShowReservedSlots;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x57f, Size: 1]
	float MenuFrameRateLimit;//[Offset: 0x580, Size: 1]
	SQInt32CVarSetting AmbientOcclusion;//[Offset: 0x588, Size: 1]
	SQInt32CVarSetting ShadowFilterMethod;//[Offset: 0x5c8, Size: 1]
	int GraphicsQuality;//[Offset: 0x608, Size: 1]
	SQScalabilitySetting ResolutionQuality;//[Offset: 0x610, Size: 1]
	SQFloatCVarSetting ScreenSharpening;//[Offset: 0x668, Size: 1]
	SQInt32CVarSetting ScreenPercentage;//[Offset: 0x6a8, Size: 1]
	SQFloatCVarSetting MotionBlurAmount;//[Offset: 0x6e8, Size: 1]
	SQInt32CVarSetting LensFlareQuality;//[Offset: 0x728, Size: 1]
	SQInt32CVarSetting AutoExposure;//[Offset: 0x768, Size: 1]
	SQInt32CVarSetting AntiAliasingMode;//[Offset: 0x7a8, Size: 1]
	SQInt32CVarSetting MaterialQuality;//[Offset: 0x7e8, Size: 1]
	SQInt32CVarSetting TemporalAASamples;//[Offset: 0x828, Size: 1]
	SQFloatCVarSetting TemporalAACurrentFrameWeight;//[Offset: 0x868, Size: 1]
	SQInt32CVarSetting FSR2Mode;//[Offset: 0x8a8, Size: 1]
	SQInt32CVarSetting FSR2Quality;//[Offset: 0x8e8, Size: 1]
	int[] GPUThresholdScores;//[Offset: 0x928, Size: 1]
	int[] CPUThresholdScores;//[Offset: 0x938, Size: 1]
	SQFloatCVarSetting FSR2Sharpness;//[Offset: 0x948, Size: 1]
	SQScalabilitySetting CustomQuality;//[Offset: 0x988, Size: 1]
	SQScalabilitySetting AntiAliasingQuality;//[Offset: 0x9e0, Size: 1]
	SQScalabilitySetting PostProcessQuality;//[Offset: 0xa38, Size: 1]
	SQScalabilitySetting EffectsQuality;//[Offset: 0xa90, Size: 1]
	SQScalabilitySetting TextureQuality;//[Offset: 0xae8, Size: 1]
	SQScalabilitySetting ViewDistanceQuality;//[Offset: 0xb40, Size: 1]
	SQInt32CVarSetting OceanQuality;//[Offset: 0xb98, Size: 1]
	SQInt32CVarSetting WakeSim;//[Offset: 0xbd8, Size: 1]
	SQInt32CVarSetting SkeletalMeshLODBias;//[Offset: 0xc18, Size: 1]
	SQInt32CVarSetting MaxAnisotropy;//[Offset: 0xc58, Size: 1]
	SQEmotesData*[] EquippedEmotes;//[Offset: 0xc98, Size: 1]
	SQEmotesData* TemporarilyHeldEmote;//[Offset: 0xca8, Size: 1]
	ODKBazaarBundle*[] ViewedBundles;//[Offset: 0xcb0, Size: 1]
	SQEmotesData*[] ViewedEmotes;//[Offset: 0xcc0, Size: 1]
	float MasterVolume;//[Offset: 0xcd0, Size: 1]
	float EffectsVolume;//[Offset: 0xcd4, Size: 1]
	float UIVolume;//[Offset: 0xcd8, Size: 1]
	float MusicVolume;//[Offset: 0xcdc, Size: 1]
	float SquadVoiceVolume;//[Offset: 0xce0, Size: 1]
	float VoiceSide;//[Offset: 0xce4, Size: 1]
	bool bApplyVoiceRadioFilter;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xce8, Size: 1]
	bool bApplyBiasWhileNonLeader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xce9, Size: 1]
	bool bPlaySquadVOIPSounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xceb, Size: 1]
	bool bPlayCommandVOIPSounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcec, Size: 1]
	float LocalVoIPVolume;//[Offset: 0xcf0, Size: 1]
	float CommandVoIPVolume;//[Offset: 0xcf4, Size: 1]
	float CommandVoIPSide;//[Offset: 0xcf8, Size: 1]
	float LeaderVoipDucking;//[Offset: 0xcfc, Size: 1]
	BoolIniConfigSetting RendererConfig;//[Offset: 0xd00, Size: 1]
	<enum,SQJoyStickConfig> JoyStickConfigurations;//[Offset: 0xd50, Size: 1]
	bool bAlwaysFreeLook;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xda0, Size: 1]
	float UnfocusedVolumeMultiplier;//[Offset: 0xda4, Size: 1]
	float MaxImpactEffectDecalLifeSpan;//[Offset: 0xda8, Size: 1]
	SQOnlineInventorySetting[] InventorySettings;//[Offset: 0xdb0, Size: 1]
	SQInt32CVarSetting TextureStreaming;//[Offset: 0xdc0, Size: 1]
	MulticastInlineDelegateProperty OnGameUserSettingsChanged;//[Size: 1]
	int StreamerModeMask;//[Offset: 0xe20, Size: 1]
	bool bIsLanMatch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe24, Size: 1]
	uint32 SquadIncrementalVersion;//[Offset: 0xe28, Size: 1]
	uint32 SquadSettingsVersion;//[Offset: 0xe2c, Size: 1]
	int UpdateQualityBasedOnGraphicsQuality(const int InBaseQuality, const int InGraphicsQuality);// 0xd9a8a0
	void ToggleStreamerModeEnabledForLevel(enum Level);// 0xd9a750
	void ToggleFSR2(const bool bEnable);// 0xd9a6c0
	void SetUseDX12(bool bUse);// 0xd9a630
	void SetSteamItemEnabled(int ItemId, bool bEnabled);// 0xd9a4e0
	void SetResolutionQuality(int ResolutionQuality);// 0xd9a200
	void SetPostProcessQuality(int InPostProcessQuality);// 0xd9a0e0
	void SetMenuFrameRateLimit(float NewLimit);// 0xd99fd0
	void SetJoyConfig(const enum Control, const SQJoyStickConfig Config);// 0xd99e10
	void SetGraphicsSliderValues();// 0xd99df0
	void SetGraphicsQuality(int InGraphicsQuality);// 0xd99d60
	void SetEffectsQuality(int EffectsQuality);// 0xd99cd0
	void SetActiveAudioOutputDevice(FString InDevice);// 0xd99c20
	void SetActiveAudioInputDevice(FString InDevice);// 0xd99b70
	bool SaveBackupKeyBinds(FString Filename);// 0xd999d0
	static int ReadIntSetting(out const SQInt32CVarSetting InSetting);// 0xd998f0
	static float ReadFloatSetting(out const SQFloatCVarSetting InSetting);// 0xd99850
	FString ReadCVarSetting(out const FName CVarSettingName);// 0xd99790
	int ProcessBenchmarkScore(const int LastBenchmarkScore, out const int[] Thresholds);// 0xd99690
	void OverrideTemporalFrameWeight(float Value, bool bOverride);// 0xd995b0
	bool LoadBackupKeyBinds(FString Filename);// 0xd99260
	bool IsUsingCustomSettings();// 0xd99230
	bool IsSteamItemEnabled(int ItemId);// 0xd99190
	int GetTotalVRAMCapacity();// 0xd98e90
	int GetTexturePoolUsage();// 0xd98e60
	int GetTexturePoolSize();// 0xd98e30
	bool GetStreamerModeEnabledForLevel(enum Level);// 0xd98d70
	int GetQualityFromLastBenchmark();// 0xd989d0
	float GetMenuFrameRateLimit();// 0xd98970
	SQJoyStickConfig GetJoyConfig(enum Control);// 0xd98860
	bool GetIsUsingDX12();// 0xd98830
	static int GetInt32FromConfig(FString SectionName, int Level, FString CVar);// 0xd986e0
	static float GetFloatFromConfig(FString SectionName, int Level, FString CVar);// 0xd98590
	SQEmotesData* GetEmoteAtIndex(int Index);// 0xd984c0
	void GetAvailableAudioOutputDevice(out FString[] OutAvailableDevice, out FString OutCurrentDevice);// 0xd98370
	void GetActiveAudioInputDevice(out FString OutCurrentDevice);// 0xd982c0
	bool DeleteKeybindsBackup(FString Filename);// 0xd981a0
	void ChangeSettingOfName(out const FName CVarSettingName, FString Value);// 0xd98080
	void ChangeSetting(out SQCVarSetting InSetting, FString Value);// 0xd97f70
	void ChangeIntSetting(out SQInt32CVarSetting InSetting, int Value);// 0xd97e70
	void ChangeFloatSetting(out SQFloatCVarSetting InSetting, float Value);// 0xd97d70
	void BlueprintSetVSync(bool bEnable);// 0xd97cb0
	void BlueprintSetToDefaults();// 0xd97c90
	void BlueprintSetSoundsToDefaults();// 0xd97c70
	void BlueprintSetScreenResolution(IntPoint Resolution);// 0xd97bf0
	void BlueprintSetPoolSize(int InTextureQuality);// 0xd97b60
	void BlueprintSetKeysToDefaults();// 0xd97b40
	void BlueprintSetGraphicsToDefaults();// 0xd97b20
	void BlueprintSetGameToDefaults();// 0xd97b00
	void BlueprintSetFullscreenMode(int InFullscreenMode);// 0xd97a70
	void BlueprintResetToCurrentSettings();// 0xd97a50
	void BlueprintResetLocalAppdata();// 0xd97a30
	bool BlueprintGetVSync();// 0xd97a00
	IntPoint BlueprintGetScreenResolution();// 0xd979c0
	int BlueprintGetFullscreenMode();// 0xd97990
	int[] BlueprintGetBasicGraphicsSettings();// 0xd97950
	void BlueprintApplySettings(bool bCheckForCommandLineOverrides);// 0xd978c0
	void BenchmarkGraphicsSettings(bool bApplyPostBenchmark);// 0xd97830

--------------------------------
Class: GameUserSettings.Object
	bool bUseVSync;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bUseDynamicResolution;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	uint32 ResolutionSizeX;//[Offset: 0x80, Size: 1]
	uint32 ResolutionSizeY;//[Offset: 0x84, Size: 1]
	uint32 LastUserConfirmedResolutionSizeX;//[Offset: 0x88, Size: 1]
	uint32 LastUserConfirmedResolutionSizeY;//[Offset: 0x8c, Size: 1]
	int WindowPosX;//[Offset: 0x90, Size: 1]
	int WindowPosY;//[Offset: 0x94, Size: 1]
	int FullscreenMode;//[Offset: 0x98, Size: 1]
	int LastConfirmedFullscreenMode;//[Offset: 0x9c, Size: 1]
	int PreferredFullscreenMode;//[Offset: 0xa0, Size: 1]
	uint32 Version;//[Offset: 0xa4, Size: 1]
	int AudioQualityLevel;//[Offset: 0xa8, Size: 1]
	int LastConfirmedAudioQualityLevel;//[Offset: 0xac, Size: 1]
	float FrameRateLimit;//[Offset: 0xb0, Size: 1]
	int DesiredScreenWidth;//[Offset: 0xb8, Size: 1]
	bool bUseDesiredScreenHeight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbc, Size: 1]
	int DesiredScreenHeight;//[Offset: 0xc0, Size: 1]
	int LastUserConfirmedDesiredScreenWidth;//[Offset: 0xc4, Size: 1]
	int LastUserConfirmedDesiredScreenHeight;//[Offset: 0xc8, Size: 1]
	float LastRecommendedScreenWidth;//[Offset: 0xcc, Size: 1]
	float LastRecommendedScreenHeight;//[Offset: 0xd0, Size: 1]
	float LastCPUBenchmarkResult;//[Offset: 0xd4, Size: 1]
	float LastGPUBenchmarkResult;//[Offset: 0xd8, Size: 1]
	float[] LastCPUBenchmarkSteps;//[Offset: 0xe0, Size: 1]
	float[] LastGPUBenchmarkSteps;//[Offset: 0xf0, Size: 1]
	float LastGPUBenchmarkMultiplier;//[Offset: 0x100, Size: 1]
	bool bUseHDRDisplayOutput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x104, Size: 1]
	int HDRDisplayOutputNits;//[Offset: 0x108, Size: 1]
	MulticastInlineDelegateProperty OnGameUserSettingsUINeedsUpdate;//[Size: 1]
	void ValidateSettings();// 0x3eec3e0
	bool SupportsHDRDisplayOutput();// 0x3f1b400
	void SetVSyncEnabled(bool bEnable);// 0x3f1b250
	void SetVisualEffectQuality(int Value);// 0x3f1b370
	void SetViewDistanceQuality(int Value);// 0x3f1b2e0
	void SetToDefaults();// 0x3eecc30
	void SetTextureQuality(int Value);// 0x357ba90
	void SetShadowQuality(int Value);// 0x3f1b1c0
	void SetShadingQuality(int Value);// 0x3f1b130
	void SetScreenResolution(IntPoint Resolution);// 0x3f1b0b0
	void SetResolutionScaleValueEx(float NewScaleValue);// 0x3f1b030
	void SetResolutionScaleValue(int NewScaleValue);// 0x3f1afa0
	void SetResolutionScaleNormalized(float NewScaleNormalized);// 0x3f1af20
	void SetPostProcessingQuality(int Value);// 0x3f1ae90
	void SetOverallScalabilityLevel(int Value);// 0x3f1ae00
	void SetFullscreenMode(byte InFullscreenMode);// 0x3f1ad80
	void SetFrameRateLimit(float NewLimit);// 0x3f1ad00
	void SetFoliageQuality(int Value);// 0x3f1ac70
	void SetDynamicResolutionEnabled(bool bEnable);// 0x3f1abe0
	void SetBenchmarkFallbackValues();// 0x3f1abc0
	void SetAudioQualityLevel(int QualityLevel);// 0x3f1ab30
	void SetAntiAliasingQuality(int Value);// 0x357ba00
	void SaveSettings();// 0x3eec3a0
	void RunHardwareBenchmark(int WorkScale, float CPUMultiplier, float GPUMultiplier);// 0x3f1aa30
	void RevertVideoMode();// 0x3f1aa10
	void ResetToCurrentSettings();// 0x3f1a9f0
	void LoadSettings(bool bForceReload);// 0x3f1a960
	bool IsVSyncEnabled();// 0x3f1a930
	bool IsVSyncDirty();// 0x3f1a900
	bool IsScreenResolutionDirty();// 0x3f1a8d0
	bool IsHDREnabled();// 0x3f1a8a0
	bool IsFullscreenModeDirty();// 0x3f1a870
	bool IsDynamicResolutionEnabled();// 0x3f1a840
	bool IsDynamicResolutionDirty();// 0x3f1a810
	bool IsDirty();// 0x3f1a7e0
	int GetVisualEffectQuality();// 0x3f1a750
	int GetViewDistanceQuality();// 0x3f1a720
	int GetTextureQuality();// 0x3f1a6f0
	static int GetSyncInterval();// 0x3f1a6c0
	int GetShadowQuality();// 0x3f1a690
	int GetShadingQuality();// 0x3f1a660
	IntPoint GetScreenResolution();// 0x3f1a620
	float GetResolutionScaleNormalized();// 0x3f1a5f0
	void GetResolutionScaleInformationEx(out float CurrentScaleNormalized, out float CurrentScaleValue, out float MinScaleValue, out float MaxScaleValue);// 0x3f1a450
	void GetResolutionScaleInformation(out float CurrentScaleNormalized, out int CurrentScaleValue, out int MinScaleValue, out int MaxScaleValue);// 0x3f1a2b0
	float GetRecommendedResolutionScale();// 0x3f1a270
	byte GetPreferredFullscreenMode();// 0x3f1a240
	int GetPostProcessingQuality();// 0x3f1a210
	int GetOverallScalabilityLevel();// 0x3f1a0a0
	IntPoint GetLastConfirmedScreenResolution();// 0x3f1a060
	byte GetLastConfirmedFullscreenMode();// 0x3f1a030
	static GameUserSettings* GetGameUserSettings();// 0x3f1a000
	byte GetFullscreenMode();// 0x3f19fd0
	float GetFrameRateLimit();// 0x3f19fa0
	static int GetFramePace();// 0x3f19f70
	int GetFoliageQuality();// 0x3f19f40
	IntPoint GetDesktopResolution();// 0x3f19f00
	static IntPoint GetDefaultWindowPosition();// 0x3f19ec0
	static byte GetDefaultWindowMode();// 0x3f19e90
	float GetDefaultResolutionScale();// 0x3f19e50
	static IntPoint GetDefaultResolution();// 0x3f19e10
	int GetCurrentHDRDisplayNits();// 0x3f19de0
	int GetAudioQualityLevel();// 0x196d110
	int GetAntiAliasingQuality();// 0x1495320
	void EnableHDRDisplayOutput(bool bEnable, int DisplayNits);// 0x3f19d10
	void ConfirmVideoMode();// 0x2d86580
	void ApplySettings(bool bCheckForCommandLineOverrides);// 0x3f19c80
	void ApplyResolutionSettings(bool bCheckForCommandLineOverrides);// 0x3f19bf0
	void ApplyNonResolutionSettings();// 0x2d86800
	void ApplyHardwareBenchmarkResults();// 0x3ea9a00

--------------------------------
Class: SQInt32CVarSetting.SQCVarSetting.SQSettingBase

--------------------------------
Class: SQCVarSetting.SQSettingBase

--------------------------------
Class: SQSettingBase
	uint32 Value;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQScalabilitySetting.SQSettingBase

--------------------------------
Class: SQFloatCVarSetting.SQCVarSetting.SQSettingBase

--------------------------------
Class: SQEmotesData.DataAsset.Object
	ODKBazaarItem* BazaarItem;//[Offset: 0x30, Size: 1]
	FName EmoteName;//[Offset: 0x38, Size: 1]
	Texture2D* EmoteIcon;//[Offset: 0x40, Size: 1]
	enum EmotesDLC;//[Offset: 0x68, Size: 1]
	EmoteAnimationData EmoteAnimationData;//[Offset: 0x70, Size: 1]
	<SQFaction*,EmoteAnimationData> FactionAlternativeAnimations;//[Offset: 0x88, Size: 1]
	<class SQInfantryWeapon,EmoteAnimationData> WeaponAlternativeAnimations;//[Offset: 0xd8, Size: 1]
	bool bIsInMainBase;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x128, Size: 1]
	bool bIsForwardStaging;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x129, Size: 1]
	bool bIsInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12a, Size: 1]
	bool bIsConfined;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12b, Size: 1]
	bool bIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12c, Size: 1]
	bool bIsCrouched;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12d, Size: 1]
	bool bIsFalling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12e, Size: 1]
	bool bHideWeapon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12f, Size: 1]
	bool bAllowWeaponLowering;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x130, Size: 1]
	bool bIsUnderWater;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x131, Size: 1]
	float TimeToPlayEmoteOnEnding;//[Offset: 0x134, Size: 1]
	SQInventoryWeaponGroupData[] EquippedWeapons;//[Offset: 0x138, Size: 1]
	SQFaction*[] Factions;//[Offset: 0x148, Size: 1]
	SQRoleSettings*[] Role;//[Offset: 0x158, Size: 1]
	enum CameraMode;//[Offset: 0x168, Size: 1]
	Rotator ThirdPersonCameraOrientation;//[Offset: 0x16c, Size: 1]
	float ThirdPersonCameraDistance;//[Offset: 0x178, Size: 1]
	float BlendInTime;//[Offset: 0x17c, Size: 1]
	float blendOutTime;//[Offset: 0x180, Size: 1]
	float CancelBlendOutTime;//[Offset: 0x184, Size: 1]
	float Cooldown;//[Offset: 0x188, Size: 1]
	float ExclusiveCooldown;//[Offset: 0x18c, Size: 1]
	int MaxUsages;//[Offset: 0x190, Size: 1]
	bool bCancelOnMove;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x194, Size: 1]
	bool bCancelOnSprint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x195, Size: 1]
	bool bCancelOnJump;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x196, Size: 1]
	bool bCancelOnClimb;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x197, Size: 1]
	bool bCancelOnLean;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x198, Size: 1]
	bool bCancelOnProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x199, Size: 1]
	bool bCancelOnFiring;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19a, Size: 1]
	bool bCancelOnAiming;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19b, Size: 1]
	bool bCancelOnReload;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19c, Size: 1]
	bool bCancelOnWeaponChange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19d, Size: 1]
	bool bCancelOnInteract;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19e, Size: 1]
	bool bCancelOnCrouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19f, Size: 1]
	bool bCancelOnUnderWater;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1a0, Size: 1]
	float MovementSpeedMultiplier;//[Offset: 0x1a4, Size: 1]
	FString[] GetRestrictionsText();// 0xd82500

--------------------------------
Class: ODKBazaarItem.DataAsset.Object
	FName ItemId;//[Offset: 0x30, Size: 1]
	FText ItemName;//[Offset: 0x38, Size: 1]
	FText ItemDescription;//[Offset: 0x50, Size: 1]
	Texture2D* ItemIcon;//[Offset: 0x68, Size: 1]
	<enum,FName> SourceID;//[Offset: 0x90, Size: 1]
	void RegenerateItemID();// 0x135b740
	bool IsOwnedLocally();// 0x135b330

--------------------------------
Class: EmoteAnimationData
	AnimMontage* FirstPersonView;//[Offset: 0x0, Size: 1]
	AnimMontage* ThirdPersonView;//[Offset: 0x8, Size: 1]
	AnimMontage* PreviewEmote;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQFaction.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	SQFactionSetup*[] AvailableSetups;//[Offset: 0x68, Size: 1]
	bool TryGetRallyPointMesh(SQLayer* Layer, out StaticMesh* OutMesh);// 0x1d69c50
	bool TryGetFlagForMap(out Texture2D* OutTexture);// 0x1d69c50
	bool TryGetFlagForFullScreen(out Texture2D* OutTexture);// 0x1d69c50
	bool TryGetFactionShortName(out FText OutName);// 0xd894b0

--------------------------------
Class: SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	FName ID;//[Offset: 0x30, Size: 1]
	DataTableRowHandle Data;//[Offset: 0x38, Size: 1]
	FString ModId;//[Offset: 0x48, Size: 1]
	PrimaryAssetRules PackingRules;//[Offset: 0x58, Size: 1]
	bool bLabelAssetsInMyDirectory;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x64, Size: 1]
	FString GetLogId();// 0xde9830
	FString GetIdAsString();// 0xde97e0
	FName GetId();// 0xde97a0
	bool GetDisplayName(out FText OutDisplayName);// 0xde96c0

--------------------------------
Class: PrimaryDataAsset.DataAsset.Object

--------------------------------
Class: SQFactionSetup.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	FName FactionID;//[Offset: 0x68, Size: 1]
	SQFaction* OuterFaction;//[Offset: 0x70, Size: 1]
	SQRoleSettings* DefaultRole;//[Offset: 0x78, Size: 1]
	SQRoleSettings* DefaultSquadLeaderRole;//[Offset: 0x80, Size: 1]
	SQRoleSettings* LeaveSquadRole;//[Offset: 0x88, Size: 1]
	SQAvailability_Role*[] Roles;//[Offset: 0x90, Size: 1]
	SQAvailability_Deployable*[] Deployables;//[Offset: 0xa0, Size: 1]
	SQAvailability_Vehicle*[] Vehicles;//[Offset: 0xb0, Size: 1]
	SQAvailability_Action*[] Actions;//[Offset: 0xc0, Size: 1]

--------------------------------
Class: SQRoleSettings.SQSettings.DataAsset.Object
	SQInventoryWeaponGroupData[] Inventory;//[Offset: 0x58, Size: 1]
	FName Role_Specifics_ActionName;//[Offset: 0x68, Size: 1]
	FName Role_Specifics_ActionName1;//[Offset: 0x70, Size: 1]
	AnimMontage* SoldierMenuAnimMontage;//[Offset: 0x78, Size: 1]
	bool bLeavingSquadChangesRole;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x80, Size: 1]
	bool bCanPlaceRallyPoint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x81, Size: 1]
	bool bCanSeeHealthStatus;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x82, Size: 1]
	bool bIsLeader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x83, Size: 1]
	bool bIsMedic;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x84, Size: 1]
	bool bIsRecruit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x85, Size: 1]
	bool bCanBuild;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x86, Size: 1]
	FText DisplayName;//[Offset: 0x88, Size: 1]
	Texture2D* UiIcon;//[Offset: 0xa0, Size: 1]
	Texture2D* SpecialWeaponIcon;//[Offset: 0xa8, Size: 1]
	FText Role_Details;//[Offset: 0xb0, Size: 1]
	FText Role_Specifics;//[Offset: 0xc8, Size: 1]
	SQRoleLimit DefaultLimit;//[Offset: 0xe0, Size: 1]
	enum RoleType;//[Offset: 0x104, Size: 1]
	class SQSoldier* SoldierClass;//[Offset: 0x108, Size: 1]
	class SQSoldier* SoldierClassDesert;//[Offset: 0x130, Size: 1]
	SQInventoryWeaponGroupData[] TestInventory;//[Offset: 0x158, Size: 1]
	enum VehicleAbility;//[Offset: 0x168, Size: 1]
	bool TryGetSoldierWithLayer(const SQLayer* InLayer, out class SQSoldier OutSoldier);// 0xdf4530
	bool IsSquadLeader();// 0x1d69c50
	bool IsMedic();// 0x1d69c50
	void GetRoleDisplayName(out FString CurrentRoleDisplayName);// 0x1d69c50
	bool CanSeeHealthStatus();// 0x1d69c50
	bool CanPlaceRallyPointWithMinimumTeamMate();// 0x1d69c50
	bool CanEnterSeat(SQVehicleSeatComponent* Seat);// 0x1d69c50

--------------------------------
Class: SQLayer.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	FName LevelId;//[Offset: 0x68, Size: 1]
	SQLevel* OuterLevel;//[Offset: 0x70, Size: 1]
	World*[] Worlds;//[Offset: 0x78, Size: 1]
	SQLayerTeamConfig*[] TeamConfigs;//[Offset: 0x88, Size: 1]
	SQGameFlags GameFlags;//[Offset: 0x98, Size: 1]
	bool TryGetTeamConfig(int TeamId, class SQLayerTeamConfig LayerTeamConfigClass, out SQLayerTeamConfig* OutTeamConfig);// 0xdab8e0
	bool TryGetLoadingMusic(out SoundBase* OutLoadingMusic);// 0xdab830
	bool TryGetLayerStagingDuration(out Timespan OutDuration);// 0x1d69c50
	bool TryGetGameMode(out FText OutGameMode);// 0x1d69c50
	bool TryGetDisplayName(out FText OutDisplayName);// 0x1d69c50
	bool TryGetAvailabilityModifierPct(const int InTeam, const SQAvailability* InAvailability, out int OutModifier);// 0xdab710
	bool HasTeamConfig(int TeamId);// 0xdaae10
	bool HasMapPath(FString MapPath);// 0xdaac90
	bool HasMapName(FString MapName);// 0xdaab10
	bool HasFactionSetupChoice(const int InTeam, out SQFactionSetup* OutSpecificFaction);// 0xdaa990
	int GetMapPaths(out FString[] OutMapPaths);// 0xdaa8b0
	int GetMapNames(out FString[] OutMapNames);// 0xdaa710
	DataTableRowHandle GetFobRadiusTableRow();// 0x1d69c50
	bool GetCompatibleFactionSetups(const int InTeam, out const <FName,SQFactionSetup*> InAvailableFactionSetups, out SQFactionSetup*[] OutCompatibleFactionSetups);// 0xdaa250
	bool CanVoteForFactionConcurrently();// 0x1d69c50

--------------------------------
Class: SQLevel.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	World* World;//[Offset: 0x68, Size: 1]
	bool NeverAddToRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x90, Size: 1]
	SQLayer*[] AvailableLayers;//[Offset: 0x98, Size: 1]
	bool TryGetLoadingScreen(out Texture2D* OutLoadingScreen, out const Vector2D InViewportSize);// 0x1d69c50
	bool TryGetLoadingMusic(out SoundBase* OutLoadingMusic);// 0xdaaa60
	bool TryGetDisplayName(out FText OutDisplayName);// 0x1d69c50
	bool TryGetDescription(out FText OutDescription);// 0x1d69c50
	bool HasMapPath(FString MapPath);// 0xdaad50
	bool HasMapName(FString MapName);// 0xdaabd0
	bool GetMapPath(out FString OutMapPath);// 0xdaa7f0
	bool GetMapName(out FString OutMapName);// 0xdaa650

--------------------------------
Class: SQGameFlags
	bool UseFogOfWar;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool ForceAllVehicleAvailability;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	bool ForceAllDeployableAvailability;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2, Size: 1]
	bool ForceAllRoleAvailability;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3, Size: 1]
	bool ForceAllActionAvailability;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4, Size: 1]
	bool NoTeamChangeTimer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5, Size: 1]
	bool NoRespawnTimer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6, Size: 1]
	bool VehicleClaimingDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7, Size: 1]
	bool VehicleTeamRequirementDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	bool VehicleKitRequirementDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]
	bool VehicleGodModeEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa, Size: 1]
	bool ForceNoCommanderCooldowns;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb, Size: 1]
	bool CommanderDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	bool ForceAllowCommanderActions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd, Size: 1]

--------------------------------
Class: Timespan

--------------------------------
Class: DataTableRowHandle
	DataTable* DataTable;//[Offset: 0x0, Size: 1]
	FName RowName;//[Offset: 0x8, Size: 1]

--------------------------------
Class: DataTable.Object
	ScriptStruct* RowStruct;//[Offset: 0x28, Size: 1]
	bool bStripFromClientBuilds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x80, Size: 1]
	bool bIgnoreExtraFields;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x80, Size: 1]
	bool bIgnoreMissingFields;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x80, Size: 1]
	FString ImportKeyField;//[Offset: 0x88, Size: 1]

--------------------------------
Class: ScriptStruct.Struct.Field.Object

--------------------------------
Class: SQVehicleSeatComponent.SceneComponent.ActorComponent.Object
	SQVehicleSeatConfig SeatConfig;//[Offset: 0x1f8, Size: 1]
	int AnimationSeatState;//[Offset: 0x248, Size: 1]
	SQVehicleSeat* SeatPawn;//[Offset: 0x250, Size: 1]
	SQPlayerState* SeatedPlayer;//[Offset: 0x258, Size: 1]
	SQSoldier* SeatedSoldier;//[Offset: 0x260, Size: 1]
	bool TransitionComplete();// 0xe3d2c0
	void OnRep_SeatPawn();// 0xe3cc60
	void OnRep_AnimationSeatState();// 0xe3cc20
	enum GetSoldierSeatState();// 0xe3c850
	SQVehicleInventoryComponent* GetSeatPawnInventory();// 0xe3c7f0
	SQEquipableItem* GetSeatPawnEquipableItem();// 0xe3c7c0
	SQVehicleSeat* GetSeatPawn();// 0xe3c790
	void ChangeSeatState(int StateIndex);// 0xe3c590
	bool CanSeatBeRepaired(enum RepairSource);// 0xe3c500

--------------------------------
Class: SQVehicleInventoryComponent.SQPawnInventoryComponent.ActorComponent.Object
	SQVehicleWeaponConfig[] Weapons;//[Offset: 0x2b8, Size: 1]

--------------------------------
Class: SQPawnInventoryComponent.ActorComponent.Object
	MulticastInlineDelegateProperty EquippedNewItemEvent;//[Size: 1]
	MulticastInlineDelegateProperty PlayAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty PauseAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty ResumeAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty SetAnimationPlayRateEvent;//[Size: 1]
	MulticastInlineDelegateProperty EndLoopAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty StopAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty AmmoChangedEvent;//[Size: 1]
	SQItemStaticInfo* CurrentItemStaticInfo;//[Offset: 0x130, Size: 1]
	class SQItemStaticInfo* DefaultStaticInfoClass;//[Offset: 0x138, Size: 1]
	SQEquipableItem* CurrentWeapon;//[Offset: 0x140, Size: 1]
	bool bIsInteracting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x160, Size: 1]
	bool bIsTimingOut;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x161, Size: 1]
	float CurrentFadeOut;//[Offset: 0x164, Size: 1]
	float FadeoutDuration;//[Offset: 0x168, Size: 1]
	float FadeoutDelay;//[Offset: 0x16c, Size: 1]
	bool bClickInventoryToggle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x170, Size: 1]
	int NextItemSlot;//[Offset: 0x174, Size: 1]
	int NextItemOffset;//[Offset: 0x178, Size: 1]
	int CurrentWeaponSlot;//[Offset: 0x17c, Size: 1]
	int CurrentWeaponOffset;//[Offset: 0x180, Size: 1]
	SQWeaponGroupData[] Inventory;//[Offset: 0x188, Size: 1]
	SQWeaponGroupDataArray RepInventory;//[Offset: 0x198, Size: 1]
	SQEquipableItem* PendingWeapon;//[Offset: 0x2b0, Size: 1]
	void UpdateStaticItemInfo(SQItemStaticInfo* InfoObject);// 0xd9ed80
	void UpdateInventorySwitch(int NewSlot, int NewOffset, bool bInteracting);// 0xdcb030
	bool SwitchWeaponDirectly(int NewWeaponSlot, int NewWeaponOffset, bool bInstant);// 0xdcaf20
	bool SwitchWeapon(int NewItemSlot);// 0xdcae80
	bool SwitchItem(int ItemSlot);// 0xdcade0
	void StopAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage, const float blendOutTime, const bool bStopAllWeaponAnims);// 0xdcac30
	SQEquipableItem* SpawnEquipableItem(out const SQInventoryData ItemClass, bool bSpawnMaxAmmo, out const SQPersistedAmmoCount StartingAmmo);// 0xdcaae0
	void SetupStaticInfoBindings(SQEquipableItem* Item);// 0xdca990
	void SetAnimationPlayRateHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage, const float NewPlayRate);// 0xdca7b0
	void ServerSwitchWeapon2(SQEquipableItem* NewWeapon);// 0xdca640
	void ServerSwitchWeapon(int NewWeaponSlot);// 0xdca700
	void ResumeAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage);// 0xdca530
	void ResetInventorySwitch();// 0xdca510
	void ReplaceItemInInventory(int Slot, out const SQInventoryData ItemClass, int Offset);// 0xdca3e0
	SQEquipableItem* RemoveWithoutDestroyingItem(int Slot, int Offset);// 0xdca310
	void RemoveItemFromInventory(int Slot, int Offset);// 0xdca240
	void RemoveItemClassFromInventory(class SQEquipableItem EquipableItemToRemove);// 0xdca1b0
	bool RemoveGroupFromInventory(int Slot);// 0xdca110
	void PlayAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage);// 0xdc9e40
	void PauseAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage);// 0xdc9d30
	void OnRep_RepInventory();// 0xd3d950
	void OnRep_PendingWeapon(SQEquipableItem* PreviousPendingWeapon);// 0xdc9c80
	void OnPrevItem();// 0xdc9c40
	void OnPendingWeaponPawnOwnerChanged(Pawn* NewPawnOwner);// 0xdc9bb0
	void OnNextItem();// 0xdc9a70
	void OnAmmoChanged();// 0xdc9830
	SQEquipableItem* InsertItemIntoInventory(int Slot, out const SQInventoryData ItemClass, int Offset, bool bSpawnMaxAmmo);// 0xdc91c0
	bool InsertExistingItemIntoInventory(SQEquipableItem* Item, int Slot, int Offset);// 0xdc90a0
	SQWeaponGroupData[] GetInventoryItemGroups();// 0xdc8b70
	SQEquipableItem* FindValidWeaponInGroup(int WeaponSlot, out int WeaponOffset);// 0xdc8a20
	SQEquipableItem* FindValidWeaponByClass(class SQEquipableItem WeaponClass);// 0xdc8980
	void EndLoopAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage, const SQMontageSectionNames SectionNames);// 0xdc87e0
	bool CalculateRearmCost(out float OutCost, out const interface classNone RearmSource, out const SQRearmWeaponRequest[] RearmRequest);// 0xdc84f0
	float CalculateMissingAmmoCost();// 0xdc84c0
	int AddGroupToInventory(int Slot);// 0xdc8420

--------------------------------
Class: SQItemStaticInfo.Object
	AnimMontage* BaseWeaponMontage;//[Offset: 0x28, Size: 1]
	AnimMontage* Base1pMontage;//[Offset: 0x30, Size: 1]
	AnimMontage* Base3pMontage;//[Offset: 0x38, Size: 1]
	AnimSequence* SprintToProne3p;//[Offset: 0x40, Size: 1]
	AnimSequence* StandToProne3p;//[Offset: 0x48, Size: 1]
	AnimSequence* ProneToStand3p;//[Offset: 0x50, Size: 1]
	AnimSequence* CrouchToProne3p;//[Offset: 0x58, Size: 1]
	AnimSequence* ProneToCrouch3p;//[Offset: 0x60, Size: 1]
	BlendSpace1D* AO1D_StandPitch;//[Offset: 0x68, Size: 1]
	BlendSpace1D* AO1D_CrouchPitch;//[Offset: 0x70, Size: 1]
	BlendSpace1D* AO1D_PronePitch;//[Offset: 0x78, Size: 1]
	BlendSpace* AO_BipodStandCrouchPitch;//[Offset: 0x80, Size: 1]
	AnimSequence* AO1D_StandYawSF;//[Offset: 0x88, Size: 1]
	AnimSequence* AO1D_CrouchYawSF;//[Offset: 0x90, Size: 1]
	AnimSequence* AO1D_ProneYawSF;//[Offset: 0x98, Size: 1]
	AnimSequence* StandTurnRight;//[Offset: 0xa0, Size: 1]
	AnimSequence* StandTurnLeft;//[Offset: 0xa8, Size: 1]
	AnimSequence* CrouchTurnRight;//[Offset: 0xb0, Size: 1]
	AnimSequence* CrouchTurnLeft;//[Offset: 0xb8, Size: 1]
	AnimSequence* ProneTurnRight;//[Offset: 0xc0, Size: 1]
	AnimSequence* ProneTurnLeft;//[Offset: 0xc8, Size: 1]
	AnimMontage* ReloadWeaponMontage;//[Offset: 0xd0, Size: 1]
	AnimMontage* Reload1pMontage;//[Offset: 0xd8, Size: 1]
	AnimMontage* Reload3pMontage;//[Offset: 0xe0, Size: 1]
	bool bCheckCurrentMagazineForEquip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe8, Size: 1]
	bool bCheckCurrentMagazineForUnequip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe9, Size: 1]
	AnimMontage* EmptyEquipWeaponMontage;//[Offset: 0xf0, Size: 1]
	AnimMontage* EmptyEquip1pMontage;//[Offset: 0xf8, Size: 1]
	AnimMontage* EmptyEquip3pMontage;//[Offset: 0x100, Size: 1]
	AnimMontage* EquipWeaponMontage;//[Offset: 0x108, Size: 1]
	AnimMontage* Equip1pMontage;//[Offset: 0x110, Size: 1]
	AnimMontage* Equip3pMontage;//[Offset: 0x118, Size: 1]
	AnimMontage* EmptyUnequipWeaponMontage;//[Offset: 0x120, Size: 1]
	AnimMontage* EmptyUnequip1pMontage;//[Offset: 0x128, Size: 1]
	AnimMontage* EmptyUnequip3pMontage;//[Offset: 0x130, Size: 1]
	AnimMontage* UnequipWeaponMontage;//[Offset: 0x138, Size: 1]
	AnimMontage* Unequip1pMontage;//[Offset: 0x140, Size: 1]
	AnimMontage* Unequip3pMontage;//[Offset: 0x148, Size: 1]
	AnimMontage* BobbingSprint1pMontage;//[Offset: 0x150, Size: 1]
	AnimMontage* BobbingEndSprint1pMontage;//[Offset: 0x158, Size: 1]
	AnimMontage* BobbingAddSprint1pMontage;//[Offset: 0x160, Size: 1]
	BlendSpace1D* BS1D_3pStandSprintType;//[Offset: 0x168, Size: 1]
	BlendSpace1D* BS1D_3pCrouchSprintType;//[Offset: 0x170, Size: 1]
	AnimSequence* SprintStop3p;//[Offset: 0x178, Size: 1]
	BlendSpace* BS_3pStandJogType;//[Offset: 0x180, Size: 1]
	BlendSpace* BS_3pStandWalkType;//[Offset: 0x188, Size: 1]
	BlendSpace* BS_3pCrouchWalkType;//[Offset: 0x190, Size: 1]
	BlendSpace1D* BS1D_3pProneCrawlType;//[Offset: 0x198, Size: 1]
	AnimSequence* StandStopMove;//[Offset: 0x1a0, Size: 1]
	AnimSequence* CrouchStopMove;//[Offset: 0x1a8, Size: 1]
	AnimMontage* BobbingMove1pMontage;//[Offset: 0x1b0, Size: 1]
	AnimMontage* Idle1pMontage;//[Offset: 0x1b8, Size: 1]
	AnimMontage* LeanLeftBegin3pMontage;//[Offset: 0x1c0, Size: 1]
	AnimMontage* LeanLeftEnd3pMontage;//[Offset: 0x1c8, Size: 1]
	AnimMontage* LeanRightBegin3pMontage;//[Offset: 0x1d0, Size: 1]
	AnimMontage* LeanRightEnd3pMontage;//[Offset: 0x1d8, Size: 1]
	AnimSequence* StandLeanLeftShuffle;//[Offset: 0x1e0, Size: 1]
	AnimSequence* StandLeanRightShuffle;//[Offset: 0x1e8, Size: 1]
	AnimSequence* CrouchLeanLeftShuffle;//[Offset: 0x1f0, Size: 1]
	AnimSequence* CrouchLeanRightShuffle;//[Offset: 0x1f8, Size: 1]
	AnimMontage* Lowered1pMontage;//[Offset: 0x200, Size: 1]
	AnimMontage* Lowered3pMontage;//[Offset: 0x208, Size: 1]
	AnimMontage* LoweredCrouch3pMontage;//[Offset: 0x210, Size: 1]
	AnimMontage* Raised1pMontage;//[Offset: 0x218, Size: 1]
	AnimMontage* Raised3pMontage;//[Offset: 0x220, Size: 1]
	AnimMontage* RaisedCrouch3pMontage;//[Offset: 0x228, Size: 1]
	SQMontageSectionNames MoveBobbingEndLoopSectionNames;//[Offset: 0x230, Size: 1]
	SQMontageSectionNames SprintBobbingEndLoopSectionNames;//[Offset: 0x258, Size: 1]
	BlendSpaceBase* BobbingProneMoveType;//[Offset: 0x280, Size: 1]
	AnimSequence* ProneMoveTypeAdditiveReference;//[Offset: 0x288, Size: 1]
	AnimSequence* OutProneMoveType;//[Offset: 0x290, Size: 1]
	AnimSequence* OutProneMoveTypeNonadditive;//[Offset: 0x298, Size: 1]
	float LeftHandWeaponIkAlpha;//[Offset: 0x2a0, Size: 1]
	float RightHand3pWeaponIkAlpha;//[Offset: 0x2a4, Size: 1]
	float JogPlayRateFactorMinRange;//[Offset: 0x2a8, Size: 1]
	float SprintPlayRateFactorMinRange;//[Offset: 0x2ac, Size: 1]
	float SprintBlendFactorMinRange;//[Offset: 0x2b0, Size: 1]
	float SprintBlendSpeedInterpSpeed;//[Offset: 0x2b4, Size: 1]
	AnimSequence* SprintStaticPose;//[Offset: 0x2b8, Size: 1]
	float LoweringBlendOutTime;//[Offset: 0x2c0, Size: 1]
	float IdleBlendOutTime;//[Offset: 0x2c4, Size: 1]
	SQBoredMontageSet[] BoredMontage;//[Offset: 0x2c8, Size: 1]
	float BoredMaxFrequency;//[Offset: 0x2d8, Size: 1]
	float BoredAbortBlendOutTime;//[Offset: 0x2dc, Size: 1]
	SQMutualWeapon[] MutualWeapons;//[Offset: 0x2e0, Size: 1]
	float EmptyUnequipDuration;//[Offset: 0x2f0, Size: 1]
	float EmptyEquipDuration;//[Offset: 0x2f4, Size: 1]
	bool bUseAutoLowering;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	float LoweringTimer;//[Offset: 0x2fc, Size: 1]
	float ItemCollisionDistance;//[Offset: 0x300, Size: 1]
	bool bReturnToADSAfterItemCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x304, Size: 1]
	bool bAllowRaisingAboveHead;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x305, Size: 1]
	float RaisingBlendOutTime;//[Offset: 0x308, Size: 1]
	class CameraShakeBase* FireShake;//[Offset: 0x310, Size: 1]
	Vector StandLoc;//[Offset: 0x318, Size: 1]
	Vector CrouchLoc;//[Offset: 0x324, Size: 1]
	Vector ProneLoc;//[Offset: 0x330, Size: 1]
	Vector BipodLoc;//[Offset: 0x33c, Size: 1]
	float StandLocBlendTime;//[Offset: 0x348, Size: 1]
	Rotator OffsetLineOfFire;//[Offset: 0x34c, Size: 1]
	Vector StandLeanLeftRootOffset;//[Offset: 0x358, Size: 1]
	Rotator StandLeanLeftWeaponRotation;//[Offset: 0x364, Size: 1]
	Rotator StandLeanLeftCameraRotation;//[Offset: 0x370, Size: 1]
	Vector StandLeanRightRootOffset;//[Offset: 0x37c, Size: 1]
	Rotator StandLeanRightWeaponRotation;//[Offset: 0x388, Size: 1]
	Rotator StandLeanRightCameraRotation;//[Offset: 0x394, Size: 1]
	Vector CrouchLeanLeftRootOffset;//[Offset: 0x3a0, Size: 1]
	Rotator CrouchLeanLeftWeaponRotation;//[Offset: 0x3ac, Size: 1]
	Rotator CrouchLeanLeftCameraRotation;//[Offset: 0x3b8, Size: 1]
	Vector CrouchLeanRightRootOffset;//[Offset: 0x3c4, Size: 1]
	Rotator CrouchLeanRightWeaponRotation;//[Offset: 0x3d0, Size: 1]
	Rotator CrouchLeanRightCameraRotation;//[Offset: 0x3dc, Size: 1]
	Vector ProneLeanLeftRootOffset;//[Offset: 0x3e8, Size: 1]
	Rotator ProneLeanLeftWeaponRotation;//[Offset: 0x3f4, Size: 1]
	Rotator ProneLeanLeftCameraRotation;//[Offset: 0x400, Size: 1]
	Vector ProneLeanRightRootOffset;//[Offset: 0x40c, Size: 1]
	Rotator ProneLeanRightWeaponRotation;//[Offset: 0x418, Size: 1]
	Rotator ProneLeanRightCameraRotation;//[Offset: 0x424, Size: 1]
	Vector FpvLowerRootBoneOffset;//[Offset: 0x430, Size: 1]
	Vector FpvTorsoCameraOffset;//[Offset: 0x43c, Size: 1]
	int WeaponSpringSide;//[Offset: 0x448, Size: 1]
	float WeaponSpringStiffness;//[Offset: 0x44c, Size: 1]
	float WeaponSpringCriticalDampingFactor;//[Offset: 0x450, Size: 1]
	float WeaponSpringMass;//[Offset: 0x454, Size: 1]
	float WeaponSpringFactor2;//[Offset: 0x458, Size: 1]
	float WeaponMeshSpringLocDelayFactor;//[Offset: 0x45c, Size: 1]
	float WeaponMeshSpringRotDelayFactor;//[Offset: 0x460, Size: 1]
	float WeaponSpringClamp;//[Offset: 0x464, Size: 1]
	float WeaponSpringTurnSpeedToFullIntensity;//[Offset: 0x468, Size: 1]
	Rotator StrafeSpringRotator;//[Offset: 0x46c, Size: 1]
	Vector StrafeSpringVector;//[Offset: 0x478, Size: 1]
	Rotator AdsStrafeSpringRotator;//[Offset: 0x484, Size: 1]
	FName SoundsSocket;//[Offset: 0x490, Size: 1]
	SoundCue* FireSound1P;//[Offset: 0x498, Size: 1]
	SoundCue* FireSound3P;//[Offset: 0x4a0, Size: 1]
	SoundCue* ReloadSound1P;//[Offset: 0x4a8, Size: 1]
	SoundCue* ReloadSound3P;//[Offset: 0x4b0, Size: 1]
	SoundCue* DryReloadSound1P;//[Offset: 0x4b8, Size: 1]
	SoundCue* DryReloadSound3P;//[Offset: 0x4c0, Size: 1]
	SoundCue* EquipSound1P;//[Offset: 0x4c8, Size: 1]
	SoundCue* EquipSound3P;//[Offset: 0x4d0, Size: 1]
	SoundCue* UnequipSound1P;//[Offset: 0x4d8, Size: 1]
	SoundCue* UnequipSound3P;//[Offset: 0x4e0, Size: 1]
	SoundBase* IntoForcedLoweringSound;//[Offset: 0x4e8, Size: 1]
	SoundBase* OutOfForcedLoweringSound;//[Offset: 0x4f0, Size: 1]
	SoundBase* IntoForcedRaisingSound;//[Offset: 0x4f8, Size: 1]
	SoundBase* OutOfForcedRaisingSound;//[Offset: 0x500, Size: 1]
	bool bUsableInMainBase;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x508, Size: 1]
	FText ItemUsageNullifiedText;//[Offset: 0x510, Size: 1]

--------------------------------
Class: BlendSpace1D.BlendSpaceBase.AnimationAsset.Object
	bool bScaleAnimation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x148, Size: 1]

--------------------------------
Class: BlendSpaceBase.AnimationAsset.Object
	bool bRotationBlendInMeshSpace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88, Size: 1]
	float AnimLength;//[Offset: 0x8c, Size: 1]
	InterpolationParameter InterpolationParam;//[Offset: 0x90, Size: 3]
	float TargetWeightInterpolationSpeedPerSec;//[Offset: 0xa8, Size: 1]
	byte NotifyTriggerMode;//[Offset: 0xac, Size: 1]
	PerBoneInterpolation[] PerBoneBlend;//[Offset: 0xb0, Size: 1]
	int SampleIndexWithMarkers;//[Offset: 0xc0, Size: 1]
	BlendSample[] SampleData;//[Offset: 0xc8, Size: 1]
	EditorElement[] GridSamples;//[Offset: 0xd8, Size: 1]
	BlendParameter BlendParameters;//[Offset: 0xe8, Size: 3]

--------------------------------
Class: InterpolationParameter
	float InterpolationTime;//[Offset: 0x0, Size: 1]
	byte InterpolationType;//[Offset: 0x4, Size: 1]

--------------------------------
Class: PerBoneInterpolation
	BoneReference BoneReference;//[Offset: 0x0, Size: 1]
	float InterpolationSpeedPerSec;//[Offset: 0x10, Size: 1]

--------------------------------
Class: BlendSample
	AnimSequence* Animation;//[Offset: 0x0, Size: 1]
	Vector SampleValue;//[Offset: 0x8, Size: 1]
	float RateScale;//[Offset: 0x14, Size: 1]

--------------------------------
Class: EditorElement
	int Indices;//[Offset: 0x0, Size: 3]
	float Weights;//[Offset: 0xc, Size: 3]

--------------------------------
Class: BlendParameter
	FString DisplayName;//[Offset: 0x0, Size: 1]
	float Min;//[Offset: 0x10, Size: 1]
	float Max;//[Offset: 0x14, Size: 1]
	int GridNum;//[Offset: 0x18, Size: 1]

--------------------------------
Class: BlendSpace.BlendSpaceBase.AnimationAsset.Object
	byte AxisToScaleAnimation;//[Offset: 0x148, Size: 1]

--------------------------------
Class: SQMontageSectionNames
	FName BeginSection;//[Offset: 0x0, Size: 1]
	FName LoopSection1;//[Offset: 0x8, Size: 1]
	FName LoopSection2;//[Offset: 0x10, Size: 1]
	FName EndSection;//[Offset: 0x18, Size: 1]
	FName MidEndSection;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQBoredMontageSet
	AnimMontage* BoredWeaponMontage;//[Offset: 0x0, Size: 1]
	AnimMontage* Bored1pMontage;//[Offset: 0x8, Size: 1]
	AnimMontage* Bored3pMontage;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQMutualWeapon
	class SQEquipableItem* Weapon;//[Offset: 0x0, Size: 1]
	bool bCheckCurrentMagazineForEquip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	bool CheckCurrentMagazineForUnequip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]
	bool bCheckPreviousMagazineForEquip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa, Size: 1]
	AnimMontage* BothEmptyWeaponEquipMontage;//[Offset: 0x10, Size: 1]
	AnimMontage* BothEmpty1pEquipMontage;//[Offset: 0x18, Size: 1]
	AnimMontage* BothEmpty3pEquipMontage;//[Offset: 0x20, Size: 1]
	float BothEmptyEquipDuration;//[Offset: 0x28, Size: 1]
	AnimMontage* PreviousEmptyOrIgnoreCurrentWeaponEquipMontage;//[Offset: 0x30, Size: 1]
	AnimMontage* PreviousEmptyOrIgnoreCurrent1pEquipMontage;//[Offset: 0x38, Size: 1]
	AnimMontage* PreviousEmptyOrIgnoreCurrent3pEquipMontage;//[Offset: 0x40, Size: 1]
	float PreviousEmptyOrIgnoreCurrentEquipDuration;//[Offset: 0x48, Size: 1]
	AnimMontage* CurrentEmptyOrIgnorePreviousWeaponEquipMontage;//[Offset: 0x50, Size: 1]
	AnimMontage* CurrentEmptyOrIgnorePrevious1pEquipMontage;//[Offset: 0x58, Size: 1]
	AnimMontage* CurrentEmptyOrIgnorePrevious3pEquipMontage;//[Offset: 0x60, Size: 1]
	float CurrentEmptyOrIgnorePreviousEquipDuration;//[Offset: 0x68, Size: 1]
	AnimMontage* NoneEmptyOrIgnoreBothWeaponEquipMontage;//[Offset: 0x70, Size: 1]
	AnimMontage* NoneEmptyOrIgnoreBoth1pEquipMontage;//[Offset: 0x78, Size: 1]
	AnimMontage* NoneEmptyOrIgnoreBoth3pEquipMontage;//[Offset: 0x80, Size: 1]
	float NoneEmptyOrIgnoreBothEquipDuration;//[Offset: 0x88, Size: 1]
	AnimMontage* CurrentEmptyWeaponUnequipMontage;//[Offset: 0x90, Size: 1]
	AnimMontage* CurrentEmpty1pUnequipMontage;//[Offset: 0x98, Size: 1]
	AnimMontage* CurrentEmpty3pUnequipMontage;//[Offset: 0xa0, Size: 1]
	float CurrentEmptyUnequipDuration;//[Offset: 0xa8, Size: 1]
	AnimMontage* NoneOrIgnoreCurrentWeaponUnequipMontage;//[Offset: 0xb0, Size: 1]
	AnimMontage* NoneOrIgnoreCurrent1pUnequipMontage;//[Offset: 0xb8, Size: 1]
	AnimMontage* NoneOrIgnoreCurrent3pUnequipMontage;//[Offset: 0xc0, Size: 1]
	float NoneOrIgnoreCurrentUnequipDuration;//[Offset: 0xc8, Size: 1]

--------------------------------
Class: SQEquipableItem.Actor.Object
	SQItemStaticInfo* ItemStaticInfo;//[Offset: 0x228, Size: 1]
	class SQItemStaticInfo* ItemStaticInfoClass;//[Offset: 0x230, Size: 1]
	MulticastInlineDelegateProperty OnPawnOwnerChangedEvent;//[Size: 1]
	FText DisplayName;//[Offset: 0x270, Size: 1]
	FText ItemDescription;//[Offset: 0x288, Size: 1]
	int RearmTypesAllowed;//[Offset: 0x2a0, Size: 1]
	bool bUseOwnerAsMasterPose;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a4, Size: 1]
	float AmmoPerRearmItem;//[Offset: 0x2a8, Size: 1]
	float UnequippedNetUpdateRate;//[Offset: 0x2b0, Size: 1]
	enum ActionState;//[Offset: 0x2b4, Size: 1]
	BlendSpace1D* SprintBlendspace;//[Offset: 0x2b8, Size: 1]
	AnimSequence* WalkForwardAnim;//[Offset: 0x2c0, Size: 1]
	AnimSequence* IdleAnim;//[Offset: 0x2c8, Size: 1]
	AnimSequence* UseAnim;//[Offset: 0x2d0, Size: 1]
	AnimSequence* StandAnim;//[Offset: 0x2d8, Size: 1]
	AnimSequence* EquipAnim;//[Offset: 0x2e0, Size: 1]
	AnimSequence* UnequipAnim;//[Offset: 0x2e8, Size: 1]
	AnimSequence* AltUseAnim;//[Offset: 0x2f0, Size: 1]
	AnimSequence* Custom1Anim;//[Offset: 0x2f8, Size: 1]
	AnimSequence* Custom2Anim;//[Offset: 0x300, Size: 1]
	AnimSequence* Custom3Anim;//[Offset: 0x308, Size: 1]
	AnimSequence* PreUseAnim;//[Offset: 0x310, Size: 1]
	AnimSequence* PostUseAnim;//[Offset: 0x318, Size: 1]
	AnimSequence* PreAltUseAnim;//[Offset: 0x320, Size: 1]
	AnimSequence* PostAltUseAnim;//[Offset: 0x328, Size: 1]
	Texture2D* HUDSelectedTexture;//[Offset: 0x330, Size: 1]
	Texture2D* HUDTexture;//[Offset: 0x338, Size: 1]
	bool bShowItemCountInInventory;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	bool bShowMagCountInInventory;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x341, Size: 1]
	bool bShowAmmoDataInHud;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x342, Size: 1]
	bool bChangeDormancyOnEquipState;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x343, Size: 1]
	int ItemCount;//[Offset: 0x344, Size: 1]
	int MaxItemCount;//[Offset: 0x348, Size: 1]
	bool bCannotRearm;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x34c, Size: 1]
	float EquipDuration;//[Offset: 0x354, Size: 1]
	float UnequipDuration;//[Offset: 0x358, Size: 1]
	float RearmCounterMultiplier;//[Offset: 0x364, Size: 1]
	SceneComponent* Root;//[Offset: 0x368, Size: 1]
	SkeletalMeshComponent* Mesh1P;//[Offset: 0x370, Size: 1]
	SkeletalMeshComponent* Mesh3P;//[Offset: 0x378, Size: 1]
	Pawn* PawnOwner;//[Offset: 0x380, Size: 1]
	PlayerController* LocalPlayerController;//[Offset: 0x388, Size: 1]
	MulticastInlineDelegateProperty PlayAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty PauseAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty ResumeAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty SetAnimationPlayRateEvent;//[Size: 1]
	MulticastInlineDelegateProperty EndLoopAnimationEvent;//[Size: 1]
	MulticastInlineDelegateProperty StopAnimationEvent;//[Size: 1]
	SQAudioComponentPool AudioComponentPool;//[Offset: 0x3f0, Size: 1]
	AnimInstance* CachedWeapon1pAnimInstance;//[Offset: 0x410, Size: 1]
	AnimInstance* CachedWeapon3pAnimInstance;//[Offset: 0x418, Size: 1]
	SQAnimInstanceSoldier1P* CachedSoldier1pAnimInstance;//[Offset: 0x420, Size: 1]
	SQAnimInstanceSoldier3P* CachedSoldier3pAnimInstance;//[Offset: 0x428, Size: 1]
	float CachedEquipDuration;//[Offset: 0x430, Size: 1]
	float CachedUnequipDuration;//[Offset: 0x434, Size: 1]
	enum EquipState;//[Offset: 0x438, Size: 1]
	bool bCachedMoveBobbing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x439, Size: 1]
	bool bCachedSprintBobbing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43a, Size: 1]
	bool bCachedHasMovement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43b, Size: 1]
	bool bCachedIsPullingTrigger;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43c, Size: 1]
	bool bCachedIsLeaningRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43d, Size: 1]
	bool bCachedIsLeaningLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43e, Size: 1]
	float CachedDeltaTime;//[Offset: 0x440, Size: 1]
	void UpdateSprintBobbing(bool bForceStopLoop);// 0xd83670
	void UpdateMoveInputs(bool bForceStopLoop);// 0xd835e0
	void UpdateMoveBobbing();// 0xd835c0
	void UpdateLeanRight();// 0xd835a0
	void UpdateLeanLeft();// 0xd83580
	void UpdateFirstPersonVisibility();// 0xd83560
	SQDeployable* ShovelHitDeployable(HitResult HitResult, bool bRemovingHealth);// 0xd831e0
	void SetRaisingAnimation(bool bRaised);// 0xd83150
	void SetLoweringAnimation(bool bLowered);// 0xd830c0
	void ServerConsumeItem();// 0xd83070
	void ReinitializeEquip();// 0xd83050
	void ReinitializeAnimInstances();// 0xd83030
	float Rearm(int Quantity);// 0xd82f90
	void PlayUnequipAnimation();// 0xd82f70
	void PlaySoundAttachedToWeapon(SoundCue* Sound1p, SoundCue* Sound3p, out const FName SocketName, out const Vector FallbackOrigin);// 0xd82e00
	void PlayEquipAnimation();// 0xd82de0
	void Pickup();// 0xd82dc0
	void PendingEquip();// 0xd82da0
	bool IsFirstPersonViewTarget();// 0xd82850
	bool IsEquipped();// 0xd82820
	bool IsBeingUsed();// 0xd82750
	bool IsAmmoFull();// 0xd82720
	void InitializeAmmoValues(out const SQInventoryData ItemClass, bool bSpawnMaxAmmo, out const SQPersistedAmmoCount PersistedAmmo);// 0xd825d0
	void Hide();// 0xd825b0
	bool HasAmmo();// 0xd82580
	int GetRearmMaxItemCount();// 0xd823f0
	int GetRearmItemCount();// 0xd823c0
	Pawn* GetOwnerPawn();// 0xd82360
	SkeletalMeshComponent* GetMesh(bool bGetMesh1P);// 0xd82290
	SQItemStaticInfo* GetItemStaticInfo();// 0xd82260
	Vector GetFireDirection();// 0xd82220
	Controller* GetController();// 0xd821c0
	void EndUse();// 0xd82160
	void EndAltUse();// 0xd82140
	void Drop();// 0xd82120
	SQPersistedAmmoCount CreatePersistingAmmoCount();// 0xd82010
	SQDeployable* CanShovel(int ShovelTraceLength, float ShovelTraceSphereRadius, out const byte[] ObjectTypes, bool bRemovingHealth);// 0xd81e40
	bool CanRearmFromType(enum RearmType);// 0xd81db0
	bool CanRearm();// 0xd81d80
	float CalculateRearmAmmoCost(int QuantityToRearm);// 0xd81c40
	int CalculateMissingRearmItems();// 0xd81c10
	float CalculateMissingAmmoCost();// 0xd81bd0
	float CalculateMaxAmmoCost(int MaxCount);// 0xd81b30
	void BPEndUse();// 0x1d69c50
	void BPEndAltUse();// 0x1d69c50
	void BPBeginUse();// 0x1d69c50
	void BPBeginAltUse();// 0x1d69c50
	void BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible);// 0xd81aa0
	void BlueprintOnUnequipped();// 0xd7ddb0
	void BlueprintOnUnequip();// 0xd7df20
	void BlueprintOnEquipped();// 0xd78600
	void BlueprintOnEquip();// 0xd81a80
	void BlueprintDrawHUD(Canvas* Canvas);// 0x1d69c50
	void BeginUse();// 0xd81a60
	void BeginAltUse();// 0xd81a40

--------------------------------
Class: SQAudioComponentPool
	AudioComponent*[] AudioComponentPool;//[Offset: 0x0, Size: 1]
	SceneComponent* AttachToComponent;//[Offset: 0x10, Size: 1]
	FName AttachPointName;//[Offset: 0x18, Size: 1]

--------------------------------
Class: AudioComponent.SceneComponent.ActorComponent.Object
	SoundBase* Sound;//[Offset: 0x1f8, Size: 1]
	AudioComponentParam[] InstanceParameters;//[Offset: 0x200, Size: 1]
	SoundClass* SoundClassOverride;//[Offset: 0x210, Size: 1]
	bool bAutoDestroy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x218, Size: 1]
	bool bStopWhenOwnerDestroyed;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x218, Size: 1]
	bool bShouldRemainActiveIfDropped;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x218, Size: 1]
	bool bAllowSpatialization;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x218, Size: 1]
	bool bOverrideAttenuation;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x218, Size: 1]
	bool bOverrideSubtitlePriority;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x218, Size: 1]
	bool bIsUISound;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x218, Size: 1]
	bool bEnableLowPassFilter;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x218, Size: 1]
	bool bOverridePriority;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x219, Size: 1]
	bool bSuppressSubtitles;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x219, Size: 1]
	bool bAutoManageAttachment;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x21a, Size: 1]
	FName AudioComponentUserID;//[Offset: 0x220, Size: 1]
	float StartedPlayingTime;//[Offset: 0x228, Size: 1]
	float PitchModulationMin;//[Offset: 0x22c, Size: 1]
	float PitchModulationMax;//[Offset: 0x230, Size: 1]
	float VolumeModulationMin;//[Offset: 0x234, Size: 1]
	float VolumeModulationMax;//[Offset: 0x238, Size: 1]
	float VolumeMultiplier;//[Offset: 0x23c, Size: 1]
	int EnvelopeFollowerAttackTime;//[Offset: 0x240, Size: 1]
	int EnvelopeFollowerReleaseTime;//[Offset: 0x244, Size: 1]
	float Priority;//[Offset: 0x248, Size: 1]
	float SubtitlePriority;//[Offset: 0x24c, Size: 1]
	SoundEffectSourcePresetChain* SourceEffectChain;//[Offset: 0x250, Size: 1]
	float PitchMultiplier;//[Offset: 0x258, Size: 1]
	float LowPassFilterFrequency;//[Offset: 0x25c, Size: 1]
	SoundAttenuation* AttenuationSettings;//[Offset: 0x268, Size: 1]
	SoundAttenuationSettings AttenuationOverrides;//[Offset: 0x270, Size: 1]
	SoundConcurrency* ConcurrencySettings;//[Offset: 0x610, Size: 1]
	<SoundConcurrency*> ConcurrencySet;//[Offset: 0x618, Size: 1]
	enum AutoAttachLocationRule;//[Offset: 0x674, Size: 1]
	enum AutoAttachRotationRule;//[Offset: 0x675, Size: 1]
	enum AutoAttachScaleRule;//[Offset: 0x676, Size: 1]
	SoundModulationDefaultRoutingSettings ModulationRouting;//[Offset: 0x678, Size: 1]
	MulticastInlineDelegateProperty OnAudioPlayStateChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnAudioVirtualizationChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnAudioFinished;//[Size: 1]
	MulticastInlineDelegateProperty OnAudioPlaybackPercent;//[Size: 1]
	MulticastInlineDelegateProperty OnAudioSingleEnvelopeValue;//[Size: 1]
	MulticastInlineDelegateProperty OnAudioMultiEnvelopeValue;//[Size: 1]
	delegate OnQueueSubtitles;//[Offset: 0x7b0, Size: 1]
	SceneComponent* AutoAttachParent;//[Offset: 0x7c0, Size: 1]
	FName AutoAttachSocketName;//[Offset: 0x7c8, Size: 1]
	void StopDelayed(float DelayTime);// 0x3ec9f30
	void Stop();// 0x3ec9f10
	void SetWaveParameter(FName InName, SoundWave* InWave);// 0x3ec9e40
	void SetVolumeMultiplier(float NewVolumeMultiplier);// 0x3ec9dc0
	void SetUISound(bool bInUISound);// 0x3ec9d30
	void SetSubmixSend(SoundSubmixBase* Submix, float SendLevel);// 0x3ec9be0
	void SetSourceBusSendPreEffect(SoundSourceBus* SoundSourceBus, float SourceBusSendLevel);// 0x3ec9a90
	void SetSourceBusSendPostEffect(SoundSourceBus* SoundSourceBus, float SourceBusSendLevel);// 0x3ec99c0
	void SetSound(SoundBase* NewSound);// 0x3ec9930
	void SetPitchMultiplier(float NewPitchMultiplier);// 0x3ec9790
	void SetPaused(bool bPause);// 0x3ec9700
	void SetOutputToBusOnly(bool bInOutputToBusOnly);// 0x3ec9670
	void SetLowPassFilterFrequency(float InLowPassFilterFrequency);// 0x3ec95f0
	void SetLowPassFilterEnabled(bool InLowPassFilterEnabled);// 0x3ec9560
	void SetIntParameter(FName InName, int inInt);// 0x3ec9490
	void SetFloatParameter(FName InName, float InFloat);// 0x3ec9340
	void SetBoolParameter(FName InName, bool InBool);// 0x3ec8f60
	void SetAudioBusSendPreEffect(AudioBus* AudioBus, float AudioBusSendLevel);// 0x3ec8e90
	void SetAudioBusSendPostEffect(AudioBus* AudioBus, float AudioBusSendLevel);// 0x3ec8dc0
	void PlayQuantized(const Object* WorldContextObject, out QuartzClockHandle* InClockHandle, out QuartzQuantizationBoundary InQuantizationBoundary, out const delegate InDelegate, float InStartTime, float InFadeInDuration, float InFadeVolumeLevel, enum InFadeCurve);// 0x3ec8a80
	void Play(float StartTime);// 0x134f430
	bool IsVirtualized();// 0x3ec8a50
	bool IsPlaying();// 0x3ec8a20
	bool HasCookedFFTData();// 0x3ec89f0
	bool HasCookedAmplitudeEnvelopeData();// 0x3ec89c0
	enum GetPlayState();// 0x3ec8990
	bool GetCookedFFTDataForAllPlayingSounds(out SoundWaveSpectralDataPerSound[] OutSoundWaveSpectralData);// 0x3ec88b0
	bool GetCookedFFTData(out const float[] FrequenciesToGet, out SoundWaveSpectralData[] OutSoundWaveSpectralData);// 0x3ec8780
	bool GetCookedEnvelopeDataForAllPlayingSounds(out SoundWaveEnvelopeDataPerSound[] OutEnvelopeData);// 0x3ec86c0
	bool GetCookedEnvelopeData(out float OutEnvelopeData);// 0x3ec8610
	void FadeOut(float FadeoutDuration, float FadeVolumeLevel, const enum FadeCurve);// 0x3ec84f0
	void FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime, const enum FadeCurve);// 0x3ec8390
	bool BP_GetAttenuationSettingsToApply(out SoundAttenuationSettings OutAttenuationSettings);// 0x3ec81a0
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel, const enum FadeCurve);// 0x3ec75a0
	void AdjustAttenuation(out const SoundAttenuationSettings InAttenuationSettings);// 0x3ec74d0

--------------------------------
Class: QuartzClockHandle.Object
	QuartzSubsystem* QuartzSubsystem;//[Offset: 0x168, Size: 1]
	World* WorldPtr;//[Offset: 0x188, Size: 1]
	void UnsubscribeFromTimeDivision(const Object* WorldContextObject, enum InQuantizationBoundary, out QuartzClockHandle* ClockHandle);// 0x34a2ab0
	void UnsubscribeFromAllTimeDivisions(const Object* WorldContextObject, out QuartzClockHandle* ClockHandle);// 0x34a29d0
	void SubscribeToQuantizationEvent(const Object* WorldContextObject, enum InQuantizationBoundary, out const delegate OnQuantizationEvent, out QuartzClockHandle* ClockHandle);// 0x34a27a0
	void SubscribeToAllQuantizationEvents(const Object* WorldContextObject, out const delegate OnQuantizationEvent, out QuartzClockHandle* ClockHandle);// 0x34a2660
	void StopClock(const Object* WorldContextObject, bool CancelPendingEvents, out QuartzClockHandle* ClockHandle);// 0x34a22f0
	void StartOtherClock(const Object* WorldContextObject, FName OtherClockName, QuartzQuantizationBoundary InQuantizationBoundary, out const delegate InDelegate);// 0x34a1eb0
	void StartClock(const Object* WorldContextObject, out QuartzClockHandle* ClockHandle);// 0x34a0610
	void SetTicksPerSecond(const Object* WorldContextObject, out const QuartzQuantizationBoundary QuantizationBoundary, out const delegate Delegate, out QuartzClockHandle* ClockHandle, float TicksPerSecond);// 0x34a1940
	void SetThirtySecondNotesPerMinute(const Object* WorldContextObject, out const QuartzQuantizationBoundary QuantizationBoundary, out const delegate Delegate, out QuartzClockHandle* ClockHandle, float ThirtySecondsNotesPerMinute);// 0x34a1750
	void SetSecondsPerTick(const Object* WorldContextObject, out const QuartzQuantizationBoundary QuantizationBoundary, out const delegate Delegate, out QuartzClockHandle* ClockHandle, float SecondsPerTick);// 0x34a0fb0
	void SetMillisecondsPerTick(const Object* WorldContextObject, out const QuartzQuantizationBoundary QuantizationBoundary, out const delegate Delegate, out QuartzClockHandle* ClockHandle, float MillisecondsPerTick);// 0x34a0d30
	void SetBeatsPerMinute(const Object* WorldContextObject, out const QuartzQuantizationBoundary QuantizationBoundary, out const delegate Delegate, out QuartzClockHandle* ClockHandle, float BeatsPerMinute);// 0x34a0840
	void ResumeClock(const Object* WorldContextObject, out QuartzClockHandle* ClockHandle);// 0x34a0610
	void ResetTransportQuantized(const Object* WorldContextObject, QuartzQuantizationBoundary InQuantizationBoundary, out const delegate InDelegate, out QuartzClockHandle* ClockHandle);// 0x34a0470
	void ResetTransport(const Object* WorldContextObject, out const delegate InDelegate);// 0x34a0380
	void PauseClock(const Object* WorldContextObject, out QuartzClockHandle* ClockHandle);// 0x349fb70
	bool IsClockRunning(const Object* WorldContextObject);// 0x349f4a0
	float GetTicksPerSecond(const Object* WorldContextObject);// 0x349f330
	float GetThirtySecondNotesPerMinute(const Object* WorldContextObject);// 0x349f290
	float GetSecondsPerTick(const Object* WorldContextObject);// 0x349f1f0
	float GetMillisecondsPerTick(const Object* WorldContextObject);// 0x349ed10
	float GetEstimatedRunTime(const Object* WorldContextObject);// 0x349e8d0
	float GetDurationOfQuantizationTypeInSeconds(const Object* WorldContextObject, out const enum QuantizationType, float Multiplier);// 0x349e550
	QuartzTransportTimeStamp GetCurrentTimestamp(const Object* WorldContextObject);// 0x349e4b0
	float GetBeatsPerMinute(const Object* WorldContextObject);// 0x349e330

--------------------------------
Class: QuartzSubsystem.TickableWorldSubsystem.WorldSubsystem.Subsystem.Object
	bool IsQuartzEnabled();// 0x349f640
	bool IsClockRunning(const Object* WorldContextObject, FName ClockName);// 0x349f540
	float GetRoundTripMinLatency(const Object* WorldContextObject);// 0x349f150
	float GetRoundTripMaxLatency(const Object* WorldContextObject);// 0x349f0b0
	float GetRoundTripAverageLatency(const Object* WorldContextObject);// 0x349f010
	QuartzClockHandle* GetHandleForClock(const Object* WorldContextObject, FName ClockName);// 0x349eab0
	float GetGameThreadToAudioRenderThreadMinLatency(const Object* WorldContextObject);// 0x349ea10
	float GetGameThreadToAudioRenderThreadMaxLatency(const Object* WorldContextObject);// 0x349ea10
	float GetGameThreadToAudioRenderThreadAverageLatency(const Object* WorldContextObject);// 0x349e970
	float GetEstimatedClockRunTime(const Object* WorldContextObject, out const FName InClockName);// 0x349e7f0
	float GetDurationOfQuantizationTypeInSeconds(const Object* WorldContextObject, FName ClockName, out const enum QuantizationType, float Multiplier);// 0x349e670
	QuartzTransportTimeStamp GetCurrentClockTimestamp(const Object* WorldContextObject, out const FName InClockName);// 0x349e3d0
	float GetAudioRenderThreadToGameThreadMinLatency();// 0x349e300
	float GetAudioRenderThreadToGameThreadMaxLatency();// 0x349e2d0
	float GetAudioRenderThreadToGameThreadAverageLatency();// 0x349e2a0
	bool DoesClockExist(const Object* WorldContextObject, FName ClockName);// 0x349e1d0
	void DeleteClockByName(const Object* WorldContextObject, FName ClockName);// 0x349e100
	void DeleteClockByHandle(const Object* WorldContextObject, out QuartzClockHandle* InClockHandle);// 0x349e020
	QuartzClockHandle* CreateNewClock(const Object* WorldContextObject, FName ClockName, QuartzClockSettings InSettings, bool bOverrideSettingsIfClockExists, bool bUseAudioEngineClockManager);// 0x349de40

--------------------------------
Class: TickableWorldSubsystem.WorldSubsystem.Subsystem.Object

--------------------------------
Class: WorldSubsystem.Subsystem.Object

--------------------------------
Class: Subsystem.Object

--------------------------------
Class: QuartzTransportTimeStamp
	int Bars;//[Offset: 0x0, Size: 1]
	int Beat;//[Offset: 0x4, Size: 1]
	float BeatFraction;//[Offset: 0x8, Size: 1]
	float Seconds;//[Offset: 0xc, Size: 1]

--------------------------------
Class: QuartzClockSettings
	QuartzTimeSignature TimeSignature;//[Offset: 0x0, Size: 1]
	bool bIgnoreLevelChange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x18, Size: 1]

--------------------------------
Class: QuartzTimeSignature
	int NumBeats;//[Offset: 0x0, Size: 1]
	enum BeatType;//[Offset: 0x4, Size: 1]
	QuartzPulseOverrideStep[] OptionalPulseOverride;//[Offset: 0x8, Size: 1]

--------------------------------
Class: QuartzPulseOverrideStep
	int NumberOfPulses;//[Offset: 0x0, Size: 1]
	enum PulseDuration;//[Offset: 0x4, Size: 1]

--------------------------------
Class: QuartzQuantizationBoundary
	enum Quantization;//[Offset: 0x0, Size: 1]
	float Multiplier;//[Offset: 0x4, Size: 1]
	enum CountingReferencePoint;//[Offset: 0x8, Size: 1]
	bool bFireOnClockStart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]

--------------------------------
Class: AudioComponentParam
	FName ParamName;//[Offset: 0x0, Size: 1]
	float FloatParam;//[Offset: 0x8, Size: 1]
	bool BoolParam;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	int IntParam;//[Offset: 0x10, Size: 1]
	SoundWave* SoundWaveParam;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SoundWaveSpectralDataPerSound
	SoundWaveSpectralData[] SpectralData;//[Offset: 0x0, Size: 1]
	float PlaybackTime;//[Offset: 0x10, Size: 1]
	SoundWave* SoundWave;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SoundWaveSpectralData
	float FrequencyHz;//[Offset: 0x0, Size: 1]
	float Magnitude;//[Offset: 0x4, Size: 1]
	float NormalizedMagnitude;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SoundWaveEnvelopeDataPerSound
	float Envelope;//[Offset: 0x0, Size: 1]
	float PlaybackTime;//[Offset: 0x4, Size: 1]
	SoundWave* SoundWave;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQAnimInstanceSoldier1P.SQAnimInstanceSoldier.SQAnimInstance.AnimInstance.Object
	bool bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__St2P;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b8, Size: 1]
	bool bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__P2St;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b9, Size: 1]
	bool bRelevantAnimTimeRemaining__LTEPtTwo__WeaponBobbing1P__Sp2P;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ba, Size: 1]
	bool bStateWeight__GTEOne__ProneStates__ProneMove;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x59c, Size: 1]
	bool bRelevantAnimTimeRemaining__LTEPtTwo__ProneStates__OutProneMove;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x59d, Size: 1]
	bool bCurrentTime__GTEPtThree__Jump1P__JumpStart__rifle_1ptop_jumpstart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x610, Size: 1]
	bool bTimeRemaining__LTEPtTwo__Jump1P__JumpEnd__rifle_1ptop_jumpend;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x611, Size: 1]
	bool bTimeRemaining__LTEPtTwo__Jump1P__JumpStart__rifle_1ptop_jumpstart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x612, Size: 1]
	Rotator Zeroing;//[Offset: 0x68c, Size: 1]
	BlendSpaceBase* ProneMoveType;//[Offset: 0x698, Size: 1]
	AnimSequence* ProneMoveTypeAdditiveReference;//[Offset: 0x6a0, Size: 1]
	AnimSequence* OutProneMoveType;//[Offset: 0x6a8, Size: 1]
	AnimSequence* OutProneMoveTypeNonadditive;//[Offset: 0x6b0, Size: 1]
	AnimSequence* AdjustableAdsSightItemAnim;//[Offset: 0x6b8, Size: 1]
	float HasAdjustableSightAlpha;//[Offset: 0x6c0, Size: 1]
	Vector StandLoc;//[Offset: 0x6c4, Size: 1]
	Vector CrouchLoc;//[Offset: 0x6d0, Size: 1]
	Vector ProneLoc;//[Offset: 0x6dc, Size: 1]
	Vector BipodLoc;//[Offset: 0x6e8, Size: 1]
	float StandLocBlendTime;//[Offset: 0x6f4, Size: 1]
	Vector NegFpvTorsoCameraOffset;//[Offset: 0x6f8, Size: 1]
	Vector DeviationVisuFb;//[Offset: 0x704, Size: 1]
	Rotator Sway;//[Offset: 0x710, Size: 1]
	Vector StrafeVector;//[Offset: 0x71c, Size: 1]
	Rotator StrafeRotator;//[Offset: 0x728, Size: 1]
	Rotator AdsStrafeRotator;//[Offset: 0x734, Size: 1]
	float BaseAimPitchPct;//[Offset: 0x740, Size: 1]
	Vector WeapRecoilRelLoc;//[Offset: 0x744, Size: 1]
	Rotator GlobalDeltaRotDeltaSpring;//[Offset: 0x750, Size: 1]
	Rotator GlobalDeltaRotDeltaSpringRoll;//[Offset: 0x75c, Size: 1]
	Vector GlobalDeltaLocDeltaSpringWeaponMesh;//[Offset: 0x768, Size: 1]
	float LeftHandIKSpringAlpha;//[Offset: 0x774, Size: 1]
	Vector Aim1pWeaponMeshPosition;//[Offset: 0x778, Size: 1]
	Vector Aim1pWeaponMeshRescale;//[Offset: 0x784, Size: 1]
	Vector StandLeanLeftRootOffset;//[Offset: 0x790, Size: 1]
	Rotator StandLeanLeftWeaponRotation;//[Offset: 0x79c, Size: 1]
	Rotator StandLeanLeftCameraRotation;//[Offset: 0x7a8, Size: 1]
	Vector StandLeanRightRootOffset;//[Offset: 0x7b4, Size: 1]
	Rotator StandLeanRightWeaponRotation;//[Offset: 0x7c0, Size: 1]
	Rotator StandLeanRightCameraRotation;//[Offset: 0x7cc, Size: 1]
	Vector CrouchLeanLeftRootOffset;//[Offset: 0x7d8, Size: 1]
	Rotator CrouchLeanLeftWeaponRotation;//[Offset: 0x7e4, Size: 1]
	Rotator CrouchLeanLeftCameraRotation;//[Offset: 0x7f0, Size: 1]
	Vector CrouchLeanRightRootOffset;//[Offset: 0x7fc, Size: 1]
	Rotator CrouchLeanRightWeaponRotation;//[Offset: 0x808, Size: 1]
	Rotator CrouchLeanRightCameraRotation;//[Offset: 0x814, Size: 1]
	Vector ProneLeanLeftRootOffset;//[Offset: 0x820, Size: 1]
	Rotator ProneLeanLeftWeaponRotation;//[Offset: 0x82c, Size: 1]
	Rotator ProneLeanLeftCameraRotation;//[Offset: 0x838, Size: 1]
	Vector ProneLeanRightRootOffset;//[Offset: 0x844, Size: 1]
	Rotator ProneLeanRightWeaponRotation;//[Offset: 0x850, Size: 1]
	Rotator ProneLeanRightCameraRotation;//[Offset: 0x85c, Size: 1]
	float FP_HasSway;//[Offset: 0x868, Size: 1]
	float FP_JumpStartLoopAlpha;//[Offset: 0x86c, Size: 1]
	float FP_JumpEndBobbingBlendAlpha;//[Offset: 0x870, Size: 1]
	float FP_JumpEndBobbingAdditiveAlpha;//[Offset: 0x874, Size: 1]
	float FP_JumpEndCameraRootMotionAlphaBlend;//[Offset: 0x878, Size: 1]
	bool bFP_IsFallingAndNotJumping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x87c, Size: 1]
	float FP_St2P_RootMotionBlendAlpha;//[Offset: 0x880, Size: 1]
	float FP_P2St_RootMotionBlendAlpha;//[Offset: 0x884, Size: 1]
	bool bFP_IsProneAndIsSprintingAndCanSprintToProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x888, Size: 1]
	bool bFP_SwitchedProneAndNotIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x889, Size: 1]
	bool bFP_SwitchedProneAndIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88a, Size: 1]
	Rotator FP_ProneMoveIkWeaponHandRootRotFromGroundAngle;//[Offset: 0x88c, Size: 1]
	Rotator FP_ProneMoveIkWeaponHandRootRotFromActorPitch;//[Offset: 0x898, Size: 1]
	bool bFP_ProneMoveWeaponAligningConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8a4, Size: 1]
	Rotator FP_ProneMoveIkWeaponRightClavicleRot;//[Offset: 0x8a8, Size: 1]
	float FP_ProneMoveBobPlayRate;//[Offset: 0x8b4, Size: 1]
	bool bFP_SpeedHigherThanZeroAndNotIsProneTransition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8b8, Size: 1]
	bool bFP_SpeedHigherThanZero;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8b9, Size: 1]
	bool bFP_HvdXorClAndClOrHvdXorVaAndVaOrBipod;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8ba, Size: 1]
	bool bFP_ClimbAnimNotEqual1;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8bb, Size: 1]
	bool bFP_ClimbAndClimbAnim1;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8bc, Size: 1]
	Rotator FP_ClimbAndClimbAnim1_AimRotator;//[Offset: 0x8c0, Size: 1]
	bool bFP_1pLeftHandIkConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8cc, Size: 1]
	float FP_1pLeftHandIKConditionsAlpha;//[Offset: 0x8d0, Size: 1]
	float FP_IsUsingItemAlpha;//[Offset: 0x8d4, Size: 1]
	float FP_IsProneAlpha;//[Offset: 0x8d8, Size: 1]
	bool bFP_T_ProneStatesProneMoveToOutProneMove;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8dc, Size: 1]
	bool bFP_T_Jump1pJumpStartToJumpEnd;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8dd, Size: 1]
	bool bFP_T_ToADS_Hipfire;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8de, Size: 1]
	bool bCachedIsPullingTriggerAndMagazineHasAmmo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8df, Size: 1]
	float ToADS_Hipfire_RemainingTIme;//[Offset: 0x8e0, Size: 1]
	float Steady1pHipFireDuration;//[Offset: 0x8e4, Size: 1]
	bool bFP_T_StandToADS_Grenade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8e8, Size: 1]
	bool bFP_T_WeaponBobbing1P_ADSToStand;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8e9, Size: 1]
	bool bFP_T_WeaponBobbing1P_ADSToProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8ea, Size: 1]
	bool bFP_T_WeaponBobbing1P_ProneToADS;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8eb, Size: 1]
	float FP_CustomIsCrouchedAlpha;//[Offset: 0x8ec, Size: 1]
	float FP_HasAdjustableSightAlphaTimesIsAdsAlpha;//[Offset: 0x8f0, Size: 1]
	bool bProneMoveBobbing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8f4, Size: 1]
	bool bLeftHandIkOut1P;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8f5, Size: 1]
	bool bSwitchedProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8f6, Size: 1]
	bool bLastProneStance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8f7, Size: 1]
	float MoveDeviationFactor;//[Offset: 0x8f8, Size: 1]
	float ShotDeviationFactor;//[Offset: 0x8fc, Size: 1]
	Vector4 FinalDeviation;//[Offset: 0x900, Size: 1]
	Vector2D DeviationVisuFbZY;//[Offset: 0x910, Size: 1]
	Rotator AddRotGoingShot;//[Offset: 0x918, Size: 1]
	float RecoilReleaseInterpSpeed;//[Offset: 0x924, Size: 1]
	float RecoilWeaponLimit;//[Offset: 0x928, Size: 1]
	float MoveRecoilFactor;//[Offset: 0x92c, Size: 1]
	float RecoilCanRelease;//[Offset: 0x930, Size: 1]
	Vector FinalRecoilSigma;//[Offset: 0x934, Size: 1]
	Vector FinalRecoilMean;//[Offset: 0x940, Size: 1]
	float MoveSwayFactor;//[Offset: 0x94c, Size: 1]
	float CustomSwayMin;//[Offset: 0x950, Size: 1]
	Vector2D SwayZY;//[Offset: 0x954, Size: 1]
	float StrafeSpringFactor;//[Offset: 0x95c, Size: 1]
	Rotator LastKnownRot1;//[Offset: 0x960, Size: 1]
	Vector CtrlRotVectorDeltaSpring;//[Offset: 0x96c, Size: 1]
	Rotator LastKnownRot2;//[Offset: 0x978, Size: 1]
	float CtrlRotDeltaSpringLerpAlpha;//[Offset: 0x984, Size: 1]
	float WeaponSpringTurnSpeedToFullIntensity;//[Offset: 0x988, Size: 1]
	Rotator StrafeSpringRotator;//[Offset: 0x98c, Size: 1]
	Vector StrafeSpringVector;//[Offset: 0x998, Size: 1]
	Rotator AdsStrafeSpringRotator;//[Offset: 0x9a4, Size: 1]
	float CustomNotIsAds;//[Offset: 0x9b0, Size: 1]
	class CameraShakeBase* FireShake;//[Offset: 0x9b8, Size: 1]
	int WeaponSpringSide;//[Offset: 0x9c0, Size: 1]
	float WeaponSpringStiffness;//[Offset: 0x9c4, Size: 1]
	float WeaponSpringCriticalDampingFactor;//[Offset: 0x9c8, Size: 1]
	float WeaponSpringMass;//[Offset: 0x9cc, Size: 1]
	float WeaponSpringFactor;//[Offset: 0x9d0, Size: 1]
	float WeaponMeshSpringLocDelayFactor;//[Offset: 0x9d4, Size: 1]
	float WeaponSpringClamp;//[Offset: 0x9d8, Size: 1]
	float WeaponMeshSpringRotDelayFactor;//[Offset: 0x9dc, Size: 1]
	float AddMoveDeviation;//[Offset: 0x9e0, Size: 1]
	float MoveDeviationFactorRelease;//[Offset: 0x9e4, Size: 1]
	float MaxMoveDeviationFactor;//[Offset: 0x9e8, Size: 1]
	float MinMoveDeviationFactor;//[Offset: 0x9ec, Size: 1]
	float FullStaminaDeviationFactor;//[Offset: 0x9f0, Size: 1]
	float LowStaminaDeviationFactor;//[Offset: 0x9f4, Size: 1]
	float AddShotDeviationFactor;//[Offset: 0x9f8, Size: 1]
	float AddShotDeviationFactorAds;//[Offset: 0x9fc, Size: 1]
	float ShotDeviationFactorRelease;//[Offset: 0xa00, Size: 1]
	float MinShotDeviationFactor;//[Offset: 0xa04, Size: 1]
	float MaxShotDeviationFactor;//[Offset: 0xa08, Size: 1]
	float DeviationVisuFbInterpSpeed_YZ;//[Offset: 0xa0c, Size: 1]
	float DeviationVisuFbMax;//[Offset: 0xa10, Size: 1]
	float DeviationVisuFbInterpSpeed_Final;//[Offset: 0xa14, Size: 1]
	float MinBipodAdsDeviation;//[Offset: 0xa18, Size: 1]
	float MinBipodDeviation;//[Offset: 0xa1c, Size: 1]
	float MinProneAdsDeviation;//[Offset: 0xa20, Size: 1]
	float MinProneDeviation;//[Offset: 0xa24, Size: 1]
	float MinCrouchAdsDeviation;//[Offset: 0xa28, Size: 1]
	float MinCrouchDeviation;//[Offset: 0xa2c, Size: 1]
	float MinStandAdsDeviation;//[Offset: 0xa30, Size: 1]
	float MinStandDeviation;//[Offset: 0xa34, Size: 1]
	float MinProneTransitionDeviation;//[Offset: 0xa38, Size: 1]
	float MaxMoveRecoilFactor;//[Offset: 0xa3c, Size: 1]
	float AddMoveRecoil;//[Offset: 0xa40, Size: 1]
	float MinMoveRecoilFactor;//[Offset: 0xa44, Size: 1]
	float MoveRecoilFactorRelease;//[Offset: 0xa48, Size: 1]
	float FullStaminaRecoilFactor;//[Offset: 0xa4c, Size: 1]
	float LowStaminaRecoilFactor;//[Offset: 0xa50, Size: 1]
	float RecoilCameraOffsetFactor;//[Offset: 0xa54, Size: 1]
	float RecoilLofCameraOffsetLimit;//[Offset: 0xa58, Size: 1]
	float RecoilLofAttackInterpSpeed;//[Offset: 0xa5c, Size: 1]
	float RecoilCanReleaseInterpSpeed;//[Offset: 0xa60, Size: 1]
	float RecoilCameraOffsetInterpSpeed;//[Offset: 0xa64, Size: 1]
	float RecoilLofReleaseInterpSpeed;//[Offset: 0xa68, Size: 1]
	float WeapRecoilRelLocFactor;//[Offset: 0xa6c, Size: 1]
	float RecoilCameraShotInterpSpeed;//[Offset: 0xa70, Size: 1]
	float RecoilAdsCameraShotInterpSpeed;//[Offset: 0xa74, Size: 1]
	Vector ProneAdsRecoilMean;//[Offset: 0xa78, Size: 1]
	Vector ProneAdsRecoilSigma;//[Offset: 0xa84, Size: 1]
	Vector ProneRecoilMean;//[Offset: 0xa90, Size: 1]
	Vector ProneRecoilSigma;//[Offset: 0xa9c, Size: 1]
	Vector CrouchAdsRecoilMean;//[Offset: 0xaa8, Size: 1]
	Vector CrouchAdsRecoilSigma;//[Offset: 0xab4, Size: 1]
	Vector CrouchRecoilMean;//[Offset: 0xac0, Size: 1]
	Vector CrouchRecoilSigma;//[Offset: 0xacc, Size: 1]
	Vector StandAdsRecoilMean;//[Offset: 0xad8, Size: 1]
	Vector StandAdsRecoilSigma;//[Offset: 0xae4, Size: 1]
	Vector StandRecoilMean;//[Offset: 0xaf0, Size: 1]
	Vector StandRecoilSigma;//[Offset: 0xafc, Size: 1]
	Vector ProneTransitionRecoilMean;//[Offset: 0xb08, Size: 1]
	Vector ProneTransitionRecoilSigma;//[Offset: 0xb14, Size: 1]
	Vector BipodAdsRecoilMean;//[Offset: 0xb20, Size: 1]
	Vector BipodAdsRecoilSigma;//[Offset: 0xb2c, Size: 1]
	Vector BipodRecoilMean;//[Offset: 0xb38, Size: 1]
	Vector BipodRecoilSigma;//[Offset: 0xb44, Size: 1]
	float FullStaminaSwayFactor;//[Offset: 0xb50, Size: 1]
	float LowStaminaSwayFactor;//[Offset: 0xb54, Size: 1]
	float AddMoveSway;//[Offset: 0xb58, Size: 1]
	float MaxMoveSwayFactor;//[Offset: 0xb5c, Size: 1]
	float MinMoveSwayFactor;//[Offset: 0xb60, Size: 1]
	float MoveSwayFactorRelease;//[Offset: 0xb64, Size: 1]
	float SwayInterpSpeed_YZ;//[Offset: 0xb68, Size: 1]
	float SwayInterpSpeed_Final;//[Offset: 0xb6c, Size: 1]
	float ProneAdsSwayMin;//[Offset: 0xb70, Size: 1]
	float ProneSwayMin;//[Offset: 0xb74, Size: 1]
	float CrouchAdsSwayMin;//[Offset: 0xb78, Size: 1]
	float CrouchSwayMin;//[Offset: 0xb7c, Size: 1]
	float StandAdsSwayMin;//[Offset: 0xb80, Size: 1]
	float StandSwayMin;//[Offset: 0xb84, Size: 1]
	float ProneTransitionSwayMin;//[Offset: 0xb88, Size: 1]
	float HoldingBreathSwayFactor;//[Offset: 0xb8c, Size: 1]
	float CustomSpeed;//[Offset: 0xb90, Size: 1]
	class SQSuppressionInfo* LastSuppressionInfoClass;//[Offset: 0xb98, Size: 1]
	Rotator SmoothFinalLofSuppressRotation;//[Offset: 0xbdc, Size: 1]
	float LofSuppressRotationAlpha;//[Offset: 0xbec, Size: 1]
	bool bWasCrouchedBeforeProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc00, Size: 1]
	Vector CustomCurrentFloorNormal1;//[Offset: 0xc04, Size: 1]
	float FP_SprintBlendAlpha;//[Offset: 0xc10, Size: 1]
	bool bIsSprint1pLoopSection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc14, Size: 1]
	AnimSequence* SprintStaticPose;//[Offset: 0xc18, Size: 1]
	AnimMontage* BobbingMove1pMontage;//[Offset: 0xc40, Size: 1]
	AnimMontage* BobbingSprint1pMontage;//[Offset: 0xc48, Size: 1]
	void UpdateWasCrouchedBeforeProne();// 0xd3fd20
	void UpdateTurnSpring();// 0xd3fc00
	void UpdateSwitchedProne();// 0xd3fbe0
	void UpdateSway();// 0xd3fbc0
	void UpdateStrafeSpring();// 0xd3fba0
	void UpdateSprintSpeedBlend();// 0xd3fa70
	void UpdateRecoilAndFire();// 0xd3fa50
	void UpdatePitch();// 0xd3fa30
	void UpdateLofSuppression(const float DeltaSeconds);// 0xd3f9b0
	void UpdateIsFallingPlayRate(const float DeltaSeconds);// 0xd3f910
	void UpdateFastPath();// 0xd3f860
	void UpdateDeviationVisuFb();// 0xd3f820
	void UpdateDeviation();// 0xd3f800
	void UpdateBobbingsPlayrate(const float DeltaSeconds);// 0xd3f760
	void UpdateAccuracyParameters();// 0xd3f740
	void Update1pCurrentFloor();// 0xd3f720
	void LineOfFire();// 0xd3edd0

--------------------------------
Class: SQAnimInstanceSoldier.SQAnimInstance.AnimInstance.Object
	bool bDrawDebugSpheres;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	bool bIsSoldierAlive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d9, Size: 1]
	bool bIsSoldierRagdolled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2da, Size: 1]
	Vector LeftHandIKLocation;//[Offset: 0x2dc, Size: 1]
	Rotator LeftHandIKRotation;//[Offset: 0x2e8, Size: 1]
	float LeftHandIKAlpha;//[Offset: 0x2f4, Size: 1]
	Vector RightHandIKLocation;//[Offset: 0x2f8, Size: 1]
	Rotator RightHandIKRotation;//[Offset: 0x304, Size: 1]
	float RightHandIKAlpha;//[Offset: 0x310, Size: 1]
	bool bIsDragging;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x314, Size: 1]
	Rotator DraggingLeftArmRotation;//[Offset: 0x318, Size: 1]
	float YawDeltaRaw;//[Offset: 0x324, Size: 1]
	Rotator AddRotShot;//[Offset: 0x328, Size: 1]
	Rotator AddRotCameraShot;//[Offset: 0x334, Size: 1]
	Rotator AddAdsRotCameraShot;//[Offset: 0x340, Size: 1]
	bool bLeanConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x34c, Size: 1]
	float BipodLength;//[Offset: 0x350, Size: 1]
	Vector BipodHeight;//[Offset: 0x354, Size: 1]
	bool bAutoLowered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x360, Size: 1]
	Rotator OffsetLineOfFire;//[Offset: 0x364, Size: 1]
	float LastVelocityWhenIsInAir;//[Offset: 0x370, Size: 1]
	float LeftHandWeaponIkAlpha;//[Offset: 0x374, Size: 1]
	float RightHand3pWeaponIkAlpha;//[Offset: 0x378, Size: 1]
	float AdjustAdsSightItemAnimPos;//[Offset: 0x37c, Size: 1]
	bool bVelocityProneTransAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x380, Size: 1]
	float Direction;//[Offset: 0x384, Size: 1]
	bool bCanSprintToProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x388, Size: 1]
	<FName,SQEmoteProp*> EmoteProps;//[Offset: 0x390, Size: 1]
	bool bIsCrouched;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e0, Size: 1]
	bool bIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e1, Size: 1]
	bool bIsJumping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e2, Size: 1]
	bool bIsFalling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e3, Size: 1]
	float Speed;//[Offset: 0x3e4, Size: 1]
	Vector Velocity;//[Offset: 0x3e8, Size: 1]
	float PitchDeltaRaw;//[Offset: 0x3f4, Size: 1]
	bool bFirstPersonVisibility;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3f8, Size: 1]
	Vector ClimbWeaponSocketLoc;//[Offset: 0x3fc, Size: 1]
	Rotator ClimbWeaponSocketRot;//[Offset: 0x408, Size: 1]
	Rotator VaultClimbAo;//[Offset: 0x414, Size: 1]
	Rotator FreeLookRot;//[Offset: 0x420, Size: 1]
	bool bSprintToProneTransAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x42c, Size: 1]
	bool bLeanRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x42d, Size: 1]
	bool bLeanLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x42e, Size: 1]
	byte LeaningDirection;//[Offset: 0x42f, Size: 1]
	bool bBipodIsDeployed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x430, Size: 1]
	float BipodTransitionAlpha;//[Offset: 0x434, Size: 1]
	bool bShot;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x438, Size: 1]
	float SprintSpeedMultiplier;//[Offset: 0x43c, Size: 1]
	float MaxWalkSpeedCrouched;//[Offset: 0x440, Size: 1]
	float MaxWalkSpeedProne;//[Offset: 0x444, Size: 1]
	float MaxWalkSpeed;//[Offset: 0x448, Size: 1]
	bool bIsInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x44c, Size: 1]
	float VehiclePitch;//[Offset: 0x450, Size: 1]
	float VehicleYaw;//[Offset: 0x454, Size: 1]
	AnimSequence* VehicleBaseAnim;//[Offset: 0x458, Size: 1]
	BlendSpace* VehicleAimOffsets;//[Offset: 0x460, Size: 1]
	bool bUseWheelBlendSpace1D;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x468, Size: 1]
	BlendSpace1D* VehicleWheelBlendSpace1D;//[Offset: 0x470, Size: 1]
	float VehicleWheel;//[Offset: 0x478, Size: 1]
	float CustomVehicleWheel1;//[Offset: 0x47c, Size: 1]
	float InterpSpeed;//[Offset: 0x480, Size: 1]
	float CustomSteeringWheelAnimExplTime;//[Offset: 0x484, Size: 1]
	bool bHandIKAlphaEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x488, Size: 1]
	float SteeringWheelAnimExplTime;//[Offset: 0x48c, Size: 1]
	float RightHandAlpha;//[Offset: 0x490, Size: 1]
	float LeftHandAlpha;//[Offset: 0x494, Size: 1]
	float LastVehicleWheelAbs;//[Offset: 0x498, Size: 1]
	float VehicleWheelAbsRate;//[Offset: 0x49c, Size: 1]
	AnimSequence* SteeringWheelSingleFrameAnimSequence;//[Offset: 0x4a0, Size: 1]
	float Time;//[Offset: 0x4a8, Size: 1]
	bool bFP_T_LeanLeftAndLeanConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ac, Size: 1]
	bool bFP_T_NotLeanLeftOrNotLeanConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ad, Size: 1]
	bool bFP_T_LeanRightAndLeanConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ae, Size: 1]
	bool bFP_T_NotLeanRightOrNotLeanConditions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4af, Size: 1]
	bool bIsPullingTriggerAndMagazineHasAmmo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b0, Size: 1]
	void UpdateVehicleAim(const float DeltaSeconds);// 0xd3fca0
	void UpdateVehicle(const float DeltaSeconds);// 0xd3fc20
	void UpdateSteeringWheelVariables(const float DeltaSeconds);// 0xd3fb20
	void UpdateLean();// 0xd3f990
	void UpdateFastPathTransitionVariables(const float DeltaSeconds);// 0xd3f880
	void UpdateDragging();// 0xd3f840
	SQEmoteProp* SpawnEmotePropAttached(FName PropName, class SQEmoteProp PropClass, FName SocketName);// 0xd3f470
	SQEmoteProp* SpawnEmoteProp(FName PropName, class SQEmoteProp PropClass, out const Transform Transform);// 0xd3f310
	void RemoveEmoteProp(const Actor* Prop);// 0xd3f010
	void OnVaultClimbStop();// 0x1d69c50
	SQEmoteProp* GetEmoteProp(FName PropName);// 0xd3ed30
	void CleanupTemporaryEmoteProps();// 0xd3eb70
	void CleanupAllEmoteProps();// 0xd3eb50
	Rotator AlignWithGround(out const Vector FloorNormal);// 0xd3eaa0

--------------------------------
Class: SQAnimInstance.AnimInstance.Object
	int LastBoredMontagePlayedIndex;//[Offset: 0x2b8, Size: 1]
	float BoredTargetTime;//[Offset: 0x2bc, Size: 1]
	bool bIsAds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	bool bIsUsingItemOrIsAdsOrIsClimbing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c1, Size: 1]
	SQItemStaticInfo* CurrentItemStaticInfo;//[Offset: 0x2c8, Size: 1]
	SQSoldier* Soldier;//[Offset: 0x2d0, Size: 1]
	void UpdateStaticItemInfo(SQItemStaticInfo* InfoObject);// 0xd3fa90
	void UpdateBoredMontage();// 0xd3f7e0
	void StopAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage, const float blendOutTime, const bool bStopAllWeaponAnims);// 0xd3f580
	void SetAnimationPlayRateHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage, const float NewPlayRate);// 0xd3f1b0
	void ResumeAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage);// 0xd3f0a0
	void PlayAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage);// 0xd3ef00
	void PauseAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage);// 0xd3edf0
	void EndLoopAnimationHandler(AnimMontage* WeaponMontage, AnimMontage* Soldier1pMontage, AnimMontage* Soldier3pMontage, const SQMontageSectionNames SectionNames);// 0xd3eb90

--------------------------------
Class: SQEmoteProp.Actor.Object
	bool bRemoveOnEmoteEnd;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x228, Size: 1]
	void ToggleVelocityCalculations(bool bEnabled);// 0xd83350
	SQSoldier* GetOwningSoldier();// 0xd82390
	SQFaction* GetOwnerFaction();// 0xd82330
	Vector GetApproximateVelocity();// 0xd82180

--------------------------------
Class: SQSuppressionInfo.Object
	float SuppressSwayFactorRelease;//[Offset: 0x28, Size: 1]
	float AddSuppressSway;//[Offset: 0x2c, Size: 1]
	float MinSuppressSwayFactor;//[Offset: 0x30, Size: 1]
	float MaxSuppressSwayFactor;//[Offset: 0x34, Size: 1]
	float LofSuppressRange;//[Offset: 0x38, Size: 1]
	float LofSuppressInterpSpeed;//[Offset: 0x3c, Size: 1]
	float LofSuppressAlphaFactor;//[Offset: 0x40, Size: 1]
	float LofSuppressRotationAlphaRelease;//[Offset: 0x44, Size: 1]

--------------------------------
Class: SQAnimInstanceSoldier3P.SQAnimInstanceSoldier.SQAnimInstance.AnimInstance.Object
	bool bVaulting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b8, Size: 1]
	bool bClimbing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b9, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpEnd__rifle_stand_jumpendOrIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ba, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4bb, Size: 1]
	bool bAssetPlayerTime__GTEPtOne__Jump_3P__JumpStart__rifle_stand_jumpstart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4bc, Size: 1]
	bool bStateWeight__GTEOne__Stand3P__Jog;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x538, Size: 1]
	float StateWeight__Stand3P__Jog;//[Offset: 0x53c, Size: 1]
	bool bStateWeight__GTEOne__Stand3P__Sprint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x540, Size: 1]
	float StateWeight__Stand3P__Sprint;//[Offset: 0x544, Size: 1]
	float StateWeight__Stand3P__SprintStop;//[Offset: 0x548, Size: 1]
	bool bRelevantAnimTimeRemaining__LTEOne__Stand3P__SprintStop;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x54c, Size: 1]
	bool bStateWeight__GTEOne__Stand_NeutralStates__Neutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c4, Size: 1]
	bool bStateWeight__GTEOne__Stand_NeutralStates__TurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c5, Size: 1]
	bool bStateWeight__GTEOne__Stand_NeutralStates__TurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c6, Size: 1]
	bool bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c7, Size: 1]
	bool bRelevantAnimTimeRemaining__LTEZero__Stand_NeutralStates__TurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c8, Size: 1]
	float StateWeight__Crouch3P__Sprint;//[Offset: 0x65c, Size: 1]
	float StateWeight__Crouch3P__Walk;//[Offset: 0x660, Size: 1]
	bool bStateWeight__GTEOne__Crouch_NeutralStates__Neutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x69e, Size: 1]
	bool bStateWeight__GTEOne__Crouch_NeutralStates__TurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x69f, Size: 1]
	bool bStateWeight__GTEOne__Crouch_NeutralStates__TurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6a0, Size: 1]
	float StateWeight__Prone3P__ProneMove;//[Offset: 0x718, Size: 1]
	bool bStateWeight__GTEOne__Prone_NeutralStates__Neutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x739, Size: 1]
	bool bStateWeight__GTEOne__Prone_NeutralStates__TurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x73a, Size: 1]
	bool bStateWeight__GTEOne__Prone_NeutralStates__TurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x73b, Size: 1]
	bool bStateWeight__GTEOne__SoldierMovements__Stand;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x793, Size: 1]
	bool bStateWeight__GTEOne__SoldierMovements__Crouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x794, Size: 1]
	bool bStateWeight__GTEOne__SoldierMovements__Stand2Crouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x795, Size: 1]
	float StateWeight__SoldierMovements__Stand2Prone;//[Offset: 0x798, Size: 1]
	float StateWeight__SoldierMovements__Sprint2Prone;//[Offset: 0x79c, Size: 1]
	float StateWeight__SoldierMovements__Prone2Stand;//[Offset: 0x7a0, Size: 1]
	float StateWeight__SoldierMovements__Crouch2Prone;//[Offset: 0x7a4, Size: 1]
	float StateWeight__SoldierMovements__Prone2Crouch;//[Offset: 0x7a8, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Stand2Prone__rifle_stand2prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7ac, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtTwo__SoldierMovements__Sprint2Prone__rifle_sprint2prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7ad, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Stand__rifle_prone2stand;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7ae, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Crouch2Prone__rifle_crouch2prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7af, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtFour__SoldierMovements__Prone2Crouch__rifle_prone2crouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b0, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Stand2Crouch__Stand2Crouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b1, Size: 1]
	bool bAssetPlayerTimeFromEnd__LTEPtOne__SoldierMovements__Crouch2Stand__Crouch2Stand;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b2, Size: 1]
	bool bIsSprinting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x995, Size: 1]
	float CustomNotIsFallingAlpha;//[Offset: 0x998, Size: 1]
	BlendSpace1D* BS1D_3pStandSprintType;//[Offset: 0x9a0, Size: 1]
	AnimSequence* SprintStop3p;//[Offset: 0x9a8, Size: 1]
	BlendSpace1D* BS1D_3pCrouchSprintType;//[Offset: 0x9b0, Size: 1]
	BlendSpace* BS_3pStandJogType;//[Offset: 0x9b8, Size: 1]
	BlendSpace* BS_3pStandWalkType;//[Offset: 0x9c0, Size: 1]
	BlendSpace* BS_3pCrouchWalkType;//[Offset: 0x9c8, Size: 1]
	BlendSpace1D* BS1D_3pProneCrawlType;//[Offset: 0x9d0, Size: 1]
	AnimSequence* StandStopMove;//[Offset: 0x9d8, Size: 1]
	AnimSequence* CrouchStopMove;//[Offset: 0x9e0, Size: 1]
	AnimSequence* StandLeanLeftShuffle;//[Offset: 0x9e8, Size: 1]
	AnimSequence* StandLeanRightShuffle;//[Offset: 0x9f0, Size: 1]
	AnimSequence* CrouchLeanLeftShuffle;//[Offset: 0x9f8, Size: 1]
	AnimSequence* CrouchLeanRightShuffle;//[Offset: 0xa00, Size: 1]
	BlendSpace1D* AO1D_StandPitch;//[Offset: 0xa08, Size: 1]
	BlendSpace1D* AO1D_CrouchPitch;//[Offset: 0xa10, Size: 1]
	BlendSpace1D* AO1D_PronePitch;//[Offset: 0xa18, Size: 1]
	BlendSpace* AO_BipodStandCrouchPitch;//[Offset: 0xa20, Size: 1]
	AnimSequence* AO1D_StandYawSF;//[Offset: 0xa28, Size: 1]
	AnimSequence* AO1D_CrouchYawSF;//[Offset: 0xa30, Size: 1]
	AnimSequence* AO1D_ProneYawSF;//[Offset: 0xa38, Size: 1]
	AnimSequence* StandTurnRight;//[Offset: 0xa40, Size: 1]
	AnimSequence* StandTurnLeft;//[Offset: 0xa48, Size: 1]
	AnimSequence* CrouchTurnLeft;//[Offset: 0xa50, Size: 1]
	AnimSequence* CrouchTurnRight;//[Offset: 0xa58, Size: 1]
	AnimSequence* ProneTurnRight;//[Offset: 0xa60, Size: 1]
	AnimSequence* ProneTurnLeft;//[Offset: 0xa68, Size: 1]
	AnimSequence* SprintToProne3p;//[Offset: 0xa70, Size: 1]
	AnimSequence* StandToProne3p;//[Offset: 0xa78, Size: 1]
	AnimSequence* ProneToStand3p;//[Offset: 0xa80, Size: 1]
	AnimSequence* CrouchToProne3p;//[Offset: 0xa88, Size: 1]
	AnimSequence* ProneToCrouch3p;//[Offset: 0xa90, Size: 1]
	Vector FpvLowerRootBoneOffset;//[Offset: 0xa98, Size: 1]
	float CustomSpeedMin40;//[Offset: 0xaa4, Size: 1]
	float ProneStopMoveAlpha;//[Offset: 0xaa8, Size: 1]
	float CrouchStopMoveAlpha;//[Offset: 0xaac, Size: 1]
	bool bFP_HighestClimbAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab0, Size: 1]
	bool bFP_T_Jump_3PJumpStartToJumpEnd;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab1, Size: 1]
	bool bFP_T_Stand3PSprintStopToJog;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab2, Size: 1]
	bool bFP_T_Stand3PSprintToSprintStop;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab3, Size: 1]
	bool bFP_T_Stand3PJogToSprint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab4, Size: 1]
	bool bFP_T_Stand_NeutralStatesTurnRight_90ToTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab5, Size: 1]
	bool bFP_T_Stand_NeutralStatesTurnLeft_90ToTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab6, Size: 1]
	bool bFP_T_Stand_NeutralStatesNeutralToTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab7, Size: 1]
	bool bFP_T_Stand_NeutralStatesNeutralToTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab8, Size: 1]
	bool bFP_T_Crouch_NeutralStatesTurnRight_90ToNeutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xab9, Size: 1]
	bool bFP_T_Crouch_NeutralStatesTurnRight_90ToTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xaba, Size: 1]
	bool bFP_T_Crouch_NeutralStatesTurnLeft_90ToNeutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xabb, Size: 1]
	bool bFP_T_Crouch_NeutralStatesTurnLeft_90ToTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xabc, Size: 1]
	bool bFP_T_Crouch_NeutralStatesNeutralToTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xabd, Size: 1]
	bool bFP_T_Crouch_NeutralStatesNeutralToTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xabe, Size: 1]
	bool bFP_T_Prone_NeutralStatesTurnLeft_45ToNeutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xabf, Size: 1]
	bool bFP_T_Prone_NeutralStatesTurnLeft_45ToTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac0, Size: 1]
	bool bFP_T_Prone_NeutralStatesTurnRight_45ToNeutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac1, Size: 1]
	bool bFP_T_Prone_NeutralStatesTurnRight_45ToTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac2, Size: 1]
	bool bFP_T_Prone_NeutralStatesNeutralToTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac3, Size: 1]
	bool bFP_T_Prone_NeutralStatesNeutralToTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac4, Size: 1]
	bool bFP_T_SoldierMovementsCrouch2StandToStand;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac5, Size: 1]
	bool bFP_T_SoldierMovementsStand2CrouchToCrouch2Prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac6, Size: 1]
	bool bFP_T_SoldierMovementsStand2CrouchToCrouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac7, Size: 1]
	bool bFP_T_SoldierMovementsCrouchToCrouch2Prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac8, Size: 1]
	bool bFP_T_SoldierMovements_StandToCrouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xac9, Size: 1]
	bool bFP_T_SoldierMovementsStandToStand2Prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xaca, Size: 1]
	bool bFP_T_SoldierMovementsStandToStand2Crouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xacb, Size: 1]
	bool bFP_T_SoldierMovementsStandToSprint2Prone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xacc, Size: 1]
	Rotator FP_FloorAlignedRotationRightFoot;//[Offset: 0xad0, Size: 1]
	Rotator FP_FloorAlignedRotationLeftFoot;//[Offset: 0xadc, Size: 1]
	Rotator FP_FloorAlignedRotationFeetRoot;//[Offset: 0xae8, Size: 1]
	Rotator FP_FloorAlignedRotationFeetRootReverse;//[Offset: 0xaf4, Size: 1]
	Vector FP_IKFeetRootTranslation;//[Offset: 0xb00, Size: 1]
	float FP_IsNotFirstPersonVisibilityAlpha;//[Offset: 0xb0c, Size: 1]
	float FP_StandIdleAlpha;//[Offset: 0xb10, Size: 1]
	float FP_CrouchProneIdleAlpha;//[Offset: 0xb14, Size: 1]
	bool bFP_IsStanding;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb18, Size: 1]
	bool bFP_IsStandingStill;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb19, Size: 1]
	bool bFP_CanCrouchToStandingStill;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb1a, Size: 1]
	bool bFP_CanCrouchToStandMoving;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb1b, Size: 1]
	bool bFP_IsCrouchedInPlace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb1c, Size: 1]
	float FP_AimOffsetProneYawFrameTime;//[Offset: 0xb20, Size: 1]
	float FP_AimOffsetYawNegative;//[Offset: 0xb24, Size: 1]
	float FP_AimOffsetProneTurnRightYawFrameTime;//[Offset: 0xb28, Size: 1]
	float FP_AimOffsetTurnRightYawNegative;//[Offset: 0xb2c, Size: 1]
	float FP_AimOffsetProneTurnLeftYawFrameTime;//[Offset: 0xb30, Size: 1]
	float FP_AimOffsetTurnLeftYawNegative;//[Offset: 0xb34, Size: 1]
	float FP_ProneWalkPlayRate;//[Offset: 0xb38, Size: 1]
	bool bFP_IsMoving;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb3c, Size: 1]
	bool bFP_IsNotMoving;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb3d, Size: 1]
	Rotator FP_FloorAlignedRotationBody;//[Offset: 0xb40, Size: 1]
	Rotator FP_FloorAlignedRotationBodyReverse;//[Offset: 0xb4c, Size: 1]
	float FP_CustomSpeedMin40NormalizedToRange;//[Offset: 0xb58, Size: 1]
	bool bFP_IsProneAndNotDeployBipod;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb5c, Size: 1]
	bool bFP_IsClimbingOrVaulting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb5d, Size: 1]
	Rotator FP_FreeLook3PHeadRotation;//[Offset: 0xb60, Size: 1]
	float FP_BipodCrouchStanceAlpha;//[Offset: 0xb6c, Size: 1]
	float FP_BipodStandCrouchAimPitchAlpha;//[Offset: 0xb70, Size: 1]
	float FP_BipodProneStanceAlpha;//[Offset: 0xb78, Size: 1]
	float FP_BipodAimOffsetAlpha;//[Offset: 0xb7c, Size: 1]
	float FP_BipodWeaponPosCoveredPoseAlphaDependingOnSkelMeshOffset;//[Offset: 0xb80, Size: 1]
	float FP_BipodCoveredPoseBlendAlpha;//[Offset: 0xb84, Size: 1]
	Vector FP_BipodHighPitchCoveredPoseWeaponPositionOffset;//[Offset: 0xb88, Size: 1]
	Vector FP_BipodDynamicBodyOffset;//[Offset: 0xb94, Size: 1]
	float FP_AimOffsetCrouchYawFrameTime;//[Offset: 0xba0, Size: 1]
	float FP_AimOffsetTurnLeftYawPlayRate;//[Offset: 0xba4, Size: 1]
	float FP_AimOffsetTurnLeftProneYawPlayRate;//[Offset: 0xba8, Size: 1]
	float FP_AimOffsetTurnLeftYawFrameTime;//[Offset: 0xbac, Size: 1]
	float FP_AimOffsetTurnRightYawPlayRate;//[Offset: 0xbb0, Size: 1]
	float FP_AimOffsetTurnRightProneYawPlayRate;//[Offset: 0xbb4, Size: 1]
	float FP_AimOffsetTurnRightYawFrameTime;//[Offset: 0xbb8, Size: 1]
	float FP_StandStopMoveAlpha;//[Offset: 0xbbc, Size: 1]
	float FP_AimYawFrameTime2;//[Offset: 0xbc0, Size: 1]
	float FP_CrouchWalkPlayRate;//[Offset: 0xbc4, Size: 1]
	float FP_AimYawJogFrameTime;//[Offset: 0xbc8, Size: 1]
	float FP_AimPitchJogAlpha;//[Offset: 0xbcc, Size: 1]
	float FP_JogPlayRate;//[Offset: 0xbd0, Size: 1]
	float FP_SprintStopAlpha;//[Offset: 0xbd4, Size: 1]
	bool bFP_Stand3PNeutralToJogRule;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbd8, Size: 1]
	bool bFP_Stand3PJogToNeutralRule;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbd9, Size: 1]
	bool bFP_Stand3PSprintToNeutralRule;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbda, Size: 1]
	float FP_AimOffsetStandYawFrameTime;//[Offset: 0xbdc, Size: 1]
	float FP_JumpEndAlpha;//[Offset: 0xbe0, Size: 1]
	bool bFP_IsFallingAndNotJumping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbe4, Size: 1]
	float FP_Final3PLeftHandIKOutAlpha;//[Offset: 0xbe8, Size: 1]
	bool bFP_AOStandToConduit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbec, Size: 1]
	bool bFP_AOStandSprintJog;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbed, Size: 1]
	bool bFP_AOCrouchToConduit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbee, Size: 1]
	bool bFP_AOProneToConduit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbef, Size: 1]
	bool bFP_AOConduitToCrouch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbf0, Size: 1]
	float FP_BS_StandSprintSpeed;//[Offset: 0xbf4, Size: 1]
	Rotator FP_SprintHeadDirection;//[Offset: 0xbf8, Size: 1]
	float FP_SprintRootDirection;//[Offset: 0xc04, Size: 1]
	float FP_BS_CrouchSprintSpeed;//[Offset: 0xc08, Size: 1]
	bool bFP_LeanHeadWhenADSAndADS;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc0c, Size: 1]
	bool bFinal3pLeftHandIkOut;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc0d, Size: 1]
	float CustomWeapActionsAndIsAds;//[Offset: 0xc10, Size: 1]
	float FP_WalkPlayRate;//[Offset: 0xc14, Size: 1]
	float FP_IsNotMovingAlpha;//[Offset: 0xc18, Size: 1]
	float FP_LeanYawOffsetFrameTime;//[Offset: 0xc1c, Size: 1]
	float FP_AlphaAbsIkFeetRootPitch;//[Offset: 0xc20, Size: 1]
	Rotator RawActorRotation;//[Offset: 0xc24, Size: 1]
	Rotator SmoothedControlRotation;//[Offset: 0xc30, Size: 1]
	bool bTurnNeutAoDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc3c, Size: 1]
	Rotator CachedActorYaw;//[Offset: 0xc40, Size: 1]
	bool bLeftHandIkOut;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc4c, Size: 1]
	bool bJumpEndBobbing3P;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc4d, Size: 1]
	float CustomIsSprinting;//[Offset: 0xc50, Size: 1]
	float CustomIsAdsOrBipod;//[Offset: 0xc54, Size: 1]
	Vector SmoothVelocity;//[Offset: 0xc58, Size: 1]
	float AccelRateClamp;//[Offset: 0xc64, Size: 1]
	Rotator SmoothWorldDirection;//[Offset: 0xc68, Size: 1]
	Rotator AimRotation_3P;//[Offset: 0xc74, Size: 1]
	Rotator AimRotation2_3P;//[Offset: 0xc80, Size: 1]
	bool bTurnLeftAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8c, Size: 1]
	bool bFullMoveAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8d, Size: 1]
	bool bTurnRightAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8e, Size: 1]
	bool bTurnLeft;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8f, Size: 1]
	bool bTurnRight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc90, Size: 1]
	bool bTurnLeftProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc91, Size: 1]
	bool bTurnRightProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc92, Size: 1]
	Rotator YawOffset;//[Offset: 0xc94, Size: 1]
	Rotator YawOffsetDuringTurnLeft;//[Offset: 0xca0, Size: 1]
	Rotator YawOffsetDuringTurnRight;//[Offset: 0xcac, Size: 1]
	bool bFullSprintAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcb8, Size: 1]
	float LastSpeed;//[Offset: 0xcbc, Size: 1]
	float SprintStopCachedSpeed;//[Offset: 0xcc0, Size: 1]
	bool bCachedIsProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcc4, Size: 1]
	float StandStopMoveAlpha;//[Offset: 0xcc8, Size: 1]
	bool bCachedIsCrouched;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xccc, Size: 1]
	bool bCachedIsStand;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xccd, Size: 1]
	bool bProneTransAnim;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcce, Size: 1]
	Vector PmCachedCapsuleWorldLoc1;//[Offset: 0xcd0, Size: 1]
	Vector EndSprintToProneCapsuleLoc;//[Offset: 0xcdc, Size: 1]
	float Alpha;//[Offset: 0xce8, Size: 1]
	float LastKnownHeight;//[Offset: 0xcec, Size: 1]
	float HeightVelocity;//[Offset: 0xcf0, Size: 1]
	float LastKnownHeightVelocity;//[Offset: 0xcf4, Size: 1]
	float BipodAimUpLimit3P;//[Offset: 0xcf8, Size: 1]
	float BipodAimDownLimit3P;//[Offset: 0xcfc, Size: 1]
	float CustomNotVaultingAlpha;//[Offset: 0xd00, Size: 1]
	float CustomNotClimbingAlpha;//[Offset: 0xd04, Size: 1]
	Vector CurrentFloorNormalBody;//[Offset: 0xd08, Size: 1]
	Vector CurrentFloorNormalFeet;//[Offset: 0xd14, Size: 1]
	Rotator IkFeetRootRelRot;//[Offset: 0xd20, Size: 1]
	Vector LeftFootFloorNormal;//[Offset: 0xd2c, Size: 1]
	Vector RightFootFloorNormal;//[Offset: 0xd38, Size: 1]
	float CustomIsLoweredAndNotProne;//[Offset: 0xd44, Size: 1]
	Rotator MeshRotationOffset;//[Offset: 0xd48, Size: 1]
	Rotator CachedActorRotationNoLean;//[Offset: 0xd54, Size: 1]
	float CachedLeanYawOffset;//[Offset: 0xd60, Size: 1]
	bool bLeanHeadWhenAds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd68, Size: 1]
	void UpdateTurnChar();// 0xd40840
	void UpdateStopMoveAlpha();// 0xd40820
	void UpdateSprintStopCachedSpeed();// 0xd40800
	void UpdateSmoothVelocity();// 0xd407e0
	void UpdateLeanYawOffset();// 0xd407c0
	void UpdateLandingVel();// 0xd407a0
	void UpdateIkFootOrientation();// 0xd40780
	void UpdateIkFeetRootRelRot();// 0xd40760
	void UpdateFastPathVariables();// 0xd40740
	void UpdateDirection();// 0xd40720
	void UpdateAimRotation();// 0xd40700
	void UpdateAimOffset();// 0xd406e0
	void Update3pCurrentFloor();// 0xd406c0

--------------------------------
Class: SQDeployable.Actor.Object
	enum InitialTeam;//[Offset: 0x238, Size: 1]
	SQForwardBase* OwningFob;//[Offset: 0x240, Size: 1]
	float HalfBuiltTransitionHealth;//[Offset: 0x248, Size: 1]
	float FullyBuiltTransitionHealth;//[Offset: 0x24c, Size: 1]
	int Team;//[Offset: 0x250, Size: 1]
	bool bIsFob;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x254, Size: 1]
	bool bPlaced;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x255, Size: 1]
	BoxComponent* StackingCollisionBox;//[Offset: 0x258, Size: 1]
	BoxComponent* PlacementCollisionBox;//[Offset: 0x260, Size: 1]
	bool bUsePlacementCollisionBox;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	class Actor[] AllowablePlacementIntersectionClasses;//[Offset: 0x270, Size: 1]
	bool bUseLineOfSightTrace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	Vector LineOfSightEndOffset;//[Offset: 0x284, Size: 1]
	float PositivePlacementTraceHeight;//[Offset: 0x290, Size: 1]
	float NegativePlacementTraceHeight;//[Offset: 0x294, Size: 1]
	float PositivePlacementVerticalAllowance;//[Offset: 0x298, Size: 1]
	float NegativePlacementVerticalAllowance;//[Offset: 0x29c, Size: 1]
	float ViewPlacementCapsuleRadius;//[Offset: 0x2a0, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x2a8, Size: 1]
	enum ExplosiveType;//[Offset: 0x2b0, Size: 1]
	SQUsableData UsableData;//[Offset: 0x2b8, Size: 1]
	SceneComponent* Completed;//[Offset: 0x2f8, Size: 1]
	SceneComponent* Unbuilt;//[Offset: 0x300, Size: 1]
	SceneComponent* HalfBuilt;//[Offset: 0x308, Size: 1]
	SphereComponent* SimpleDetectionSphere;//[Offset: 0x310, Size: 1]
	MulticastInlineDelegateProperty OnBuildStateChange;//[Size: 1]
	MulticastInlineDelegateProperty OnDestroyedEvent;//[Size: 1]
	enum BuildState;//[Offset: 0x338, Size: 1]
	SQDeployableChangeStateEffect[] ChangeStateEffects;//[Offset: 0x340, Size: 1]
	SQDeployableStateDamageEffect[] DamageStateEffects;//[Offset: 0x350, Size: 1]
	int Cost;//[Offset: 0x360, Size: 1]
	float MaxHealth;//[Offset: 0x364, Size: 1]
	float InitialHealth;//[Offset: 0x368, Size: 1]
	float Health;//[Offset: 0x36c, Size: 1]
	bool bCanUnbuild;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x370, Size: 1]
	SQDamageModifier[] AllowableDamageTypes;//[Offset: 0x378, Size: 1]
	enum Size;//[Offset: 0x388, Size: 1]
	bool bIngoreNoResist;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x389, Size: 1]
	bool bStartUnbuilt;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38a, Size: 1]
	bool bTrackInFOB;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38b, Size: 1]
	bool bTrackInPlayerState;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38c, Size: 1]
	byte[] ObjectTypesToStack;//[Offset: 0x390, Size: 1]
	bool bAllowStacking;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a0, Size: 1]
	bool bAllowPlacementOnPawns;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a1, Size: 1]
	bool bAllowPlacementOnSoldiers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a2, Size: 1]
	bool bAllowPlacementOnVehicles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a3, Size: 1]
	bool bAllowPlacementInWaterBodies;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a4, Size: 1]
	bool bAttachToUnderlyingActor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a5, Size: 1]
	bool bDestroyWhenAttachedActorIsDestroyed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a6, Size: 1]
	float MaxWaterDepthPlacement;//[Offset: 0x3a8, Size: 1]
	enum bCachedPlacementResult;//[Offset: 0x3ac, Size: 1]
	bool bAlignToGround;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3ad, Size: 1]
	float ValidPitchRange;//[Offset: 0x3b0, Size: 1]
	float MaxCornerDifference;//[Offset: 0x3b4, Size: 1]
	bool bRequiresSameTeam;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b8, Size: 1]
	bool bCantBePlacedInFOB;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b9, Size: 1]
	bool bUseComplexTraceForPlacement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3ba, Size: 1]
	Vector GhostOffset;//[Offset: 0x3bc, Size: 1]
	enum GhostBuildState;//[Offset: 0x3c8, Size: 1]
	MaterialInterface* GhostMaterial;//[Offset: 0x3d0, Size: 1]
	bool bIsGhost;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3d8, Size: 1]
	float GhostRotationSpeed;//[Offset: 0x3dc, Size: 1]
	float GhostRotationDelta;//[Offset: 0x3e0, Size: 1]
	bool bAllowFireWeaponOverrideOnSQPlayerController;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e4, Size: 1]
	bool bAllowAltFireWeaponOverrideOnSQPlayerController;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e5, Size: 1]
	bool bRequiresFOB;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e6, Size: 1]
	MaterialInstanceDynamic* DynGhostInstance;//[Offset: 0x3e8, Size: 1]
	SQDeployableSettings* Setting;//[Offset: 0x400, Size: 1]
	DataTableRowHandle CachedInvalidPlacementReason;//[Offset: 0x408, Size: 1]
	DataTable* ErrorTable;//[Offset: 0x418, Size: 1]
	bool WasEverBuilt;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x420, Size: 1]
	void UpdateState();// 0xd799d0
	void SetTeam(int Team);// 0xd79940
	void SetStateUnbuilt();// 0xd79920
	void SetStateHalfBuilt();// 0xd79900
	void SetStateCompleted();// 0xd798e0
	void RemovedFromPlayersPlacedList();// 0xd797c0
	void PushSoldiersOutOfBounds();// 0xd794b0
	float PreModifyHealth(const float DeltaHealth, Controller* inst, const bool bCausedByDamage);// 0xd79390
	void PostModifyHealth(const float DeltaHealth, Controller* inst, const bool bCausedByDamage);// 0xd79280
	void PlayStateChangeEffects(enum OldBuildState);// 0xd79200
	void Placed();// 0xd791e0
	void OnStateChangeClient(enum OldBuildState);// 0xd79160
	void OnRep_Team();// 0xd79140
	void OnRep_BuildState(enum OldBuildState);// 0xd790c0
	void OnAttachedActorDestroyed(Actor* DestroyedActor);// 0xd78f90
	void MulticastPlayDamageEffects(class DamageType DamageTypeClass, const Vector ImpactLocationZeroBased, enum OldBuildState, enum NewBuildState);// 0xd78e40
	void MakeGhost();// 0xd78e20
	bool IsValidPlacement(out enum Reason);// 0xd78d80
	bool IsGhost();// 0xd78d50
	bool IsDeployableEmpty();// 0xd78d20
	void InvalidatePlacement();// 0xd78d00
	void GoToBuildState(enum InBuildState);// 0xd78c80
	enum GetTrackDeployableResult(SQPlayerState* PlayerState, bool bIncludeSelf);// 0xd78ba0
	SQForwardBase* GetNearestFOB(bool bIsFriendly);// 0xd78b00
	FText GetFailedSpawnReasonText(enum Reason);// 0xd78a10
	enum GetBuildState();// 0xd789b0
	void Die(float KillingDamage, out const DamageEvent DamageEvent, Controller* Killer, Actor* DamageCauser);// 0xd78830
	void ConstructionHit(SQSoldier* Activator, Controller* inst, float Amount);// 0xd78720
	void CompletedConstruction();// 0xd78700
	void BPOnGhostMade();// 0x1d69c50
	void BPOnDie(float KillingDamage, out const DamageEvent DamageEvent, Controller* Killer, Actor* DamageCauser);// 0x1d69c50
	void BP_OnStateChangeClient(enum OldBuildState);// 0x1d69c50
	void BP_OnStateChange(enum OldBuildState);// 0x1d69c50
	enum BP_ExtraTrackDeployableRules(SQPlayerState* PlayerState, bool bIncludeSelf);// 0xd78620
	void AttachToUnderlyingActor();// 0xd78600

--------------------------------
Class: SQForwardBase.SQDeployable.Actor.Object
	bool bIsSpawningEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x430, Size: 1]
	float TimeToEnableSpawning;//[Offset: 0x434, Size: 1]
	bool bCreatesFobSpawnPoints;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x438, Size: 1]
	bool bSuppliesCreateSpawnPoints;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x439, Size: 1]
	float SpawnPointRadius;//[Offset: 0x43c, Size: 1]
	Vector SpawnOffset;//[Offset: 0x440, Size: 1]
	int EnemiesToCapture;//[Offset: 0x44c, Size: 1]
	FString Name;//[Offset: 0x450, Size: 1]
	bool UseCaptureTick;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x460, Size: 1]
	SQDeployable*[] TrackedDeployables;//[Offset: 0x468, Size: 1]
	MulticastInlineDelegateProperty OnFOBStateUpdated;//[Size: 1]
	SQGameSpawn*[] SpawnPoints;//[Offset: 0x488, Size: 1]
	class SQGameSpawn* SpawnPointClass;//[Offset: 0x498, Size: 1]
	bool bSieged;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4a0, Size: 1]
	float ActivatedTime;//[Offset: 0x4a4, Size: 1]
	int NumberOfTeammatesNeededToDeploy;//[Offset: 0x4a8, Size: 1]
	int NumberOfLogisNeededToDeploy;//[Offset: 0x4ac, Size: 1]
	float PercentToDisableSpawns;//[Offset: 0x4b0, Size: 1]
	SphereComponent* CaptureZone;//[Offset: 0x4b8, Size: 1]
	SphereComponent* DeploymentRadius;//[Offset: 0x4c0, Size: 1]
	SphereComponent* ConstructionRadius;//[Offset: 0x4c8, Size: 1]
	bool bUseResourceTickRateToUpdateResources;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4d0, Size: 1]
	float MaxTicketsPerSecond;//[Offset: 0x4d4, Size: 1]
	float TicketsPerPlayer;//[Offset: 0x4d8, Size: 1]
	int TicketsLostWhenOverrun;//[Offset: 0x4dc, Size: 1]
	int EnemiesToDisableSpawn;//[Offset: 0x4e0, Size: 1]
	float InitialConstructionPoints;//[Offset: 0x4e4, Size: 1]
	float MaxConstructionPoints;//[Offset: 0x4e8, Size: 1]
	float InitialAmmo;//[Offset: 0x4ec, Size: 1]
	float MaxAmmo;//[Offset: 0x4f0, Size: 1]
	float CPPerSecond;//[Offset: 0x4f4, Size: 1]
	float AmmoPerSecond;//[Offset: 0x4f8, Size: 1]
	float ResourceGenerationRate;//[Offset: 0x4fc, Size: 1]
	float CaptureTickRate;//[Offset: 0x500, Size: 1]
	float Ammo;//[Offset: 0x504, Size: 1]
	float ConstructionPoints;//[Offset: 0x508, Size: 1]
	int NearbyEnemies;//[Offset: 0x50c, Size: 1]
	int SiegedSpawnPoints;//[Offset: 0x510, Size: 1]
	SQForwardBaseSettings* FOBSettings;//[Offset: 0x540, Size: 1]
	bool bIsBleeding;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x548, Size: 1]
	float EnterBleedingHealth;//[Offset: 0x54c, Size: 1]
	float ExitBleedingHealth;//[Offset: 0x550, Size: 1]
	float BleedOutTime;//[Offset: 0x554, Size: 1]
	float EstimatedWorldTimeOfDeath;//[Offset: 0x558, Size: 1]
	Controller* BleedStateInstigator;//[Offset: 0x568, Size: 1]
	Actor* BleedStateCauser;//[Offset: 0x570, Size: 1]
	void TrackDeployable(SQDeployable* Deployable);// 0xd89420
	void SetSpawnPointsEnabled(bool bEnabled);// 0xd89370
	void SetSieged(bool bValue);// 0xd892e0
	void SetConstructionPoints(float NewConstructionPoints);// 0xd89260
	void SetBleedState(bool bNewIsBleeding);// 0xd891d0
	void SetAmmo(float NewAmmo);// 0xd89150
	void SetActivateDelay(float DelaySeconds);// 0xd890d0
	void Overrun(bool bFriendly);// 0xd89020
	void OnTrackedDeployableDestroyed(SQDeployable* Deployable);// 0xd88f90
	void OnSpawnSiegedStateChanged(SQGameSpawn* SpawnPoint);// 0xd88de0
	void OnSpawnPointDestroyed(Actor* DestroyedActor);// 0xd88d50
	void OnSpawningEnabledChanged(SQGameSpawn* SpawnPoint);// 0xd88f00
	void OnSpawningActivatedTimestampChanged(SQGameSpawn* SpawnPoint);// 0xd88e70
	void OnRep_SpawnPointsChanged();// 0xd88d10
	void OnRep_SpawningEnabledChanged();// 0xd88d30
	void OnRep_SiegedChanged();// 0xd88cf0
	void OnRep_IsBleedingChanged(bool bPrevIsBleeding);// 0xd88c60
	void OnRep_ConstructionPointsChanged();// 0xd88c40
	void OnRep_AmmoChanged();// 0xd88c20
	void OnRep_ActivatedTimeChanged();// 0xd88c00
	void OnBleedOut();// 0xd88af0
	bool HasConstructionPointsFor(float Amount);// 0xd88730
	bool HasAmmoFor(float Amount);// 0xd886a0
	bool GetSpawnPointsEnabled();// 0xd88670
	float GetRemainingActivatingTime(bool BMax);// 0xd87ea0
	int GetNumActivatedSpawnPoints();// 0xd87b10
	float GetClientRemainingActivatingTime();// 0xd86e70
	float GetActivatedTimeStamp(bool BMax);// 0xd86c20
	float GetActivatedSpawnDelay(bool BMax);// 0xd86b80
	SQGameSpawn* CreateSpawnPointSeperately(Vector Location);// 0xd86ae0
	SQGameSpawn* CreateSpawnPointOnFob();// 0xd86ab0
	bool ConsumeFOBAmmo(float Amount);// 0xd86a20
	bool ConsumeConstructionPoints(float Amount);// 0xd86990
	bool CheckDeploymentRules();// 0xd86960
	void BPPostTicketTick(float Difference);// 0x1d69c50
	void BPOverrun(bool bFriendly);// 0x1d69c50
	void BPOnIsBleedingChanged();// 0x1d69c50
	void BP_OnDeployableRemoved(SQDeployable* InDeployable);// 0x1d69c50
	void BP_OnDeployableAdded(SQDeployable* InDeployable);// 0x1d69c50

--------------------------------
Class: SQGameSpawn.PlayerStart.NavigationObjectBase.Actor.Object
	MulticastInlineDelegateProperty PreSiegedStateChangedSignal;//[Size: 1]
	MulticastInlineDelegateProperty OnSiegedStateChangedSignal;//[Size: 1]
	MulticastInlineDelegateProperty OnActivatedTimeStampChangedSignal;//[Size: 1]
	MulticastInlineDelegateProperty PreSpawningEnabledStateChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnSpawningEnabledStateChanged;//[Size: 1]
	float RespawnDelay;//[Offset: 0x2b0, Size: 1]
	float RespawnIncrease;//[Offset: 0x2b4, Size: 1]
	float SecondsOfSpawnProtection;//[Offset: 0x2b8, Size: 1]
	class SQMapIconComponent* SpawnIconComponentClass;//[Offset: 0x2c0, Size: 1]
	float MaxTimeIntervalBetweenSpawnPointLocationEvaluations;//[Offset: 0x2c8, Size: 1]
	bool bSpawningEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2cc, Size: 1]
	bool bSieged;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2cd, Size: 1]
	float ActivatedTimeStamp;//[Offset: 0x2d0, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x2d8, Size: 1]
	SQMapIconComponent* MapIcon;//[Offset: 0x2e0, Size: 1]
	class SQMapIconWidget* DefaultMapIconWidget;//[Offset: 0x2e8, Size: 1]
	float SpawnSearchRadius;//[Offset: 0x2f0, Size: 1]
	float SpawnSearchHeight;//[Offset: 0x2f4, Size: 1]
	Vector[] ValidSpawnLocations;//[Offset: 0x2f8, Size: 1]
	Vector[] ValidOutOfSightSpawnPoints;//[Offset: 0x308, Size: 1]
	bool bHasValidSpawnLocation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x318, Size: 1]
	bool bCanEverDoNearbyEnemiesCheck;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x328, Size: 1]
	bool bCanBeSiegedByVehicles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x329, Size: 1]
	float NearbyEnemiesRadius;//[Offset: 0x32c, Size: 1]
	float NearbyEnemiesCheckTickRate;//[Offset: 0x330, Size: 1]
	CurveFloat* SiegeDistanceThreshold;//[Offset: 0x338, Size: 1]
	CurveFloat* EnemyDistanceToRespawnDelay;//[Offset: 0x340, Size: 1]
	enum Team;//[Offset: 0x3d0, Size: 1]
	enum SpawnPointType;//[Offset: 0x3d1, Size: 1]
	float WaveIntervalTime;//[Offset: 0x3d4, Size: 1]
	float WaveSpawnStartTime;//[Offset: 0x3f0, Size: 1]
	void SetTeam(enum Team);// 0xd9a5b0
	void SetSpawningEnabled(bool bEnabled);// 0xd9a450
	void SetSieged(bool bEnabled);// 0xd9a3c0
	void SetRespawnIncrease(float Value);// 0xd9a290
	void SetActivatedTimeStamp(const float Value, bool bForce);// 0xd99a90
	void OnRep_Team();// 0xd97a30
	void OnRep_SpawningEnabled();// 0xd99590
	void OnRep_Sieged();// 0xd97b40
	void OnRep_HasValidSpawnLocation();// 0xd88af0
	void OnRep_ActivatedTimeStamp();// 0xd97c70
	void OnActivatedTimestampReached();// 0xd98180
	bool HasValidSpawnLocation();// 0xd99070
	float GetWaveTime();// 0xd99040
	float GetWaveSpawnStartTime();// 0xd99020
	float GetWaveIntervalTime();// 0xd99000
	Vector[] GetValidSpawnLocations();// 0xd98f70
	Vector GetValidSpawnLocation(class Object DefaultPawnClass);// 0xd98ec0
	enum GetTeam();// 0xd98e00
	enum GetSpawnPointType();// 0xd98ce0
	bool GetSpawningEnabled();// 0xd98d10
	Actor* GetSpawnActor();// 0xd98cb0
	bool GetSieged();// 0xd98c80
	float GetRespawnIncrease();// 0xd98c50
	float GetRespawnDelay();// 0xd98c10
	float GetRemainingActivatingTime();// 0xd98bb0
	float GetActivatedTimeStamp();// 0xd98290
	bool GetActivatedState();// 0xd98260
	void ClearActivatingTimestamp();// 0xd98180
	bool CanSpawn();// 0xd97d40
	void BP_OnSiegedStateChanged();// 0x1d69c50
	void BP_OnActivatedTimeStampChanged();// 0x1d69c50

--------------------------------
Class: PlayerStart.NavigationObjectBase.Actor.Object
	FName PlayerStartTag;//[Offset: 0x250, Size: 1]

--------------------------------
Class: SQMapIconComponent.SQMapItemComponent.ActorComponent.Object
	Texture* Texture;//[Offset: 0x108, Size: 1]
	enum SelectionGroup;//[Offset: 0x110, Size: 1]
	Texture* SelectedTexture;//[Offset: 0x118, Size: 1]
	LinearColor SelectedTint;//[Offset: 0x120, Size: 1]

--------------------------------
Class: SQMapItemComponent.ActorComponent.Object
	LinearColor Tint;//[Offset: 0xb0, Size: 1]
	Vector2D CustomWorldPosition;//[Offset: 0xc0, Size: 1]
	bool bUseCustomWorldPosition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8, Size: 1]
	bool bUseWorldRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc9, Size: 1]
	float Rotation;//[Offset: 0xcc, Size: 1]
	Vector2D RotPivot;//[Offset: 0xd0, Size: 1]
	Vector2D Size;//[Offset: 0xd8, Size: 1]
	Vector2D Offset;//[Offset: 0xe0, Size: 1]
	enum DrawModeX;//[Offset: 0xe8, Size: 1]
	enum DrawModeY;//[Offset: 0xe9, Size: 1]
	bool bIsVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xea, Size: 1]
	int TeamIndex;//[Offset: 0xec, Size: 1]
	int SquadId;//[Offset: 0xf0, Size: 1]
	enum MapMarkerType;//[Offset: 0xf4, Size: 1]
	enum MapMarkerVisibleTo;//[Offset: 0xf5, Size: 1]
	enum Type;//[Offset: 0xf6, Size: 1]
	class SQMapIconWidget* CustomMapWidget;//[Offset: 0xf8, Size: 1]

--------------------------------
Class: SQMapIconWidget.UserWidget.Widget.Visual.Object
	SQMapItemComponent* RefItem;//[Offset: 0x260, Size: 1]
	int MapZOrder;//[Offset: 0x268, Size: 1]
	class SQToolTipBaseWidget* TooltipType;//[Offset: 0x270, Size: 1]
	SQMap* ParentMap;//[Offset: 0x278, Size: 1]
	bool ShouldMarkerUpdate();// 0xdaf3b0
	bool IsMarkerVisible();// 0xdaed40
	LinearColor GetSquadColor();// 0xdaebc0
	LinearColor GetNeutralColor();// 0xdaeb80
	LinearColor GetFriendlyColor();// 0xdae9a0
	LinearColor GetEnemyColor();// 0xdae960

--------------------------------
Class: SQToolTipBaseWidget.UserWidget.Widget.Visual.Object
	SQMap* OwnerMap;//[Offset: 0x260, Size: 1]
	SQMapIconWidget* ParentWidget;//[Offset: 0x268, Size: 1]

--------------------------------
Class: SQMap.SQUserWidget.UserWidget.Widget.Visual.Object
	float PositionUpdateRate;//[Offset: 0x260, Size: 1]
	float PositionUpdateTimer;//[Offset: 0x264, Size: 1]
	bool bIsMapFollowing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	bool bMapFollowToggle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x269, Size: 1]
	bool bMapFollowPlayerOnByDefault;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x26a, Size: 1]
	Vector2D MapCurrentCoord;//[Offset: 0x26c, Size: 1]
	Vector2D MapCenterCoord;//[Offset: 0x274, Size: 1]
	bool bRunCameraPP;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27c, Size: 1]
	bool bRunCameraPPForward;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27d, Size: 1]
	float PPBlendMultiplier;//[Offset: 0x280, Size: 1]
	float PPBlendValue;//[Offset: 0x284, Size: 1]
	float PPBlendFarDistance;//[Offset: 0x288, Size: 1]
	float MapDrawX;//[Offset: 0x28c, Size: 1]
	float MapDrawY;//[Offset: 0x290, Size: 1]
	float MapWidth;//[Offset: 0x294, Size: 1]
	float MapHeight;//[Offset: 0x298, Size: 1]
	Vector2D WorldTR;//[Offset: 0x29c, Size: 1]
	Vector2D WorldBL;//[Offset: 0x2a4, Size: 1]
	float MajorGridSpacing;//[Offset: 0x2ac, Size: 1]
	Vector2D MapLastClickPosition;//[Offset: 0x2b0, Size: 1]
	Vector2D LastMapZoomPos;//[Offset: 0x2b8, Size: 1]
	int[] MapZoomLevels;//[Offset: 0x2c0, Size: 1]
	float ZoomFloatCurrent;//[Offset: 0x2d0, Size: 1]
	int ZoomStep;//[Offset: 0x2d4, Size: 1]
	int ZoomStepMax;//[Offset: 0x2d8, Size: 1]
	int ZoomStepMin;//[Offset: 0x2dc, Size: 1]
	float ZoomAlpha;//[Offset: 0x2e0, Size: 1]
	bool bIsZooming;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e4, Size: 1]
	bool bMapIsClosing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e5, Size: 1]
	bool bMapIsOpening;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e6, Size: 1]
	bool bIsSpawnScreen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e7, Size: 1]
	bool bIsMapOn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e8, Size: 1]
	void ZoomSwitch();// 0xdb00e0
	void UpdateTickZoom(float DeltaTime, out Vector2D MapCoords);// 0xdafa10
	Vector2D TranslateWorldToMapZoom(out const Vector InWorldCoords, out bool OutbIsInRange);// 0xdaf910
	Vector2D TranslateWorldToMapAnchorsDirect(out const Vector InWorldCoords);// 0xdaf860
	Vector TranslateMapToWorldRayTrace(out const Vector2D InCoords);// 0xdaf7b0
	Vector TranslateMapToWorld(out const Vector2D InCoords);// 0xdaf700
	Vector2D TranslateMapPathBorderClamp(out const Vector2D InCoords, out bool OutbIsClamped);// 0xdaf610
	Vector2D TranslateMapCoordsIsInRange(out const Vector2D InCoords, out bool OutbIsInRange);// 0xdaf520
	Vector2D TranslateMapCoords(out const Vector2D InCoords);// 0xdaf480
	Vector2D TranslateInverseMapCoords(out const Vector2D InCoords);// 0xdaf3e0
	void SetWorldCoords();// 0xdaf390
	bool IsSquadLeader();// 0xdaed70
	bool IsInCameraMan(SQPlayerController* SQPlayerController);// 0xdaeca0
	Vector2D IsCursorOverMapPos(out bool OutbIsOverMap);// 0xdaec00
	FText GetMapDisplayName();// 0xdaeae0
	float GetMajorGridSpacingInCM();// 0xdaeab0
	Vector2D GetCursorPos();// 0xdae920
	Vector2D GetCursorNormalizedPos();// 0xdae8e0
	int GetCurrentTeam();// 0xdae8b0
	void CalculatePathDistanceAndAngle(out const Vector2D PointStart, out const Vector2D PointEnd, out float distance, out float Angle);// 0xdaddf0

--------------------------------
Class: SQUserWidget.UserWidget.Widget.Visual.Object
	void SelfRemove();// 0xe309e0
	void BPInit();// 0x1d69c50

--------------------------------
Class: SQCoreStateComponent.ActorComponent.Object
	class SQCoreStateData* DataClass;//[Offset: 0xb0, Size: 1]
	SQCoreStateData* DataObject;//[Offset: 0xc0, Size: 1]
	SQCoreStateConnection*[] Connections;//[Offset: 0xc8, Size: 1]
	void ServerSetIsVisible(const bool bValue);// 0xd710c0
	void ServerConfigure();// 0xd70fc0
	void OnRep_DataObject(SQCoreStateData* PrevDataObject);// 0xd70d70
	void OnConnectionCreate(SQCoreStateConnection* Connection);// 0xd70bc0
	SQCoreStateId GetId();// 0xd70760

--------------------------------
Class: SQCoreStateData.Object
	bool bIsGlobalData;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bAllowConfigureOnServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	bool bAllowConfigureOnClient;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a, Size: 1]
	bool bCanEverConfigureOnTick;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b, Size: 1]
	float TickConfigureServerFrequency;//[Offset: 0x2c, Size: 1]
	float TickConfigureClientFrequency;//[Offset: 0x30, Size: 1]
	CoreStateDataTickFunction TickFunction;//[Offset: 0x38, Size: 1]
	SQCoreStateListener*[] ListenerList;//[Offset: 0x70, Size: 1]
	SQCoreStateId RepComponentId;//[Offset: 0x88, Size: 1]
	bool bIsVisible;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8a, Size: 1]
	void OnWorldCleanup(World* World, bool bSessionEnded, bool bCleanupResources);// 0xd70e00
	void OnListenerCreate(SQCoreStateListener* Listener);// 0xd70ce0

--------------------------------
Class: SQCoreStateListener.ActorComponent.Object
	<SQCoreStateId,SQCoreStateDataList> DataMap;//[Offset: 0xc8, Size: 1]
	void RefreshVisbility(const PlayerController* PC);// 0xd70f10
	void OnDataCreate(SQCoreStateData* Data);// 0xd70c50

--------------------------------
Class: SQCoreStateDataList
	SQCoreStateData*[] Raw;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQCoreStateId
	uint16 Raw;//[Offset: 0x0, Size: 1]

--------------------------------
Class: CoreStateDataTickFunction.TickFunction
	SQCoreStateData* Target;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQCoreStateConnection.ActorComponent.Object
	SQCoreStateComponent*[] ComponentList;//[Offset: 0xc0, Size: 1]
	<ActorChannel*,SQCoreStateDataToIdMap> RemovedDataLists;//[Offset: 0xd0, Size: 1]
	void OnComponentObtainedId(SQCoreStateComponent* Component);// 0xd70b30

--------------------------------
Class: SQCoreStateDataToIdMap
	<SQCoreStateData*,SQCoreStateId> Raw;//[Offset: 0x0, Size: 1]

--------------------------------
Class: ActorChannel.Channel.Object
	Actor* Actor;//[Offset: 0x68, Size: 1]
	Object*[] CreateSubObjects;//[Offset: 0x168, Size: 1]

--------------------------------
Class: SQForwardBaseSettings.SQSettings.DataAsset.Object
	int NumberOfTeammatesNeededToDeploy;//[Offset: 0x58, Size: 1]
	int NumberOfLogisNeededToDeploy;//[Offset: 0x5c, Size: 1]
	float ExclusionRadius;//[Offset: 0x60, Size: 1]
	int SiegedMinNearbyEnemies;//[Offset: 0x64, Size: 1]
	int TicketsLostWhenOverrun;//[Offset: 0x68, Size: 1]
	float NearbyEnemiesRadius;//[Offset: 0x6c, Size: 1]
	bool HasSpawning;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x70, Size: 1]
	float TimeToEnableSpawning;//[Offset: 0x74, Size: 1]
	float SpawnPointRadius;//[Offset: 0x78, Size: 1]
	Vector SpawnOffset;//[Offset: 0x7c, Size: 1]
	float HealthPercentToDisableSpawns;//[Offset: 0x88, Size: 1]
	bool UseCapture;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8c, Size: 1]
	float CaptureTickDuration;//[Offset: 0x90, Size: 1]
	float MaxCapturePctPerSecond;//[Offset: 0x94, Size: 1]
	float CapturePctPerSecondPerPlayer;//[Offset: 0x98, Size: 1]
	bool UseResourceGeneration;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9c, Size: 1]
	float ResourceGenerationTickDuration;//[Offset: 0xa0, Size: 1]
	float InitialConstructionPoints;//[Offset: 0xa4, Size: 1]
	float MaxConstructionPoints;//[Offset: 0xa8, Size: 1]
	float CPPerSecond;//[Offset: 0xac, Size: 1]
	float InitialAmmo;//[Offset: 0xb0, Size: 1]
	float MaxAmmo;//[Offset: 0xb4, Size: 1]
	float AmmoPerSecond;//[Offset: 0xb8, Size: 1]
	bool HasTimeToEnableSpawning();// 0xd8ca90
	bool HasInitialResources();// 0xd8ca60

--------------------------------
Class: BoxComponent.ShapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	Vector BoxExtent;//[Offset: 0x468, Size: 1]
	float LineThickness;//[Offset: 0x474, Size: 1]
	void SetBoxExtent(Vector InBoxExtent, bool bUpdateOverlaps);// 0x3ed9d70
	Vector GetUnscaledBoxExtent();// 0x3ed9d40
	Vector GetScaledBoxExtent();// 0x3ed9ce0

--------------------------------
Class: SQPlayerState.PlayerState.Info.Actor.Object
	MulticastInlineDelegateProperty OnSquadStateChangedEvent;//[Size: 1]
	bool bUseCustomPingReplicationRate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x358, Size: 1]
	float SecondsBetweenPingUpdate;//[Offset: 0x35c, Size: 1]
	float TimeBetweenPlayerCacheChecking;//[Offset: 0x364, Size: 1]
	MulticastInlineDelegateProperty OnTeamStateChangedEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnRoleChangedEvent;//[Size: 1]
	SQMapMarker*[] RelevantMapMarkers;//[Offset: 0x3c8, Size: 1]
	int TeamId;//[Offset: 0x3d8, Size: 1]
	int LastTeamChangeTime;//[Offset: 0x3dc, Size: 1]
	SQSoldier*[] SoldiersOnScreenSortedByNearestDistanceCache;//[Offset: 0x440, Size: 1]
	SQSoldier*[] SoldiersHaveLineOfSightCache;//[Offset: 0x450, Size: 1]
	SQSoldier*[] EnemiesHaveLineOfSightCache;//[Offset: 0x460, Size: 1]
	SQSoldier*[] FriendliesHaveLineOfSightCache;//[Offset: 0x470, Size: 1]
	SQSoldier*[] AllSoldiersCache;//[Offset: 0x480, Size: 1]
	SQSoldier*[] EnemiesCache;//[Offset: 0x490, Size: 1]
	SQSoldier*[] FriendliesCache;//[Offset: 0x4a0, Size: 1]
	SQSoldier*[] AllSoldiersSortedByNearestDistanceCache;//[Offset: 0x4b0, Size: 1]
	Pawn*[] PawnsOnScreenSortedByNearestDistanceCache;//[Offset: 0x4c0, Size: 1]
	Pawn*[] PawnsHaveLineOfSightCache;//[Offset: 0x4d0, Size: 1]
	Pawn*[] EnemyPawnsHaveLineOfSightCache;//[Offset: 0x4e0, Size: 1]
	Pawn*[] FriendlyPawnsHaveLineOfSightCache;//[Offset: 0x4f0, Size: 1]
	Pawn*[] AllPawnsCache;//[Offset: 0x500, Size: 1]
	Pawn*[] EnemyPawnsCache;//[Offset: 0x510, Size: 1]
	Pawn*[] FriendlyPawnsCache;//[Offset: 0x520, Size: 1]
	Pawn*[] AllPawnsSortedByNearestDistanceCache;//[Offset: 0x530, Size: 1]
	SQVehicleClaim*[] AuthorityVehicleClaimsNotExpired;//[Offset: 0x540, Size: 1]
	DeployableItemsArray PlacedDeployablesArray;//[Offset: 0x550, Size: 1]
	PlayerStateDataObject PlayerStateData;//[Offset: 0x668, Size: 1]
	SQVehicleSeatComponent* CurrentSeat;//[Offset: 0x6d0, Size: 1]
	SQTeamState* TeamState;//[Offset: 0x6d8, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x6e0, Size: 1]
	SQSoldier* Soldier;//[Offset: 0x6e8, Size: 1]
	Pawn* CurrentPawn;//[Offset: 0x6f0, Size: 1]
	FName CurrentRoleId;//[Offset: 0x6f8, Size: 1]
	FName DeployRoleId;//[Offset: 0x700, Size: 1]
	SQRoleSettings* CurrentRole;//[Offset: 0x708, Size: 1]
	SQRoleSettings* DeployRole;//[Offset: 0x710, Size: 1]
	SQPersistedAmmoState PersistedAmmoState;//[Offset: 0x718, Size: 1]
	<class Object,class Object> ReplacementClassesMap;//[Offset: 0x730, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x788, Size: 1]
	void UpdateContextVoiceSettings(SQSquadState* Squad, SQPlayerState* Player);// 0xde6900
	void SetTeamWorkScore(const float InTeamWorkScore);// 0xde6880
	void SetTeamState(SQTeamState* NewTeamState);// 0xde67f0
	void SetSupporterPatch(Texture* InSupporterPatch);// 0xde6760
	void SetSquadState(SQSquadState* NewSquadState);// 0xde66d0
	void SetSoldier(SQSoldier* InSoldier);// 0xde6640
	void SetRevivedPoints(const float InRevivedPoints);// 0xde65c0
	void SetPlayerNamePrefix(FString NewPlayerNamePrefix);// 0xde6510
	void SetObjectiveScore(const float InObjectiveScore);// 0xde6490
	void SetNumWounds(const int InWounds);// 0xde6400
	void SetNumWounded(const int InWounded);// 0xde6370
	void SetNumTeamKills(const int InNumTeamkills);// 0xde62e0
	void SetNumKills(const int InNumKill);// 0xde6250
	void SetNumDeaths(const int InNumDeaths);// 0xde61c0
	void SetLives(const int InLives);// 0xde6130
	void SetIsQA(const bool bInIsQA);// 0xde60a0
	void SetIsMember(const bool bInIsMember);// 0xde6010
	void SetIsDev(const bool bInIsDev);// 0xde5f80
	void SetIsAdmin(const bool bInIsAdmin);// 0xde5ef0
	void SetHealPoints(const float InHealPoints);// 0xde5e70
	void SetDeployRole(SQRoleSettings* InDeployRole);// 0xde5de0
	void SetCurrentSeat(SQVehicleSeatComponent* InCurrentSeat);// 0xde5d50
	void SetCurrentRole(SQRoleSettings* InCurrentRole);// 0xde5cc0
	void SetCurrentPawn(Pawn* InPawn);// 0xde5c30
	void SetClanPatch(Texture* InClanPatch);// 0xde5ba0
	void ServerSetPlayerNamePrefix(FString NewPlayerNamePrefix);// 0xde5ad0
	void ServerSendSerializedInventoryItems(const byte[] SerializedData, const int[] ActiveClanMemberItems);// 0xde59a0
	void ServerSendInventoryItemsEditor(const int[] Items, const int[] ActiveClanMemberItems);// 0xde5870
	void ServerRequestTeamChange(int NewTeam);// 0xde57b0
	void ServerOnImpact(uint64 ProjectileId, Vector NormalImpulse, const HitResult Hit);// 0xde5610
	void ScorePointsDelayed(int Points, FString Reason, out const FName ScoreGroup);// 0xde54d0
	void ScorePoints(int Points, FString Reason, out const FName ScoreGroup);// 0xde5390
	bool RemovedPlacedDeployableItemAt(const int Index);// 0xde52f0
	void OnRep_TeamState(SQTeamState* OldTeamState);// 0xde5260
	void OnRep_SquadState(SQSquadState* OldSquadState);// 0xde51d0
	void OnRep_PlayerNamePrefix(FString OldPlayerNamePrefix);// 0xde5120
	void OnRep_FireTeamPosition();// 0xde5100
	void OnRep_FireTeamIndex();// 0xde50e0
	void OnRep_DeployRole();// 0xde50c0
	void OnRep_CurrentSeat(SQVehicleSeatComponent* LastSeat);// 0xde5030
	void OnRep_CurrentRole();// 0xde5010
	void OnRep_CurrentPawn();// 0xdc86e0
	void MulticastOnImpact(uint64 ProjectileId, Vector NormalImpulse, const HitResult Hit);// 0xde4eb0
	bool IsSquadLeader();// 0xde4e80
	bool IsQA();// 0xde4e50
	bool IsMember();// 0xde4e20
	bool IsFireTeamLeader();// 0xde4df0
	bool IsDev();// 0xde4dc0
	bool IsCommander();// 0xde4d90
	bool IsAlive();// 0xde4d60
	bool IsAdmin();// 0xde4d30
	UniqueNetIdRepl GetUniqueNetID();// 0xde4c30
	float GetTeamWorkScore();// 0xde4c00
	SQTeamState* GetTeamState();// 0xde4bd0
	Texture* GetSupporterPatch();// 0xde4ba0
	SQSquadState* GetSquadState();// 0xde4b70
	SQSoldier* GetSoldier();// 0xde4b40
	FString GetShortPlayerName();// 0xde4af0
	float GetRevivedPoints();// 0xde4ac0
	FString GetPlayerOnlineID();// 0xde4a70
	FString GetPlayerNamePrefix();// 0xde4a30
	int GetPlacedDeployableItemsCount();// 0xde4a00
	SQDeployable* GetPlacedDeployableAt(int Index);// 0xde4960
	float GetObjectiveScore();// 0xde4930
	int GetNumWounds();// 0xde4900
	int GetNumWounded();// 0xde48d0
	int GetNumTeamKills();// 0xde48a0
	int GetNumKills();// 0xde4870
	int GetNumDeaths();// 0xde4840
	int GetLives();// 0xde4810
	float GetHealPoints();// 0xde47e0
	FString GetFullPlayerName(bool bReturnUnmodified);// 0xde4720
	int GetFireTeamPosition();// 0xde46f0
	int GetFireTeamIndex();// 0xde46c0
	SQRoleSettings* GetDeployRole();// 0xde4690
	SQVehicle* GetCurrentVehicle();// 0xde4660
	SQVehicleSeat* GetCurrentSeatPawn();// 0xde4630
	SQVehicleSeatComponent* GetCurrentSeat();// 0xde4600
	SQRoleSettings* GetCurrentRole();// 0xde45d0
	Pawn* GetCurrentPawn();// 0xde45a0
	Texture* GetClanPatch();// 0xde4570
	void BPOnRep_PlayerNamePrefix(FString OldPlayerNamePrefix, FString NewPlayerNamePrefix);// 0x1d69c50
	void AddPlacedDeployableItem(SQDeployable* Deployable);// 0xde44e0

--------------------------------
Class: SQMapMarker.SQTeamActor.Actor.Object
	SQMapIconComponent* MapIcon;//[Offset: 0x240, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x248, Size: 1]
	int Squad;//[Offset: 0x250, Size: 1]
	int FireTeamId;//[Offset: 0x254, Size: 1]
	enum PlacementEmote;//[Offset: 0x258, Size: 1]
	void SetSquad(int Squad);// 0xdb8a80
	void SetMarkerVisibleTo(enum VisibleTo);// 0xdb8860
	void SetMarkerType(enum MarkerType);// 0xdb87e0
	void SetFireteamId(int FireTeamId);// 0xdb86c0
	void OnRep_Squad();// 0xd81a80
	int GetSquad();// 0xdb7d90
	enum GetMarkerType();// 0xd82720
	int GetFireteamId();// 0xdb7c20

--------------------------------
Class: SQTeamActor.Actor.Object
	enum Team;//[Offset: 0x230, Size: 1]
	void SetTeam(enum Team);// 0xe1bed0
	void OnRep_Team();// 0xd78d00
	enum GetTeam();// 0xe0b940

--------------------------------
Class: SQSquadState.Info.Actor.Object
	SQSquad* AuthoritySquad;//[Offset: 0x228, Size: 1]
	int MaxSize;//[Offset: 0x230, Size: 1]
	int NumKills;//[Offset: 0x234, Size: 1]
	int NumDeaths;//[Offset: 0x238, Size: 1]
	int NumWoundeds;//[Offset: 0x23c, Size: 1]
	int NumWounds;//[Offset: 0x240, Size: 1]
	int NumTeamkills;//[Offset: 0x244, Size: 1]
	float Score;//[Offset: 0x248, Size: 1]
	float TeamWorkScore;//[Offset: 0x24c, Size: 1]
	float ObjectiveScore;//[Offset: 0x250, Size: 1]
	float HealPoints;//[Offset: 0x254, Size: 1]
	float RevivedPoints;//[Offset: 0x258, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x260, Size: 1]
	bool bIsCommandSquad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	int ID;//[Offset: 0x26c, Size: 1]
	int TeamId;//[Offset: 0x270, Size: 1]
	SQPlayerState*[] PlayerStates;//[Offset: 0x278, Size: 1]
	SQPlayerState* LeaderState;//[Offset: 0x288, Size: 1]
	FString Name;//[Offset: 0x290, Size: 1]
	bool bIsLocked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	float CreationTimeStamp;//[Offset: 0x2a4, Size: 1]
	FString SquadCreatorName;//[Offset: 0x2a8, Size: 1]
	FString SquadCreatorSteamID;//[Offset: 0x2b8, Size: 1]
	void ScorePointsDelayed(int Points, FString Reason, out const FName ScoreGroup);// 0xe16ed0
	void ScorePoints(int Points, FString Reason, out const FName ScoreGroup);// 0xe16d90
	void RemovePlayerState(SQPlayerState* PlayerState);// 0xd5a520
	void OnRep_TeamId();// 0xe16ca0
	void OnRep_PlayerStates();// 0xe16d50
	void OnRep_Name();// 0xe16ca0
	void OnRep_LeaderState(SQPlayerState* LastLeaderState);// 0xe16cc0
	void OnRep_IsLocked();// 0xe16ca0
	void OnRep_Id();// 0xe16ca0
	int GetPlayerCount();// 0xe16bd0
	void BroadcastPlayerLeaveEvent(SQPlayerState* PlayerState);// 0xe16ae0
	void BroadcastPlayerJoinEvent(SQPlayerState* PlayerState);// 0xe16a20
	void BroadcastLeaderChangeEvent(SQPlayerState* PlayerState);// 0xe16960
	void AddPlayerState(SQPlayerState* PlayerState);// 0xd5a5b0

--------------------------------
Class: SQSquad.Info.Actor.Object
	SQMapMarker*[] LatestSpotMarkers;//[Offset: 0x228, Size: 1]
	SQMapMarker*[] LatestActionMarkers;//[Offset: 0x238, Size: 1]
	SQMapMarker*[] LatestPOIMarkers;//[Offset: 0x248, Size: 1]
	SQMapMarker*[] LatestFireteamMarkers;//[Offset: 0x258, Size: 1]
	SQMapMarker*[] LatestRequestMarkers;//[Offset: 0x268, Size: 1]
	SQTeam* Team;//[Offset: 0x278, Size: 1]
	class SQSquadState* SquadStateClass;//[Offset: 0x280, Size: 1]
	class SQSquadStatePrivateToTeam* TeamPrivateSquadStateClass;//[Offset: 0x288, Size: 1]
	class SQSquadRallyPoint* SquadRallyPointClass;//[Offset: 0x290, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x298, Size: 1]
	SQSquadStatePrivateToTeam* TeamPrivateSquadState;//[Offset: 0x2a0, Size: 1]
	SQPlayerController* Leader;//[Offset: 0x2a8, Size: 1]
	float RejoinSquadDelayAfterKick;//[Offset: 0x2b0, Size: 1]
	SQSquadRallyPoint* rallypoint;//[Offset: 0x2b8, Size: 1]
	float RpMembersToPlaceRadius;//[Offset: 0x2c0, Size: 1]
	float RpEnemiesNearCheckRadius;//[Offset: 0x2c4, Size: 1]
	int RpNeededMembersToPlace;//[Offset: 0x2c8, Size: 1]
	int RpNonSLMemberPunishment;//[Offset: 0x2cc, Size: 1]
	FText RpMembersErrorMessage;//[Offset: 0x2d0, Size: 1]
	FText RpMembersNonSlErrorMessage;//[Offset: 0x2e8, Size: 1]
	FText RpTimerErrorMessage;//[Offset: 0x300, Size: 1]
	FText RpEnemiesNearErrorMessage;//[Offset: 0x318, Size: 1]
	FText PlayerJoinedMessage;//[Offset: 0x330, Size: 1]
	FText PlayerLeftMessage;//[Offset: 0x348, Size: 1]
	FText LeaderChangedMessage;//[Offset: 0x360, Size: 1]
	FText RpLeaderChangedTimeMessage;//[Offset: 0x378, Size: 1]
	float RpLastPlacementTime;//[Offset: 0x390, Size: 1]
	float RpTimeToReset;//[Offset: 0x394, Size: 1]
	float RpEnemiesNearbyTimeSubtract;//[Offset: 0x398, Size: 1]
	float RpLeaderChangedResetTime;//[Offset: 0x39c, Size: 1]
	bool bRpUsesLeaderChangeResetTime;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a0, Size: 1]
	bool RpUsesResetTimer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a1, Size: 1]
	float ClaimingGracePeriod;//[Offset: 0x3a4, Size: 1]
	int ClaimingTotalNumMembersNeededTogether;//[Offset: 0x3a8, Size: 1]
	float ClaimingMembersTogetherRadius;//[Offset: 0x3ac, Size: 1]
	int ClaimingNumMembersInSquadForOne;//[Offset: 0x3b0, Size: 1]
	int ClaimingNumMembersInSquadForTwo;//[Offset: 0x3b4, Size: 1]
	int ClaimingNumMembersInSquadForThree;//[Offset: 0x3b8, Size: 1]
	int ClaimingNumMembersInSquadForFour;//[Offset: 0x3bc, Size: 1]
	float ClaimingTimeToExpire;//[Offset: 0x3c0, Size: 1]
	int NumberOfMembersWithVehicleClaimToMakeSquadPartyToClaim;//[Offset: 0x3c4, Size: 1]
	SQVehicleClaim*[] VehicleClaims;//[Offset: 0x3c8, Size: 1]
	FText ActiveVehicleClaimDroppedNearMainBaseMessage;//[Offset: 0x3d8, Size: 1]
	FText ActiveVehicleClaimDroppedNearFireBaseMessage;//[Offset: 0x3f0, Size: 1]
	FText ActiveVehicleClaimDroppedOnBattlefieldMessage;//[Offset: 0x408, Size: 1]
	FText ActiveVehicleClaimDestroyedMessage;//[Offset: 0x420, Size: 1]
	FText ActiveVehicleClaimPickedUpMessage;//[Offset: 0x438, Size: 1]
	FText NeedLeaderRoleToClaimVehicleMessage;//[Offset: 0x450, Size: 1]
	FText OverVehicleClaimingLimitMessage;//[Offset: 0x468, Size: 1]
	FText OverVehicleClaimingLimitActiveUseDetailsMessage;//[Offset: 0x480, Size: 1]
	FText OverVehicleClaimingLimitDestroyedDetailsMessage;//[Offset: 0x498, Size: 1]
	FText OverVehicleClaimingLimitLeftDetailsMessage;//[Offset: 0x4b0, Size: 1]
	FText OverVehicleClaimingLimitDestroyedOrLeftDetailsMessage;//[Offset: 0x4c8, Size: 1]
	FText OverVehicleClaimingLimitDestroyedOrLeftTimerMessage;//[Offset: 0x4e0, Size: 1]
	FText NotEnoughMembersForClaimingSingleVehicleMessage;//[Offset: 0x4f8, Size: 1]
	FText NotEnoughMembersNearToClaimVehicleMessage;//[Offset: 0x510, Size: 1]
	FText VehicleClaimSuccessMessage;//[Offset: 0x528, Size: 1]
	FText ClaimGracePeriodFailMessage;//[Offset: 0x540, Size: 1]
	FText UnableToReleaseOlderVehicleClaimMessage;//[Offset: 0x558, Size: 1]
	FText AnotherSquadClaimedOurVehicleMessage;//[Offset: 0x570, Size: 1]
	FText UnableToApproveVehicleClaimMessage;//[Offset: 0x588, Size: 1]
	FText KickedFromSquadMessage;//[Offset: 0x5a0, Size: 1]
	FText LeftSquadMessage;//[Offset: 0x5b8, Size: 1]
	FText ForceRecruitKitMessage;//[Offset: 0x5d0, Size: 1]
	SQFireTeam[] FireTeams;//[Offset: 0x5e8, Size: 1]
	SQConfig* SquadConfig;//[Offset: 0x5f8, Size: 1]
	SQVehicle* LastVehicleMemberFailedToEnter;//[Offset: 0x600, Size: 1]
	MulticastInlineDelegateProperty OnPlayerJoinSquad;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerPartSquad;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerBecomeSquadLeader;//[Size: 1]
	MulticastInlineDelegateProperty OnFireteamDisbanded;//[Size: 1]
	MulticastInlineDelegateProperty OnFireteamUpdated;//[Size: 1]
	bool TryClaimVehicle(SQVehicle* Vehicle);// 0xe0c210
	void TryApproveVehicleClaim();// 0xe0c1f0
	void OnPlayerJoinPartSquadEvent__DelegateSignature(SQSquad* Squad, SQPlayerController* Player);// 0x1d69c50
	void OnFireteamChangedEvent__DelegateSignature(SQSquad* Squad, int FireTeamId);// 0x1d69c50
	bool GiveSquadLeader(SQPlayerState* PlayerState);// 0xe0bbe0
	SQVehicleClaim*[] GetBlockingPartyVehicleClaims();// 0xe0bad0
	SQVehicleClaim*[] GetBlockingDirectVehicleClaims();// 0xe0ba80

--------------------------------
Class: SQSquadStatePrivateToTeam.Info.Actor.Object
	SQSquad* AuthoritySquad;//[Offset: 0x230, Size: 1]
	SQTeamStatePrivate* PrivateTeamState;//[Offset: 0x238, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x240, Size: 1]

--------------------------------
Class: SQTeamStatePrivate.Info.Actor.Object
	SQSquadStatePrivateToTeam*[] IndexedTeamPrivateSquadStates;//[Offset: 0x230, Size: 1]
	SQSquadStatePrivateToTeam*[] TeamPrivateSquadStates;//[Offset: 0x240, Size: 1]
	int ID;//[Offset: 0x250, Size: 1]
	void OnRep_IndexedTeamPrivateSquadStates();// 0xd78d00
	int GetId();// 0xe23f50

--------------------------------
Class: SQSquadRallyPoint.SQGameRallyPoint.SQGameSpawn.PlayerStart.NavigationObjectBase.Actor.Object
	SQSquad* AuthoritySquad;//[Offset: 0x420, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x428, Size: 1]
	void OnRep_SquadState();// 0xd88cf0

--------------------------------
Class: SQGameRallyPoint.SQGameSpawn.PlayerStart.NavigationObjectBase.Actor.Object
	StaticMeshComponent* Mesh;//[Offset: 0x400, Size: 1]
	SQMapIconComponent* RallyPointMapIcon;//[Offset: 0x408, Size: 1]
	SoundBase* PlacementSound;//[Offset: 0x410, Size: 1]
	int NumberOfSpawns;//[Offset: 0x418, Size: 1]
	int GetNumberOfSpawns();// 0xd908e0

--------------------------------
Class: SQVehicleClaim.Object
	SQVehicle* VehicleClaimed;//[Offset: 0x28, Size: 1]
	SQSquad* ClaimingSquad;//[Offset: 0x30, Size: 1]
	SQPlayerState*[] PlayersPartyToClaim;//[Offset: 0x38, Size: 1]
	enum Status;//[Offset: 0x48, Size: 1]
	float TimeOfClaim;//[Offset: 0x4c, Size: 1]
	float TimeOfExpiration;//[Offset: 0x50, Size: 1]
	bool bExpired;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x54, Size: 1]
	TimerHandle ExpirationTimerHandle;//[Offset: 0x58, Size: 1]
	SQVehicle* GetVehicleClaimed();// 0xe33af0
	float GetTimeUntilExpiration();// 0xe33ac0
	float GetTimeOfClaim();// 0xe33a90
	enum GetStatus();// 0xe33a60
	SQSquad* GetClaimingSquad();// 0xe33920

--------------------------------
Class: TimerHandle
	uint64 Handle;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQFireTeam
	SQPlayerController*[] Players;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQConfig.Object
	bool ConfigLoaded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]

--------------------------------
Class: SQTeamState.Info.Actor.Object
	int Tickets;//[Offset: 0x228, Size: 1]
	SQTeam* AuthorityTeam;//[Offset: 0x230, Size: 1]
	SQTeamDataCacher* DataCacher;//[Offset: 0x238, Size: 1]
	int ID;//[Offset: 0x240, Size: 1]
	float Score;//[Offset: 0x244, Size: 1]
	float TeamWorkScore;//[Offset: 0x248, Size: 1]
	float ObjectiveScore;//[Offset: 0x24c, Size: 1]
	int NumKills;//[Offset: 0x250, Size: 1]
	int NumDeaths;//[Offset: 0x254, Size: 1]
	int NumWoundeds;//[Offset: 0x258, Size: 1]
	int NumWounds;//[Offset: 0x25c, Size: 1]
	int NumTeamkills;//[Offset: 0x260, Size: 1]
	float HealPoints;//[Offset: 0x264, Size: 1]
	float RevivedPoints;//[Offset: 0x268, Size: 1]
	SQSquadState*[] IndexedSquadStates;//[Offset: 0x290, Size: 1]
	SQSquadState*[] SquadStates;//[Offset: 0x2a0, Size: 1]
	SQPlayerState*[] PlayerStates;//[Offset: 0x2f0, Size: 1]
	SQCommanderState* CommanderState;//[Offset: 0x300, Size: 1]
	FName FactionSetupId;//[Offset: 0x308, Size: 1]
	SQFactionSetup* FactionSetup;//[Offset: 0x310, Size: 1]
	MulticastInlineDelegateProperty OnDeployableTeamAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnDeployablePersonalAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnRoleTeamAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnRolePersonalAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnActionTeamAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnActionPersonalAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnVehicleTeamAvailabilityUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnVehiclePersonalAvailabilityUpdate;//[Size: 1]
	SQAvailabilityState_Deployable[] DeployableAvailabilities;//[Offset: 0x398, Size: 1]
	SQAvailabilityState_Role[] RoleAvailabilities;//[Offset: 0x3a8, Size: 1]
	SQAvailabilityState_Action[] ActionAvailabilities;//[Offset: 0x3b8, Size: 1]
	SQAvailabilityState_Vehicle[] VehicleAvailabilities;//[Offset: 0x3c8, Size: 1]
	bool TryGetVehicleAvailability(SQPlayerController* InPlayer, const SQVehicleSettings* InVehicleSetting, out SQAvailabilityState_Vehicle OutUpdatedVehicleState);// 0xe25810
	bool TryGetRoleRearmAvailability(SQPlayerController* InPlayer, out const interface classNone InRearmSource, const SQRoleSettings* InRoleSetting, out SQAvailabilityState_Role OutUpdatedRoleState, out float OutCost);// 0xe255e0
	bool TryGetRoleAvailability(SQPlayerController* InPlayer, const SQRoleSettings* InRoleSetting, out SQAvailabilityState_Role OutUpdatedRoleState);// 0xe25480
	bool TryGetFactionShortName(out FText OutShortName);// 0xe253a0
	bool TryGetFactionSetupDisplayName(out FText OutDisplayName);// 0xe252c0
	bool TryGetFactionDisplayName(out FText OutDisplayName);// 0xe251e0
	bool TryGetDeployableAvailability(SQPlayerController* InPlayer, const SQDeployableSettings* InDeployableSetting, out SQAvailabilityState_Deployable OutUpdatedDeployableState);// 0xe25090
	bool TryGetActiveRoleAvailability(SQPlayerController* InPlayer, out SQAvailabilityState_Role OutActiveRoleState);// 0xe24f70
	bool TryGetActionAvailability(SQPlayerController* InPlayer, const SQActionSettings* InActionSetting, out SQAvailabilityState_Action OutUpdatedActionState);// 0xe24e20
	void SetTickets(int InTickets);// 0xe24c20
	void ScorePointsDelayed(int Points, FString Reason, out const FName ScoreGroup);// 0xe24ae0
	void ScorePoints(int Points, FString Reason, out const FName ScoreGroup);// 0xe249a0
	void RemovePlayerState(SQPlayerState* PlayerState);// 0xd5a520
	void RefreshSquadStates();// 0xd78600
	void OnRep_VehicleAvailabilities();// 0xd97b00
	void OnRep_RoleAvailabilities();// 0xd97c90
	void OnRep_IndexedSquadStates();// 0xd7df20
	void OnRep_FactionSetup();// 0xdee7b0
	void OnRep_DeployableAvailabilities();// 0xd97a50
	void OnRep_ActionsAvailabilities();// 0xd97b20
	bool IsConfigured();// 0xe24550
	void GetVehiclesForTeam(out SQAvailabilityState_Vehicle[] OutVehicles);// 0xe24480
	void GetVehicles(SQPlayerController* InPlayer, out SQAvailabilityState_Vehicle[] OutVehicles);// 0xe24360
	int GetTickets();// 0xe242a0
	void GetRolesForRearm(SQPlayerController* InPlayer, out const interface classNone InRearmSource, out SQAvailabilityState_Role[] OutRoles);// 0xe240f0
	void GetRoles(SQPlayerController* InPlayer, out SQAvailabilityState_Role[] OutRoles);// 0xe23fd0
	int GetPlayerCount();// 0xe23fa0
	SQRoleSettings* GetLeaveSquadRole();// 0xe23f70
	int GetFirstAvailableSquadId();// 0xe23f20
	FString GetFactionSetupDisplayName();// 0xe23ed0
	FName GetFactionId();// 0xe23e90
	FString GetFactionDisplayName();// 0xe23e40
	SQFaction* GetFaction();// 0xe23e10
	void GetDeployablesForTeam(out SQAvailabilityState_Deployable[] OutDeployables);// 0xe23d40
	void GetDeployables(SQPlayerController* InPlayer, out SQAvailabilityState_Deployable[] OutDeployables);// 0xe23c20
	SQRoleSettings* GetDefaultSquadLeaderRole();// 0xe23bf0
	SQRoleSettings* GetDefaultRole();// 0xe23bc0
	void GetActions(SQPlayerController* InPlayer, out SQAvailabilityState_Action[] OutActions);// 0xe23aa0
	void AdjustTickets(int InDelta);// 0xe239f0
	void AddPlayerState(SQPlayerState* PlayerState);// 0xd5a5b0

--------------------------------
Class: SQTeamDataCacher.ActorComponent.Object
	class Object[] LoadedClasses;//[Offset: 0xb0, Size: 1]
	Object*[] LoadedCDOs;//[Offset: 0xc0, Size: 1]

--------------------------------
Class: SQCommanderState.Info.Actor.Object
	bool bVoteInProgress;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x228, Size: 1]
	int CommanderVoteTimestamp;//[Offset: 0x22c, Size: 1]
	int CommanderVoteTimer;//[Offset: 0x230, Size: 1]
	bool bVoteCooldownActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x234, Size: 1]
	int VoteCooldownTimer;//[Offset: 0x238, Size: 1]
	int VoteCooldownTimeSeconds;//[Offset: 0x23c, Size: 1]
	int VoteCooldownTimestamp;//[Offset: 0x240, Size: 1]
	bool bCommanderIsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x244, Size: 1]
	bool bCommandActionAttempted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x245, Size: 1]
	bool bDoubleCaptureSpeed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x246, Size: 1]
	CommanderCategory[] CommanderCategories;//[Offset: 0x258, Size: 1]
	int MinimumSquadSizeForVoting;//[Offset: 0x268, Size: 1]
	int MinimumSquadsRequiredForVoting;//[Offset: 0x26c, Size: 1]
	int VotingTimeSeconds;//[Offset: 0x270, Size: 1]
	SQCommanderActionDataArray CommandIntervals;//[Offset: 0x278, Size: 1]
	float[] LastCategoryGameTime;//[Offset: 0x390, Size: 1]
	DataTable* TeamCommands;//[Offset: 0x3a0, Size: 1]
	CommanderNomineeArray NomineeStatus;//[Offset: 0x3a8, Size: 1]
	MulticastInlineDelegateProperty OnCommanderChangedEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnNominationAvailableEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnNominationEndedEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnNominationStartedEvent;//[Size: 1]
	SQPlayerState* CurrentCommander;//[Offset: 0x508, Size: 1]
	bool bActionsEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x510, Size: 1]
	void OnRep_VoteInProgressChanged();// 0xd6c920
	void OnRep_CurrentCommander(SQPlayerState* OldCommander);// 0xd6c890
	bool IsCommanderActionAllowed(const class SQGridData_CommandOption CommandOption);// 0xd6c7f0
	SQPlayerState* GetCurrentCommander();// 0xd6c6b0
	class SQGridData_CommandOption[] GetCommandActionsById(out const byte ID);// 0xd6c5f0
	class SQGridData_CommandOption[] GetCommandActions();// 0xd6c5a0
	bool GetActionsEnabled();// 0xd6c570

--------------------------------
Class: SQGridData_CommandOption.SQGridData_BaseOption.Object
	byte CategoryId;//[Offset: 0x60, Size: 1]
	class SQCommandActor* CommandActor;//[Offset: 0x68, Size: 1]
	class UserWidget* ControlWidget;//[Offset: 0x70, Size: 1]
	float EnrouteDuration;//[Offset: 0x78, Size: 1]
	float ActiveDuration;//[Offset: 0x7c, Size: 1]
	float CooldownDuration;//[Offset: 0x80, Size: 1]
	float IconAngleOffset;//[Offset: 0x84, Size: 1]
	float MaxAngleFromBase;//[Offset: 0x88, Size: 1]
	bool CreateMapMarker;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8c, Size: 1]
	bool bAllowedInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8d, Size: 1]
	bool bIgnoreActionEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8e, Size: 1]
	class SQMapMarker* MapMarkerClass;//[Offset: 0x90, Size: 1]
	SQCommanderActionSounds CommanderActionSoundsList;//[Offset: 0x98, Size: 1]

--------------------------------
Class: SQGridData_BaseOption.Object
	FString DisplayName;//[Offset: 0x28, Size: 1]
	FString Description;//[Offset: 0x38, Size: 1]
	Texture2D* Texture;//[Offset: 0x48, Size: 1]
	LinearColor Tint;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQCommandActor.Actor.Object
	float distance;//[Offset: 0x228, Size: 1]
	class SQGridData_CommandOption* Action;//[Offset: 0x230, Size: 1]
	int Team;//[Offset: 0x238, Size: 1]
	Controller* DamageInstigatorController;//[Offset: 0x23c, Size: 1]
	void OnRep_Action();// 0x1d69c50

--------------------------------
Class: SQCommanderActionSounds
	SoundCue* CommandActionPlaced;//[Offset: 0x0, Size: 1]
	SoundCue* CommandActionActive;//[Offset: 0x28, Size: 1]
	SoundCue* CommandActionDestroyed;//[Offset: 0x50, Size: 1]
	SoundCue* CommandActionEnded;//[Offset: 0x78, Size: 1]

--------------------------------
Class: SoundCue.SoundBase.Object
	bool bPrimeOnLoad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x170, Size: 1]
	SoundNode* FirstNode;//[Offset: 0x178, Size: 1]
	float VolumeMultiplier;//[Offset: 0x180, Size: 1]
	float PitchMultiplier;//[Offset: 0x184, Size: 1]
	SoundAttenuationSettings AttenuationOverrides;//[Offset: 0x188, Size: 1]
	float SubtitlePriority;//[Offset: 0x528, Size: 1]
	bool bOverrideAttenuation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x530, Size: 1]
	bool bExcludeFromRandomNodeBranchCulling;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x530, Size: 1]
	int CookedQualityIndex;//[Offset: 0x534, Size: 1]
	bool bHasPlayWhenSilent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x538, Size: 1]

--------------------------------
Class: SoundNode.Object
	SoundNode*[] ChildNodes;//[Offset: 0x28, Size: 1]

--------------------------------
Class: CommanderCategory
	FText Name;//[Offset: 0x0, Size: 1]
	float CooldownDuration;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQCommanderActionDataArray.FastArraySerializer
	SQCommandActionDataFASItem[] Items;//[Offset: 0x108, Size: 1]

--------------------------------
Class: FastArraySerializer
	int ArrayReplicationKey;//[Offset: 0x54, Size: 1]
	enum DeltaFlags;//[Offset: 0x100, Size: 1]

--------------------------------
Class: SQCommandActionDataFASItem.FastArraySerializerItem
	SQCommandActionData Content;//[Offset: 0x10, Size: 1]

--------------------------------
Class: FastArraySerializerItem
	int ReplicationID;//[Offset: 0x0, Size: 1]
	int ReplicationKey;//[Offset: 0x4, Size: 1]
	int MostRecentArrayReplicationKey;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQCommandActionData
	class SQGridData_CommandOption* CommandActionData;//[Offset: 0x0, Size: 1]
	float GameTimeAtCreation;//[Offset: 0x8, Size: 1]
	float CooldownTimeRemaining;//[Offset: 0xc, Size: 1]
	bool IsDestroyedDuringActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]

--------------------------------
Class: CommanderNomineeArray.FastArraySerializer
	CommanderVoteNominee[] Items;//[Offset: 0x108, Size: 1]

--------------------------------
Class: CommanderVoteNominee.FastArraySerializerItem
	SQPlayerState* NomineeState;//[Offset: 0x10, Size: 1]
	int VoteCount;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQVehicleSettings.SQSettings.DataAsset.Object
	bool TryGetVehicleWithLayer(const SQLayer* InLayer, out class SQVehicle OutVehicle);// 0xe3d2f0
	bool ShouldCauseSieged(const SQGameSpawn* Spawn);// 0xe3d060

--------------------------------
Class: SQAvailabilityState_Vehicle
	SQAvailabilityState Status;//[Offset: 0x0, Size: 1]
	SQAvailability_Vehicle* Availability;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQAvailabilityState
	int Available;//[Offset: 0x0, Size: 1]
	int Used;//[Offset: 0x4, Size: 1]
	int Queued;//[Offset: 0x8, Size: 1]
	int ModifierPct;//[Offset: 0xc, Size: 1]
	bool ForceAvailable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	DateTime NextAvailabilityTime;//[Offset: 0x18, Size: 1]
	SQAvailabilityStateTimerContainer[] NextAvailabilityTimeQueue;//[Offset: 0x20, Size: 1]
	DataTableRowHandle UnavailabilityReason;//[Offset: 0x30, Size: 1]
	byte StatusUpdateID;//[Offset: 0x40, Size: 1]

--------------------------------
Class: DateTime

--------------------------------
Class: SQAvailabilityStateTimerContainer
	DateTime NextAvailabilityTime;//[Offset: 0x0, Size: 1]
	DataTableRowHandle UnavailabilityReason;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQAvailability_Vehicle.SQAvailability.Object
	SQVehicleSettings* Setting;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQAvailabilityState_Deployable
	SQAvailabilityState Status;//[Offset: 0x0, Size: 1]
	SQAvailability_Deployable* Availability;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQAvailability_Deployable.SQAvailability.Object
	SQDeployableSettings* Setting;//[Offset: 0x50, Size: 1]
	bool ShouldRefund(SQPlayerController* InPlayer, SQTeam* InTeam, const SQDeployable* InDeployable);// 0xd472c0
	void ProcessRefund(SQPlayerController* InPlayer, SQTeam* InTeam, const SQDeployable* InDeployable);// 0xd468f0
	int GetRefundPercentage();// 0x1d69c50

--------------------------------
Class: SQDeployableSettings.SQSettings.DataAsset.Object
	bool ShouldBeTrackedByFOB;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x58, Size: 1]
	bool TryGetDeployableWithLayer(const SQLayer* InLayer, out class SQDeployable OutDeployable);// 0xd7e390

--------------------------------
Class: SQAvailabilityState_Role
	SQAvailabilityState Status;//[Offset: 0x0, Size: 1]
	SQAvailability_Role* Availability;//[Offset: 0x48, Size: 1]
	bool SwappableWithCurrent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x50, Size: 1]

--------------------------------
Class: SQAvailability_Role.SQAvailability.Object
	SQRoleSettings* Setting;//[Offset: 0x50, Size: 1]
	void ProcessRearmCost(SQPlayerController* InPlayer, out const interface classNone InRearmSource);// 0xd46810
	bool HasSameCountLimit(const SQAvailability_Role* Other);// 0xd45960
	int GetRearmRefundPercentage();// 0x1d69c50
	float GetRearmOperationCost(SQPlayerController* InPlayer, out const interface classNone InRearmSource);// 0xd45590
	DataTableRowHandle GetInsufficientAmmoReamFailureReason();// 0x1d69c50
	void GetAvailabilityForPlayerRearm(SQPlayerController* InPlayer, out const interface classNone InRearmSource, out SQAvailabilityState_Role InOutRearmStatus, out float OutCost);// 0xd452b0
	bool CanRearm(SQPlayerController* InPlayer, out const interface classNone InRearmSource, out float OutCost, out DataTableRowHandle OutRestrictionReason);// 0xd44b10

--------------------------------
Class: SQAvailabilityState_Action
	SQAvailabilityState Status;//[Offset: 0x0, Size: 1]
	SQAvailability_Action* Availability;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQAvailability_Action.SQAvailability.Object
	SQActionSettings* Setting;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQActionSettings.SQSettings.DataAsset.Object
	bool CreateMapMarker;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x58, Size: 1]

--------------------------------
Class: DeployableItemsArray.FastArraySerializer
	DeployableItem[] Items;//[Offset: 0x108, Size: 1]

--------------------------------
Class: DeployableItem.FastArraySerializerItem
	SQDeployable* Deployable;//[Offset: 0x10, Size: 1]

--------------------------------
Class: PlayerStateDataObject
	int Lives;//[Offset: 0x0, Size: 1]
	int NumKills;//[Offset: 0x4, Size: 1]
	int NumDeaths;//[Offset: 0x8, Size: 1]
	int NumWoundeds;//[Offset: 0xc, Size: 1]
	int NumWounds;//[Offset: 0x10, Size: 1]
	int NumTeamkills;//[Offset: 0x14, Size: 1]
	float HealPoints;//[Offset: 0x18, Size: 1]
	float RevivedPoints;//[Offset: 0x1c, Size: 1]
	float TeamWorkScore;//[Offset: 0x20, Size: 1]
	float ObjectiveScore;//[Offset: 0x24, Size: 1]
	bool bAdmin;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bDev;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	bool bQA;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a, Size: 1]
	bool bMember;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b, Size: 1]
	bool bCommander;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c, Size: 1]
	int FireTeamIndex;//[Offset: 0x30, Size: 1]
	int FireTeamPosition;//[Offset: 0x34, Size: 1]
	FString PlayerNamePrefix;//[Offset: 0x38, Size: 1]
	Texture* SupporterPatch;//[Offset: 0x48, Size: 1]
	Texture* ClanPatch;//[Offset: 0x50, Size: 1]
	int ReplicationKey;//[Offset: 0x58, Size: 1]
	SQPlayerState* Owner;//[Offset: 0x60, Size: 1]

--------------------------------
Class: SQPersistedAmmoState
	SQPersistedAmmoGroup[] AmmoGroups;//[Offset: 0x0, Size: 1]
	SQRoleSettings* PersistedRole;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQPersistedAmmoGroup
	SQPersistedAmmoCount[] AmmoCounts;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQPersistedAmmoCount
	int AmmoCount;//[Offset: 0x0, Size: 1]
	int ItemCount;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SQUsableData
	FText DisplayName;//[Offset: 0x0, Size: 1]
	SQUsableWidgetData[] InteractionData;//[Offset: 0x18, Size: 1]
	class SQInteractableWidgetList* InteractWidgetClass;//[Offset: 0x28, Size: 1]
	Vector DrawLocationOffset;//[Offset: 0x30, Size: 1]
	enum InteractVisiblity;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: SQUsableWidgetData
	FText UsableText;//[Offset: 0x0, Size: 1]
	Texture2D* CustomTexture;//[Offset: 0x18, Size: 1]
	LinearColor CustomColor;//[Offset: 0x20, Size: 1]
	class SQInteractableWidgetItem* InteractWidgetItemClass;//[Offset: 0x30, Size: 1]

--------------------------------
Class: SQInteractableWidgetItem.UserWidget.Widget.Visual.Object

--------------------------------
Class: SQInteractableWidgetList.UserWidget.Widget.Visual.Object

--------------------------------
Class: SQDeployableChangeStateEffect
	enum OldBuildState;//[Offset: 0x0, Size: 1]
	enum NewBuildState;//[Offset: 0x1, Size: 1]
	float CullingDistanceInMeters;//[Offset: 0x4, Size: 1]
	SQEffectParticleSound Effect;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQEffectParticleSound
	class SQLastingEffect* LastingEffectClass;//[Offset: 0x0, Size: 1]
	ParticleSystem* ParticleEffect;//[Offset: 0x8, Size: 1]
	SoundBase* SoundEffect;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQLastingEffect.Actor.Object
	ParticleSystemComponent* ParticleSystem;//[Offset: 0x228, Size: 1]
	AudioComponent* Audio;//[Offset: 0x230, Size: 1]
	class SQShockwave* ShockwaveEffect;//[Offset: 0x238, Size: 1]
	float TimeToFireTriggerLastingEffectEventAfterBeginPlay;//[Offset: 0x240, Size: 1]
	float TimeToLiveAfterBeginPlay;//[Offset: 0x244, Size: 1]
	float TimeToLiveAfterTriggerLastingEffect;//[Offset: 0x248, Size: 1]
	bool bListenForOnActorHitEvents;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24c, Size: 1]
	bool bListenForOnDestroyedEvents;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24d, Size: 1]
	bool bActivateParticleSystemUponBeginPlay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24e, Size: 1]
	bool bActivateParticleSystemUponTriggerLastingEffect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24f, Size: 1]
	bool bActivateAudioUponBeginPlay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x250, Size: 1]
	bool bActivateAudioUponTriggerLastingEffect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x251, Size: 1]
	bool bActivateShockwaveUponBeginPlay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x252, Size: 1]
	bool bActivateShockwaveUponTriggerLastingEffect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x253, Size: 1]
	bool bDetachFromActorUponTriggerLastingEffect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x254, Size: 1]
	bool bDeactivateParticleSystemUponTriggerLastingEffect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x255, Size: 1]
	bool bDeactivateParticleSystemUponTriggerLastingEffectTimerExpired;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x256, Size: 1]
	bool bDeactivateAudioUponTriggerLastingEffectTimerExpired;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x257, Size: 1]
	bool bDestroyUponTriggerLastingEffectTimerExpired;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x258, Size: 1]
	bool bDrawDebugSphere;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x259, Size: 1]
	float DebugSphereRadius;//[Offset: 0x25c, Size: 1]
	int DebugSphereSegments;//[Offset: 0x260, Size: 1]
	Color DebugSphereColor;//[Offset: 0x264, Size: 1]
	void OnTriggerLastingEffectTimerExpired();// 0xd81a80
	void OnTriggerLastingEffectEvent();// 0xd7df20
	void OnDestroyedEvent(Actor* DestroyedActor);// 0xd5a520
	void OnBeginPlayTimerExpired();// 0xd78600
	void OnActorHitEvent(Actor* SelfActor, Actor* OtherActor, Vector NormalImpulse, out const HitResult Hit);// 0xdab520
	void Deactivate();// 0xdaa230
	void Activate();// 0xdaa090

--------------------------------
Class: SQShockwave.Object
	enum ShockwaveEffectType;//[Offset: 0x28, Size: 1]
	float Strength;//[Offset: 0x2c, Size: 1]
	SQShockwaveQualitySetting[] ShockwaveQualitySettings;//[Offset: 0x30, Size: 1]
	SQCameraShake CameraShake;//[Offset: 0x40, Size: 1]
	SQCameraShake SecondaryCameraShake;//[Offset: 0x60, Size: 1]
	int VerticalSteps;//[Offset: 0x80, Size: 1]
	int HorizontalSteps;//[Offset: 0x84, Size: 1]
	Rotator DefaultRotation;//[Offset: 0x88, Size: 1]
	Vector DefaultLocationOffset;//[Offset: 0x94, Size: 1]
	float Range;//[Offset: 0xa0, Size: 1]
	float PitchRange;//[Offset: 0xa4, Size: 1]
	float YawRange;//[Offset: 0xa8, Size: 1]
	float CullingDistance;//[Offset: 0xac, Size: 1]
	float NearbyExplosionEventRadius;//[Offset: 0xb0, Size: 1]
	int MaxSoundsToSpawn;//[Offset: 0xb4, Size: 1]
	int MaxDecalsToSpawn;//[Offset: 0xb8, Size: 1]
	bool bDebugLines;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbc, Size: 1]
	bool bDebugSpheres;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbd, Size: 1]
	ParticleSystem* Emitter;//[Offset: 0xc0, Size: 1]
	class SQPhysicalMaterialEffects* DefaultEffectsClass;//[Offset: 0xc8, Size: 1]
	void NearbyExplosionEvent(Actor* ProjectileActor, out const Vector Location, float DistanceFromEffect);// 0x1d69c50
	SQShockwaveQualitySetting GetShockwaveSetting();// 0xe03910
	void Explode(World* World, Actor* ProjectileActor, out const Vector Location);// 0xe030c0

--------------------------------
Class: SQShockwaveQualitySetting
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	int VerticalSteps;//[Offset: 0x4, Size: 1]
	int HorizontalSteps;//[Offset: 0x8, Size: 1]
	float CullingDistance;//[Offset: 0xc, Size: 1]

--------------------------------
Class: SQCameraShake
	class CameraShakeBase* Shake;//[Offset: 0x8, Size: 1]
	float InnerRadius;//[Offset: 0x10, Size: 1]
	float OuterRadius;//[Offset: 0x14, Size: 1]
	float Falloff;//[Offset: 0x18, Size: 1]
	bool bOrientShakeTowardsEpicenter;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c, Size: 1]

--------------------------------
Class: SQPhysicalMaterialEffects.Object
	SQPhysicalMaterialRedirectors* Redirectors;//[Offset: 0x28, Size: 1]
	<SQPhysicalMaterial*,SQEffectsSet> Effects;//[Offset: 0x30, Size: 1]
	SQProjectileImpactEffect GetThrowableEffect(SQPhysicalMaterial* Material);// 0xdd7970
	SQProjectileImpactEffect GetImpactEffect(SQPhysicalMaterial* Material);// 0xdd6e30
	SQExplosionEffect GetExplosionEffect(SQPhysicalMaterial* Material);// 0xdd7360
	SQEffectsSet GetEffect(SQPhysicalMaterial* Material);// 0xdd7120
	SQProjectileImpactEffect GetBlastEffect(SQPhysicalMaterial* Material);// 0xdd6e30

--------------------------------
Class: SQPhysicalMaterialRedirectors.DataAsset.Object
	<SQPhysicalMaterial*,SQPhysicalMaterial*> Redirectors;//[Offset: 0x30, Size: 1]
	SQPhysicalMaterial* GetRedirector(const SQPhysicalMaterial* Key);// 0xdd76c0

--------------------------------
Class: SQPhysicalMaterial.PhysicalMaterial.Object
	bool bConsiderForPenetration;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x80, Size: 1]
	bool bAllowPenetration;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x81, Size: 1]
	float DamageAbsorbed;//[Offset: 0x84, Size: 1]
	float ArmorDamageMultiplier;//[Offset: 0x88, Size: 1]
	bool bDamageParentActor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8c, Size: 1]
	float WheelDampingRateMultiplier;//[Offset: 0x90, Size: 1]
	int ArmorThicknessMillimeters;//[Offset: 0x94, Size: 1]
	SQShockwave* GetShockwave(out const SQProjectileImpactEffect InImpactEffect, SQShockwave* DefaultShockwave);// 0xdd7780
	ParticleSystem* GetParticle(out const SQProjectileImpactEffect InImpactEffect, ParticleSystem* DefaultParticle);// 0xdd7510
	MaterialInterface* GetDecal(out const SQProjectileImpactEffect InImpactEffect, MaterialInterface* DefaultDecal);// 0xdd6f90

--------------------------------
Class: SQProjectileImpactEffect
	ParticleSystem*[] Particles;//[Offset: 0x0, Size: 1]
	class SQShockwave* Shockwave;//[Offset: 0x10, Size: 1]
	SoundCue*[] Sounds;//[Offset: 0x18, Size: 1]
	SoundCue*[] FirstPersonSounds;//[Offset: 0x28, Size: 1]
	SoundCue*[] RicochetSounds;//[Offset: 0x38, Size: 1]
	SoundCue*[] RicochetFirstPersonSounds;//[Offset: 0x48, Size: 1]
	MaterialInterface*[] decals;//[Offset: 0x58, Size: 1]
	bool bDoParticlesUseRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x68, Size: 1]
	float MinDecalSize;//[Offset: 0x6c, Size: 1]
	float MaxDecalSize;//[Offset: 0x70, Size: 1]
	bool bSkewDecalSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x74, Size: 1]
	float DecalDepth;//[Offset: 0x78, Size: 1]
	float DecalLifeSpan;//[Offset: 0x7c, Size: 1]
	bool bRandomizeDecalRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x80, Size: 1]

--------------------------------
Class: SQEffectsSet
	SQExplosionEffect ImpactEffects;//[Offset: 0x0, Size: 1]
	SQProjectileImpactEffect ThrowableEffects;//[Offset: 0xa8, Size: 1]
	bool bOverlapsThrowableProjectiles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x130, Size: 1]

--------------------------------
Class: SQExplosionEffect.SQProjectileImpactEffect
	ParticleSystem* ShockwaveParticleEffect;//[Offset: 0x88, Size: 1]
	SoundCue* ShockwaveSound;//[Offset: 0x90, Size: 1]
	MaterialInterface* ShockwaveDecalMaterial;//[Offset: 0x98, Size: 1]
	SoundCue* DebrisSound;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: SQDeployableStateDamageEffect
	enum OldBuildState;//[Offset: 0x0, Size: 1]
	enum NewBuildState;//[Offset: 0x1, Size: 1]
	float CullingDistanceInMeters;//[Offset: 0x4, Size: 1]
	SQDamageEffect[] DamageEffects;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQDamageEffect
	class DamageType* DamageTypeClass;//[Offset: 0x0, Size: 1]
	SQEffectParticleSound[] Effects;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQDamageModifier
	class DamageType* DamageTypeClass;//[Offset: 0x0, Size: 1]
	float Modifier;//[Offset: 0x8, Size: 1]
	bool bForwardDamageToSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	float ForwardDamageToSoldierModifier;//[Offset: 0x10, Size: 1]
	bool bForwardDeathToSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x14, Size: 1]
	bool bIncapSoldierOnDeath;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x15, Size: 1]
	bool bOnlyPassDamageIfDirectHit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x16, Size: 1]
	float DirectHitDamageMultiplier;//[Offset: 0x18, Size: 1]
	float IndirectHitDamageMultiplier;//[Offset: 0x1c, Size: 1]
	float DirectHitRadialDamageMultiplier;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQInventoryData
	class SQEquipableItem* EquipableItem;//[Offset: 0x0, Size: 1]
	int MaxAllowedInInventory;//[Offset: 0x8, Size: 1]
	int MinimumCountOnSpawn;//[Offset: 0xc, Size: 1]
	bool bCannotRearm;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x10, Size: 1]
	enum WeaponType;//[Offset: 0x14, Size: 1]

--------------------------------
Class: SQVehicleWeaponConfig
	class SQVehicleWeapon* WeaponClass;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQVehicleWeapon.SQWeapon_Effects.SQWeapon.SQEquipableItem.Actor.Object
	bool bIsOverheated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa70, Size: 1]
	bool bInputEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa71, Size: 1]
	SQVehicleRecoil[] RecoilFactor;//[Offset: 0xa78, Size: 1]
	bool bReturnToPitchOriginOnReload;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa88, Size: 1]
	bool bReturnToYawOriginOnReload;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa89, Size: 1]
	float SecondsToReturnToOriginOnReload;//[Offset: 0xa8c, Size: 1]
	bool bReloadDirectlyFromFob;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa90, Size: 1]
	bool bIgnoreCameraChange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa93, Size: 1]
	bool bEnableTrueFpCamera;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa94, Size: 1]
	bool bStartWithNoAmmo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xaac, Size: 1]
	void SoldierLeavesVehicle(SQSoldier* Soldier);// 0xe3d190
	void SoldierEntersVehicle(SQSoldier* Soldier);// 0xe3d100
	Rotator GetWeaponRotation();// 0xe3ca70
	SQSoldier* GetSoldier();// 0xe3c820
	SQVehicleSeat* GetOwnerSeat();// 0xe3c760

--------------------------------
Class: SQWeapon_Effects.SQWeapon.SQEquipableItem.Actor.Object
	SQWeaponSounds WeaponSounds;//[Offset: 0x7c0, Size: 1]
	SQWeaponAnims WeaponAnimations;//[Offset: 0x848, Size: 1]
	SQRecoilData RecoilData;//[Offset: 0x890, Size: 1]
	SQWeaponEffects WeaponEffects;//[Offset: 0x8d8, Size: 1]
	SQWeaponSpring WeaponSpringConfig;//[Offset: 0x930, Size: 1]
	CurveFloat* RecoilCurve;//[Offset: 0x958, Size: 1]
	Vector WeaponOffset;//[Offset: 0x960, Size: 1]
	Vector SightsViewOffset;//[Offset: 0x96c, Size: 1]
	void InterpRecoil(float Value);// 0xe482b0

--------------------------------
Class: SQWeapon.SQEquipableItem.Actor.Object
	SQWeaponStaticInfo* WeaponStaticInfo;//[Offset: 0x460, Size: 1]
	SQAudioComponentPool FiringAudioComponentPool;//[Offset: 0x468, Size: 1]
	TimerHandle ZoomFinishAdsTransitionTimerHandle;//[Offset: 0x5a0, Size: 1]
	bool bWaitingForMagazineLoad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5a8, Size: 1]
	bool bFiring;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5ac, Size: 1]
	bool bReloading;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x5ac, Size: 1]
	SQWeaponData WeaponConfig;//[Offset: 0x5b0, Size: 1]
	enum CurrentState;//[Offset: 0x670, Size: 1]
	float ADSMoveSpeedMultiplier;//[Offset: 0x674, Size: 1]
	bool bAimingDownSights;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x678, Size: 1]
	bool bFireInput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x679, Size: 1]
	bool bPendingFire;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x67a, Size: 1]
	float MaxTimeToLoopSoundsAfterLastFire;//[Offset: 0x688, Size: 1]
	float ModifiedTacticalReloadDuration;//[Offset: 0x68c, Size: 1]
	float ModifiedDryReloadDuration;//[Offset: 0x690, Size: 1]
	int CurrentFireMode;//[Offset: 0x6b0, Size: 1]
	SQMagazineData[] Magazines;//[Offset: 0x6c0, Size: 1]
	class SQWeaponAttachment[] AttachmentClasses;//[Offset: 0x6d0, Size: 1]
	SQWeaponAttachment*[] Attachments;//[Offset: 0x6e0, Size: 1]
	ADSPostProcessSettings* ADSPostProcessSettings;//[Offset: 0x6f0, Size: 1]
	bool bUseStopADSPPDrawing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6f8, Size: 1]
	bool bStopADSPPDrawing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6f9, Size: 1]
	SQDynamicEasingStruct HoldingZoomEasing;//[Offset: 0x6fc, Size: 1]
	float HoldingZoomEasingAlpha;//[Offset: 0x710, Size: 1]
	float HoldingZoomRawAlpha;//[Offset: 0x714, Size: 1]
	float HoldingZoomIntermediateAlpha;//[Offset: 0x718, Size: 1]
	float HoldingZoomTargetAlpha;//[Offset: 0x71c, Size: 1]
	float CurrentFOV;//[Offset: 0x720, Size: 1]
	float ZoomedFOV;//[Offset: 0x724, Size: 1]
	float FocusZoomTime;//[Offset: 0x728, Size: 1]
	float FocusAdditionalZoom;//[Offset: 0x72c, Size: 1]
	float TimeSinceLastZoomToggle;//[Offset: 0x730, Size: 1]
	float LastZoomProgressAtToggle;//[Offset: 0x734, Size: 1]
	float AdjustAdsSightItemAnimPos;//[Offset: 0x738, Size: 1]
	float CachedAdjustAdsSightItemAnimPos;//[Offset: 0x73c, Size: 1]
	float NewAdjustAdsSightItemAnimPos;//[Offset: 0x740, Size: 1]
	float AdjustAdsSightItemAnimPosAlpha;//[Offset: 0x744, Size: 1]
	int MaxConcurrentSounds;//[Offset: 0x748, Size: 1]
	float MaxConcurrentSoundsFadeOut;//[Offset: 0x74c, Size: 1]
	bool bIs1PUsingSquadSoundNodeLooping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x750, Size: 1]
	bool bIs3PUsingSquadSoundNodeLooping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x751, Size: 1]
	AudioComponent* CurrentFiringAC;//[Offset: 0x758, Size: 1]
	AudioComponent*[] FiringACs;//[Offset: 0x760, Size: 1]
	SoundCue* SemiAutoSound1P;//[Offset: 0x770, Size: 1]
	SoundCue* SemiAutoSound3P;//[Offset: 0x778, Size: 1]
	SoundCue* StartingSound1P;//[Offset: 0x780, Size: 1]
	SoundCue* StartingSound3P;//[Offset: 0x788, Size: 1]
	bool bIsModifyingZeroing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7a0, Size: 1]
	int AdjustableSightItemPos;//[Offset: 0x7a4, Size: 1]
	float CachedLastZeroingTime;//[Offset: 0x7a8, Size: 1]
	float CachedLastZeroingPlayTime;//[Offset: 0x7ac, Size: 1]
	int CachedLastZeroingPosition;//[Offset: 0x7b0, Size: 1]
	bool bCachedIsBipodDeployed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b4, Size: 1]
	bool bCachedAimProneBobbing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b5, Size: 1]
	bool bFinishedAdsTransition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b6, Size: 1]
	bool bLastNewZoom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b7, Size: 1]
	bool FireSwaySelector;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b8, Size: 1]
	bool PreFireSwaySelector;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7b9, Size: 1]
	void UpdateBipod();// 0xd9f820
	void UpdateAimProneBobbing();// 0xe46940
	void UpdateAdjustableSightAnimPos();// 0xe46920
	void ToggleFiremode();// 0xe46900
	void StopModifyZeroing();// 0xde5010
	void StartReload();// 0xe2f3d0
	void StartModifyZeroing();// 0xde50c0
	void SetZoom(bool bNewZoom, bool bForce);// 0xe46820
	void ServerStopFire();// 0xe467d0
	void ServerStartReload();// 0xe46780
	void ServerStartFire();// 0xe46730
	void ServerSetIsAimingDownSights(bool bIsAimingDownSights);// 0xe46670
	void ServerSetCurrentFireMode(int NewCurrentFireMode);// 0xe465b0
	void ServerNotifyHit(const SQShotInfo ShotInfoZeroBased, const SQPenetrationTrace[] TargetsZeroBased, bool bIsRayTracedShot, bool bIsManuallyCalled);// 0xe463d0
	void ServerNotifyFireAndMiss(const SQShotInfo ShotInfoZeroBased, const HitResult HitResultZeroBased, bool bIsRayTracedShot);// 0xe46220
	void ServerFireProjectileWithId(const SQShotInfo ShotInfoZeroBased, uint64 UniqueProjectileId);// 0xe460d0
	void ServerFireProjectile(const SQShotInfo ShotInfoZeroBased);// 0xe45fe0
	void PlayImpactEffect(out const SQPenetrationTrace ImpactHit, bool bIsProjectileTracer);// 0xe45ed0
	void PlayFiringSound(SoundBase* Sound1p, SoundBase* Sound3p, out const FName SocketName);// 0xe45dc0
	void OnRep_Reloading();// 0xe45da0
	void OnRep_Magazines(out SQMagazineData[] OldMagazines);// 0xe45cf0
	void OnRep_Firing();// 0xe45cd0
	void OnRep_AimingDownSights(bool bPrevAimingDownSights);// 0xe45c40
	void MulticastFireProjectileWithId(const Vector OriginZeroBased, const Vector_NetQuantizeNormal ShootDir, uint64 UniqueProjectileId);// 0xe45b30
	void MulticastFireProjectile(const Vector OriginZeroBased, const Vector_NetQuantizeNormal ShootDir);// 0xe45a70
	void MulticastFireMultipleProjectileEffects(const SQPenetrationProxy[] HitResultsZeroBased, const SQShotInfo ShotInfoZeroBased, bool bIsRayTracedShot, bool bIsManuallyCalled);// 0xe458b0
	void ModifyZeroing(bool bIncrease);// 0xe45820
	bool MagazineHasAmmo();// 0xe457f0
	bool IsZoomed();// 0xe457c0
	bool IsReloading();// 0xe45790
	bool IsPullingTrigger();// 0xe45760
	bool IsPendingFire();// 0xe45730
	bool IsFullyZoomed();// 0xd9ed50
	bool IsAimingDownSights();// 0xe45700
	float GetZoomProgress(bool bJustToggledZoom);// 0xe455d0
	SQWeaponStaticInfo* GetWeaponStaticInfo();// 0xe455a0
	Vector GetMOAAdjustedAimDirectionFromRotator(out const Rotator AimDirection);// 0xe454f0
	Vector GetMOAAdjustedAimDirection(out const Vector AimDirection);// 0xe45440
	Vector GetAimLocation();// 0xe45400
	Vector GetAimDirection();// 0xe453c0
	void FinishAdsTransition();// 0xe452d0
	bool CanToggleFiremode();// 0xd9ecf0
	void BlueprintOnZoom(bool bNewZoom);// 0xe45240
	void BlueprintOnToggleFiremode();// 0xe45220
	void BlueprintOnReloaded();// 0x1d69c50
	void BlueprintOnReload();// 0xe45200
	void BlueprintOnPreReload();// 0x1d69c50
	void BlueprintOnFire(out const Vector Origin);// 0xe45150

--------------------------------
Class: SQWeaponStaticInfo.SQItemStaticInfo.Object
	AnimMontage* ReloadBipodWeaponMontage;//[Offset: 0x528, Size: 1]
	AnimMontage* ReloadBipod1pMontage;//[Offset: 0x530, Size: 1]
	AnimMontage* ReloadBipod3pMontage;//[Offset: 0x538, Size: 1]
	AnimMontage* ReloadDryWeaponMontage;//[Offset: 0x540, Size: 1]
	AnimMontage* ReloadDry1pMontage;//[Offset: 0x548, Size: 1]
	AnimMontage* ReloadDry3pMontage;//[Offset: 0x550, Size: 1]
	AnimMontage* ReloadDryBipodWeaponMontage;//[Offset: 0x558, Size: 1]
	AnimMontage* ReloadDryBipod1pMontage;//[Offset: 0x560, Size: 1]
	AnimMontage* ReloadDryBipod3pMontage;//[Offset: 0x568, Size: 1]
	AnimMontage*[] RandomFire1pMontage;//[Offset: 0x570, Size: 1]
	AnimMontage* FireAdd3pMontage;//[Offset: 0x580, Size: 1]
	AnimMontage* FireTriggerWeaponMontage;//[Offset: 0x588, Size: 1]
	AnimMontage* FireTrigger1pMontage;//[Offset: 0x590, Size: 1]
	AnimMontage* FireTrigger3pMontage;//[Offset: 0x598, Size: 1]
	AnimMontage* FireSway1pMontage;//[Offset: 0x5a0, Size: 1]
	AnimMontage* FireSway1pBlendInMontage;//[Offset: 0x5a8, Size: 1]
	AnimMontage* FireAds1pMontage;//[Offset: 0x5b0, Size: 1]
	AnimMontage* FireAds3pMontage;//[Offset: 0x5b8, Size: 1]
	AnimMontage* FireBipodWeaponMontage;//[Offset: 0x5c0, Size: 1]
	AnimMontage* FireBipod1pMontage;//[Offset: 0x5c8, Size: 1]
	AnimMontage* FireBipod3pMontage;//[Offset: 0x5d0, Size: 1]
	AnimMontage* FireAddBipod1pMontage;//[Offset: 0x5d8, Size: 1]
	AnimMontage* FireAddBipod3pMontage;//[Offset: 0x5e0, Size: 1]
	SQMontageSectionNames BipodEndLoopSectionNames;//[Offset: 0x5e8, Size: 1]
	AnimMontage* BipodWeaponMontage;//[Offset: 0x610, Size: 1]
	AnimMontage* Bipod1pMontage;//[Offset: 0x618, Size: 1]
	AnimMontage* Bipod3pMontage;//[Offset: 0x620, Size: 1]
	AnimMontage* FiremodeBipodMontage;//[Offset: 0x628, Size: 1]
	AnimMontage* FiremodeBipodWeaponMontage;//[Offset: 0x630, Size: 1]
	AnimMontage* FiremodeMontage;//[Offset: 0x638, Size: 1]
	AnimMontage* FiremodeWeaponMontage;//[Offset: 0x640, Size: 1]
	AnimMontage* BobbingAimProneSway1pMontage;//[Offset: 0x648, Size: 1]
	AnimMontage* BobbingAim1pMontage;//[Offset: 0x650, Size: 1]
	FName MuzzleFlashEffectSocket;//[Offset: 0x658, Size: 1]
	ParticleSystem* MuzzleFlashEffect1P;//[Offset: 0x660, Size: 1]
	ParticleSystem* MuzzleFlashEffect3P;//[Offset: 0x668, Size: 1]
	bool bMuzzleFlashUseLastingEffect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x670, Size: 1]
	class SQLastingEffect* MuzzleFlashLastingEffect1p;//[Offset: 0x678, Size: 1]
	class SQLastingEffect* MuzzleFlashLastingEffect3p;//[Offset: 0x680, Size: 1]
	float ShellEjectionCullDistanceInMeters;//[Offset: 0x688, Size: 1]
	FName ShellEjectionEffectSocket;//[Offset: 0x68c, Size: 1]
	ParticleSystem* ShellEjectionEffect1p;//[Offset: 0x698, Size: 1]
	ParticleSystem* ShellEjectionEffect3p;//[Offset: 0x6a0, Size: 1]
	FName BackBlastEffectSocket;//[Offset: 0x6a8, Size: 1]
	class SQLastingEffect* BackBlastLastingEffect1p;//[Offset: 0x6b0, Size: 1]
	class SQLastingEffect* BackBlastLastingEffect3p;//[Offset: 0x6b8, Size: 1]
	Rotator BackBlastLastingEffectAdditionalRotation;//[Offset: 0x6c0, Size: 1]
	float RecoilCameraOffsetFactor;//[Offset: 0x6cc, Size: 1]
	float RecoilCameraOffsetInterpSpeed;//[Offset: 0x6d0, Size: 1]
	float RecoilLofCameraOffsetLimit;//[Offset: 0x6d4, Size: 1]
	float RecoilLofAttackInterpSpeed;//[Offset: 0x6d8, Size: 1]
	float RecoilCanReleaseInterpSpeed;//[Offset: 0x6dc, Size: 1]
	float RecoilLofReleaseInterpSpeed;//[Offset: 0x6e0, Size: 1]
	float RecoilWeaponRelLocFactor;//[Offset: 0x6e4, Size: 1]
	float RecoilCameraShotInterpSpeed;//[Offset: 0x6e8, Size: 1]
	float RecoilAdsCameraShotInterpSpeed;//[Offset: 0x6ec, Size: 1]
	float MoveRecoilFactorRelease;//[Offset: 0x6f0, Size: 1]
	float AddMoveRecoil;//[Offset: 0x6f4, Size: 1]
	float MaxMoveRecoilFactor;//[Offset: 0x6f8, Size: 1]
	float MinMoveRecoilFactor;//[Offset: 0x6fc, Size: 1]
	float LowStaminaRecoilFactor;//[Offset: 0x700, Size: 1]
	float FullStaminaRecoilFactor;//[Offset: 0x704, Size: 1]
	Vector ProneAdsRecoilMean;//[Offset: 0x708, Size: 1]
	Vector ProneAdsRecoilSigma;//[Offset: 0x714, Size: 1]
	Vector ProneRecoilMean;//[Offset: 0x720, Size: 1]
	Vector ProneRecoilSigma;//[Offset: 0x72c, Size: 1]
	Vector CrouchAdsRecoilMean;//[Offset: 0x738, Size: 1]
	Vector CrouchAdsRecoilSigma;//[Offset: 0x744, Size: 1]
	Vector CrouchRecoilMean;//[Offset: 0x750, Size: 1]
	Vector CrouchRecoilSigma;//[Offset: 0x75c, Size: 1]
	Vector StandAdsRecoilMean;//[Offset: 0x768, Size: 1]
	Vector StandAdsRecoilSigma;//[Offset: 0x774, Size: 1]
	Vector StandRecoilMean;//[Offset: 0x780, Size: 1]
	Vector StandRecoilSigma;//[Offset: 0x78c, Size: 1]
	Vector ProneTransitionRecoilMean;//[Offset: 0x798, Size: 1]
	Vector ProneTransitionRecoilSigma;//[Offset: 0x7a4, Size: 1]
	Vector BipodAdsRecoilMean;//[Offset: 0x7b0, Size: 1]
	Vector BipodAdsRecoilSigma;//[Offset: 0x7bc, Size: 1]
	Vector BipodRecoilMean;//[Offset: 0x7c8, Size: 1]
	Vector BipodRecoilSigma;//[Offset: 0x7d4, Size: 1]
	float DeviationVisuFbInterpSpeed_YZ;//[Offset: 0x7e0, Size: 1]
	float DeviationVisuFbInterpSpeed_Final;//[Offset: 0x7e4, Size: 1]
	float DeviationVisuFbMax;//[Offset: 0x7e8, Size: 1]
	float MinShotDeviationFactor;//[Offset: 0x7ec, Size: 1]
	float MaxShotDeviationFactor;//[Offset: 0x7f0, Size: 1]
	float AddShotDeviationFactor;//[Offset: 0x7f4, Size: 1]
	float AddShotDeviationFactorAds;//[Offset: 0x7f8, Size: 1]
	float ShotDeviationFactorRelease;//[Offset: 0x7fc, Size: 1]
	float LowStaminaDeviationFactor;//[Offset: 0x800, Size: 1]
	float FullStaminaDeviationFactor;//[Offset: 0x804, Size: 1]
	float MoveDeviationFactorRelease;//[Offset: 0x808, Size: 1]
	float AddMoveDeviation;//[Offset: 0x80c, Size: 1]
	float MaxMoveDeviationFactor;//[Offset: 0x810, Size: 1]
	float MinMoveDeviationFactor;//[Offset: 0x814, Size: 1]
	float MinBipodAdsDeviation;//[Offset: 0x818, Size: 1]
	float MinBipodDeviation;//[Offset: 0x81c, Size: 1]
	float MinProneAdsDeviation;//[Offset: 0x820, Size: 1]
	float MinProneDeviation;//[Offset: 0x824, Size: 1]
	float MinCrouchAdsDeviation;//[Offset: 0x828, Size: 1]
	float MinCrouchDeviation;//[Offset: 0x82c, Size: 1]
	float MinStandAdsDeviation;//[Offset: 0x830, Size: 1]
	float MinStandDeviation;//[Offset: 0x834, Size: 1]
	float MinProneTransitionDeviation;//[Offset: 0x838, Size: 1]
	float SwayInterpSpeed_YZ;//[Offset: 0x83c, Size: 1]
	float SwayInterpSpeed_Final;//[Offset: 0x840, Size: 1]
	float HasSway;//[Offset: 0x844, Size: 1]
	float MoveSwayFactorRelease;//[Offset: 0x848, Size: 1]
	float AddMoveSway;//[Offset: 0x84c, Size: 1]
	float MinMoveSwayFactor;//[Offset: 0x850, Size: 1]
	float MaxMoveSwayFactor;//[Offset: 0x854, Size: 1]
	float LowStaminaSwayFactor;//[Offset: 0x858, Size: 1]
	float FullStaminaSwayFactor;//[Offset: 0x85c, Size: 1]
	float HoldingBreathSwayFactor;//[Offset: 0x860, Size: 1]
	float ProneAdsSwayMin;//[Offset: 0x864, Size: 1]
	float ProneSwayMin;//[Offset: 0x868, Size: 1]
	float CrouchAdsSwayMin;//[Offset: 0x86c, Size: 1]
	float CrouchSwayMin;//[Offset: 0x870, Size: 1]
	float StandAdsSwayMin;//[Offset: 0x874, Size: 1]
	float StandSwayMin;//[Offset: 0x878, Size: 1]
	float ProneTransitionSwayMin;//[Offset: 0x87c, Size: 1]
	bool bHasBipod;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x880, Size: 1]
	float BipodLength;//[Offset: 0x884, Size: 1]
	float BipodHeightRaw;//[Offset: 0x888, Size: 1]
	bool bHasAdjustableSight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88c, Size: 1]
	bool bLeanHeadWhenAds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88d, Size: 1]
	SQAdjustableSightMontageSet[] AdsSightsAnim;//[Offset: 0x890, Size: 1]
	AnimMontage* BaseAds1pMontage;//[Offset: 0x8a0, Size: 1]
	AnimMontage* AdsTransition1pMontage;//[Offset: 0x8a8, Size: 1]
	AnimMontage* FromAdsTransition1pMontage;//[Offset: 0x8b0, Size: 1]
	AnimSequence* AdjustableAdsSightItemAnim;//[Offset: 0x8b8, Size: 1]
	float AdjustableAdsSightItemFrameRate;//[Offset: 0x8c0, Size: 1]
	bool bHasAdsTransition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8c4, Size: 1]
	Vector Aim1pWeaponMeshPosition;//[Offset: 0x8c8, Size: 1]
	Vector Aim1pWeaponMeshRescale;//[Offset: 0x8d4, Size: 1]
	float Steady1pHipFireDuration;//[Offset: 0x8e0, Size: 1]
	bool bPlaySoundOnMagEmpty;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8e4, Size: 1]
	int PlaySoundOnEmptyUse;//[Offset: 0x8e8, Size: 1]
	int PlaySoundOnEmptyAltUse;//[Offset: 0x8ec, Size: 1]
	SoundCue* ToggleFiremodeSound1P;//[Offset: 0x8f0, Size: 1]
	SoundCue* ToggleFiremodeSound3P;//[Offset: 0x8f8, Size: 1]
	SoundCue* FromAdsSound1p;//[Offset: 0x900, Size: 1]
	SoundCue* FromAdsSound3p;//[Offset: 0x908, Size: 1]
	SoundCue* ToAdsSound1p;//[Offset: 0x910, Size: 1]
	SoundCue* ToAdsSound3p;//[Offset: 0x918, Size: 1]
	SoundCue* SightSwitchingSound1p;//[Offset: 0x920, Size: 1]
	SoundCue* SightSwitchingSound3p;//[Offset: 0x928, Size: 1]
	SoundCue* MagEmptySound1p;//[Offset: 0x930, Size: 1]
	SoundCue* MagEmptySound3p;//[Offset: 0x938, Size: 1]
	SoundCue* EmptyUseSound1p;//[Offset: 0x940, Size: 1]
	SoundCue* EmptyUseSound3p;//[Offset: 0x948, Size: 1]
	SoundCue* EmptyAltUseSound1p;//[Offset: 0x950, Size: 1]
	SoundCue* EmptyAltUseSound3p;//[Offset: 0x958, Size: 1]
	SQMontageSectionNames BobbingAimEndLoopSectionNames;//[Offset: 0x960, Size: 1]
	FText DefaultZeroingText;//[Offset: 0x988, Size: 1]
	FName AimDirectionSocketName;//[Offset: 0x9a0, Size: 1]
	bool bShowZeroingInHud;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9a8, Size: 1]

--------------------------------
Class: SQAdjustableSightMontageSet
	AnimMontage* BaseAdjustAds3pMontage;//[Offset: 0x0, Size: 1]
	AnimMontage* AdjustAdsTransition3pMontage;//[Offset: 0x8, Size: 1]
	AnimMontage* AdjustFromAdsTransition3pMontage;//[Offset: 0x10, Size: 1]
	Rotator LineOfFireAngle;//[Offset: 0x18, Size: 1]
	FText DistanceText;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQVehicleRecoil
	Vector2D RecoilFactor;//[Offset: 0x0, Size: 1]
	byte RepeatAmount;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQShotInfo
	byte ShotCounter;//[Offset: 0x0, Size: 1]
	float WorldTime;//[Offset: 0x4, Size: 1]
	Vector_NetQuantize10 Origin;//[Offset: 0x8, Size: 1]
	Vector_NetQuantizeNormal ShootDir;//[Offset: 0x14, Size: 1]
	bool bIsTracer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20, Size: 1]
	float PenetrationDamageMultiplier;//[Offset: 0x24, Size: 1]
	float ArmorDamageMultiplier;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQPenetrationTrace
	bool bIsActor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bHasValidReverseImpact;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	HitResult HitResult;//[Offset: 0x4, Size: 1]
	Vector ReverseAngleImpactLocation;//[Offset: 0x8c, Size: 1]
	Vector_NetQuantizeNormal ReverseAngleImpactNormal;//[Offset: 0x98, Size: 1]
	FName ReverseAngleBoneName;//[Offset: 0xa4, Size: 1]

--------------------------------
Class: SQWeaponSounds
	SoundCue* FireSound1P;//[Offset: 0x0, Size: 1]
	SoundCue* FireSound3P;//[Offset: 0x8, Size: 1]
	SoundCue* ReloadSound1P;//[Offset: 0x10, Size: 1]
	SoundCue* ReloadSound3P;//[Offset: 0x18, Size: 1]
	SoundCue* DryReloadSound1P;//[Offset: 0x20, Size: 1]
	SoundCue* DryReloadSound3P;//[Offset: 0x28, Size: 1]
	SoundCue* EquipSound1P;//[Offset: 0x30, Size: 1]
	SoundCue* EquipSound3P;//[Offset: 0x38, Size: 1]
	SoundCue* UnequipSound1P;//[Offset: 0x40, Size: 1]
	SoundCue* UnequipSound3P;//[Offset: 0x48, Size: 1]
	SoundCue* TriggerSound1P;//[Offset: 0x50, Size: 1]
	SoundCue* TriggerSound3P;//[Offset: 0x58, Size: 1]
	SoundCue* BoltSound1P;//[Offset: 0x60, Size: 1]
	SoundCue* BoltSound3P;//[Offset: 0x68, Size: 1]
	SoundCue* ToggleFiremodeSound1P;//[Offset: 0x70, Size: 1]
	SoundCue* ToggleFiremodeSound3P;//[Offset: 0x78, Size: 1]
	FName SoundSocket;//[Offset: 0x80, Size: 1]

--------------------------------
Class: SQWeaponAnims
	AnimSequence* StandAnim;//[Offset: 0x0, Size: 1]
	AnimSequence* EquipAnim;//[Offset: 0x8, Size: 1]
	AnimSequence* FireRecoilAnim;//[Offset: 0x10, Size: 1]
	AnimSequence* FireTriggerAnim;//[Offset: 0x18, Size: 1]
	AnimSequence* ReloadAnim;//[Offset: 0x20, Size: 1]
	AnimSequence* DryAnim;//[Offset: 0x28, Size: 1]
	AnimSequence* ToggleFiremodeAnim;//[Offset: 0x30, Size: 1]
	bool bShouldLockBult;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38, Size: 1]
	float TriggerPullDuration;//[Offset: 0x3c, Size: 1]
	CurveVector* AimOffsetCurve;//[Offset: 0x40, Size: 1]

--------------------------------
Class: SQRecoilData
	Vector2D RecoilFactorMin;//[Offset: 0x0, Size: 1]
	Vector2D RecoilFactorMax;//[Offset: 0x8, Size: 1]
	float RecoilZoomFactor;//[Offset: 0x10, Size: 1]
	float RecoilDuration;//[Offset: 0x14, Size: 1]
	float NotAimingDownSightsMultiplier;//[Offset: 0x18, Size: 1]
	CurveFloat* RecoilCurve;//[Offset: 0x20, Size: 1]
	CurveFloat* RecoilCurveCrouch;//[Offset: 0x28, Size: 1]
	CurveFloat* RecoilCurveProne;//[Offset: 0x30, Size: 1]
	int RecoilCurveIndex;//[Offset: 0x38, Size: 1]
	bool bUseRecoilMultipliers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3c, Size: 1]
	float CrouchRecoilMultiplier;//[Offset: 0x40, Size: 1]
	float ProneRecoilMultiplier;//[Offset: 0x44, Size: 1]

--------------------------------
Class: SQWeaponEffects
	ParticleSystem* MuzzleFlashEffect1P;//[Offset: 0x0, Size: 1]
	ParticleSystem* MuzzleFlashEffect3P;//[Offset: 0x8, Size: 1]
	ParticleSystem* ShellEjection1P;//[Offset: 0x10, Size: 1]
	ParticleSystem* ShellEjection3P;//[Offset: 0x18, Size: 1]
	FName MuzzleFlashSocket;//[Offset: 0x20, Size: 1]
	FName ShellEjectionSocket;//[Offset: 0x28, Size: 1]
	float ShellEjectionCullDistanceInMeters;//[Offset: 0x30, Size: 1]
	class SQLastingEffect* DustCloudLastingEffect1p;//[Offset: 0x38, Size: 1]
	class SQLastingEffect* DustCloudLastingEffect3p;//[Offset: 0x40, Size: 1]
	Rotator DustCloudLastingEffectAdditionalRotation;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQWeaponSpring
	Vector WeaponSpringFactor;//[Offset: 0x0, Size: 1]
	Vector WeaponSpringRotationPivot;//[Offset: 0xc, Size: 1]
	Rotator WeaponSpringRotationFactor;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQMagazineData
	int DefaultRoundsPerMag;//[Offset: 0x0, Size: 1]
	int RemainingRounds;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SQPenetrationProxy.SQPenetrationTrace

--------------------------------
Class: SQWeaponData
	bool bInfiniteAmmo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool bInfiniteMags;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	int MaxMags;//[Offset: 0x4, Size: 1]
	int RoundsPerMag;//[Offset: 0x8, Size: 1]
	bool bAllowRoundInChamber;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	bool bAllowSingleLoad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd, Size: 1]
	int[] Firemodes;//[Offset: 0x10, Size: 1]
	float TimeBetweenShots;//[Offset: 0x20, Size: 1]
	float TimeBetweenSingleShots;//[Offset: 0x24, Size: 1]
	bool bCanReloadWhenEquipping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bCreateProjectileOnServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	float TacticalReloadDuration;//[Offset: 0x2c, Size: 1]
	float DryReloadDuration;//[Offset: 0x30, Size: 1]
	float TacticalReloadBipodDuration;//[Offset: 0x34, Size: 1]
	float ReloadDryBipodDuration;//[Offset: 0x38, Size: 1]
	float ZoomDuration;//[Offset: 0x3c, Size: 1]
	float ADSPostTransitionRatio;//[Offset: 0x40, Size: 1]
	bool bAllowZoom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x44, Size: 1]
	bool bAverageFireRate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x45, Size: 1]
	bool bResetBurstOnTriggerRelease;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x46, Size: 1]
	class SQProjectile* ProjectileClass;//[Offset: 0x48, Size: 1]
	int RoundsBetweenTracer;//[Offset: 0x50, Size: 1]
	class SQProjectile* TracerProjectileClass;//[Offset: 0x58, Size: 1]
	float MuzzleVelocity;//[Offset: 0x60, Size: 1]
	float MaxDamageToApply;//[Offset: 0x64, Size: 1]
	float TimeToStartDamageFallOff;//[Offset: 0x68, Size: 1]
	float DistanceToStartDamageFallOff;//[Offset: 0x6c, Size: 1]
	float DamageFallOffRate;//[Offset: 0x70, Size: 1]
	float MinDamageToApply;//[Offset: 0x74, Size: 1]
	CurveFloat* DamageFalloffCurve;//[Offset: 0x78, Size: 1]
	bool bIsBarrelSocketOnSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x80, Size: 1]
	FName BarrelSocketName;//[Offset: 0x84, Size: 1]
	float MOA;//[Offset: 0x8c, Size: 1]
	float MaximumTraceDistance;//[Offset: 0x90, Size: 1]
	float WallHackCheckTraceDistance;//[Offset: 0x94, Size: 1]
	float ProjectileCameraRelativeOffsetMultiplier;//[Offset: 0x98, Size: 1]
	bool bMagMustBeEmptyForVehicleRearm;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9c, Size: 1]
	bool bRearmOnlyIfCurrentMagazineIsEmpty;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9d, Size: 1]
	bool bRearmCanFillCurrentMagazine;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9e, Size: 1]
	float MinimumTimeBetweenRearms;//[Offset: 0xa0, Size: 1]
	bool bRearmOnlyOneMagazine;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa4, Size: 1]
	bool bRearmOnlyXRoundsOfAmmo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa5, Size: 1]
	int RearmRoundsOfAmmoPerRearm;//[Offset: 0xa8, Size: 1]
	int ArmorPenetrationDepthMillimeters;//[Offset: 0xac, Size: 1]
	CurveFloat* ArmorPenetrationDepthCurve;//[Offset: 0xb0, Size: 1]
	float TraceDistanceAfterPenetrationMeters;//[Offset: 0xb8, Size: 1]

--------------------------------
Class: SQProjectile.Actor.Object
	SphereComponent* CollisionComp;//[Offset: 0x228, Size: 1]
	ProjectileMovementComponent* ProjectileMovement;//[Offset: 0x230, Size: 1]
	class DamageType* DamageTypeToApply;//[Offset: 0x238, Size: 1]
	HitResult LastImpactHitResult;//[Offset: 0x240, Size: 1]
	bool bHasImpacted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	bool bDestroyOnImpact;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c9, Size: 1]
	bool bAppliesSuppression;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ca, Size: 1]
	float CollisionSize;//[Offset: 0x2cc, Size: 1]
	bool bIsExplosiveProjectile;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2fc, Size: 1]
	float ExplosiveBaseDamage;//[Offset: 0x300, Size: 1]
	float ExplosiveMinimumDamage;//[Offset: 0x304, Size: 1]
	float ExplosiveKillZoneRadius;//[Offset: 0x308, Size: 1]
	float ExplosiveDamageInnerRadius;//[Offset: 0x30c, Size: 1]
	float ExplosiveDamageOuterRadius;//[Offset: 0x310, Size: 1]
	float ExplosiveDamageFalloff;//[Offset: 0x314, Size: 1]
	float ArmorPenetrationDepthMillimeters;//[Offset: 0x318, Size: 1]
	float TraceDistanceAfterPenetrationMeters;//[Offset: 0x31c, Size: 1]
	float ExplosiveDamageDistanceFromImpactNormal;//[Offset: 0x320, Size: 1]
	AudioComponent* ProjectileAC;//[Offset: 0x328, Size: 1]
	bool bOnlyPlayFlybySoundOnProjectile;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x330, Size: 1]
	SoundCue* FlybySound;//[Offset: 0x338, Size: 1]
	class SQSuppressionInfo* SuppressionInfoClass;//[Offset: 0x340, Size: 1]
	<SQPhysicalMaterial*,SQProjectileImpactEffect> SpecificImpactEffects;//[Offset: 0x348, Size: 1]
	<SQPhysicalMaterial*,SQProjectileImpactEffect> SpecificThrowableEffects;//[Offset: 0x398, Size: 1]
	<SQPhysicalMaterial*,SQProjectileImpactEffect> SpecificExplosionEffects;//[Offset: 0x3e8, Size: 1]
	class SQPhysicalMaterialEffects* DefaultEffectsClass;//[Offset: 0x438, Size: 1]
	bool bClientAuthoritativeImpact;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x440, Size: 1]
	bool bProxiesPredictImpact;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x441, Size: 1]
	Controller* DamageInstigatorController;//[Offset: 0x448, Size: 1]
	AudioComponent* PlayProjectileSound(SoundCue* Sound);// 0xdea8e0
	bool PlayExplosionEffect(out const HitResult ImpactHit);// 0xdea7f0
	void OnOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xdea160
	void OnImpact(Actor* SelfActor, Actor* OtherActor, Vector NormalImpulse, out const HitResult Hit);// 0xde9fc0
	SQEquipableItem* GetWeapon();// 0xde9880
	float GetDamage();// 0xde95a0
	void DisableAndDestroy();// 0xd97a50
	bool BPApplyExplosiveDamage(out const HitResult LastHitResult, Actor* DamageCauser, Actor*[] IgnoreActors);// 0xde9300
	void BlueprintOnImpact(out const HitResult HitResult);// 0x1d69c50

--------------------------------
Class: ProjectileMovementComponent.MovementComponent.ActorComponent.Object
	float InitialSpeed;//[Offset: 0xf0, Size: 1]
	float MaxSpeed;//[Offset: 0xf4, Size: 1]
	bool bRotationFollowsVelocity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xf8, Size: 1]
	bool bRotationRemainsVertical;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xf8, Size: 1]
	bool bShouldBounce;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xf8, Size: 1]
	bool bInitialVelocityInLocalSpace;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xf8, Size: 1]
	bool bForceSubStepping;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0xf8, Size: 1]
	bool bSimulationEnabled;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0xf8, Size: 1]
	bool bSweepCollision;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0xf8, Size: 1]
	bool bIsHomingProjectile;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0xf8, Size: 1]
	bool bBounceAngleAffectsFriction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xf9, Size: 1]
	bool bIsSliding;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xf9, Size: 1]
	bool bInterpMovement;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xf9, Size: 1]
	bool bInterpRotation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xf9, Size: 1]
	float PreviousHitTime;//[Offset: 0xfc, Size: 1]
	Vector PreviousHitNormal;//[Offset: 0x100, Size: 1]
	float ProjectileGravityScale;//[Offset: 0x10c, Size: 1]
	float Buoyancy;//[Offset: 0x110, Size: 1]
	float Bounciness;//[Offset: 0x114, Size: 1]
	float Friction;//[Offset: 0x118, Size: 1]
	float BounceVelocityStopSimulatingThreshold;//[Offset: 0x11c, Size: 1]
	float MinFrictionFraction;//[Offset: 0x120, Size: 1]
	MulticastInlineDelegateProperty OnProjectileBounce;//[Size: 1]
	MulticastInlineDelegateProperty OnProjectileStop;//[Size: 1]
	float HomingAccelerationMagnitude;//[Offset: 0x148, Size: 1]
	SceneComponent* HomingTargetComponent;//[Offset: 0x14c, Size: 1]
	float MaxSimulationTimeStep;//[Offset: 0x154, Size: 1]
	int MaxSimulationIterations;//[Offset: 0x158, Size: 1]
	int BounceAdditionalIterations;//[Offset: 0x15c, Size: 1]
	float InterpLocationTime;//[Offset: 0x160, Size: 1]
	float InterpRotationTime;//[Offset: 0x164, Size: 1]
	float InterpLocationMaxLagDistance;//[Offset: 0x168, Size: 1]
	float InterpLocationSnapToTargetDistance;//[Offset: 0x16c, Size: 1]
	void StopSimulating(out const HitResult HitResult);// 0x3fe3b40
	void SetVelocityInLocalSpace(Vector NewVelocity);// 0x3fe3ab0
	void SetInterpolatedComponent(SceneComponent* Component);// 0x3fe3910
	void ResetInterpolation();// 0x3ec9f10
	void OnProjectileStopDelegate__DelegateSignature(out const HitResult ImpactResult);// 0x1d69c50
	void OnProjectileBounceDelegate__DelegateSignature(out const HitResult ImpactResult, out const Vector ImpactVelocity);// 0x1d69c50
	void MoveInterpolationTarget(out const Vector NewLocation, out const Rotator NewRotation);// 0x3fe36a0
	Vector LimitVelocity(Vector NewVelocity);// 0x3fe35f0
	bool IsVelocityUnderSimulationThreshold();// 0x3fe3590
	bool IsInterpolationComplete();// 0x3fe3560

--------------------------------
Class: SQWeaponAttachment.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	FName SocketName;//[Offset: 0x4e0, Size: 1]
	SQWeapon* AttachedWeapon;//[Offset: 0x4e8, Size: 1]
	bool bShowIn1P;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4f0, Size: 1]
	bool bShowIn3P;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4f1, Size: 1]

--------------------------------
Class: ADSPostProcessSettings.DataAsset.Object
	CurveFloat* BlendCurve;//[Offset: 0x30, Size: 1]
	float MaxBlurAmount;//[Offset: 0x38, Size: 1]
	int BlurSteps;//[Offset: 0x3c, Size: 1]
	float BlurDist;//[Offset: 0x40, Size: 1]
	float PinholeSize;//[Offset: 0x44, Size: 1]
	float PinholeFadeSize;//[Offset: 0x48, Size: 1]
	PostProcessSettings PPSettings;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQDynamicEasingStruct
	float Target;//[Offset: 0x0, Size: 1]
	float Position;//[Offset: 0x4, Size: 1]
	float Velocity;//[Offset: 0x8, Size: 1]
	float Acceleration;//[Offset: 0xc, Size: 1]
	float OppositeAcceleration;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQWeaponGroupData.FastArraySerializerItem
	SQEquipableItem*[] Weapons;//[Offset: 0x10, Size: 1]
	int Index;//[Offset: 0x20, Size: 1]
	int SelectedWeaponOffset;//[Offset: 0x24, Size: 1]

--------------------------------
Class: SQWeaponGroupDataArray.FastArraySerializer
	SQWeaponGroupData[] Items;//[Offset: 0x108, Size: 1]

--------------------------------
Class: SQRearmWeaponRequest
	SQEquipableItem* Weapon;//[Offset: 0x0, Size: 1]
	int MagsToRearm;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVehicleSeatConfig
	enum SeatAbilityRequirement;//[Offset: 0x0, Size: 1]
	bool bAllowDetachSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	bool bExposedSeat;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2, Size: 1]
	float SeatHealth;//[Offset: 0x4, Size: 1]
	float MaxRepairToolLimit;//[Offset: 0x8, Size: 1]
	bool bPassDamageToVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	float CollisionDamageMultipler;//[Offset: 0x10, Size: 1]
	bool bPassPointDamageToVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x14, Size: 1]
	bool bSoldierCanTakeDirectRadialDamage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x15, Size: 1]
	bool bPassRadialDamageToVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x16, Size: 1]
	FName SeatAttachSocket;//[Offset: 0x18, Size: 1]
	FName SoldierAttachSocket;//[Offset: 0x20, Size: 1]
	class SQVehicleSeat* SeatPawn;//[Offset: 0x28, Size: 1]
	int InitialState;//[Offset: 0x30, Size: 1]
	SQVehicleSeatState[] SeatStates;//[Offset: 0x38, Size: 1]
	bool bShouldAlwaysStayRegistered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48, Size: 1]
	bool bSoldierInSeatCanCapture;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x49, Size: 1]
	bool bUseRotationComponentForControlRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4a, Size: 1]
	float PlayerEnterDuration;//[Offset: 0x4c, Size: 1]

--------------------------------
Class: SQVehicleSeatState
	SQVehicleSeatAnimationState AnimationState;//[Offset: 0x0, Size: 1]
	SQVehicleSeatTransitionState TransitionState;//[Offset: 0x58, Size: 1]

--------------------------------
Class: SQVehicleSeatAnimationState
	AnimMontage* PawnAnimation;//[Offset: 0x0, Size: 1]
	AnimMontage* SeatAnimation;//[Offset: 0x8, Size: 1]
	AnimSequence* BaseAnimation;//[Offset: 0x10, Size: 1]
	BlendSpace* AimOffsets;//[Offset: 0x18, Size: 1]
	bool bUseWheelBlendSpace1D;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20, Size: 1]
	BlendSpace1D* WheelBlendSpace1D;//[Offset: 0x28, Size: 1]
	bool bUseHandIK;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x30, Size: 1]
	bool bUseWeaponForHandIK;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x31, Size: 1]
	float LeftHandIKAlpha;//[Offset: 0x34, Size: 1]
	FName LeftHandIKSocketName;//[Offset: 0x38, Size: 1]
	float RightHandIKAlpha;//[Offset: 0x40, Size: 1]
	FName RightHandIKSocketName;//[Offset: 0x44, Size: 1]
	AnimSequence* SteeringWheelSingleFrameAnimSequence;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQVehicleSeatTransitionState
	enum SoldierSeatState;//[Offset: 0x0, Size: 1]
	float CollisionDamageMultipler;//[Offset: 0x4, Size: 1]
	bool bSoldierCanTakeDirectRadialDamage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	bool bAllowDetachSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]
	bool bEjectDeadSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa, Size: 1]
	bool bEjectIncappedSoldier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb, Size: 1]
	bool bOnlyPlayExteriorVehicleSounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	SoundMix* SoundMix;//[Offset: 0x10, Size: 1]
	enum ListenerTypeOverride;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQInventoryWeaponGroupData
	SQInventoryData[] WeaponItems;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQRoleLimit
	int MinPerTeam;//[Offset: 0x0, Size: 1]
	int MinPerSquad;//[Offset: 0x4, Size: 1]
	int SquadMembersToUnlockNextKit;//[Offset: 0x8, Size: 1]
	int UnlocksAtSquadSize;//[Offset: 0xc, Size: 1]
	int StopScalingAtSquadSize;//[Offset: 0x10, Size: 1]
	int TeamMembersToUnlockNextKit;//[Offset: 0x14, Size: 1]
	int UnlocksAtTeamSize;//[Offset: 0x18, Size: 1]
	int StopScalingAtTeamSize;//[Offset: 0x1c, Size: 1]
	bool bSquadLeaderOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20, Size: 1]
	bool bNonDeployable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x21, Size: 1]

--------------------------------
Class: PrimaryAssetRules
	int Priority;//[Offset: 0x0, Size: 1]
	int ChunkId;//[Offset: 0x4, Size: 1]
	bool bApplyRecursively;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	enum CookRule;//[Offset: 0x9, Size: 1]

--------------------------------
Class: SQInfantryWeapon.SQWeapon.SQEquipableItem.Actor.Object
	MaterialParameterCollection* AdsScopeFovParameterCollection;//[Offset: 0x7c0, Size: 1]
	FName AdsScopeFovParameterName;//[Offset: 0x7c8, Size: 1]
	SQSoldier* GetOwnerSoldier();// 0xda6de0
	bool BlueprintIsAnimationSystemValid();// 0xda6cd0

--------------------------------
Class: ODKBazaarBundle.ODKBazaarItem.DataAsset.Object
	ODKBazaarItem*[] Items;//[Offset: 0xe0, Size: 1]
	int Row;//[Offset: 0xf0, Size: 1]
	int RowSpan;//[Offset: 0xf4, Size: 1]
	int Column;//[Offset: 0xf8, Size: 1]
	int ColumnSpan;//[Offset: 0xfc, Size: 1]
	bool bIsOnSale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x100, Size: 1]
	FString PurchaseText;//[Offset: 0x108, Size: 1]

--------------------------------
Class: BoolIniConfigSetting.IniConfigSetting.SQSettingBase

--------------------------------
Class: IniConfigSetting.SQSettingBase

--------------------------------
Class: SQJoyStickConfig
	enum CurveType;//[Offset: 0x0, Size: 1]
	float DeadZone;//[Offset: 0x4, Size: 1]
	bool FlipFactor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	float CurveFactor;//[Offset: 0xc, Size: 1]

--------------------------------
Class: SQOnlineInventorySetting
	int ItemId;//[Offset: 0x0, Size: 1]
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4, Size: 1]

--------------------------------
Class: SQDeployableAmmoBag.SQDeployableItem.SQDeployable.Actor.Object
	MulticastInlineDelegateProperty AmmoBagAmmoUpdatedEvent;//[Size: 1]
	MulticastInlineDelegateProperty RearmSourceAmmoUpdatedEvent;//[Size: 1]
	float AmmoCount;//[Offset: 0x470, Size: 1]
	float OutOfAmmoLifetime;//[Offset: 0x474, Size: 1]
	void OnRep_AmmoCount();// 0xd790a0
	void BP_PickedUp(SQEquipableItem* EquippableAmmoBag);// 0x1d69c50

--------------------------------
Class: SQDeployableItem.SQDeployable.Actor.Object
	SQPlayerController* InstigatingPlayerController;//[Offset: 0x428, Size: 1]
	SQPlayerState* InstigatingPlayerState;//[Offset: 0x430, Size: 1]
	int MaxAllowedPerPlayerInGame;//[Offset: 0x438, Size: 1]
	enum TrackDeployableOverMaxResult;//[Offset: 0x43c, Size: 1]
	class SQEquipableItem* EquippableInstigatorClass;//[Offset: 0x440, Size: 1]

--------------------------------
Class: SQDeployableInteractable.SQDeployableItem.SQDeployable.Actor.Object
	void BP_PickedUp(SQEquipableItem* EquippableDeployableInteractable);// 0x1d69c50

--------------------------------
Class: SQClimbInfo
	enum PendingType;//[Offset: 0x1, Size: 1]
	Vector_NetQuantize10[] PendingClimbMovePathZeroBased;//[Offset: 0x18, Size: 1]
	enum PendingState;//[Offset: 0x29, Size: 1]

--------------------------------
Class: SQBoundaryListener.ActorComponent.Object
	bool bRegisterToAllBoundaries;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb0, Size: 1]
	class SQBoundary[] TargetBoundaryClasses;//[Offset: 0xb8, Size: 1]
	MulticastInlineDelegateProperty OnEnterBoundarySignal;//[Size: 1]
	MulticastInlineDelegateProperty OnExitBoundarySignal;//[Size: 1]
	Actor* OverrideTargetActor;//[Offset: 0xe8, Size: 1]
	SQBoundary*[] Boundaries;//[Offset: 0xf0, Size: 1]
	void UnregisterAllBoundaries();// 0xd5ad70
	bool ShouldRegisterToBoundary(const SQBoundary* Boundary);// 0xd5ac00
	void OnExitBoundary(SQBoundary* Boundary);// 0xd5a470
	void OnEnterBoundary(SQBoundary* Boundary);// 0xd5a3e0
	Actor* GetActor();// 0xd59da0

--------------------------------
Class: SQBoundary.Actor.Object
	SplineComponent* XYBoundary;//[Offset: 0x228, Size: 1]
	bool bXYBoundaryTangetsInwards;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x230, Size: 1]
	int BoundaryMaskSizeX;//[Offset: 0x234, Size: 1]
	int BoundaryMaskSizeY;//[Offset: 0x238, Size: 1]
	Texture2D* BoundaryMask;//[Offset: 0x240, Size: 1]
	float CeilingHeight;//[Offset: 0x248, Size: 1]
	float FloorHeight;//[Offset: 0x24c, Size: 1]
	float CheckDelaySeconds;//[Offset: 0x250, Size: 1]
	bool bDefaultToInside;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x254, Size: 1]
	bool bComplexCheck;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x255, Size: 1]
	<SQBoundaryListener*,SQBoundaryListenerData> ListenerDatas;//[Offset: 0x258, Size: 1]
	byte[] BoundaryMaskData;//[Offset: 0x2d0, Size: 1]
	bool UnregisterListener(SQBoundaryListener* Listener);// 0xd5ad90
	bool RegisterListener(SQBoundaryListener* Listener, bool bForce);// 0xd5a770
	void OnListenerExitBoundary(SQBoundaryListener* Listener);// 0xd5a5b0
	void OnListenerEnterBoundary(SQBoundaryListener* Listener);// 0xd5a520
	bool IsInside(out const Vector Location);// 0xd5a300
	BoxSphereBounds GetXYBoundaryBounds();// 0xd5a230
	void GenerateBoundaryMask();// 0xd59d80
	SQBoundaryListenerData FindListenerData(SQBoundaryListener* Listener, out bool bOutFound);// 0xd59b10

--------------------------------
Class: SplineComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	SplineCurves SplineCurves;//[Offset: 0x450, Size: 1]
	InterpCurveVector SplineInfo;//[Offset: 0x4c0, Size: 1]
	InterpCurveQuat SplineRotInfo;//[Offset: 0x4d8, Size: 1]
	InterpCurveVector SplineScaleInfo;//[Offset: 0x4f0, Size: 1]
	InterpCurveFloat SplineReparamTable;//[Offset: 0x508, Size: 1]
	bool bAllowSplineEditingPerInstance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x520, Size: 1]
	int ReparamStepsPerSegment;//[Offset: 0x524, Size: 1]
	float Duration;//[Offset: 0x528, Size: 1]
	bool bStationaryEndpoints;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x52c, Size: 1]
	bool bSplineHasBeenEdited;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x52d, Size: 1]
	bool bModifiedByConstructionScript;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x52e, Size: 1]
	bool bInputSplinePointsToConstructionScript;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x52f, Size: 1]
	bool bDrawDebug;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x530, Size: 1]
	bool bClosedLoop;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x531, Size: 1]
	bool bLoopPositionOverride;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x532, Size: 1]
	float LoopPosition;//[Offset: 0x534, Size: 1]
	Vector DefaultUpVector;//[Offset: 0x538, Size: 1]
	void UpdateSpline();// 0xe028c0
	void SetWorldLocationAtSplinePoint(int PointIndex, out const Vector InLocation);// 0x40129c0
	void SetUpVectorAtSplinePoint(int PointIndex, out const Vector InUpVector, byte CoordinateSpace, bool bUpdateSpline);// 0x4012850
	void SetUnselectedSplineSegmentColor(out const LinearColor SegmentColor);// 0x4012000
	void SetTangentsAtSplinePoint(int PointIndex, out const Vector InArriveTangent, out const Vector InLeaveTangent, byte CoordinateSpace, bool bUpdateSpline);// 0x4012680
	void SetTangentColor(out const LinearColor TangentColor);// 0x4012000
	void SetTangentAtSplinePoint(int PointIndex, out const Vector InTangent, byte CoordinateSpace, bool bUpdateSpline);// 0x4012510
	void SetSplineWorldPoints(out const Vector[] Points);// 0x4012460
	void SetSplinePointType(int PointIndex, byte Type, bool bUpdateSpline);// 0x4012220
	void SetSplinePoints(out const Vector[] Points, byte CoordinateSpace, bool bUpdateSpline);// 0x4012330
	void SetSplineLocalPoints(out const Vector[] Points);// 0x4012170
	void SetSelectedSplineSegmentColor(out const LinearColor SegmentColor);// 0x4012000
	void SetScaleAtSplinePoint(int PointIndex, out const Vector InScaleVector, bool bUpdateSpline);// 0x4011ef0
	void SetRotationAtSplinePoint(int PointIndex, out const Rotator InRotation, byte CoordinateSpace, bool bUpdateSpline);// 0x4011d80
	void SetLocationAtSplinePoint(int PointIndex, out const Vector InLocation, byte CoordinateSpace, bool bUpdateSpline);// 0x4011c10
	void SetDrawDebug(bool bShow);// 0x4011b80
	void SetDefaultUpVector(out const Vector UpVector, byte CoordinateSpace);// 0x4011aa0
	void SetClosedLoopAtPosition(bool bInClosedLoop, float Key, bool bUpdateSpline);// 0x4011980
	void SetClosedLoop(bool bInClosedLoop, bool bUpdateSpline);// 0x40118b0
	void RemoveSplinePoint(int Index, bool bUpdateSpline);// 0x40117e0
	bool IsClosedLoop();// 0x40117b0
	Vector GetWorldTangentAtDistanceAlongSpline(float distance);// 0x4011700
	Rotator GetWorldRotationAtTime(float Time, bool bUseConstantVelocity);// 0x4011610
	Rotator GetWorldRotationAtDistanceAlongSpline(float distance);// 0x4011560
	Vector GetWorldLocationAtTime(float Time, bool bUseConstantVelocity);// 0x4011470
	Vector GetWorldLocationAtSplinePoint(int PointIndex);// 0x40113c0
	Vector GetWorldLocationAtDistanceAlongSpline(float distance);// 0x4011310
	Vector GetWorldDirectionAtTime(float Time, bool bUseConstantVelocity);// 0x4011220
	Vector GetWorldDirectionAtDistanceAlongSpline(float distance);// 0x4011170
	Vector GetVectorPropertyAtSplinePoint(int Index, FName PropertyName);// 0x4011090
	Vector GetVectorPropertyAtSplineInputKey(float InKey, FName PropertyName);// 0x4010fb0
	Vector GetUpVectorAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x4010e80
	Vector GetUpVectorAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x4010da0
	Vector GetUpVectorAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x4010cb0
	Vector GetUpVectorAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x4010bc0
	Transform GetTransformAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity, bool bUseScale);// 0x4010a20
	Transform GetTransformAtSplinePoint(int PointIndex, byte CoordinateSpace, bool bUseScale);// 0x40108d0
	Transform GetTransformAtSplineInputKey(float InKey, byte CoordinateSpace, bool bUseScale);// 0x4010770
	Transform GetTransformAtDistanceAlongSpline(float distance, byte CoordinateSpace, bool bUseScale);// 0x4010610
	Vector GetTangentAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x40104e0
	Vector GetTangentAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400eb50
	Vector GetTangentAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x40103f0
	Vector GetTangentAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x4010300
	byte GetSplinePointType(int PointIndex);// 0x4010260
	float GetSplineLength();// 0x4010230
	Vector GetScaleAtTime(float Time, bool bUseConstantVelocity);// 0x40100b0
	Vector GetScaleAtSplinePoint(int PointIndex);// 0x4010000
	Vector GetScaleAtSplineInputKey(float InKey);// 0x400ff60
	Vector GetScaleAtDistanceAlongSpline(float distance);// 0x400fec0
	Rotator GetRotationAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x400fd90
	Rotator GetRotationAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400fcb0
	Rotator GetRotationAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x400fbc0
	Rotator GetRotationAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x400fad0
	float GetRollAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x400f9b0
	float GetRollAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400f8e0
	float GetRollAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x400f800
	float GetRollAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x400f720
	Vector GetRightVectorAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x400f5f0
	Vector GetRightVectorAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400f510
	Vector GetRightVectorAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x400f420
	Vector GetRightVectorAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x400f330
	int GetNumberOfSplineSegments();// 0x400f300
	int GetNumberOfSplinePoints();// 0x400f2d0
	Vector GetLocationAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x400f1a0
	Vector GetLocationAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400f0c0
	Vector GetLocationAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x400efd0
	Vector GetLocationAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x400eee0
	void GetLocationAndTangentAtSplinePoint(int PointIndex, out Vector Location, out Vector Tangent, byte CoordinateSpace);// 0x400ed60
	void GetLocalLocationAndTangentAtSplinePoint(int PointIndex, out Vector LocalLocation, out Vector LocalTangent);// 0x400ec30
	Vector GetLeaveTangentAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400eb50
	float GetInputKeyAtDistanceAlongSpline(float distance);// 0x400eab0
	float GetFloatPropertyAtSplinePoint(int Index, FName PropertyName);// 0x400e9e0
	float GetFloatPropertyAtSplineInputKey(float InKey, FName PropertyName);// 0x400e910
	float GetDistanceAlongSplineAtSplinePoint(int PointIndex);// 0x400e870
	float GetDistanceAlongSplineAtSplineInputKey(float InKey);// 0x400e7d0
	Vector GetDirectionAtTime(float Time, byte CoordinateSpace, bool bUseConstantVelocity);// 0x400e6a0
	Vector GetDirectionAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400e5c0
	Vector GetDirectionAtSplineInputKey(float InKey, byte CoordinateSpace);// 0x400e4d0
	Vector GetDirectionAtDistanceAlongSpline(float distance, byte CoordinateSpace);// 0x400e3e0
	Vector GetDefaultUpVector(byte CoordinateSpace);// 0x400e340
	Vector GetArriveTangentAtSplinePoint(int PointIndex, byte CoordinateSpace);// 0x400e260
	Vector FindUpVectorClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400e170
	Transform FindTransformClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace, bool bUseScale);// 0x400e010
	Vector FindTangentClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400df20
	Vector FindScaleClosestToWorldLocation(out const Vector WorldLocation);// 0x400de70
	Rotator FindRotationClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400dd80
	float FindRollClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400dca0
	Vector FindRightVectorClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400dbb0
	Vector FindLocationClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400dac0
	float FindInputKeyClosestToWorldLocation(out const Vector WorldLocation);// 0x400da20
	Vector FindDirectionClosestToWorldLocation(out const Vector WorldLocation, byte CoordinateSpace);// 0x400d930
	void ClearSplinePoints(bool bUpdateSpline);// 0x400d8a0
	void AddSplineWorldPoint(out const Vector Position);// 0x400d800
	void AddSplinePointAtIndex(out const Vector Position, int Index, byte CoordinateSpace, bool bUpdateSpline);// 0x400d690
	void AddSplinePoint(out const Vector Position, byte CoordinateSpace, bool bUpdateSpline);// 0x400d570
	void AddSplineLocalPoint(out const Vector Position);// 0x400d4e0
	void AddPoints(out const SplinePoint[] Points, bool bUpdateSpline);// 0x400d3e0
	void AddPoint(out const SplinePoint Point, bool bUpdateSpline);// 0x400d2d0

--------------------------------
Class: SplinePoint
	float InputKey;//[Offset: 0x0, Size: 1]
	Vector Position;//[Offset: 0x4, Size: 1]
	Vector ArriveTangent;//[Offset: 0x10, Size: 1]
	Vector LeaveTangent;//[Offset: 0x1c, Size: 1]
	Rotator Rotation;//[Offset: 0x28, Size: 1]
	Vector Scale;//[Offset: 0x34, Size: 1]
	byte Type;//[Offset: 0x40, Size: 1]

--------------------------------
Class: SplineCurves
	InterpCurveVector Position;//[Offset: 0x0, Size: 1]
	InterpCurveQuat Rotation;//[Offset: 0x18, Size: 1]
	InterpCurveVector Scale;//[Offset: 0x30, Size: 1]
	InterpCurveFloat ReparamTable;//[Offset: 0x48, Size: 1]
	SplineMetadata* MetaData;//[Offset: 0x60, Size: 1]
	uint32 Version;//[Offset: 0x68, Size: 1]

--------------------------------
Class: InterpCurveVector
	InterpCurvePointVector[] Points;//[Offset: 0x0, Size: 1]
	bool bIsLooped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	float LoopKeyOffset;//[Offset: 0x14, Size: 1]

--------------------------------
Class: InterpCurvePointVector
	float InVal;//[Offset: 0x0, Size: 1]
	Vector OutVal;//[Offset: 0x4, Size: 1]
	Vector ArriveTangent;//[Offset: 0x10, Size: 1]
	Vector LeaveTangent;//[Offset: 0x1c, Size: 1]
	byte InterpMode;//[Offset: 0x28, Size: 1]

--------------------------------
Class: InterpCurveQuat
	InterpCurvePointQuat[] Points;//[Offset: 0x0, Size: 1]
	bool bIsLooped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	float LoopKeyOffset;//[Offset: 0x14, Size: 1]

--------------------------------
Class: InterpCurvePointQuat
	float InVal;//[Offset: 0x0, Size: 1]
	Quat OutVal;//[Offset: 0x10, Size: 1]
	Quat ArriveTangent;//[Offset: 0x20, Size: 1]
	Quat LeaveTangent;//[Offset: 0x30, Size: 1]
	byte InterpMode;//[Offset: 0x40, Size: 1]

--------------------------------
Class: InterpCurveFloat
	InterpCurvePointFloat[] Points;//[Offset: 0x0, Size: 1]
	bool bIsLooped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	float LoopKeyOffset;//[Offset: 0x14, Size: 1]

--------------------------------
Class: InterpCurvePointFloat
	float InVal;//[Offset: 0x0, Size: 1]
	float OutVal;//[Offset: 0x4, Size: 1]
	float ArriveTangent;//[Offset: 0x8, Size: 1]
	float LeaveTangent;//[Offset: 0xc, Size: 1]
	byte InterpMode;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SplineMetadata.Object

--------------------------------
Class: SQBoundaryListenerData
	bool bInsideBoundary;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	float CheckTime;//[Offset: 0x4, Size: 1]
	float EntryTime;//[Offset: 0x8, Size: 1]
	float ExitTime;//[Offset: 0xc, Size: 1]

--------------------------------
Class: SQConsoleVariablesComponent.ActorComponent.Object

--------------------------------
Class: SQSoldierMovement.CharacterMovementComponent.PawnMovementComponent.NavMovementComponent.MovementComponent.ActorComponent.Object
	CurveFloat* SoldierDefaultInclineMovementSpeedCurve;//[Offset: 0xaf0, Size: 1]
	float WalkSpeedMultiplier;//[Offset: 0xaf8, Size: 1]
	float StrafeSpeedMultiplier;//[Offset: 0xafc, Size: 1]
	float LeaningStandSpeedMultiplier;//[Offset: 0xb00, Size: 1]
	float LeaningCrouchSpeedMultiplier;//[Offset: 0xb04, Size: 1]
	float BackwardsWalkSpeedMultiplier;//[Offset: 0xb08, Size: 1]
	float DraggingSpeedMultiplier;//[Offset: 0xb0c, Size: 1]
	float OutsidePhysicsSpeedMultiplier;//[Offset: 0xb10, Size: 1]
	float AnimationSpeedLimiter;//[Offset: 0xb14, Size: 1]
	float SprintSpeedMultiplier;//[Offset: 0xb18, Size: 1]
	float MaxSprintAcceleration;//[Offset: 0xb1c, Size: 1]
	bool WasRunning;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb20, Size: 1]
	float MaxWalkSpeedProne;//[Offset: 0xb24, Size: 1]
	float ProneHalfHeight;//[Offset: 0xb28, Size: 1]
	bool bCanWalkOffLedgesWhenProne;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb2c, Size: 1]
	bool bCanSprintWhenCrouched;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xb2c, Size: 1]
	bool bWantsToProne;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xb2c, Size: 1]
	bool bProneMaintainsBaseLocation;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xb2c, Size: 1]
	float StickyGroundMultiplier;//[Offset: 0xb30, Size: 1]
	float Stamina;//[Offset: 0xb34, Size: 1]
	float StaminaMax;//[Offset: 0xb38, Size: 1]
	float TiredThreshold;//[Offset: 0xb3c, Size: 1]
	float ExhaustedThreshold;//[Offset: 0xb40, Size: 1]
	float ExhaustedPenalty;//[Offset: 0xb44, Size: 1]
	bool bStaminaExhausted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb48, Size: 1]
	float StaminaRegenRate;//[Offset: 0xb4c, Size: 1]
	float HurtStaminaRegenRate;//[Offset: 0xb50, Size: 1]
	bool bIsHurt;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb54, Size: 1]
	float UpdateStaminaFrequency;//[Offset: 0xb58, Size: 1]
	TimerHandle StaminaUpdateTimerHandle;//[Offset: 0xb60, Size: 1]
	float WalkPenalty;//[Offset: 0xb68, Size: 1]
	float ClimbingPenalty;//[Offset: 0xb6c, Size: 1]
	float MovePenalty;//[Offset: 0xb70, Size: 1]
	float SprintPenalty;//[Offset: 0xb74, Size: 1]
	float CrouchPenalty;//[Offset: 0xb78, Size: 1]
	float CrouchSprintPenalty;//[Offset: 0xb7c, Size: 1]
	float PronePenalty;//[Offset: 0xb80, Size: 1]
	float ProneSprintPenalty;//[Offset: 0xb84, Size: 1]
	float DraggingPenalty;//[Offset: 0xb88, Size: 1]
	float StandLeanPenalty;//[Offset: 0xb8c, Size: 1]
	float CrouchLeanPenalty;//[Offset: 0xb90, Size: 1]
	float BurstLeanPenalty;//[Offset: 0xb94, Size: 1]
	float StandStaminaRegenMultiplier;//[Offset: 0xb98, Size: 1]
	float CrouchStaminaRegenMultiplier;//[Offset: 0xb9c, Size: 1]
	float ProneStaminaRegenMultiplier;//[Offset: 0xba0, Size: 1]
	bool bLimitConsecutiveJumping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xba8, Size: 1]
	float ConsecutiveJumpingPenaltyReductionTime;//[Offset: 0xbac, Size: 1]
	float[] ConsecutiveJumpingVelocityMultipliers;//[Offset: 0xbb0, Size: 1]
	int ConsecutiveJumpingArrayIndex;//[Offset: 0xbc0, Size: 1]
	float LastJumpPenaltyChangeTime;//[Offset: 0xbc4, Size: 1]
	bool bStaminaLimitsRunning;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xbc8, Size: 1]
	bool bStaminaLimitsJumping;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xbc8, Size: 1]
	float StaminaUseThreshold;//[Offset: 0xbcc, Size: 1]
	bool bJumpingUsesStamina;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xbd0, Size: 1]
	float StaminaLossPerJump;//[Offset: 0xbd4, Size: 1]
	CurveFloat* SoldierWaterMovementSpeedCurve;//[Offset: 0xbd8, Size: 1]
	CurveFloat* SoldierWaterFallSpeedCurve;//[Offset: 0xbe0, Size: 1]
	CurveFloat* SoldierWaterStaminaDrainCurve;//[Offset: 0xbe8, Size: 1]
	Vector[] ClimbMovePath;//[Offset: 0xbf8, Size: 1]
	float[] ClimbInterpolationTimes;//[Offset: 0xc08, Size: 1]
	float BipodMaxAnglePerIteration;//[Offset: 0xc18, Size: 1]
	SQSoldier* SquadCharacterOwner;//[Offset: 0xc30, Size: 1]
	int ServerUpdateRate;//[Offset: 0xc38, Size: 1]
	int NonRenderedUpdateRate;//[Offset: 0xc3c, Size: 1]
	int NearByNonRenderedUpdateRate;//[Offset: 0xc40, Size: 1]
	int NearByNonRenderedUpdateRateDistance;//[Offset: 0xc44, Size: 1]
	float[] DistanceFactorThesholds;//[Offset: 0xc48, Size: 1]
	SkinnedMeshComponent*[] SkinnedComponents;//[Offset: 0xc58, Size: 1]
	bool bAimDownSights;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xc70, Size: 1]
	void UpdateStamina();// 0xd9f820
	void SetIsHurt(bool bHurt);// 0xe09220
	bool IsWalkPressed();// 0xe09090
	bool IsStaminaOverThreshold();// 0xe09060
	bool IsSprintPressed();// 0xe09000
	bool IsSprinting();// 0xe09030
	bool IsProne();// 0xe08fd0
	bool IsLeaningRight();// 0xe08fa0
	bool IsLeaningLeft();// 0xe08f70
	bool IsDragging();// 0xe08f10
	bool IsChestImmersed();// 0xe08ee0
	bool IsAimingDownSights();// 0xe08eb0
	float GetWaterImmersionPercentage();// 0xe08e70
	float GetWaterDepth();// 0xe08e30
	float GetProneWeight();// 0xe08dc0
	float GetJumpVelocity();// 0xe08d80
	float GetCrouchWeight();// 0xe08d40
	bool CanSprint();// 0xe08d10
	bool CanRun();// 0xe08ce0
	bool CanJump();// 0xe08cb0
	bool CanCrouchInCurrentState();// 0xe08c80
	float CalculateStamina(float Penalty, float StanceRegenMultiplier);// 0xe08ba0
	void ApplyStaminaBurstLoss(float Penalty);// 0xe08b10

--------------------------------
Class: SQBoneDamageMod
	FName BoneName;//[Offset: 0x0, Size: 1]
	float DamageMod;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQTakeHitInfo
	float ActualDamage;//[Offset: 0x0, Size: 1]
	float ServerTimestamp;//[Offset: 0x4, Size: 1]
	class Object* DamageTypeClass;//[Offset: 0x8, Size: 1]
	SQSoldier* PawnInstigator;//[Offset: 0x10, Size: 1]
	Actor* DamageCauser;//[Offset: 0x18, Size: 1]
	int DamageEventClassID;//[Offset: 0x20, Size: 1]
	bool bKilled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x24, Size: 1]
	bool bWounded;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x24, Size: 1]
	bool bEjectedFromVehicle;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x24, Size: 1]
	DamageEvent GeneralDamageEvent;//[Offset: 0x28, Size: 1]
	PointDamageEvent PointDamageEvent;//[Offset: 0x38, Size: 1]
	RadialDamageEvent RadialDamageEvent;//[Offset: 0xe0, Size: 1]
	PhysicalMaterial* PackagedHitResultPhysMaterial;//[Offset: 0x120, Size: 1]
	Actor* PackagedHitResultActor;//[Offset: 0x128, Size: 1]
	PrimitiveComponent* PackagedHitResultComponent;//[Offset: 0x130, Size: 1]

--------------------------------
Class: PointDamageEvent.DamageEvent
	float damage;//[Offset: 0x10, Size: 1]
	Vector_NetQuantizeNormal ShotDirection;//[Offset: 0x14, Size: 1]
	HitResult HitInfo;//[Offset: 0x20, Size: 1]

--------------------------------
Class: RadialDamageEvent.DamageEvent
	RadialDamageParams Params;//[Offset: 0x10, Size: 1]
	Vector Origin;//[Offset: 0x24, Size: 1]
	HitResult[] ComponentHits;//[Offset: 0x30, Size: 1]

--------------------------------
Class: RadialDamageParams
	float BaseDamage;//[Offset: 0x0, Size: 1]
	float MinimumDamage;//[Offset: 0x4, Size: 1]
	float InnerRadius;//[Offset: 0x8, Size: 1]
	float OuterRadius;//[Offset: 0xc, Size: 1]
	float DamageFalloff;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQBoneHitSound
	FName BoneName;//[Offset: 0x0, Size: 1]
	SoundCue* HitSound;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQPhysicalMaterialSoldiersEffects.Object
	SQPhysicalMaterialRedirectors* Redirectors;//[Offset: 0x28, Size: 1]
	<SQPhysicalMaterial*,SQSoldierEffect> Effects;//[Offset: 0x30, Size: 1]
	SQPhysicalMaterial* WaterEffectPhysMatOverride;//[Offset: 0x80, Size: 1]
	SQSoldierEffect WaterEffectOverride;//[Offset: 0x88, Size: 1]
	SQSoldierEffect GetEffect(const SQPhysicalMaterial* Material);// 0xdd71c0

--------------------------------
Class: SQSoldierEffect
	CurveFloat* SoldierInclineMovementSpeedCurve;//[Offset: 0x0, Size: 1]
	bool bPlayFootstepEffectWhenMovementInteractionTriggered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	ParticleSystem* FootstepEffect;//[Offset: 0x10, Size: 1]
	SoundCue* FootstepSound;//[Offset: 0x18, Size: 1]
	ParticleSystem* MovementInteractionParticleEffect;//[Offset: 0x20, Size: 1]
	SoundCue* MovementInteractionSound;//[Offset: 0x28, Size: 1]
	SoundCue* LandedSound;//[Offset: 0x30, Size: 1]

--------------------------------
Class: PhysicsHandleComponent.ActorComponent.Object
	PrimitiveComponent* GrabbedComponent;//[Offset: 0xb0, Size: 1]
	bool bSoftAngularConstraint;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0xc0, Size: 1]
	bool bSoftLinearConstraint;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0xc0, Size: 1]
	bool bInterpolateTarget;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0xc0, Size: 1]
	float LinearDamping;//[Offset: 0xc4, Size: 1]
	float LinearStiffness;//[Offset: 0xc8, Size: 1]
	float AngularDamping;//[Offset: 0xcc, Size: 1]
	float AngularStiffness;//[Offset: 0xd0, Size: 1]
	float InterpolationSpeed;//[Offset: 0x140, Size: 1]
	void SetTargetRotation(Rotator NewRotation);// 0x3fc7360
	void SetTargetLocationAndRotation(Vector NewLocation, Rotator NewRotation);// 0x3fc7280
	void SetTargetLocation(Vector NewLocation);// 0x3fc71f0
	void SetLinearStiffness(float NewLinearStiffness);// 0x3fc7170
	void SetLinearDamping(float NewLinearDamping);// 0x3fc70f0
	void SetInterpolationSpeed(float NewInterpolationSpeed);// 0x3fc7070
	void SetAngularStiffness(float NewAngularStiffness);// 0x3fc6ff0
	void SetAngularDamping(float NewAngularDamping);// 0x3fc6f70
	void ReleaseComponent();// 0x3eec460
	void GrabComponentAtLocationWithRotation(PrimitiveComponent* Component, FName InBoneName, Vector Location, Rotator Rotation);// 0x3fc6cf0
	void GrabComponentAtLocation(PrimitiveComponent* Component, FName InBoneName, Vector GrabLocation);// 0x3fc6bd0
	void GrabComponent(PrimitiveComponent* Component, FName InBoneName, Vector GrabLocation, bool bConstrainRotation);// 0x3fc6a60
	void GetTargetLocationAndRotation(out Vector TargetLocation, out Rotator TargetRotation);// 0x3fc6980
	PrimitiveComponent* GetGrabbedComponent();// 0x2db2080

--------------------------------
Class: SQDraggingData
	enum DraggingStatus;//[Offset: 0x0, Size: 1]
	int DraggedBoneIndex;//[Offset: 0x4, Size: 1]
	SQSoldier* OtherSoldier;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQDraggableBone

--------------------------------
Class: SQSoldierRagdollComponent.ActorComponent.Object
	float TimeTillAutoGetUp;//[Offset: 0xb0, Size: 1]
	float AutoGetUpRetryFrequency;//[Offset: 0xb4, Size: 1]
	float RecoveryBlendSeconds;//[Offset: 0xb8, Size: 1]
	float FreezeBodyCheckFrequency;//[Offset: 0xbc, Size: 1]
	FName PelvisBoneName;//[Offset: 0xc0, Size: 1]
	FName RightFootName;//[Offset: 0xc8, Size: 1]
	FName LeftFootName;//[Offset: 0xd0, Size: 1]
	PhysicsAsset* RagdollPhysicsAsset;//[Offset: 0xd8, Size: 1]
	float CorrectionBaseRatio;//[Offset: 0xe0, Size: 1]
	float CorrectionMaxAddedRatio;//[Offset: 0xe4, Size: 1]
	float ErrorStateSecondsToMaxRatio;//[Offset: 0xe8, Size: 1]
	float LinearErrorThreshold;//[Offset: 0xec, Size: 1]
	float LinearVelocitySleepThreshold;//[Offset: 0xf0, Size: 1]
	float BulletImpactMultiplier;//[Offset: 0xf4, Size: 1]
	float ExplosionImpactMultiplier;//[Offset: 0xf8, Size: 1]
	float SecondsWithVehicleCollision;//[Offset: 0xfc, Size: 1]
	enum RagdollState;//[Offset: 0x101, Size: 1]
	Vector_NetQuantize100 ServerPelvisLocationZeroBased;//[Offset: 0x104, Size: 1]
	Vector UnragdolLocationOffset;//[Offset: 0x110, Size: 1]
	bool bBodyHasSettled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x130, Size: 1]
	SQEquipableItem* DroppedWeapon;//[Offset: 0x138, Size: 1]
	SQSoldier* OwnerSoldier;//[Offset: 0x140, Size: 1]
	PhysicsHandleComponent* FreezeBodyConstraintHandle;//[Offset: 0x158, Size: 1]
	void SetRagdollState(enum NewRagdollState);// 0xe092b0
	void SetDragging(const bool bIsDragging);// 0xe09190
	void ServerSetRagdollState(enum NewRagdollState);// 0xe090e0
	void OnRep_RagdollState();// 0xd5f420
	bool IsInRagdoll();// 0xe08f40
	enum GetRagdollState();// 0xe08e00

--------------------------------
Class: SQBuffManager.ActorComponent.Object
	SQBuffDesc Buffs;//[Offset: 0xb0, Size: 5]
	MulticastInlineDelegateProperty BuffAppliedEvent;//[Size: 1]
	MulticastInlineDelegateProperty BuffRemovedEvent;//[Size: 1]
	MulticastInlineDelegateProperty BuffEndedEvent;//[Size: 1]
	void RemoveBuff(enum BuffTypeToRemove);// 0xd5a840
	void PulseBuff(enum BuffTypeToApply, float Duration);// 0xd5a6a0
	bool HasBuff(enum BuffTypeToCheck);// 0xd5a270
	void ApplyBuff(enum BuffTypeToApply, float Duration);// 0xd59930

--------------------------------
Class: SQBuffDesc

--------------------------------
Class: SQSoldierStaticInfo.DataAsset.Object
	float MaximumReviveTime;//[Offset: 0x30, Size: 1]
	float ReviveRecoveryPerSecond;//[Offset: 0x34, Size: 1]
	float HorizontalFallingDamageMultiplier;//[Offset: 0x38, Size: 1]
	float MaximumHorizontalSafeFallingSpeed;//[Offset: 0x3c, Size: 1]
	CurveFloat* DamageRevivePenaltyCurve;//[Offset: 0x40, Size: 1]
	float GrabbingDistance;//[Offset: 0x48, Size: 1]
	float DraggingDropThresholdAngle;//[Offset: 0x4c, Size: 1]
	float GrabbingSphereRadius;//[Offset: 0x50, Size: 1]
	float MinBipodPronePitch;//[Offset: 0x54, Size: 1]
	float MaxBipodPronePitch;//[Offset: 0x58, Size: 1]

--------------------------------
Class: SQUnderwaterBoneData
	FName HeadHeightUnderwaterSocketName;//[Offset: 0x0, Size: 1]
	FName ChestHeightUnderwaterSocketName;//[Offset: 0x8, Size: 1]
	FName HipHeightUnderwaterSocketName;//[Offset: 0x10, Size: 1]
	FName KneeHeightUnderwaterSocketName;//[Offset: 0x18, Size: 1]
	FName FootHeightUnderwaterSocketName;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQBaseWaterComponent.ActorComponent.Object
	MulticastInlineDelegateProperty OnEnteredWaterBodyDelegate;//[Size: 1]
	MulticastInlineDelegateProperty OnExitedWaterBodyDelegate;//[Size: 1]
	PrimitiveComponent* SimulatingComponent;//[Offset: 0xd0, Size: 1]
	SQWaterBody*[] CurrentWaterBodies;//[Offset: 0xd8, Size: 1]
	bool IsOverlappingWaterBody();// 0x1350b90
	bool IsInWaterBody();// 0x1350b60
	bool IsInValidWaterBody();// 0x1350b30
	bool GetWaterLocation(out const Vector Location, out SQWaterBody* OutWaterBody, out Vector OutWaterSurfaceLocation, out Vector OutWaterNormal);// 0x1350880
	float GetWaterImmersionDepth(const Vector Location);// 0x13507e0
	float GetWaterHeight(Vector Location, float DefaultHeight);// 0x13506f0
	bool GetWaterDepth(const Vector Location, out float Depth);// 0x1350550
	PrimitiveComponent* GetSimulatedComponent();// 0x13504b0
	SQWaterBody*[] GetCurrentWaterBodiesRef();// 0x1350220
	SQWaterBody*[] GetCurrentWaterBodies();// 0x1350220

--------------------------------
Class: SQWaterBody.Actor.Object
	float WaterDensity;//[Offset: 0x228, Size: 1]
	int WaterBodyIndex;//[Offset: 0x22c, Size: 1]
	bool bGenerateCollisions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x230, Size: 1]
	float GetWaveReferenceTime();// 0x1350a80
	float GetMaxWaveHeight();// 0x1350410

--------------------------------
Class: SQSoldierWaterDamageComponent.ODKWaterDamageComponent.SQWaterPointTestComponent.ActorComponent.Object
	CurveFloat* DamageMultiplierCurve;//[Offset: 0x160, Size: 1]
	void OnWaterDamageBegin();// 0xe090c0

--------------------------------
Class: ODKWaterDamageComponent.SQWaterPointTestComponent.ActorComponent.Object
	float DamageAmount;//[Offset: 0x130, Size: 1]
	class DamageType* DamageType;//[Offset: 0x138, Size: 1]
	float DamageFrequency;//[Offset: 0x150, Size: 1]
	TimerHandle DamageTimerHandle;//[Offset: 0x158, Size: 1]
	void InflictDamage();// 0x1350af0

--------------------------------
Class: SQWaterPointTestComponent.ActorComponent.Object
	float MaxImmersionDelay;//[Offset: 0xb0, Size: 1]
	float RegenRate;//[Offset: 0xb4, Size: 1]
	MulticastInlineDelegateProperty OnImmersionStateChanged;//[Size: 1]
	SQBaseWaterComponent* BaseWaterComponent;//[Offset: 0xe0, Size: 1]
	SceneComponent* TransformComponent;//[Offset: 0xe8, Size: 1]
	float ImmersionDelay;//[Offset: 0xf4, Size: 1]
	Vector TestPointAdditionalOffset;//[Offset: 0x108, Size: 1]
	FName TestPointSocketLocation;//[Offset: 0x114, Size: 1]
	bool bUseTestPointSocketLocation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x11c, Size: 1]
	void SetBaseWaterComponent(SQBaseWaterComponent* Component);// 0xd5a470
	void OnExitedWaterBody();// 0x1350c30
	void OnEnteredWaterBody();// 0x134f380
	bool IsOverlappingWaterBody();// 0x1350bc0
	float GetWaterDensity();// 0x1350530
	float GetImmersionDepth();// 0x1350280

--------------------------------
Class: SQBotComponent.ActorComponent.Object
	SQSoldier* TargetEnemy;//[Offset: 0xb0, Size: 1]
	SQSoldier* OwnerSoldier;//[Offset: 0xb8, Size: 1]
	float TargetingRange;//[Offset: 0xc4, Size: 1]
	float CheckAtFloorDistance;//[Offset: 0xc8, Size: 1]
	float RandomHeadingYawRange;//[Offset: 0xcc, Size: 1]
	float RandomHeadingPitchRange;//[Offset: 0xd0, Size: 1]
	float TargetingMaxPitchDelta;//[Offset: 0xd4, Size: 1]

--------------------------------
Class: SpringArmComponent.SceneComponent.ActorComponent.Object
	float TargetArmLength;//[Offset: 0x1f8, Size: 1]
	Vector SocketOffset;//[Offset: 0x1fc, Size: 1]
	Vector TargetOffset;//[Offset: 0x208, Size: 1]
	float ProbeSize;//[Offset: 0x214, Size: 1]
	byte ProbeChannel;//[Offset: 0x218, Size: 1]
	bool bDoCollisionTest;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x21c, Size: 1]
	bool bUsePawnControlRotation;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x21c, Size: 1]
	bool bInheritPitch;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x21c, Size: 1]
	bool bInheritYaw;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x21c, Size: 1]
	bool bInheritRoll;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x21c, Size: 1]
	bool bEnableCameraLag;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x21c, Size: 1]
	bool bEnableCameraRotationLag;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x21c, Size: 1]
	bool bUseCameraLagSubstepping;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x21c, Size: 1]
	bool bDrawDebugLagMarkers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x21d, Size: 1]
	float CameraLagSpeed;//[Offset: 0x220, Size: 1]
	float CameraRotationLagSpeed;//[Offset: 0x224, Size: 1]
	float CameraLagMaxTimeStep;//[Offset: 0x228, Size: 1]
	float CameraLagMaxDistance;//[Offset: 0x22c, Size: 1]
	bool IsCollisionFixApplied();// 0x4015620
	Vector GetUnfixedCameraPosition();// 0x40155e0
	Rotator GetTargetRotation();// 0x40155a0

--------------------------------
Class: SQClimbData
	float MinHeight;//[Offset: 0x0, Size: 1]
	SQClimbOverData OverData;//[Offset: 0x8, Size: 1]
	SQClimbOntoData OntoData;//[Offset: 0xa8, Size: 1]
	float MinMoveToStartSpeed;//[Offset: 0x150, Size: 1]
	float SearchDistance;//[Offset: 0x154, Size: 1]
	float MaxClimbableAngle;//[Offset: 0x158, Size: 1]
	float PitchCorrectionTime;//[Offset: 0x15c, Size: 1]
	float PitchCorrectionMidPoint;//[Offset: 0x160, Size: 1]
	float CielingNormalTollerance;//[Offset: 0x164, Size: 1]
	float OverlapDetectionScale;//[Offset: 0x168, Size: 1]
	float ActorLocationAcceptanceDistance;//[Offset: 0x16c, Size: 1]
	float ServerAcceptanceDistance;//[Offset: 0x170, Size: 1]

--------------------------------
Class: SQClimbOverData
	float MaxMoveDistance;//[Offset: 0x0, Size: 1]
	float MinMiddleMoveDistance;//[Offset: 0x4, Size: 1]
	float MidCollisionShapeScale;//[Offset: 0x8, Size: 1]
	SQClimbOverTypeData Low;//[Offset: 0x10, Size: 1]
	SQClimbOverTypeData Mid;//[Offset: 0x58, Size: 1]

--------------------------------
Class: SQClimbOverTypeData.SQClimbTypeData
	float MinVerticalSpace;//[Offset: 0x30, Size: 1]
	float InterpolateTimeToMidStart;//[Offset: 0x34, Size: 1]
	float InterpolateTimeToMidEnd;//[Offset: 0x38, Size: 1]
	float InterpolateTimeToEnd;//[Offset: 0x3c, Size: 1]
	float MidHorizonalSpace;//[Offset: 0x40, Size: 1]

--------------------------------
Class: SQClimbTypeData
	float EndSpace;//[Offset: 0x8, Size: 1]
	float MaxHeight;//[Offset: 0xc, Size: 1]
	float RequiredAnimationTime;//[Offset: 0x10, Size: 1]
	bool bFiringDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x14, Size: 1]
	float StaminaCost;//[Offset: 0x18, Size: 1]
	AnimMontage* Montage1P;//[Offset: 0x20, Size: 1]
	AnimMontage* Montage3P;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQClimbOntoData
	SQClimbOntoTypeData Low;//[Offset: 0x0, Size: 1]
	SQClimbOntoTypeData Mid;//[Offset: 0x38, Size: 1]
	SQClimbOntoTypeData High;//[Offset: 0x70, Size: 1]

--------------------------------
Class: SQClimbOntoTypeData.SQClimbTypeData
	float InterpolateTime;//[Offset: 0x30, Size: 1]

--------------------------------
Class: SQFreeLookComponent.ActorComponent.Object
	Pawn* OuterPawn;//[Offset: 0xb8, Size: 1]
	CameraComponent* FreeLookCamera;//[Offset: 0xd8, Size: 1]
	bool bCanFreelookWhileADS;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe0, Size: 1]
	bool bFreelookCanRecenterWeapons;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe1, Size: 1]
	Vector2D PitchLimits;//[Offset: 0xe4, Size: 1]
	Vector2D YawLimits;//[Offset: 0xec, Size: 1]
	Vector2D RotationSpeed;//[Offset: 0xf4, Size: 1]
	float ResetSpeed;//[Offset: 0xfc, Size: 1]
	SQRotator_NetQuantizeBytes ReplicatedFreeLookRot;//[Offset: 0x120, Size: 1]
	enum FreelookMode;//[Offset: 0x12c, Size: 1]
	bool bReplicateFreeLookRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12d, Size: 1]
	void SetYawLimits(const Vector2D NewYawLimits);// 0xd8dac0
	void SetRotationSpeed(const Vector2D NewRotationSpeed);// 0xd8da40
	void SetReplicateFreeLookRotation(const bool bNewBool);// 0xd8d9b0
	void SetPitchLimits(const Vector2D NewPitchLimits);// 0xd8d930
	void SetIsToggleActive(const bool bNewState);// 0xd8d8a0
	void SetFreeLookRotation(const Rotator NewFreeLookRotator);// 0xd8d6f0
	void SetFreeLookMode(const enum NewFreeLookMode);// 0xd8d670
	void SetFreelookCanRecenterWeapons(const bool bNewBool);// 0xd8d780
	void SetFreeLookCamera(CameraComponent* NewCamera);// 0xd8d5e0
	void SetCanFreelookWhileADS(const bool bNewBool);// 0xd8d550
	void ServerSetFreeLookRotation(const Rotator NewFreeLookRotation);// 0xd8d270
	void ResetFreeLook();// 0xd8d160
	void OnRep_ReplicatedFreeLookRot();// 0xd8ce80
	Vector2D GetYawLimits();// 0xd8c5a0
	Vector2D GetRotationSpeed();// 0xd8c040
	Vector2D GetPitchLimits();// 0xd8c000
	bool GetIsUsingFreeLook();// 0xd8bee0
	bool GetIsFreeLookComponentActive();// 0xd8be80
	bool GetFreelookCanRecenterWeapons();// 0xd8be50
	CameraComponent* GetFreeLookCamera();// 0xd8bdf0
	bool GetCanFreelookWhileADS();// 0xd8bc80
	Rotator CalculateFreeLookRotation();// 0xd8b760

--------------------------------
Class: SQRotator_NetQuantizeBytes.Rotator

--------------------------------
Class: SQAnimDataEmotes.DataAsset.Object
	SQEmoteAnims EmoteAnims;//[Offset: 0x30, Size: 10]
	<FName,SQEmoteAnims> CustomEmotes;//[Offset: 0x1c0, Size: 1]

--------------------------------
Class: SQEmoteAnims
	bool bForceIfCantPlay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	AnimMontage* FirstPersonAnim;//[Offset: 0x8, Size: 1]
	AnimMontage* ThirdPersonAnim;//[Offset: 0x10, Size: 1]
	AnimMontage* FirstPersonEndAnim;//[Offset: 0x18, Size: 1]
	AnimMontage* ThirdPersonEndAnim;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQVoipAnim
	AnimMontage* FirstPersonAnim;//[Offset: 0x0, Size: 1]
	AnimMontage* ThirdPersonAnim;//[Offset: 0x8, Size: 1]
	AnimMontage* FirstPersonEndAnim;//[Offset: 0x10, Size: 1]
	AnimMontage* ThirdPersonEndAnim;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQEmotePlayer.ActorComponent.Object
	SQEmotesDataTable* EmotesData;//[Offset: 0xb0, Size: 1]
	SQEmotesData* EmotePlaying;//[Offset: 0xb8, Size: 1]
	void MulticastPlayEmote(const FName EmoteName);// 0xd82970
	void MulticastCancelEmote(const FName EmoteName);// 0xd828e0
	bool IsEmotePlaying(const SQEmotesData* Emote);// 0xd82780
	FString[] GetRestrictionText(const SQEmotesData* Emote);// 0xd82420
	bool CanShowEmotesWheel();// 0xd81fe0
	bool CanPlayEmote(const SQEmotesData* Emote);// 0xd81ce0

--------------------------------
Class: SQEmotesDataTable.DataAsset.Object
	SQEmotesData*[] EmoteData;//[Offset: 0x30, Size: 1]

--------------------------------
Class: SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	float MaxHealth;//[Offset: 0x4e0, Size: 1]
	SQDamageModifier[] AllowableDamageTypes;//[Offset: 0x4e8, Size: 1]
	bool bCanBeDestroyed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4f8, Size: 1]
	bool bCanBeRepairedAfterDestroyed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4f9, Size: 1]
	float MaxRepairToolLimit;//[Offset: 0x4fc, Size: 1]
	StaticMesh* FullyRepairedComponentMesh;//[Offset: 0x500, Size: 1]
	StaticMesh* RepairedFromDestructionComponentMesh;//[Offset: 0x508, Size: 1]
	StaticMesh* DestroyedComponentMesh;//[Offset: 0x510, Size: 1]
	SQVehicle* ParentVehicle;//[Offset: 0x518, Size: 1]
	ParticleSystem* BurningEffect;//[Offset: 0x520, Size: 1]
	SoundCue* BurningSound;//[Offset: 0x528, Size: 1]
	AudioComponent* BurningAudioComponent;//[Offset: 0x530, Size: 1]
	bool bBurningAudioInheritsScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x538, Size: 1]
	ParticleSystem* DestroyedExplosion;//[Offset: 0x540, Size: 1]
	SoundCue* DestroyedSound;//[Offset: 0x548, Size: 1]
	FName DestructionDamageEffectSocket;//[Offset: 0x550, Size: 1]
	SQDamageEffect[] DestructionDamageEffects;//[Offset: 0x558, Size: 1]
	bool bLastingEffectInheritsScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x568, Size: 1]
	AudioComponent* DestroyedAudioComponent;//[Offset: 0x570, Size: 1]
	bool bDestroyedAudioInheritsScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x578, Size: 1]
	ParticleSystemComponent* BurningParticleSystem;//[Offset: 0x580, Size: 1]
	bool bBurningEffectInheritsScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x588, Size: 1]
	ParticleSystemComponent* DestructionParticleSystem;//[Offset: 0x590, Size: 1]
	bool bDestructionEffectInheritsScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x598, Size: 1]
	float NormalizedHealth;//[Offset: 0x59c, Size: 1]
	MulticastInlineDelegateProperty OnComponentDestroyedEvent;//[Size: 1]
	MulticastInlineDelegateProperty OnComponentUndestroyedEvent;//[Size: 1]
	float Health;//[Offset: 0x5c0, Size: 1]
	enum VehicleComponentState;//[Offset: 0x5c4, Size: 1]
	StaticMeshComponent* DecorativeMesh;//[Offset: 0x5c8, Size: 1]
	void SetHealth(float NewHealth);// 0xe341f0
	void OnRep_VehicleComponentState(enum PreviousState);// 0xe34130
	void OnRep_HealthChanged(float PreviousHealthValue);// 0xe34080
	void MulticastComponentRepairedFromDestruction();// 0xe33cb0
	void MulticastComponentFullyRepaired();// 0xe33c60
	void MulticastComponentDestroyed(class DamageType DamageTypeClass);// 0xe33ba0
	bool IsDestroyed();// 0xe33b40
	enum GetVehicleComponentState();// 0xe33b20
	enum GetPreviousVehicleComponentState();// 0xe33a10
	SQVehicle* GetParentVehicle();// 0xe339e0
	float GetNormalizedHealth();// 0xe33990
	float GetMaximumHealth();// 0xe33970
	float GetHealth();// 0xe33950

--------------------------------
Class: SQVehicleResourceWeaponInventoryComponent.SQVehicleInventoryComponent.SQPawnInventoryComponent.ActorComponent.Object
	MulticastInlineDelegateProperty OnResourcesChangedEvent;//[Size: 1]
	bool bSpawnWithMaxResources;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	int CurrentConstructionAmount;//[Offset: 0x300, Size: 1]
	int CurrentAmmoAmount;//[Offset: 0x304, Size: 1]
	int TotalSharedResourceAmount;//[Offset: 0x308, Size: 1]
	class SQVehicleResource[] ResourceClasses;//[Offset: 0x310, Size: 1]
	SQVehicleResource*[] Resources;//[Offset: 0x320, Size: 1]
	void UpdateVisibilities();// 0xe38b50
	void SetStaticMeshResourcesConstruction(const StaticMeshComponent*[] InStaticMeshResources);// 0xe384f0
	void SetStaticMeshResourcesAmmo(const StaticMeshComponent*[] InStaticMeshResources);// 0xe383f0
	void OnRep_ResourcesChanged();// 0xe379f0
	bool HasConstructionWeapon();// 0xe37640
	int GetTotalSharedResourceAmount();// 0xe374a0
	int GetCurrentSharedResourceAmount();// 0xe37260
	int GetAmmoPoints();// 0xe37150
	SQVehicleResource* FindConstructionWeapon();// 0xe36fa0
	SQVehicleResource* FindAmmoWeapon();// 0xe36f70

--------------------------------
Class: SQVehicleResource.Actor.Object
	float ResourceDropQuantity;//[Offset: 0x228, Size: 1]
	float ResourceDropRate;//[Offset: 0x22c, Size: 1]
	float ServerResourceRate;//[Offset: 0x230, Size: 1]
	SQForwardBase* CurrentFob;//[Offset: 0x238, Size: 1]
	Actor* CurrentCaptureZone;//[Offset: 0x240, Size: 1]
	SQVehicleResourceWeaponInventoryComponent* ParentInventory;//[Offset: 0x248, Size: 1]
	int MaxResources;//[Offset: 0x258, Size: 1]
	int Resources;//[Offset: 0x25c, Size: 1]
	void UseResource(float ModifyAmount);// 0xe38b70
	void ServerEndResourceDropOff();// 0xe37dc0
	void ServerBeginResourceDropOff(SQForwardBase* fob, Actor* Zone, const float DropRate);// 0xe37bc0
	void ModifyResource(float Amount);// 0xe376d0
	bool FindValidDropOffs(out SQForwardBase* fob, out Actor* Zone);// 0xe36fd0
	void BeginResourceDropOff();// 0xe36f20
	bool AtValidResourcePoint();// 0xe36ef0

--------------------------------
Class: SQMovementComponentManager.PawnMovementComponent.NavMovementComponent.MovementComponent.ActorComponent.Object
	SQMovementComponentBase*[] ManagedMovementComponents;//[Offset: 0x148, Size: 1]
	void UnRegisterComponent(SQMovementComponentBase* MovementComponent);// 0xdc2080
	void RegisterComponent(SQMovementComponentBase* MovementComponent);// 0xdc1660

--------------------------------
Class: SQMovementComponentBase.ActorComponent.Object
	float MaxMoveDeltaTime;//[Offset: 0xd0, Size: 1]
	float VectorEqualityTolerance;//[Offset: 0xd4, Size: 1]
	float AccelDotThresholdCombine;//[Offset: 0xd8, Size: 1]
	float AccelDotThreshold;//[Offset: 0xdc, Size: 1]
	float AccelMagThreshold;//[Offset: 0xe0, Size: 1]
	float AngularErrorTolerance;//[Offset: 0xe4, Size: 1]
	float NetworkMaxSmoothUpdateDistance;//[Offset: 0xe8, Size: 1]
	float MinCorrectionDelay;//[Offset: 0xec, Size: 1]
	float NetworkNoSmoothUpdateDistance;//[Offset: 0xf0, Size: 1]
	enum LocationQuantizationLevel;//[Offset: 0xf4, Size: 1]
	enum VelocityQuantizationLevel;//[Offset: 0xf5, Size: 1]
	enum AccelerationQuantizationLevel;//[Offset: 0xf6, Size: 1]
	enum RotationQuantizationLevel;//[Offset: 0xf7, Size: 1]
	Actor* OwnerActor;//[Offset: 0xf8, Size: 1]
	Controller* Controller;//[Offset: 0x100, Size: 1]
	SQRepMovement ReplicatedMovement;//[Offset: 0x150, Size: 1]
	float MaxSpeed;//[Offset: 0x190, Size: 1]
	void ServerMoveOld(const byte[] Move);// 0xdc1a70
	void ServerMoveDual(const byte[] Move1, const byte[] Move2);// 0xdc1940
	void ServerMove(const byte[] Move);// 0xdc1870
	void OnRep_Movement();// 0xdc1640
	bool IsSimulatedProxy();// 0xdc1230
	bool IsServerComponent();// 0xdc1200
	bool IsLocallyControlledComponent();// 0xdc11d0
	Vector GetCurrentVelocity();// 0xdc0d60
	Vector GetCurrentRotationalVelocity();// 0xdc0d20
	Vector GetCurrentRotationalAcceleration();// 0xdc0ce0
	Vector GetCurrentAcceleration();// 0xdc0ca0
	void ClientAdjustPositionAndRotation(const float Timestamp, const Vector LocationZeroBased, const Vector InVelocity, const Rotator Rotation);// 0xdc09a0
	void ClientAdjustPosition(float Timestamp, const Vector LocationZeroBased, const Vector InVelocity);// 0xdc0890
	void ClientAckGoodMove(float Timestamp);// 0xdc0800

--------------------------------
Class: SQRepMovement
	Vector LocationZeroBased;//[Offset: 0x8, Size: 1]
	Vector Velocity;//[Offset: 0x14, Size: 1]
	Rotator Rotation;//[Offset: 0x20, Size: 1]
	Vector RotationalVelocity;//[Offset: 0x2c, Size: 1]
	float ServerTimestamp;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SQVehicleEmergencyRecoveryComponent.ActorComponent.Object
	float EmergencyTeleportCooldownSeconds;//[Offset: 0xb0, Size: 1]
	float LastEmergencyTeleportTimestamp;//[Offset: 0xb4, Size: 1]
	SQEmergencyRecoverySettings* RecoverySettings;//[Offset: 0xb8, Size: 1]
	<byte> RecoveryMethodsAvailable;//[Offset: 0xc0, Size: 1]
	float HeightOffset;//[Offset: 0x110, Size: 1]
	float PushStrength;//[Offset: 0x114, Size: 1]
	float VerticalBoostStrength;//[Offset: 0x118, Size: 1]
	MulticastInlineDelegateProperty CooldownFinishedDelegate;//[Size: 1]
	MulticastInlineDelegateProperty CooldownStartDelegate;//[Size: 1]
	void TeleportVehicleMulticast(SQVehicle* Vehicle, const Vector Position, const Rotator Rotation);// 0xe34270
	void OnRep_LastEmergencyTeleportTimestamp();// 0xe34110
	bool IsRecoveryOnCooldown();// 0xe33b70
	float GetRemainingRecoverCooldown();// 0xe33a30
	SQVehicle* GetOwningVehicle();// 0xe339b0
	void EmergencyRecovery(Actor* Instigator, byte RecoveryMethod, float DesiredYawRotation);// 0xe33730
	void CustomRecoveryMulticast(SQVehicle* Vehicle, Actor* Instigator);// 0xe33500
	bool CanUseEmergencyRecovery(byte RecoveryMethod);// 0xe33470

--------------------------------
Class: SQEmergencyRecoverySettings.DataAsset.Object
	<byte> RecoveryMethodsAvailable;//[Offset: 0x30, Size: 1]
	float HeightOffset;//[Offset: 0x80, Size: 1]
	float PushStrength;//[Offset: 0x84, Size: 1]
	float VerticalBoostStrength;//[Offset: 0x88, Size: 1]
	bool bReplicateCustomRecoveryFunction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8c, Size: 1]
	bool EmergencyRecoveryCustom(SQVehicle* Vehicle, Actor* Instigator);// 0xe33850
	bool CanUseEmergencyRecovery(const SQVehicleEmergencyRecoveryComponent* RecoveryComponent, byte RecoveryMethod);// 0xe333a0

--------------------------------
Class: SQDriveTrainComponent.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	bool IsInWater;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d0, Size: 1]
	float DepthUnderwater;//[Offset: 0x5d4, Size: 1]
	float DropPercentage;//[Offset: 0x5d8, Size: 1]
	void OnDriveTrainComponentEndOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0xd82c20
	void OnDriveTrainComponentBeginOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xd82a00

--------------------------------
Class: SQBasedMovementInfo
	PrimitiveComponent* MovementBase;//[Offset: 0x0, Size: 1]
	FName BoneName;//[Offset: 0x8, Size: 1]
	Vector_NetQuantize100 Location;//[Offset: 0x10, Size: 1]
	Rotator Rotation;//[Offset: 0x1c, Size: 1]
	bool bServerHasBaseComponent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bRelativeRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	bool bServerHasVelocity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a, Size: 1]

--------------------------------
Class: SQDestroyedVehicle.Actor.Object
	StaticMeshComponent* VehicleMesh;//[Offset: 0x228, Size: 1]
	bool bIsSimulatingInEditor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x230, Size: 1]
	bool bWreckSimulatePhysics;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x231, Size: 1]
	bool bPlayEffectsWhenReady;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x232, Size: 1]
	SQLastingEffect* TemperatureLastingEffect;//[Offset: 0x238, Size: 1]
	FName TemperatureLastingEffectAttachSocket;//[Offset: 0x240, Size: 1]
	float TemperatureLastingEffectLifetime;//[Offset: 0x248, Size: 1]
	float MinReplicationTime;//[Offset: 0x24c, Size: 1]
	SQVehicle* OriginalVehicle;//[Offset: 0x250, Size: 1]
	class DamageType* DeathDamageType;//[Offset: 0x258, Size: 1]
	SQVehicleDestroyEffectConfig[] DeathEffectConfig;//[Offset: 0x260, Size: 1]
	FName DestroyedEffectsSocket;//[Offset: 0x270, Size: 1]
	ParticleSystem* DestroyedParticleEffect;//[Offset: 0x278, Size: 1]
	ParticleSystemComponent* ExplosionEffect;//[Offset: 0x280, Size: 1]
	class SQShockwave* DestroyedShockwaveEffect;//[Offset: 0x288, Size: 1]
	SoundCue* DestroyedSound;//[Offset: 0x290, Size: 1]
	SoundCue* DestroyedDebrisSound;//[Offset: 0x298, Size: 1]
	AudioComponent*[] AudioComponentsWithDepthRequirement;//[Offset: 0x2a0, Size: 1]
	ParticleSystemComponent*[] ParticleSystemComponentsWithDepthRequirement;//[Offset: 0x2b0, Size: 1]
	SQDamageModifier[] AllowableDamageTypes;//[Offset: 0x2c0, Size: 1]
	float Health;//[Offset: 0x2d0, Size: 1]
	float MaxHealth;//[Offset: 0x2d4, Size: 1]
	SQBaseWaterComponent* BaseWaterComponent;//[Offset: 0x2d8, Size: 1]
	float SinkingLinearDampening;//[Offset: 0x2e0, Size: 1]
	float SinkingAngularDampening;//[Offset: 0x2e4, Size: 1]
	class DamageType* LastDamageTypeClass;//[Offset: 0x2e8, Size: 1]
	Controller* LastDamageInstigator;//[Offset: 0x2f0, Size: 1]
	class SQPhysicalMaterialEffects* DefaultEffectsClass;//[Offset: 0x2f8, Size: 1]
	float LastingEffectCleanupTimer;//[Offset: 0x300, Size: 1]
	Vector InitialVelocity;//[Offset: 0x304, Size: 1]
	Vector InitialAngularVelocity;//[Offset: 0x310, Size: 1]
	float LifespanInProtectionZone;//[Offset: 0x31c, Size: 1]
	TimerHandle ClearAudioHandle;//[Offset: 0x320, Size: 1]
	TimerHandle StopReplicationTimer;//[Offset: 0x328, Size: 1]
	TimerHandle StopBurningEffectsTimer;//[Offset: 0x330, Size: 1]
	void TransferBurningLastingEffect(SQLastingEffect* LastingEffect);// 0xd7e300
	void StopReplication();// 0xd78d00
	void SetInitialMovement(out const Vector InInitialVelocity, out const Vector InInitialAngularVelocity);// 0xd7e170
	void PlayFX();// 0xd7dff0
	void OnVFXComplete(ParticleSystemComponent* PSystem);// 0xd7df60
	void OnReplicationTimeComplete();// 0xd7df40
	void OnExitedWater();// 0xd78600
	void OnEnteredWater();// 0xd7df20
	void OnBeginDestroyedVehicle();// 0xd7ddb0
	void EnableWreckPhysics(bool bEnable);// 0xd7c3d0
	void CheckIfDestroyedVehicleUnderwater();// 0xd7c3b0

--------------------------------
Class: SQVehicleDestroyEffectConfig
	ParticleSystem* ParticleSystemTemplate;//[Offset: 0x0, Size: 1]
	class DamageType* DamageType;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVehicleDestroyedConfig
	class DamageType* DamageType;//[Offset: 0x0, Size: 1]
	class SQDestroyedVehicle* DestroyedVehicleClass;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVehicleBurningComponent.SceneComponent.ActorComponent.Object
	FName ParticleAttachBone;//[Offset: 0x1f8, Size: 1]
	SQLastingEffect* TemperatureLastingEffect;//[Offset: 0x200, Size: 1]
	bool bIsDebugging;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20a, Size: 1]
	float VehicleBurnRatePct;//[Offset: 0x20c, Size: 1]
	float VehicleFlippedBurnRatePct;//[Offset: 0x210, Size: 1]
	float VehicleAbandonedBurnRatePct;//[Offset: 0x214, Size: 1]
	float SoldierBurnRatePct;//[Offset: 0x218, Size: 1]
	float StartBurnHealthPercent;//[Offset: 0x21c, Size: 1]
	TimerHandle EffectTimerHandle;//[Offset: 0x220, Size: 1]
	TimerHandle BurnTimerHandle;//[Offset: 0x228, Size: 1]

--------------------------------
Class: SQPhysicalMaterialVehiclesEffects.Object
	SQPhysicalMaterialRedirectors* Redirectors;//[Offset: 0x28, Size: 1]
	<SQPhysicalMaterial*,SQVehicleEffect> Effects;//[Offset: 0x30, Size: 1]
	SQPhysicalMaterial* WaterEffectPhysMatOverride;//[Offset: 0x80, Size: 1]
	SQVehicleEffect WaterEffectOverride;//[Offset: 0x88, Size: 1]
	SQVehicleEffect GetEffect(const SQPhysicalMaterial* Material);// 0xdd7280

--------------------------------
Class: SQVehicleEffect
	SQPhysMatVehicleFXData VehicleFXData;//[Offset: 0x0, Size: 1]
	SoundCue* VehicleLightImpactSound;//[Offset: 0x68, Size: 1]
	ParticleSystem* VehicleLightImpactEffect;//[Offset: 0x70, Size: 1]
	SoundCue* VehicleImpactSound;//[Offset: 0x78, Size: 1]
	ParticleSystem* VehicleImpactEffect;//[Offset: 0x80, Size: 1]
	bool bDoVehicleParticlesUseRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88, Size: 1]

--------------------------------
Class: SQPhysMatVehicleFXData
	float Asphalt;//[Offset: 0x0, Size: 1]
	float Dirt;//[Offset: 0x4, Size: 1]
	float Grass;//[Offset: 0x8, Size: 1]
	float Gravel;//[Offset: 0xc, Size: 1]
	float Metal;//[Offset: 0x10, Size: 1]
	float Mud;//[Offset: 0x14, Size: 1]
	float Sand;//[Offset: 0x18, Size: 1]
	float Snow;//[Offset: 0x1c, Size: 1]
	float SnowWet;//[Offset: 0x20, Size: 1]
	float TallGrass;//[Offset: 0x24, Size: 1]
	float Water;//[Offset: 0x28, Size: 1]
	float Wood;//[Offset: 0x2c, Size: 1]
	LinearColor DustColor;//[Offset: 0x30, Size: 1]
	float DustLifetime;//[Offset: 0x40, Size: 1]
	Vector DustSize;//[Offset: 0x44, Size: 1]
	LinearColor DebrisColor;//[Offset: 0x50, Size: 1]
	float DebrisSpawnRate;//[Offset: 0x60, Size: 1]

--------------------------------
Class: SQVehicleCenterOfMassFXComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	ParticleSystem* WaterEntryEffect;//[Offset: 0x4e0, Size: 1]
	ParticleSystem* WaterExitEffect;//[Offset: 0x4e8, Size: 1]
	SoundCue* WaterEntrySound;//[Offset: 0x4f0, Size: 1]
	SoundCue* WaterExitSound;//[Offset: 0x4f8, Size: 1]
	MulticastInlineDelegateProperty OnBeginOverlapDelegate;//[Size: 1]
	MulticastInlineDelegateProperty OnEndOverlapDelegate;//[Size: 1]
	void OnCenterOfMassFXComponentEndOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0xe33f20
	void OnCenterOfMassFXComponentBeginOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xe33d00

--------------------------------
Class: SQCollisionDamage.ActorComponent.Object
	float MinDamage;//[Offset: 0xb0, Size: 1]
	float MaxDamage;//[Offset: 0xb4, Size: 1]
	float MinImpactForce;//[Offset: 0xb8, Size: 1]
	float MaxImpactForce;//[Offset: 0xbc, Size: 1]
	CurveFloat* InterpCurve;//[Offset: 0xc0, Size: 1]
	SoundCue* CollisionSound;//[Offset: 0xc8, Size: 1]
	ParticleSystem* ParticleEffect;//[Offset: 0xd0, Size: 1]
	class CameraShakeBase* CollisionCameraShake;//[Offset: 0xd8, Size: 1]
	float MinShakeForce;//[Offset: 0xe0, Size: 1]
	float MaxShakeForce;//[Offset: 0xe4, Size: 1]
	void OnActorHit(Actor* SelfActor, Actor* OtherActor, Vector NormalImpulse, out const HitResult Hit);// 0xd5f730
	float CalculateDamage(Actor* SelfActor, Actor* OtherActor, Vector NormalImpulse, out const HitResult Hit);// 0xd5f270
	void ApplyDamage(float damage);// 0xd5f150

--------------------------------
Class: SQVehicleBuoyancyComponent.SQBuoyancyComponent.SQBaseWaterComponent.ActorComponent.Object
	bool bUseDefaults;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	WheeledVehicleMovementComponent* VehicleMovementComponent;//[Offset: 0x268, Size: 1]
	void ResetToDefaults();// 0xe341d0

--------------------------------
Class: SQBuoyancyComponent.SQBaseWaterComponent.ActorComponent.Object
	ODKBuoyancyData BuoyancyData;//[Offset: 0xf0, Size: 1]
	MulticastInlineDelegateProperty OnPontoonEnteredWaterDelegate;//[Size: 1]
	MulticastInlineDelegateProperty OnPontoonExitedWaterDelegate;//[Size: 1]
	float DampeningImmersionDepth;//[Offset: 0x1b8, Size: 1]
	Transform WaterDampeningTransform;//[Offset: 0x1c0, Size: 1]
	void ShowPontoonVisualizer();// 0x1351300
	void SetWaterDampeningTransform(out const Transform NewTransform);// 0x1351220
	void OnPontoonExitedWater(out const ODKSphericalPontoon Pontoon);// 0x1350e00
	void OnPontoonEnteredWater(out const ODKSphericalPontoon Pontoon);// 0x1350ce0
	bool HasPontoons();// 0x1350ac0
	void GeneratePontoonsFromBounds(out const BoxSphereBounds Bounds);// 0x1350160
	void AddCustomPontoonSocket(float Radius, FName CenterSocketName);// 0x134f1e0
	void AddCustomPontoon(float Radius, out const Vector InRelativeLocation);// 0x134f100

--------------------------------
Class: WheeledVehicleMovementComponent.PawnMovementComponent.NavMovementComponent.MovementComponent.ActorComponent.Object
	bool bDeprecatedSpringOffsetMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x140, Size: 1]
	bool bReverseAsBrake;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x140, Size: 1]
	bool bUseRVOAvoidance;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x140, Size: 1]
	bool bRawHandbrakeInput;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x140, Size: 1]
	bool bRawGearUpInput;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x140, Size: 1]
	bool bRawGearDownInput;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x140, Size: 1]
	bool bWasAvoidanceUpdated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x144, Size: 1]
	float Mass;//[Offset: 0x148, Size: 1]
	WheelSetup[] WheelSetups;//[Offset: 0x150, Size: 1]
	float DragCoefficient;//[Offset: 0x160, Size: 1]
	float ChassisWidth;//[Offset: 0x164, Size: 1]
	float ChassisHeight;//[Offset: 0x168, Size: 1]
	float DragArea;//[Offset: 0x16c, Size: 1]
	float EstimatedMaxEngineSpeed;//[Offset: 0x170, Size: 1]
	float MaxEngineRPM;//[Offset: 0x174, Size: 1]
	float DebugDragMagnitude;//[Offset: 0x178, Size: 1]
	Vector InertiaTensorScale;//[Offset: 0x17c, Size: 1]
	float MinNormalizedTireLoad;//[Offset: 0x188, Size: 1]
	float MinNormalizedTireLoadFiltered;//[Offset: 0x18c, Size: 1]
	float MaxNormalizedTireLoad;//[Offset: 0x190, Size: 1]
	float MaxNormalizedTireLoadFiltered;//[Offset: 0x194, Size: 1]
	float ThresholdLongitudinalSpeed;//[Offset: 0x198, Size: 1]
	int LowForwardSpeedSubStepCount;//[Offset: 0x19c, Size: 1]
	int HighForwardSpeedSubStepCount;//[Offset: 0x1a0, Size: 1]
	VehicleWheel*[] Wheels;//[Offset: 0x1a8, Size: 1]
	float RVOAvoidanceRadius;//[Offset: 0x1d0, Size: 1]
	float RVOAvoidanceHeight;//[Offset: 0x1d4, Size: 1]
	float AvoidanceConsiderationRadius;//[Offset: 0x1d8, Size: 1]
	float RVOSteeringStep;//[Offset: 0x1dc, Size: 1]
	float RVOThrottleStep;//[Offset: 0x1e0, Size: 1]
	int AvoidanceUID;//[Offset: 0x1e4, Size: 1]
	NavAvoidanceMask AvoidanceGroup;//[Offset: 0x1e8, Size: 1]
	NavAvoidanceMask GroupsToAvoid;//[Offset: 0x1ec, Size: 1]
	NavAvoidanceMask GroupsToIgnore;//[Offset: 0x1f0, Size: 1]
	float AvoidanceWeight;//[Offset: 0x1f4, Size: 1]
	Vector PendingLaunchVelocity;//[Offset: 0x1f8, Size: 1]
	ReplicatedVehicleState ReplicatedState;//[Offset: 0x204, Size: 1]
	float RawSteeringInput;//[Offset: 0x21c, Size: 1]
	float RawThrottleInput;//[Offset: 0x220, Size: 1]
	float RawBrakeInput;//[Offset: 0x224, Size: 1]
	float SteeringInput;//[Offset: 0x228, Size: 1]
	float ThrottleInput;//[Offset: 0x22c, Size: 1]
	float BrakeInput;//[Offset: 0x230, Size: 1]
	float HandbrakeInput;//[Offset: 0x234, Size: 1]
	float IdleBrakeInput;//[Offset: 0x238, Size: 1]
	float StopThreshold;//[Offset: 0x23c, Size: 1]
	float WrongDirectionThreshold;//[Offset: 0x240, Size: 1]
	float InvertDirectionThreshold;//[Offset: 0x244, Size: 1]
	float LowRPMRatio;//[Offset: 0x248, Size: 1]
	bool SpeedInsteadOfRPMRatiosForShifting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24c, Size: 1]
	VehicleInputRate ThrottleInputRate;//[Offset: 0x250, Size: 1]
	VehicleInputRate BrakeInputRate;//[Offset: 0x258, Size: 1]
	VehicleInputRate HandbrakeInputRate;//[Offset: 0x260, Size: 1]
	VehicleInputRate SteeringInputRate;//[Offset: 0x268, Size: 1]
	VehicleInputRate EngineOffSteeringInputRate;//[Offset: 0x270, Size: 1]
	Controller* OverrideController;//[Offset: 0x2a0, Size: 1]
	bool bUseCustomAutoGearBox;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	void SetUseAutoGears(bool bUseAuto);// 0xe81100
	void SetThrottleInput(float Throttle);// 0xe81080
	void SetTargetGear(int GearNum, bool bImmediate);// 0xe80fb0
	void SetSteeringInput(float Steering);// 0xe80f30
	void SetHandbrakeInput(bool bNewHandbrake);// 0xe80dd0
	void SetGroupsToIgnoreMask(out const NavAvoidanceMask GroupMask);// 0xe80d40
	void SetGroupsToIgnore(int GroupFlags);// 0xe80cb0
	void SetGroupsToAvoidMask(out const NavAvoidanceMask GroupMask);// 0xe80c20
	void SetGroupsToAvoid(int GroupFlags);// 0xe80b90
	void SetGearUp(bool bNewGearUp);// 0xe80b00
	void SetGearDown(bool bNewGearDown);// 0xe80a70
	void SetBrakeInput(float Brake);// 0xe80850
	void SetAvoidanceGroupMask(out const NavAvoidanceMask GroupMask);// 0xe807c0
	void SetAvoidanceGroup(int GroupFlags);// 0xe80730
	void SetAvoidanceEnabled(bool bEnable);// 0xe806a0
	void ServerUpdateState(float InSteeringInput, float InThrottleInput, float InBrakeInput, float InHandbrakeInput, int CurrentGear);// 0xe804b0
	bool GetUseAutoGears();// 0xe80420
	int GetTargetGear();// 0xe803f0
	float GetForwardSpeed();// 0xe80330
	float GetEngineRotationSpeed();// 0xe80300
	float GetEngineMaxRotationSpeed();// 0xe802d0
	int GetCurrentGear();// 0xe802a0

--------------------------------
Class: WheelSetup
	class VehicleWheel* WheelClass;//[Offset: 0x0, Size: 1]
	FName BoneName;//[Offset: 0x8, Size: 1]
	Vector AdditionalOffset;//[Offset: 0x10, Size: 1]
	bool bDisableSteering;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c, Size: 1]

--------------------------------
Class: VehicleWheel.Object
	StaticMesh* CollisionMesh;//[Offset: 0x28, Size: 1]
	bool bDontCreateShape;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x30, Size: 1]
	bool bAutoAdjustCollisionSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x31, Size: 1]
	Vector Offset;//[Offset: 0x34, Size: 1]
	float ShapeRadius;//[Offset: 0x40, Size: 1]
	float ShapeWidth;//[Offset: 0x44, Size: 1]
	float Mass;//[Offset: 0x48, Size: 1]
	float DampingRate;//[Offset: 0x4c, Size: 1]
	float PhysMatDampingRateMultiplier;//[Offset: 0x50, Size: 1]
	float SteerAngle;//[Offset: 0x54, Size: 1]
	bool bAffectedByHandbrake;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x58, Size: 1]
	TireType* TireType;//[Offset: 0x60, Size: 1]
	TireConfig* TireConfig;//[Offset: 0x68, Size: 1]
	float LatStiffMaxLoad;//[Offset: 0x70, Size: 1]
	float LatStiffValue;//[Offset: 0x74, Size: 1]
	float LongStiffValue;//[Offset: 0x78, Size: 1]
	float SuspensionForceOffset;//[Offset: 0x7c, Size: 1]
	float SuspensionMaxRaise;//[Offset: 0x80, Size: 1]
	float SuspensionMaxDrop;//[Offset: 0x84, Size: 1]
	float SuspensionNaturalFrequency;//[Offset: 0x88, Size: 1]
	float SuspensionDampingRatio;//[Offset: 0x8c, Size: 1]
	byte SweepType;//[Offset: 0x90, Size: 1]
	float MaxBrakeTorque;//[Offset: 0x94, Size: 1]
	float MaxHandBrakeTorque;//[Offset: 0x98, Size: 1]
	WheeledVehicleMovementComponent* VehicleSim;//[Offset: 0xa0, Size: 1]
	int WheelIndex;//[Offset: 0xa8, Size: 1]
	float DebugLongSlip;//[Offset: 0xac, Size: 1]
	float DebugLatSlip;//[Offset: 0xb0, Size: 1]
	float DebugNormalizedTireLoad;//[Offset: 0xb4, Size: 1]
	float DebugWheelTorque;//[Offset: 0xbc, Size: 1]
	float DebugLongForce;//[Offset: 0xc0, Size: 1]
	float DebugLatForce;//[Offset: 0xc4, Size: 1]
	Vector Location;//[Offset: 0xc8, Size: 1]
	Vector OldLocation;//[Offset: 0xd4, Size: 1]
	Vector Velocity;//[Offset: 0xe0, Size: 1]
	bool IsInAir();// 0xe80480
	float GetSuspensionOffset();// 0xe803c0
	float GetSteerAngle();// 0xe80390
	float GetRotationAngle();// 0xe80360

--------------------------------
Class: TireType.DataAsset.Object
	float FrictionScale;//[Offset: 0x30, Size: 1]

--------------------------------
Class: TireConfig.DataAsset.Object
	float FrictionScale;//[Offset: 0x30, Size: 1]
	TireConfigMaterialFriction[] TireFrictionScales;//[Offset: 0x38, Size: 1]

--------------------------------
Class: TireConfigMaterialFriction
	PhysicalMaterial* PhysicalMaterial;//[Offset: 0x0, Size: 1]
	float FrictionScale;//[Offset: 0x8, Size: 1]

--------------------------------
Class: ReplicatedVehicleState
	float SteeringInput;//[Offset: 0x0, Size: 1]
	float ThrottleInput;//[Offset: 0x4, Size: 1]
	float BrakeInput;//[Offset: 0x8, Size: 1]
	float HandbrakeInput;//[Offset: 0xc, Size: 1]
	int CurrentGear;//[Offset: 0x10, Size: 1]

--------------------------------
Class: VehicleInputRate
	float RiseRate;//[Offset: 0x0, Size: 1]
	float FallRate;//[Offset: 0x4, Size: 1]

--------------------------------
Class: ODKBuoyancyData
	bool bUseRelativePontoonRadius;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	ODKSphericalPontoon[] Pontoons;//[Offset: 0x8, Size: 1]
	float BuoyancyCoefficient;//[Offset: 0x18, Size: 1]
	float MaxBuoyantForce;//[Offset: 0x1c, Size: 1]
	float BuoyancyDamp;//[Offset: 0x20, Size: 1]
	float BuoyancyDampExponential;//[Offset: 0x24, Size: 1]
	bool bUseBuoyancyRamp;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	float BuoyancyRampMinVelocity;//[Offset: 0x2c, Size: 1]
	float BuoyancyRampMaxVelocity;//[Offset: 0x30, Size: 1]
	float BuoyancyRampMax;//[Offset: 0x34, Size: 1]
	bool bApplyWaterForces;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38, Size: 1]
	float WaterShorePushFactor;//[Offset: 0x3c, Size: 1]
	float WaterVelocityStrength;//[Offset: 0x40, Size: 1]
	float MaxWaterForce;//[Offset: 0x44, Size: 1]
	bool bApplyDragForcesInWater;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48, Size: 1]
	Vector DampeningLocation;//[Offset: 0x4c, Size: 1]
	ODKDragSetup DragSetup;//[Offset: 0x58, Size: 1]
	float AngularDampingCoefficient;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: ODKSphericalPontoon
	FName CenterSocket;//[Offset: 0x0, Size: 1]
	Vector RelativeLocation;//[Offset: 0x8, Size: 1]
	float Radius;//[Offset: 0x14, Size: 1]
	bool bShowPontoonVisualizer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x18, Size: 1]
	Vector LocalForce;//[Offset: 0x1c, Size: 1]
	Vector CenterLocation;//[Offset: 0x28, Size: 1]
	Quat SocketRotation;//[Offset: 0x40, Size: 1]
	Vector Offset;//[Offset: 0x50, Size: 1]
	float WaterHeight;//[Offset: 0x60, Size: 1]
	float ImmersionDepth;//[Offset: 0x64, Size: 1]

--------------------------------
Class: ODKDragSetup
	float MaxDampeningDepth;//[Offset: 0x0, Size: 1]
	CurveFloat* DepthDampeningCurve;//[Offset: 0x8, Size: 1]
	float SurfaceArea;//[Offset: 0x10, Size: 1]
	ODKDragItem AlphaDrag;//[Offset: 0x18, Size: 1]
	ODKDragItem AlphaLift;//[Offset: 0x28, Size: 1]
	ODKDragItem SlipDrag;//[Offset: 0x38, Size: 1]

--------------------------------
Class: ODKDragItem
	CurveFloat* Curve;//[Offset: 0x0, Size: 1]
	float Multiplier;//[Offset: 0x8, Size: 1]
	bool bActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]

--------------------------------
Class: SQDamageTypeEffects
	SQDamageEffect DefaultDamageEffect;//[Offset: 0x0, Size: 1]
	SQDamageEffect[] DamageEffects;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SQVehicleUIStaticDataAsset.DataAsset.Object
	Texture2D* MapIcon;//[Offset: 0x30, Size: 1]
	float MapIconRotation;//[Offset: 0x38, Size: 1]
	Texture2D* SideImage;//[Offset: 0x40, Size: 1]
	Texture2D* FrontImage;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQVehicleQueueEntry
	SQPlayerController* Player;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVehicleSettingEntry
	SQVehicleSettings* Setting;//[Offset: 0x0, Size: 1]
	int ArrayIndex;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQRestriction_Cost.SQRestriction.SQSettings.DataAsset.Object
	void RefundCostForTeam(SQTeam* InTeam, int InPercentage);// 0xdf4440
	void RefundCostForPlayer(SQPlayerController* InPlayer, int InPercentage);// 0xdf4370
	void PayCostForTeam(SQTeam* InTeam);// 0xdf42e0
	void PayCostForPlayer(SQPlayerController* InPlayer);// 0xdf4250
	bool HasTeamBasedCost();// 0xd45a00
	bool HasPlayerBasedCost();// 0xd45870
	bool CanTeamBuy(SQTeam* InTeam, out DataTableRowHandle OutRestrictionReason);// 0xdf30e0
	bool CanPlayerBuy(SQPlayerController* InPlayer, out DataTableRowHandle OutRestrictionReason);// 0xdf2ff0

--------------------------------
Class: SQRestriction_Count.SQRestriction.SQSettings.DataAsset.Object
	int BaseAvailability;//[Offset: 0x58, Size: 1]
	bool IsUniqueUsage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c, Size: 1]
	SQCountParameterBase*[] Parameters;//[Offset: 0x60, Size: 1]
	void OnTeamRemoveUsage(SQTeam* InTeam, out int OutRemovedUsage);// 0xdf4030
	void OnTeamAddUsage(SQTeam* InTeam, out int OutAddedUsage);// 0xdf3e10
	void OnPlayerRemoveUsage(SQPlayerController* InPlayer, out int OutRemovedUsage);// 0xdf3bf0
	void OnPlayerAddUsage(SQPlayerController* InPlayer, out int OutAddedUsage);// 0xdf39d0
	void GetAvailabilityForTeam(SQTeam* InTeam, out int OutAvailable, out DataTableRowHandle OutRestrictionReason);// 0xdf3320
	void GetAvailabilityForPlayer(SQPlayerController* InPlayer, out int OutAvailable, out DataTableRowHandle OutRestrictionReason);// 0xdf31f0

--------------------------------
Class: SQCountParameterBase.SQRestriction.SQSettings.DataAsset.Object
	enum Operation;//[Offset: 0x58, Size: 1]
	bool UseForTeam;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x59, Size: 1]
	bool UseForPlayer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5a, Size: 1]
	bool TryGetValueForTeam(const SQTeam* InTeam, out int OutValue);// 0xd75920
	bool TryGetValueForPlayer(const SQPlayerController* InPlayer, out int OutValue);// 0xd75840

--------------------------------
Class: SQRestriction_Boolean.SQRestriction.SQSettings.DataAsset.Object
	bool IsRestrictedForTeam(SQTeam* InTeam);// 0xd7db70
	bool IsRestrictedForPlayer(SQPlayerController* InPlayer);// 0xdeed30

--------------------------------
Class: SQCommanderManager.ActorComponent.Object
	SQCommanderState* CommanderState;//[Offset: 0xb0, Size: 1]
	DataTable* TeamCommands;//[Offset: 0xb8, Size: 1]
	CommanderCategory[] Categories;//[Offset: 0xc0, Size: 1]
	int MinimumSquadSizeForVoting;//[Offset: 0xd0, Size: 1]
	int MinimumSquadsRequiredForVoting;//[Offset: 0xd4, Size: 1]
	int VotingTimeSeconds;//[Offset: 0xd8, Size: 1]
	bool bDoubleCaptureSpeed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xdc, Size: 1]
	float ActionCooldownExtensionOnNewCommander;//[Offset: 0xe0, Size: 1]
	int VoteCooldownTimeSeconds;//[Offset: 0xe4, Size: 1]
	bool bCommanderActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x108, Size: 1]
	static SQCommandActionData GetInterval(const class SQGridData_CommandOption CommandOption, const SQCommanderState* SQCommanderState);// 0xd6c6d0
	void CommanderChangedDelegate__DelegateSignature(SQPlayerState* OldCommander);// 0x1d69c50
	static bool CanUseAction(const class SQGridData_CommandOption CommandOption, const SQCommanderState* SQCommanderState);// 0xd6c220
	static float CalculateTotalTimeRemaining(const class SQGridData_CommandOption CommandOption, const SQCommanderState* SQCommanderState);// 0xd6c150
	static float CalculateStateTimeRemaining(const class SQGridData_CommandOption CommandOption, const SQCommanderState* SQCommanderState, out const enum CommandOptionState);// 0xd6c040
	static float CalculateStatePercentTimeRemaining(const class SQGridData_CommandOption CommandOption, const SQCommanderState* SQCommanderState, out const enum CommandOptionState);// 0xd6bf30
	static enum CalculateState(const class SQGridData_CommandOption CommandOption, const SQCommanderState* SQCommanderState);// 0xd6be60
	static float CalculateCategoryPercentRemainingTime(out const byte CommandOptionType, const SQCommanderState* SQCommanderState);// 0xd6bd80
	static bool CalculateCategoryLocked(out const byte CommandOptionType, const SQCommanderState* SQCommanderState);// 0xd6bca0
	static float CalculateCategoryCurrentRemainingTime(out const byte CommandOptionType, const SQCommanderState* SQCommanderState);// 0xd6bbc0

--------------------------------
Class: SQBitFlag
	int Flags;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQToastWidget.UserWidget.Widget.Visual.Object
	MulticastInlineDelegateProperty ToastTextUpdated;//[Size: 1]
	FText ToastText;//[Offset: 0x270, Size: 1]
	float InitialLifetime;//[Offset: 0x288, Size: 1]
	void ToastTextUpdatedEvent__DelegateSignature(FText ToastText);// 0x1d69c50
	void SetToastText(out const FText InToastText);// 0xe24cb0
	void SetLifetime(float InLifetime);// 0xdeac20
	FText GetToastText();// 0xe242c0

--------------------------------
Class: SQMapMarkerInputComponent.ActorComponent.Object
	void ServerRequestRemoveMapMarker(byte ID);// 0xdb8610
	void ServerRequestMapMarker(const SQMapMarkerGameplayData MarkerGameplayData);// 0xdb8560
	void RefreshMarkerWidgets();// 0xdb8470

--------------------------------
Class: SQMapMarkerGameplayData
	int SquadId;//[Offset: 0x0, Size: 1]
	enum TeamId;//[Offset: 0x4, Size: 1]
	int FireTeamId;//[Offset: 0x8, Size: 1]
	Vector_NetQuantize LocationVector;//[Offset: 0xc, Size: 1]
	Vector_NetQuantize DistanceRotationVector;//[Offset: 0x18, Size: 1]
	SQMapMarkerDataAsset* MapMarkerDataAsset;//[Offset: 0x28, Size: 1]
	byte UniqueID;//[Offset: 0x30, Size: 1]
	float CreationTime;//[Offset: 0x34, Size: 1]

--------------------------------
Class: SQMapMarkerDataAsset.PrimaryDataAsset.DataAsset.Object
	SQMapMarkerVisualData MarkerVisualData;//[Offset: 0x30, Size: 1]
	bool bIsGlobalMarker;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xf8, Size: 1]

--------------------------------
Class: SQMapMarkerVisualData
	Texture2D* Texture;//[Offset: 0x0, Size: 1]
	enum SelectionGroup;//[Offset: 0x8, Size: 1]
	Texture2D* SelectedTexture;//[Offset: 0x10, Size: 1]
	LinearColor SelectedTint;//[Offset: 0x18, Size: 1]
	enum MapMarkerType;//[Offset: 0x28, Size: 1]
	byte MapMarkerTintType;//[Offset: 0x29, Size: 1]
	enum MapMarkerVisibleTo;//[Offset: 0x2a, Size: 1]
	enum Type;//[Offset: 0x2b, Size: 1]
	bool bVisibleWhenNeutral;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c, Size: 1]
	enum PlacementEmote;//[Offset: 0x2d, Size: 1]
	float Lifetime;//[Offset: 0x30, Size: 1]
	float FadeOutTime;//[Offset: 0x34, Size: 1]
	bool bShouldOverrideTint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38, Size: 1]
	LinearColor OverrideTint;//[Offset: 0x3c, Size: 1]
	LinearColor Tint;//[Offset: 0x4c, Size: 1]
	float Rotation;//[Offset: 0x5c, Size: 1]
	Vector2D RotPivot;//[Offset: 0x60, Size: 1]
	Vector2D Size;//[Offset: 0x68, Size: 1]
	Vector2D Offset;//[Offset: 0x70, Size: 1]
	int ZOrder;//[Offset: 0x78, Size: 1]
	enum DrawModeX;//[Offset: 0x7c, Size: 1]
	enum DrawModeY;//[Offset: 0x7d, Size: 1]
	SQMapMarkerGameplayData MarkerGameplayData;//[Offset: 0x88, Size: 1]
	class SQMapMarkerBase* WidgetClass;//[Offset: 0xc0, Size: 1]

--------------------------------
Class: SQMapMarkerBase.UserWidget.Widget.Visual.Object
	Image* MarkerImage;//[Offset: 0x260, Size: 1]
	CanvasPanelSlot* CanvasPanelSlot;//[Offset: 0x268, Size: 1]
	float AnimationEpsilon;//[Offset: 0x270, Size: 1]
	SQColorsDataAsset* ColorsDataAsset;//[Offset: 0x278, Size: 1]
	SQMapMarkerVisualData MarkerData;//[Offset: 0x280, Size: 1]
	bool bHasFaded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x348, Size: 1]
	void SetupMapMarker(CanvasPanelSlot* PanelSlot);// 0xdb8b10
	void OnScaleChanged(float ScaleValue);// 0x1d69c50
	void OnHasFadedChanged();// 0x1d69c50
	SQMapMarkerVisualData GetMapMarkerData();// 0xdb7cb0

--------------------------------
Class: CanvasPanelSlot.PanelSlot.Visual.Object
	AnchorData LayoutData;//[Offset: 0x38, Size: 1]
	bool bAutoSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x60, Size: 1]
	int ZOrder;//[Offset: 0x64, Size: 1]
	void SetZOrder(int InZOrder);// 0x33e3b90
	void SetSize(Vector2D InSize);// 0x33e36b0
	void SetPosition(Vector2D InPosition);// 0x33e34b0
	void SetOffsets(Margin InOffset);// 0x33e30d0
	void SetMinimum(Vector2D InMinimumAnchors);// 0x33e2fc0
	void SetMaximum(Vector2D InMaximumAnchors);// 0x33e2f40
	void SetLayout(out const AnchorData InLayoutData);// 0x33e2d70
	void SetAutoSize(bool InbAutoSize);// 0x33e21b0
	void SetAnchors(Anchors InAnchors);// 0x33e2090
	void SetAlignment(Vector2D InAlignment);// 0x33e2010
	int GetZOrder();// 0x33e1f50
	Vector2D GetSize();// 0x33e1ca0
	Vector2D GetPosition();// 0x33e1c60
	Margin GetOffsets();// 0x33e1c20
	AnchorData GetLayout();// 0x33e1b90
	bool GetAutoSize();// 0x33e1b00
	Anchors GetAnchors();// 0x33e1ac0
	Vector2D GetAlignment();// 0x33e1a80

--------------------------------
Class: AnchorData
	Margin Offsets;//[Offset: 0x0, Size: 1]
	Anchors Anchors;//[Offset: 0x10, Size: 1]
	Vector2D Alignment;//[Offset: 0x20, Size: 1]

--------------------------------
Class: Image.Widget.Visual.Object
	SlateBrush Brush;//[Offset: 0x108, Size: 1]
	delegate BrushDelegate;//[Offset: 0x190, Size: 1]
	LinearColor ColorAndOpacity;//[Offset: 0x1a0, Size: 1]
	delegate ColorAndOpacityDelegate;//[Offset: 0x1b0, Size: 1]
	bool bFlipForRightToLeftFlowDirection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c0, Size: 1]
	delegate OnMouseButtonDownEvent;//[Offset: 0x1c4, Size: 1]
	void SetOpacity(float InOpacity);// 0x33eb950
	void SetColorAndOpacity(LinearColor InColorAndOpacity);// 0x33eb2e0
	void SetBrushTintColor(SlateColor TintColor);// 0x33eb160
	void SetBrushSize(Vector2D DesiredSize);// 0x33eb0e0
	void SetBrushResourceObject(Object* ResourceObject);// 0x33eb050
	void SetBrushFromTextureDynamic(Texture2DDynamic* Texture, bool bMatchSize);// 0x33eaf80
	void SetBrushFromTexture(Texture2D* Texture, bool bMatchSize);// 0x33eaeb0
	void SetBrushFromSoftTexture(Texture2D* SoftTexture, bool bMatchSize);// 0x33ead40
	void SetBrushFromSoftMaterial(MaterialInterface* SoftMaterial);// 0x33eac20
	void SetBrushFromMaterial(MaterialInterface* Material);// 0x33eab90
	void SetBrushFromAtlasInterface(interface classNone AtlasRegion, bool bMatchSize);// 0x33eaaa0
	void SetBrushFromAsset(SlateBrushAsset* Asset);// 0x33eaa10
	void SetBrush(out const SlateBrush InBrush);// 0x33ea900
	MaterialInstanceDynamic* GetDynamicMaterial();// 0x33ea0d0

--------------------------------
Class: Texture2DDynamic.Texture.StreamableRenderAsset.Object
	byte Format;//[Offset: 0x180, Size: 1]

--------------------------------
Class: SlateBrushAsset.Object
	SlateBrush Brush;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQColorsDataAsset.DataAsset.Object
	LinearColor TintColors;//[Offset: 0x30, Size: 7]
	LinearColor[] FireTeamColors;//[Offset: 0xa0, Size: 1]
	LinearColor GetColor(byte TintValue, int FireTeamIndex);// 0xd5f530

--------------------------------
Class: SQAdminStats.ActorComponent.Object

--------------------------------
Class: SQSystemHUDMessage
	FString Message;//[Offset: 0x0, Size: 1]
	LinearColor Color;//[Offset: 0x10, Size: 1]
	float MessageLifetime;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQDataGatheringComponent.ActorComponent.Object
	HeatMapRecorder* HeatMapRecorder;//[Offset: 0xb0, Size: 1]
	void RunMultiMapHeatMap(FString Filename);// 0xd797e0
	void RecordHeatMap(float XStepSize, float YStepSize, float HeightOffset, bool bRecordRawValues, float PositionWaitTime, float YawRotationAngle, float PitchRotationAngle, FString Filename);// 0xd794d0

--------------------------------
Class: HeatMapRecorder.Object

--------------------------------
Class: SQCommanderInputComponent.ActorComponent.Object
	MulticastInlineDelegateProperty OnCommanderRevivedEvent;//[Size: 1]
	void VotePlayer(SQPlayerState* Player);// 0xd60770
	void ServerVoteForCommander(SQPlayerState* Nominee);// 0xd606b0
	void ServerRequestSupportAtLocation(const Vector WorldLocation);// 0xd60600
	void ServerRequestCreateCommandActor(class SQGridData_CommandOption CommandOption, const Transform Transform, const float distance);// 0xd60470
	void ServerRequestCommandActorDestroyed(class SQGridData_CommandOption CommandOption);// 0xd603b0
	void ServerMakePlayerCommander(SQPlayerState* NewCommander);// 0xd602f0
	void ServerDemoteCommander();// 0xd602a0
	void ServerDebugDisableVoteRequirements();// 0xd60250
	void ServerAttemptSetActionsUsableState(bool bNewActionsEnabled);// 0xd60190
	void RequestSupportAtLocation(out const Vector WorldLocation);// 0xd5fcc0
	void RequestPromoteCommander();// 0xd5fca0
	void RequestDemoteCommander();// 0xd5fac0
	void RequestCreateCommandActor(class SQGridData_CommandOption CommandOption, out const Transform Transform, const float distance);// 0xd5f960
	void RequestCommandActorDestroyed(class SQGridData_CommandOption CommandOption);// 0xd5f8d0
	void DebugVoteForCommander(FString PlayerName);// 0xd5f480
	void DebugDisableVoteRequirements();// 0xd3d950
	void DebugDemoteCommander();// 0xd5f460
	void DebugBecomeCommander();// 0xd5f440
	void ClientActionAttemptFinished();// 0xd5f420
	void AttemptSetActionsUsableState(bool bNewActionsEnabled);// 0xd5f1e0

--------------------------------
Class: EOSReplicationManagerComponent.ActorComponent.Object
	void Server_SendMessageToServer(PlayerController* ClientController, const byte[] MessageData);// 0xf76680
	void Client_SendMessageToClient(const byte[] MessageData);// 0xf765e0
	void Client_ClientKickedEndSession();// 0xd9e390

--------------------------------
Class: SQApprovalEntryRequest
	enum RequestType;//[Offset: 0x0, Size: 1]
	Object* PtrParams;//[Offset: 0x8, Size: 4]
	FName MessageTableRowName;//[Offset: 0x28, Size: 1]
	float ExpireIn;//[Offset: 0x30, Size: 1]
	float Timestamp;//[Offset: 0x34, Size: 1]

--------------------------------
Class: SQApprovalEntryClientDesc
	float ExpireIn;//[Offset: 0x0, Size: 1]
	float Timestamp;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SQMovementComponentNetworker.ActorComponent.Object
	SQMovementComponentPacked*[] NetworkedComponents;//[Offset: 0xb0, Size: 1]
	AdjustPositionAndRotationPacket[] PendingClientAdjustPositionAndRotation;//[Offset: 0xc0, Size: 1]
	MovePacket[] PendingServerMove;//[Offset: 0xd0, Size: 1]
	void Server_ReplicateMoveToServer(const MovePacket[] Payload);// 0xdc1b40
	void Client_ReplicateClientAdjustment(const AdjustPositionAndRotationPacket[] Payload);// 0xdc0c00

--------------------------------
Class: SQMovementComponentPacked.SQMovementComponentBase.ActorComponent.Object
	void ClientAdjustRotation(float Timestamp, const Rotator InRotation, const Vector InRotationalVelocity);// 0xdc0af0

--------------------------------
Class: MovePacket
	uint32 UniqueID;//[Offset: 0x0, Size: 1]
	byte[] OldMove;//[Offset: 0x8, Size: 1]
	byte[] NewMove;//[Offset: 0x18, Size: 1]
	byte[] PendingMove;//[Offset: 0x28, Size: 1]

--------------------------------
Class: AdjustPositionAndRotationPacket
	uint32 UniqueID;//[Offset: 0x0, Size: 1]
	float Timestamp;//[Offset: 0x4, Size: 1]
	bool IsAcknowledge;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	bool HasPosition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]
	bool HasRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa, Size: 1]
	bool HasRotationVelocity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb, Size: 1]
	Vector LocationZeroBased;//[Offset: 0xc, Size: 1]
	Vector Velocity;//[Offset: 0x18, Size: 1]
	Rotator Rotation;//[Offset: 0x24, Size: 1]

--------------------------------
Class: SQVotingComponent.ActorComponent.Object
	FName PlayerName;//[Offset: 0xb0, Size: 1]
	SQVoteStateContainer[] ActiveVoteStates;//[Offset: 0xb8, Size: 1]
	<FName,SQVoteSession*> ActiveVotes;//[Offset: 0xc8, Size: 1]
	MulticastInlineDelegateProperty RS_OnVoteStart;//[Size: 1]
	MulticastInlineDelegateProperty RS_OnVoteUpdate;//[Size: 1]
	MulticastInlineDelegateProperty RS_OnVoteEnded;//[Size: 1]
	MulticastInlineDelegateProperty RS_OnVoteDisplayResults;//[Size: 1]
	void Server_RemoveVoteByIds(const FName VoteId, const FName ChoiceId);// 0xe418b0
	void Server_AddVoteByIds(const FName VoteId, const FName ChoiceId);// 0xe417b0
	void RemoveVoteByIds(out const FName VoteId, out const FName ChoiceId);// 0xe41470
	void OnVoteUpdated(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteInput(const int ChoiceIndex);// 0xe411a0
	void OnVoteEnded(SQVoteSessionClient* VoteSession, out const SQChoice Winner);// 0x1d69c50
	bool HasVoteInProgress();// 0xe40510
	FName GetPlayerIdentifier();// 0xe40390
	void AddVoteByIds(out const FName VoteId, out const FName ChoiceId);// 0xe3fca0

--------------------------------
Class: SQVoteSessionClient.SQVoteSession.Object
	MulticastInlineDelegateProperty AddVoteSignal;//[Size: 1]
	MulticastInlineDelegateProperty RemoveVoteSignal;//[Size: 1]
	void SendVoteByChoice(out const SQChoice Choice, bool Positive);// 0xe416c0
	void SendVote(out const FName ChoiceId, bool Positive);// 0xe415e0

--------------------------------
Class: SQVoteSession.Object
	SQVote Vote;//[Offset: 0x28, Size: 1]
	SQVoteSessionInfo State;//[Offset: 0x60, Size: 1]
	bool HasTimedOut();// 0xe404e0
	bool HasFinishedPresentingResults();// 0xe404b0
	FName GetWinnerChoiceId();// 0xe40410
	Timespan GetRemainingTime();// 0xe403d0
	FName GetId();// 0xe402c0
	Timespan GetDuration();// 0xe40280
	DataTableRowHandle GetData();// 0xe40240
	void GetChoiceState(out const FName ChoiceId, out SQVoteSessionChoiceInfo OutState);// 0xe40080
	void GetChoicesPerVoteOrder(out FName[] OutChoiceId);// 0xe40190
	void GetChoiceDescription(out const FName ChoiceId, out SQChoice OutChoice);// 0xe3ff80

--------------------------------
Class: SQVote
	FName ID;//[Offset: 0x0, Size: 1]
	Timespan Duration;//[Offset: 0x8, Size: 1]
	Timespan ResultPresentationDuration;//[Offset: 0x10, Size: 1]
	DataTableRowHandle Data;//[Offset: 0x18, Size: 1]
	SQChoice[] Choices;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQChoice
	FName ID;//[Offset: 0x0, Size: 1]
	DataTableRowHandle Data;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVoteSessionInfo
	DateTime StartTime;//[Offset: 0x0, Size: 1]
	DateTime EndTime;//[Offset: 0x8, Size: 1]
	SQVoteSessionChoiceInfo[] Votes;//[Offset: 0x10, Size: 1]
	int RecordedVotes;//[Offset: 0x20, Size: 1]
	int ExpectedVoteCount;//[Offset: 0x24, Size: 1]

--------------------------------
Class: SQVoteSessionChoiceInfo
	FName ID;//[Offset: 0x0, Size: 1]
	FName[] Voters;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVoteStateContainer
	SQVote Vote;//[Offset: 0x0, Size: 1]
	SQVoteSessionInfo State;//[Offset: 0x38, Size: 1]
	FName WinnerId;//[Offset: 0x60, Size: 1]
	bool Ended;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x68, Size: 1]
	SQChoice WinnerChoice;//[Offset: 0x70, Size: 1]
	byte StatusUpdateID;//[Offset: 0x88, Size: 1]

--------------------------------
Class: ArmorPenetration

--------------------------------
Class: SQVehicleViewWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	Image*[] ZoomImages;//[Offset: 0x260, Size: 1]
	int CurrentZoomIndex;//[Offset: 0x270, Size: 1]
	class CameraShakeBase[] IgnoredShakeClasses;//[Offset: 0x278, Size: 1]
	void Unzoom();// 0xd5f460
	void InitWidget();// 0xd59a20
	void IncreaseZoomLevel();// 0xd3d1a0
	void DecreaseZoomLevel();// 0xd3dac0

--------------------------------
Class: SQRulesetState.Info.Actor.Object
	bool bRulesetEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x228, Size: 1]

--------------------------------
Class: SQScoreEvent
	float Points;//[Offset: 0x0, Size: 1]
	FString Reason;//[Offset: 0x8, Size: 1]
	FName ScoreGroup;//[Offset: 0x18, Size: 1]
	float Timestamp;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQGameMode.GameMode.GameModeBase.Info.Actor.Object
	bool bTournamentMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x318, Size: 1]
	float CheckEndMatchConditionsTimeInterval;//[Offset: 0x31c, Size: 1]
	int InitialLives;//[Offset: 0x320, Size: 1]
	int StartupTime;//[Offset: 0x324, Size: 1]
	int RoundTime;//[Offset: 0x328, Size: 1]
	int TimeBetweenMatches;//[Offset: 0x32c, Size: 1]
	SQTeam* WinnerTeam;//[Offset: 0x330, Size: 1]
	class SQTeam* TeamClass;//[Offset: 0x338, Size: 1]
	class SQSquad* SquadClass;//[Offset: 0x340, Size: 1]
	class SQGameRuleSet[] RuleSetClasses;//[Offset: 0x348, Size: 1]
	SQGameRuleSet*[] RuleSets;//[Offset: 0x358, Size: 1]
	SQTeam*[] Teams;//[Offset: 0x368, Size: 1]
	SQTeam*[] IndexedTeams;//[Offset: 0x378, Size: 1]
	FText DisplayName;//[Offset: 0x3d8, Size: 1]
	bool ConfigureFactionInProgress;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x684, Size: 1]
	void VehicleDestroyed(Controller* Killer, Controller* KilledPlayer, Pawn* KilledPawn, const DamageType* DamageType);// 0xd93ab0
	void UnregisterImportantActor(Actor* Actor);// 0xd93a20
	bool TryToChangePlayersTeam(SQPlayerController* PlayerToChange, int TeamToChangeTo, bool bForceChange);// 0xd93870
	bool TryGetRulesetsOfClass(class SQGameRuleSet RulesetClass, out SQGameRuleSet*[] OutRulesets);// 0xd934d0
	void RegisterRuleSet(SQGameRuleSet* RuleSet);// 0xd92650
	void RegisterImportantActor(Actor* Actor);// 0xd925c0
	void PlayerWounded(Controller* Killer, Controller* KilledPlayer, Pawn* KilledPawn, const DamageType* DamageType);// 0xd92130
	void PlayerRevived(Controller* Reviver, Controller* RevivedPlayer);// 0xd91b20
	void PlayerHealed(Controller* Healer, Controller* HealedPlayer);// 0xd917e0
	void PlayerDied(Controller* Killer, Controller* KilledPlayer, Pawn* KilledPawn, const DamageType* DamageType);// 0xd91600
	void PlayerBandaged(Controller* Bandager, Controller* BandagedPlayer);// 0xd91460
	void OnPlayerChangedTeams(SQPlayerController* PlayerWhoSwitched);// 0xd913d0
	void OnNextLevelSelected(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd912f0
	void OnNextLayerSelected(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd91210
	void OnFactionSelected(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd91130
	void OnCurrentLayerSelected(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd91050
	void LogisticsDropOff(Actor* VehicleActor, float AmmoDroppedOff, float ConstructionDroppedOff);// 0xd90b00
	bool IsDeployNow(PlayerController* PC);// 0xd90a60
	SQTeam* GetTeam(enum Team);// 0xd909d0
	void GetDisplayNameArray(out FString[] OutArray);// 0xd907e0
	FString GetDisplayName();// 0xd90740
	class SQSoldier GetConcretePawnClassForController(Controller* InController);// 0xd906a0
	bool AllowTeamChange(SQPlayerController* RequestingPlayer, int NewTeam);// 0xd905d0

--------------------------------
Class: GameMode.GameModeBase.Info.Actor.Object
	FName MatchState;//[Offset: 0x2d0, Size: 1]
	bool bDelayedStart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2d8, Size: 1]
	int NumSpectators;//[Offset: 0x2dc, Size: 1]
	int NumPlayers;//[Offset: 0x2e0, Size: 1]
	int NumBots;//[Offset: 0x2e4, Size: 1]
	float MinRespawnDelay;//[Offset: 0x2e8, Size: 1]
	int NumTravellingPlayers;//[Offset: 0x2ec, Size: 1]
	class LocalMessage* EngineMessageClass;//[Offset: 0x2f0, Size: 1]
	PlayerState*[] InactivePlayerArray;//[Offset: 0x2f8, Size: 1]
	float InactivePlayerStateLifeSpan;//[Offset: 0x308, Size: 1]
	int MaxInactivePlayers;//[Offset: 0x30c, Size: 1]
	bool bHandleDedicatedServerReplays;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x310, Size: 1]
	void StartMatch();// 0x3f17550
	void SetBandwidthLimit(float AsyncIOBandwidthLimit);// 0x3f13f90
	void Say(FString Msg);// 0x3f13ee0
	void RestartGame();// 0x3f13ba0
	bool ReadyToStartMatch();// 0x3ee30f0
	bool ReadyToEndMatch();// 0x3f138d0
	void K2_OnSetMatchState(FName NewState);// 0x1d69c50
	bool IsMatchInProgress();// 0x3f11550
	FName GetMatchState();// 0x3f101a0
	void EndMatch();// 0x3f0e920
	void AbortMatch();// 0x3f0b050

--------------------------------
Class: InstancedFoliageActor.Actor.Object

--------------------------------
Class: BP_CornerMarker_C.Actor.Object
	SceneComponent* DefaultSceneRoot;//[Offset: 0x228, Size: 1]

--------------------------------
Class: LevelBounds.Actor.Object
	BoxComponent* BoxComponent;//[Offset: 0x228, Size: 1]
	bool bAutoUpdateBounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x230, Size: 1]

--------------------------------
Class: TextRenderActor.Actor.Object
	TextRenderComponent* TextRender;//[Offset: 0x228, Size: 1]

--------------------------------
Class: TextRenderComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	FText Text;//[Offset: 0x450, Size: 1]
	MaterialInterface* TextMaterial;//[Offset: 0x468, Size: 1]
	Font* Font;//[Offset: 0x470, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x478, Size: 1]
	byte VerticalAlignment;//[Offset: 0x479, Size: 1]
	Color TextRenderColor;//[Offset: 0x47c, Size: 1]
	float XScale;//[Offset: 0x480, Size: 1]
	float YScale;//[Offset: 0x484, Size: 1]
	float WorldSize;//[Offset: 0x488, Size: 1]
	float InvDefaultSize;//[Offset: 0x48c, Size: 1]
	float HorizSpacingAdjust;//[Offset: 0x490, Size: 1]
	float VertSpacingAdjust;//[Offset: 0x494, Size: 1]
	bool bAlwaysRenderAsText;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x498, Size: 1]
	void SetYScale(float Value);// 0x401d830
	void SetXScale(float Value);// 0x401d7b0
	void SetWorldSize(float Value);// 0x401d730
	void SetVertSpacingAdjust(float Value);// 0x401d630
	void SetVerticalAlignment(byte Value);// 0x401d6b0
	void SetTextRenderColor(Color Value);// 0x401d5b0
	void SetTextMaterial(MaterialInterface* Material);// 0x401d520
	void SetText(FString Value);// 0x401d470
	void SetHorizSpacingAdjust(float Value);// 0x401d370
	void SetHorizontalAlignment(byte Value);// 0x401d3f0
	void SetFont(Font* Value);// 0x401d2e0
	void K2_SetText(out const FText Value);// 0x401d210
	Vector GetTextWorldSize();// 0x401d100
	Vector GetTextLocalSize();// 0x401d0c0

--------------------------------
Class: StaticMeshActor.Actor.Object
	StaticMeshComponent* StaticMeshComponent;//[Offset: 0x228, Size: 1]
	bool bStaticMeshReplicateMovement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x230, Size: 1]
	enum NavigationGeometryGatheringMode;//[Offset: 0x231, Size: 1]
	void SetMobility(byte InMobility);// 0x140f120

--------------------------------
Class: SkeletalMeshActor.Actor.Object
	bool bShouldDoAnimNotifies;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x230, Size: 1]
	bool bWakeOnLevelStart;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x230, Size: 1]
	SkeletalMeshComponent* SkeletalMeshComponent;//[Offset: 0x238, Size: 1]
	SkeletalMesh* ReplicatedMesh;//[Offset: 0x240, Size: 1]
	PhysicsAsset* ReplicatedPhysAsset;//[Offset: 0x248, Size: 1]
	MaterialInterface* ReplicatedMaterial0;//[Offset: 0x250, Size: 1]
	MaterialInterface* ReplicatedMaterial1;//[Offset: 0x258, Size: 1]
	void OnRep_ReplicatedPhysAsset();// 0xd7ddb0
	void OnRep_ReplicatedMesh();// 0xd78d00
	void OnRep_ReplicatedMaterial1();// 0xd78600
	void OnRep_ReplicatedMaterial0();// 0xd7df20

--------------------------------
Class: BlockingVolume.Volume.Brush.Actor.Object

--------------------------------
Class: DecalActor.Actor.Object
	DecalComponent* Decal;//[Offset: 0x228, Size: 1]
	void SetDecalMaterial(MaterialInterface* NewDecalMaterial);// 0x3ef7de0
	MaterialInterface* GetDecalMaterial();// 0x3ef78f0
	MaterialInstanceDynamic* CreateDynamicMaterialInstance();// 0x3ef7890

--------------------------------
Class: DecalComponent.SceneComponent.ActorComponent.Object
	MaterialInterface* DecalMaterial;//[Offset: 0x1f8, Size: 1]
	int SortOrder;//[Offset: 0x200, Size: 1]
	float FadeScreenSize;//[Offset: 0x204, Size: 1]
	float FadeStartDelay;//[Offset: 0x208, Size: 1]
	float FadeDuration;//[Offset: 0x20c, Size: 1]
	float FadeInDuration;//[Offset: 0x210, Size: 1]
	float FadeInStartDelay;//[Offset: 0x214, Size: 1]
	bool bDestroyOwnerAfterFade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x218, Size: 1]
	Vector DecalSize;//[Offset: 0x21c, Size: 1]
	void SetSortOrder(int Value);// 0x3ef85a0
	void SetFadeScreenSize(float NewFadeScreenSize);// 0x3ef8310
	void SetFadeOut(float StartDelay, float Duration, bool DestroyOwnerAfterFade);// 0x3ef81f0
	void SetFadeIn(float StartDelay, float Duaration);// 0x3ef8120
	void SetDecalMaterial(MaterialInterface* NewDecalMaterial);// 0x3ef7e70
	float GetFadeStartDelay();// 0x3ef79e0
	float GetFadeInStartDelay();// 0x3ef79b0
	float GetFadeInDuration();// 0x3ef7980
	float GetFadeDuration();// 0x3ef7950
	MaterialInterface* GetDecalMaterial();// 0x3ef7920
	MaterialInstanceDynamic* CreateDynamicMaterialInstance();// 0x3ef78c0

--------------------------------
Class: PointLight.Light.Actor.Object
	PointLightComponent* PointLightComponent;//[Offset: 0x238, Size: 1]
	void SetRadius(float NewRadius);// 0x3fd8aa0
	void SetLightFalloffExponent(float NewLightFalloffExponent);// 0x3fd8910

--------------------------------
Class: Light.Actor.Object
	LightComponent* LightComponent;//[Offset: 0x228, Size: 1]
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x230, Size: 1]
	void ToggleEnabled();// 0x3f8f560
	void SetLightFunctionScale(Vector NewLightFunctionScale);// 0x3f8ed30
	void SetLightFunctionMaterial(MaterialInterface* NewLightFunctionMaterial);// 0x3f8ec10
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);// 0x3f8eb10
	void SetLightColor(LinearColor NewLightColor);// 0x3f8e920
	void SetEnabled(bool bSetEnabled);// 0x3f8e4d0
	void SetCastShadows(bool bNewValue);// 0x3f8e0b0
	void SetBrightness(float NewBrightness);// 0x3f8df10
	void SetAffectTranslucentLighting(bool bNewValue);// 0x3f8dbf0
	void OnRep_bEnabled();// 0xd78d00
	bool IsEnabled();// 0x3f8d3c0
	LinearColor GetLightColor();// 0x3f8d300
	float GetBrightness();// 0x3f8d270

--------------------------------
Class: LightComponent.LightComponentBase.SceneComponent.ActorComponent.Object
	float Temperature;//[Offset: 0x228, Size: 1]
	float MaxDrawDistance;//[Offset: 0x22c, Size: 1]
	float MaxDistanceFadeRange;//[Offset: 0x230, Size: 1]
	bool bUseTemperature;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x234, Size: 1]
	int ShadowMapChannel;//[Offset: 0x238, Size: 1]
	float MinRoughness;//[Offset: 0x240, Size: 1]
	float SpecularScale;//[Offset: 0x244, Size: 1]
	float ShadowResolutionScale;//[Offset: 0x248, Size: 1]
	float ShadowBias;//[Offset: 0x24c, Size: 1]
	float ShadowSlopeBias;//[Offset: 0x250, Size: 1]
	float ShadowSharpen;//[Offset: 0x254, Size: 1]
	float ContactShadowLength;//[Offset: 0x258, Size: 1]
	bool ContactShadowLengthInWS;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x25c, Size: 1]
	bool InverseSquaredFalloff;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x25c, Size: 1]
	bool CastTranslucentShadows;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x25c, Size: 1]
	bool bCastShadowsFromCinematicObjectsOnly;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x25c, Size: 1]
	bool bAffectDynamicIndirectLighting;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x25c, Size: 1]
	bool bForceCachedShadowsForMovablePrimitives;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x25c, Size: 1]
	LightingChannels LightingChannels;//[Offset: 0x260, Size: 1]
	MaterialInterface* LightFunctionMaterial;//[Offset: 0x268, Size: 1]
	Vector LightFunctionScale;//[Offset: 0x270, Size: 1]
	TextureLightProfile* IESTexture;//[Offset: 0x280, Size: 1]
	bool bUseIESBrightness;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x288, Size: 1]
	float IESBrightnessScale;//[Offset: 0x28c, Size: 1]
	float LightFunctionFadeDistance;//[Offset: 0x290, Size: 1]
	float DisabledBrightness;//[Offset: 0x294, Size: 1]
	bool bEnableLightShaftBloom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x298, Size: 1]
	float BloomScale;//[Offset: 0x29c, Size: 1]
	float BloomThreshold;//[Offset: 0x2a0, Size: 1]
	float BloomMaxBrightness;//[Offset: 0x2a4, Size: 1]
	Color BloomTint;//[Offset: 0x2a8, Size: 1]
	bool bUseRayTracedDistanceFieldShadows;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ac, Size: 1]
	float RayStartOffsetDepthScale;//[Offset: 0x2b0, Size: 1]
	void SetVolumetricScatteringIntensity(float NewIntensity);// 0x3f8f4e0
	void SetUseTemperature(bool bNewValue);// 0x3f8f450
	void SetUseIESBrightness(bool bNewValue);// 0x3f8f3c0
	void SetTransmission(bool bNewValue);// 0x3f8f330
	void SetTemperature(float NewTemperature);// 0x3f8f2b0
	void SetSpecularScale(float NewValue);// 0x3f8f230
	void SetShadowSlopeBias(float NewValue);// 0x3f8f120
	void SetShadowBias(float NewValue);// 0x3f8f0a0
	void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2);// 0x3f8ee50
	void SetLightFunctionScale(Vector NewLightFunctionScale);// 0x3f8edc0
	void SetLightFunctionMaterial(MaterialInterface* NewLightFunctionMaterial);// 0x3f8eca0
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);// 0x3f8eb90
	void SetLightFunctionDisabledBrightness(float NewValue);// 0x3f8ea90
	void SetLightColor(LinearColor NewLightColor, bool bSRGB);// 0x3f8e9b0
	void SetIntensity(float NewIntensity);// 0x3f8e780
	void SetIndirectLightingIntensity(float NewIntensity);// 0x3f8e700
	void SetIESTexture(TextureLightProfile* NewValue);// 0x3f8e670
	void SetIESBrightnessScale(float NewValue);// 0x3f8e5f0
	void SetForceCachedShadowsForMovablePrimitives(bool bNewValue);// 0x3f8e560
	void SetEnableLightShaftBloom(bool bNewValue);// 0x3f8e440
	void SetBloomTint(Color NewValue);// 0x3f8de90
	void SetBloomThreshold(float NewValue);// 0x3f8de10
	void SetBloomScale(float NewValue);// 0x3f8dd90
	void SetBloomMaxBrightness(float NewValue);// 0x3f8dd10
	void SetAffectTranslucentLighting(bool bNewValue);// 0x3f8dc80
	void SetAffectDynamicIndirectLighting(bool bNewValue);// 0x3f8da40

--------------------------------
Class: LightComponentBase.SceneComponent.ActorComponent.Object
	Guid LightGuid;//[Offset: 0x1f8, Size: 1]
	float Brightness;//[Offset: 0x208, Size: 1]
	float Intensity;//[Offset: 0x20c, Size: 1]
	Color LightColor;//[Offset: 0x210, Size: 1]
	bool bAffectsWorld;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x214, Size: 1]
	bool CastShadows;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x214, Size: 1]
	bool CastStaticShadows;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x214, Size: 1]
	bool CastDynamicShadows;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x214, Size: 1]
	bool bAffectTranslucentLighting;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x214, Size: 1]
	bool bTransmission;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x214, Size: 1]
	bool bCastVolumetricShadow;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x214, Size: 1]
	bool bCastDeepShadow;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x214, Size: 1]
	bool bCastRaytracedShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x215, Size: 1]
	bool bAffectReflection;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x215, Size: 1]
	bool bAffectGlobalIllumination;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x215, Size: 1]
	float DeepShadowLayerDistribution;//[Offset: 0x218, Size: 1]
	float IndirectLightingIntensity;//[Offset: 0x21c, Size: 1]
	float VolumetricScatteringIntensity;//[Offset: 0x220, Size: 1]
	int SamplesPerPixel;//[Offset: 0x224, Size: 1]
	void SetSamplesPerPixel(int NewValue);// 0x3f8f010
	void SetCastVolumetricShadow(bool bNewValue);// 0x3f8e1d0
	void SetCastShadows(bool bNewValue);// 0x3f8e140
	void SetCastRaytracedShadow(bool bNewValue);// 0x3f8e020
	void SetCastDeepShadow(bool bNewValue);// 0x3f8df90
	void SetAffectReflection(bool bNewValue);// 0x3f8db60
	void SetAffectGlobalIllumination(bool bNewValue);// 0x3f8dad0
	LinearColor GetLightColor();// 0x3f8d340

--------------------------------
Class: TextureLightProfile.Texture2D.Texture.StreamableRenderAsset.Object
	float Brightness;//[Offset: 0x1a0, Size: 1]
	float TextureMultiplier;//[Offset: 0x1a4, Size: 1]

--------------------------------
Class: PointLightComponent.LocalLightComponent.LightComponent.LightComponentBase.SceneComponent.ActorComponent.Object
	bool bUseInverseSquaredFalloff;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x340, Size: 1]
	float LightFalloffExponent;//[Offset: 0x344, Size: 1]
	float SourceRadius;//[Offset: 0x348, Size: 1]
	float SoftSourceRadius;//[Offset: 0x34c, Size: 1]
	float SourceLength;//[Offset: 0x350, Size: 1]
	void SetSourceRadius(float bNewValue);// 0x3fd8c20
	void SetSourceLength(float NewValue);// 0x3fd8ba0
	void SetSoftSourceRadius(float bNewValue);// 0x3fd8b20
	void SetLightFalloffExponent(float NewLightFalloffExponent);// 0x3fd8990

--------------------------------
Class: LocalLightComponent.LightComponent.LightComponentBase.SceneComponent.ActorComponent.Object
	enum IntensityUnits;//[Offset: 0x328, Size: 1]
	float Radius;//[Offset: 0x32c, Size: 1]
	float AttenuationRadius;//[Offset: 0x330, Size: 1]
	LightmassPointLightSettings LightmassSettings;//[Offset: 0x334, Size: 1]
	void SetIntensityUnits(enum NewIntensityUnits);// 0x3f91950
	void SetAttenuationRadius(float NewRadius);// 0x3f918d0
	static float GetUnitsConversionFactor(enum SrcUnits, enum TargetUnits, float CosHalfConeAngle);// 0x3f917c0

--------------------------------
Class: LightmassPointLightSettings.LightmassLightSettings

--------------------------------
Class: LightmassLightSettings
	float IndirectLightingSaturation;//[Offset: 0x0, Size: 1]
	float ShadowExponent;//[Offset: 0x4, Size: 1]
	bool bUseAreaShadowsForStationaryLight;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]

--------------------------------
Class: BP_Toolman_C.SkeletalMeshActor.Actor.Object
	StaticMeshComponent* SledgeHammer;//[Offset: 0x2b0, Size: 1]

--------------------------------
Class: BP_TakeDamageVolume_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	BoxComponent* Box;//[Offset: 0x230, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x238, Size: 1]
	SQSoldier*[] Damaged Soldiers;//[Offset: 0x240, Size: 1]
	float DamageToInflict;//[Offset: 0x250, Size: 1]
	float DelayBeforeDamage;//[Offset: 0x254, Size: 1]
	TimerHandle DamageTimer;//[Offset: 0x258, Size: 1]
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0x1d69c50
	void DealDamage();// 0x1d69c50
	void ExecuteUbergraph_BP_TakeDamageVolume(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const HitResult K2Node_ComponentBoundEvent_SweepResult, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAuthority_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_RemoveItem_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQSoldier* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_ApplyDamage_ReturnValue);// 0x1d69c50

--------------------------------
Class: PointerToUberGraphFrame

--------------------------------
Class: BP_Speakerpole_C.StaticMeshActor.Actor.Object
	StaticMeshComponent* Megaphone;//[Offset: 0x238, Size: 1]
	void UserConstructionScript(float CallFunc_RandomFloatInRange_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult);// 0x1d69c50

--------------------------------
Class: Destructable_RadioSet_C.StaticMeshActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x238, Size: 1]
	ParticleSystemComponent* DestructionEffect;//[Offset: 0x240, Size: 1]
	AudioComponent* Audio;//[Offset: 0x248, Size: 1]
	SoundBase* DestructionSound;//[Offset: 0x250, Size: 1]
	void ReceiveAnyDamage(float damage, const DamageType* DamageType, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void ExecuteUbergraph_Destructable_RadioSet(int EntryPoint, float K2Node_Event_Damage, const DamageType* K2Node_Event_DamageType, Controller* K2Node_Event_InstigatedBy, Actor* K2Node_Event_DamageCauser, Vector CallFunc_K2_GetActorLocation_ReturnValue);// 0x1d69c50

--------------------------------
Class: AmbientSound.Actor.Object
	AudioComponent* AudioComponent;//[Offset: 0x228, Size: 1]
	void Stop();// 0x3eaefb0
	void Play(float StartTime);// 0x3eae970
	void FadeOut(float FadeoutDuration, float FadeVolumeLevel);// 0x3eae730
	void FadeIn(float FadeInDuration, float FadeVolumeLevel);// 0x3eae660
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);// 0xffff8009faf60000

--------------------------------
Class: NavMeshBoundsVolume.Volume.Brush.Actor.Object
	NavAgentSelector SupportedAgents;//[Offset: 0x260, Size: 1]

--------------------------------
Class: RecastNavMesh.NavigationData.Actor.Object
	bool bDrawTriangleEdges;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x430, Size: 1]
	bool bDrawPolyEdges;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x430, Size: 1]
	bool bDrawFilledPolys;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x430, Size: 1]
	bool bDrawNavMeshEdges;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x430, Size: 1]
	bool bDrawTileBounds;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x430, Size: 1]
	bool bDrawPathCollidingGeometry;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x430, Size: 1]
	bool bDrawTileLabels;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x430, Size: 1]
	bool bDrawPolygonLabels;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x430, Size: 1]
	bool bDrawDefaultPolygonCost;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x431, Size: 1]
	bool bDrawPolygonFlags;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x431, Size: 1]
	bool bDrawLabelsOnPathNodes;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x431, Size: 1]
	bool bDrawNavLinks;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x431, Size: 1]
	bool bDrawFailedNavLinks;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x431, Size: 1]
	bool bDrawClusters;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x431, Size: 1]
	bool bDrawOctree;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x431, Size: 1]
	bool bDrawOctreeDetails;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x431, Size: 1]
	bool bDrawMarkedForbiddenPolys;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x432, Size: 1]
	bool bDistinctlyDrawTilesBeingBuilt;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x432, Size: 1]
	float DrawOffset;//[Offset: 0x434, Size: 1]
	bool bFixedTilePoolSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x438, Size: 1]
	int TilePoolSize;//[Offset: 0x43c, Size: 1]
	float TileSizeUU;//[Offset: 0x440, Size: 1]
	float CellSize;//[Offset: 0x444, Size: 1]
	float CellHeight;//[Offset: 0x448, Size: 1]
	float AgentRadius;//[Offset: 0x44c, Size: 1]
	float AgentHeight;//[Offset: 0x450, Size: 1]
	float AgentMaxSlope;//[Offset: 0x454, Size: 1]
	float AgentMaxStepHeight;//[Offset: 0x458, Size: 1]
	float MinRegionArea;//[Offset: 0x45c, Size: 1]
	float MergeRegionSize;//[Offset: 0x460, Size: 1]
	float MaxSimplificationError;//[Offset: 0x464, Size: 1]
	int MaxSimultaneousTileGenerationJobsCount;//[Offset: 0x468, Size: 1]
	int TileNumberHardLimit;//[Offset: 0x46c, Size: 1]
	int PolyRefTileBits;//[Offset: 0x470, Size: 1]
	int PolyRefNavPolyBits;//[Offset: 0x474, Size: 1]
	int PolyRefSaltBits;//[Offset: 0x478, Size: 1]
	Vector NavMeshOriginOffset;//[Offset: 0x47c, Size: 1]
	float DefaultDrawDistance;//[Offset: 0x488, Size: 1]
	float DefaultMaxSearchNodes;//[Offset: 0x48c, Size: 1]
	float DefaultMaxHierarchicalSearchNodes;//[Offset: 0x490, Size: 1]
	byte RegionPartitioning;//[Offset: 0x494, Size: 1]
	byte LayerPartitioning;//[Offset: 0x495, Size: 1]
	int RegionChunkSplits;//[Offset: 0x498, Size: 1]
	int LayerChunkSplits;//[Offset: 0x49c, Size: 1]
	bool bSortNavigationAreasByCost;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4a0, Size: 1]
	bool bPerformVoxelFiltering;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x4a0, Size: 1]
	bool bMarkLowHeightAreas;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x4a0, Size: 1]
	bool bUseExtraTopCellWhenMarkingAreas;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x4a0, Size: 1]
	bool bFilterLowSpanSequences;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x4a0, Size: 1]
	bool bFilterLowSpanFromTileCache;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x4a0, Size: 1]
	bool bDoFullyAsyncNavDataGathering;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x4a0, Size: 1]
	bool bUseBetterOffsetsFromCorners;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x4a0, Size: 1]
	bool bStoreEmptyTileLayers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4a1, Size: 1]
	bool bUseVirtualFilters;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x4a1, Size: 1]
	bool bAllowNavLinkAsPathEnd;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x4a1, Size: 1]
	bool bUseVoxelCache;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x4a1, Size: 1]
	float TileSetUpdateInterval;//[Offset: 0x4a4, Size: 1]
	float HeuristicScale;//[Offset: 0x4a8, Size: 1]
	float VerticalDeviationFromGroundCompensation;//[Offset: 0x4ac, Size: 1]
	bool K2_ReplaceAreaInTileBounds(Box Bounds, class NavArea OldArea, class NavArea NewArea, bool ReplaceLinks);// 0x41343e0

--------------------------------
Class: NavigationData.Actor.Object
	PrimitiveComponent* RenderingComp;//[Offset: 0x230, Size: 1]
	NavDataConfig NavDataConfig;//[Offset: 0x238, Size: 1]
	bool bEnableDrawing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2b0, Size: 1]
	bool bForceRebuildOnLoad;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2b0, Size: 1]
	bool bAutoDestroyWhenNoNavigation;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2b0, Size: 1]
	bool bCanBeMainNavData;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x2b0, Size: 1]
	bool bCanSpawnOnRebuild;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x2b0, Size: 1]
	bool bRebuildAtRuntime;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x2b0, Size: 1]
	enum RuntimeGeneration;//[Offset: 0x2b4, Size: 1]
	float ObservedPathsTickInterval;//[Offset: 0x2b8, Size: 1]
	uint32 DataVersion;//[Offset: 0x2bc, Size: 1]
	SupportedAreaData[] SupportedAreas;//[Offset: 0x3c8, Size: 1]

--------------------------------
Class: NavArea.NavAreaBase.Object
	float DefaultCost;//[Offset: 0x30, Size: 1]
	float FixedAreaEnteringCost;//[Offset: 0x34, Size: 1]
	Color DrawColor;//[Offset: 0x38, Size: 1]
	NavAgentSelector SupportedAgents;//[Offset: 0x3c, Size: 1]
	bool bSupportsAgent0;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x40, Size: 1]
	bool bSupportsAgent1;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x40, Size: 1]
	bool bSupportsAgent2;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x40, Size: 1]
	bool bSupportsAgent3;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x40, Size: 1]
	bool bSupportsAgent4;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x40, Size: 1]
	bool bSupportsAgent5;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x40, Size: 1]
	bool bSupportsAgent6;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x40, Size: 1]
	bool bSupportsAgent7;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x40, Size: 1]
	bool bSupportsAgent8;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x41, Size: 1]
	bool bSupportsAgent9;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x41, Size: 1]
	bool bSupportsAgent10;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x41, Size: 1]
	bool bSupportsAgent11;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x41, Size: 1]
	bool bSupportsAgent12;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x41, Size: 1]
	bool bSupportsAgent13;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x41, Size: 1]
	bool bSupportsAgent14;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x41, Size: 1]
	bool bSupportsAgent15;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x41, Size: 1]

--------------------------------
Class: NavDataConfig.NavAgentProperties.MovementProperties
	FName Name;//[Offset: 0x30, Size: 1]
	Color Color;//[Offset: 0x38, Size: 1]
	Vector DefaultQueryExtent;//[Offset: 0x3c, Size: 1]
	class Actor* NavigationDataClass;//[Offset: 0x48, Size: 1]
	class Actor* NavDataClass;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SupportedAreaData
	FString AreaClassName;//[Offset: 0x0, Size: 1]
	int AreaID;//[Offset: 0x10, Size: 1]
	class Object* AreaClass;//[Offset: 0x18, Size: 1]

--------------------------------
Class: BP_GenericInteractable_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	BoxComponent* InteractBox;//[Offset: 0x230, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x238, Size: 1]
	SQUsableData Usable Data;//[Offset: 0x240, Size: 1]
	int Team;//[Offset: 0x280, Size: 1]
	bool ShouldDisplayPrompt(Controller* User);// 0x1d69c50
	int GetInterfaceTeam();// 0x1d69c50
	SQUsableData GetUsableData();// 0x1d69c50
	void BPOnUsed(Controller* User);// 0x1d69c50
	void BPStopUsed(Controller* User);// 0x1d69c50
	void ServerOnUsed(Controller* User);// 0x1d69c50
	void ServerStopUsed(Controller* User);// 0x1d69c50
	void BPDisplayPrompt(Controller* User);// 0x1d69c50
	void BPHidePrompt();// 0x1d69c50
	void ExecuteUbergraph_BP_GenericInteractable(int EntryPoint, BaseRadialMenu_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int Temp_int_Loop_Counter_Variable, int CallFunc_Array_Length_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, BaseRadialMenu_C* CallFunc_Array_Get_Item, Controller* K2Node_Event_User, Controller* K2Node_Event_User, Controller* K2Node_Event_User, Controller* K2Node_Event_User, Controller* K2Node_Event_User, PlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, SQTeamState* CallFunc_GetTeamState_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BaseRadialMenu_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x268, Size: 1]
	NamedSlot* CenterSlot;//[Offset: 0x270, Size: 1]
	Border* CursorRing;//[Offset: 0x278, Size: 1]
	CanvasPanel* Panel;//[Offset: 0x280, Size: 1]
	Image* RingBG;//[Offset: 0x288, Size: 1]
	CanvasPanel* RingWidgetsPanel;//[Offset: 0x290, Size: 1]
	SQRadialButton*[] OuterRingWidgets;//[Offset: 0x298, Size: 1]
	SQRadialButton* Center Widget;//[Offset: 0x2a8, Size: 1]
	float MaxOuterDistance;//[Offset: 0x2b0, Size: 1]
	float ActiveOuterRingDistance;//[Offset: 0x2b4, Size: 1]
	float InactiveOuterRingDistance;//[Offset: 0x2b8, Size: 1]
	MulticastInlineDelegateProperty OnOptionClicked;//[Size: 1]
	MulticastInlineDelegateProperty OnCenterClicked;//[Size: 1]
	FName CloseMenuActionName;//[Offset: 0x2e0, Size: 1]
	bool Inactive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e8, Size: 1]
	class BP_RadialMenuModel_C* RadialMenuModel;//[Offset: 0x2f0, Size: 1]
	Object* Context;//[Offset: 0x2f8, Size: 1]
	CurveFloat* RingScale;//[Offset: 0x300, Size: 1]
	float MaxDistanceFromContext;//[Offset: 0x308, Size: 1]
	float RadialSize;//[Offset: 0x30c, Size: 1]
	MulticastInlineDelegateProperty HoverWidgetChanged;//[Size: 1]
	SoundBase* MouseClickSoundCue;//[Offset: 0x320, Size: 1]
	float Desired Angle;//[Offset: 0x328, Size: 1]
	float Mouse Speed Threshold;//[Offset: 0x32c, Size: 1]
	Vector2D LastMousePos;//[Offset: 0x330, Size: 1]
	int Last Hover Index;//[Offset: 0x338, Size: 1]
	MulticastInlineDelegateProperty Centre Hover Changed;//[Size: 1]
	bool Hovering Centre;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x350, Size: 1]
	MulticastInlineDelegateProperty OnRadialMenuDestroyed;//[Size: 1]
	BP_RadialItemModel_C*[] OuterRingModels;//[Offset: 0x368, Size: 1]
	bool Is Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x378, Size: 1]
	float Radial Centre Hover Division;//[Offset: 0x37c, Size: 1]
	class BP_RadialMenuModel_C[] LastOpenedMenu;//[Offset: 0x380, Size: 1]
	bool bEditMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x390, Size: 1]
	MulticastInlineDelegateProperty OnSelfClosed;//[Size: 1]
	void SequenceEvent__ENTRYPOINTBaseRadialMenu();// 0x1d69c50
	void GetWidgetCenter(out Vector2D WidgetCenter, CanvasPanelSlot* K2Node_DynamicCast_AsCanvas_Panel_Slot, bool K2Node_DynamicCast_bSuccess, Vector2D CallFunc_GetPosition_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply CallFunc_SetUserFocus_ReturnValue, int CallFunc_GetSelectedOuterWidget_Output_Get, float CallFunc_GetSelectedOuterWidget_Actual_Angle, bool CallFunc_IsMouseInCenterHitbox_CenterHitbox);// 0x1d69c50
	void Finished Closed Animation(bool CallFunc_IsAnimationPlayingForward_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void FadeAnimation(bool Reverse, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetAnimationCurrentTime_ReturnValue, byte K2Node_Select_Default, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_IsAnimationPlayingForward_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDoubleClick(Geometry InMyGeometry, out const PointerEvent InMouseEvent, int CallFunc_GetSelectedOuterWidget_Output_Get, float CallFunc_GetSelectedOuterWidget_Actual_Angle, bool CallFunc_Not_PreBool_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply CallFunc_SetUserFocus_ReturnValue, bool CallFunc_IsMouseInCenterHitbox_CenterHitbox);// 0x1d69c50
	void Return to Previous Menu(int CallFunc_Array_LastIndex_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, class BP_RadialMenuModel_C CallFunc_Array_Get_Item, int CallFunc_Array_LastIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	void Sort Radial Z Order(bool Temp_bool_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_GetSelectedOuterWidget_Output_Get, float CallFunc_GetSelectedOuterWidget_Actual_Angle, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, int K2Node_Select_Default, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void CreateToolTip(BP_RadialItemModel_C* InOuterItemModel, out UserWidget* OutToolTip, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, RadialEntry_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void CreateRadialWidget(class SQUserWidget WidgetClass, out SQUserWidget* CreatedWidget, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQUserWidget* CallFunc_Create_ReturnValue);// 0x1d69c50
	void GetSelectedOuterWidget(out int Output_Get, out float Actual Angle, float LocationAngle, float Temp_float_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, float Temp_float_Variable, Vector2D CallFunc_MakeVector2D_ReturnValue, float Temp_float_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, Vector2D CallFunc_GetViewportSize_ReturnValue, enum Temp_byte_Variable, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, float Temp_float_Variable, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_DegAtan2_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item, float CallFunc_Percent_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Percent_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Destroy();// 0x1d69c50
	void CloseSelf(int CallFunc_GetSelectedOuterWidget_Output_Get, float CallFunc_GetSelectedOuterWidget_Actual_Angle, bool CallFunc_IsMouseInCenterHitbox_CenterHitbox);// 0x1d69c50
	void CreateMenuFromModel(Object* CallFunc_GetDefaultObjectFor_ReturnValue, int CallFunc_Array_Add_ReturnValue, BP_RadialMenuModel_C* K2Node_DynamicCast_AsBP_Radial_Menu_Model, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void SetHoveringWidget(SQRadialButton* NewHover, SQRadialButton* OldHover, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, RadialCenter_Deployable_C* K2Node_DynamicCast_AsRadial_Center_Deployable, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void GetHoverWidget(out SQRadialButton* HoverWidget, SQRadialButton* Return, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Notify HoverOver(SQRadialButton* NewHover, bool CallFunc_IsMouseInCenterHitbox_CenterHitbox, int CallFunc_GetSelectedOuterWidget_Output_Get, float CallFunc_GetSelectedOuterWidget_Actual_Angle, SQRadialButton* CallFunc_GetHoverWidget_HoverWidget, bool CallFunc_NotEqual_ObjectObject_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item);// 0x1d69c50
	EventReply OnKeyUp(Geometry MyGeometry, KeyEvent InKeyEvent, EventReply Ret, Key CallFunc_GetKey_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, Key[] CallFunc_GetKeysMappedToAction_Keys, bool CallFunc_Array_Contains_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, int SelectionCounter, int SelectionIndex, EventReply Ret, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, EventReply CallFunc_Handled_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_SetUserFocus_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, int CallFunc_GetSelectedOuterWidget_Output_Get, float CallFunc_GetSelectedOuterWidget_Actual_Angle, bool CallFunc_Not_PreBool_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, bool CallFunc_IsMouseInCenterHitbox_CenterHitbox, EventReply CallFunc_SetUserFocus_ReturnValue);// 0x1d69c50
	void LayoutOuterRing(enum LastPlaceWidgetSize, float TempCurrentRadialOffset, float Temp_float_Variable, enum Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, Vector2D CallFunc_GetViewportSize_ReturnValue, float Temp_float_Variable, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, int Temp_int_Loop_Counter_Variable, float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, float Temp_float_Variable, float CallFunc_GetViewportScale_ReturnValue, float Temp_float_Variable, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, float Temp_float_Variable, enum Temp_byte_Variable, float Temp_float_Variable, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, enum Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_DegCos_ReturnValue, float CallFunc_DegSin_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, float K2Node_Select_Default, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D CallFunc_GetSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Add_Vector2DVector2D_ReturnValue, WidgetTransform K2Node_MakeStruct_WidgetTransform);// 0x1d69c50
	void AddChild(SQRadialButton* Entry, BP_RadialItemModel_C* Model, float Temp_float_Variable, float Temp_float_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, float Temp_float_Variable, int CallFunc_Array_Add_ReturnValue, float Temp_float_Variable, SQRadialButton* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, enum Temp_byte_Variable, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_Select_Default, float CallFunc_Add_FloatFloat_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void Clear Menu(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQRadialButton* CallFunc_Array_Get_Item, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Add Center Widget(SQRadialButton* Entry, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void GetOuterWidgetIndex(out int WidgetIndex, float TempIndexCounter, Vector2D CallFunc_GetViewportSize_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int CallFunc_Divide_IntInt_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_DegAtan2_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Percent_FloatFloat_ReturnValue, int CallFunc_FFloor_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue);// 0x1d69c50
	void IsMouseInCenterHitbox(out bool CenterHitbox, bool L Is Hovering Center, int CallFunc_Array_Length_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_VSize2D_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetAbsoluteSize_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, float CallFunc_VSize2D_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Center Button Clicked();// 0x1d69c50
	void Radial Option Clicked(int Index);// 0x1d69c50
	void ButtonPress(BP_RadialItemModel_C* Item);// 0x1d69c50
	void Reset(bool bCenterMouse);// 0x1d69c50
	void Radial Option Released(int Index);// 0x1d69c50
	void ButtonRelease(BP_RadialItemModel_C* Item);// 0x1d69c50
	void ExecuteUbergraph_BaseRadialMenu(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, int K2Node_CustomEvent_Index, BP_RadialItemModel_C* K2Node_CustomEvent_Item, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialMenuModel_C* K2Node_DynamicCast_AsBP_Radial_Menu_Model, bool K2Node_DynamicCast_bSuccess, bool K2Node_CustomEvent_bCenterMouse, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialItemModel_C* K2Node_DynamicCast_AsBP_Radial_Item_Model, bool K2Node_DynamicCast_bSuccess, BP_RadialItemModel_C* CallFunc_Array_Get_Item, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item, Vector2D CallFunc_MakeVector2D_ReturnValue, int K2Node_CustomEvent_Index, Vector2D CallFunc_GetViewportSize_ReturnValue, BP_RadialItemModel_C* CallFunc_Array_Get_Item, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, SQRadialButton* CallFunc_Array_Get_Item, BP_RadialItemModel_C* K2Node_CustomEvent_Item);// 0x1d69c50
	void OnSelfClosed__DelegateSignature();// 0x1d69c50
	void OnRadialMenuDestroyed__DelegateSignature();// 0x1d69c50
	void Centre Hover Changed__DelegateSignature(bool Centre Hovered);// 0x1d69c50
	void HoverWidgetChanged__DelegateSignature();// 0x1d69c50
	void OnCenterClicked__DelegateSignature(BaseRadialMenu_C* Context);// 0x1d69c50
	void OnOptionClicked__DelegateSignature(int OptionIndex, BaseRadialMenu_C* Context);// 0x1d69c50

--------------------------------
Class: NamedSlot.ContentWidget.PanelWidget.Widget.Visual.Object

--------------------------------
Class: ContentWidget.PanelWidget.Widget.Visual.Object
	PanelSlot* SetContent(Widget* Content);// 0x33e69a0
	PanelSlot* GetContentSlot();// 0x33e6300
	Widget* GetContent();// 0x33e62d0

--------------------------------
Class: Border.ContentWidget.PanelWidget.Widget.Visual.Object
	byte HorizontalAlignment;//[Offset: 0x120, Size: 1]
	byte VerticalAlignment;//[Offset: 0x121, Size: 1]
	bool bShowEffectWhenDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x122, Size: 1]
	LinearColor ContentColorAndOpacity;//[Offset: 0x124, Size: 1]
	delegate ContentColorAndOpacityDelegate;//[Offset: 0x134, Size: 1]
	Margin Padding;//[Offset: 0x144, Size: 1]
	SlateBrush Background;//[Offset: 0x158, Size: 1]
	delegate BackgroundDelegate;//[Offset: 0x1e0, Size: 1]
	LinearColor BrushColor;//[Offset: 0x1f0, Size: 1]
	delegate BrushColorDelegate;//[Offset: 0x200, Size: 1]
	Vector2D DesiredSizeScale;//[Offset: 0x210, Size: 1]
	bool bFlipForRightToLeftFlowDirection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x218, Size: 1]
	delegate OnMouseButtonDownEvent;//[Offset: 0x21c, Size: 1]
	delegate OnMouseButtonUpEvent;//[Offset: 0x22c, Size: 1]
	delegate OnMouseMoveEvent;//[Offset: 0x23c, Size: 1]
	delegate OnMouseDoubleClickEvent;//[Offset: 0x24c, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33e3a10
	void SetPadding(Margin InPadding);// 0x33e3280
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33e2b60
	void SetDesiredSizeScale(Vector2D InScale);// 0x33e29e0
	void SetContentColorAndOpacity(LinearColor InContentColorAndOpacity);// 0x33e2950
	void SetBrushFromTexture(Texture2D* Texture);// 0x33e26b0
	void SetBrushFromMaterial(MaterialInterface* Material);// 0x33e2620
	void SetBrushFromAsset(SlateBrushAsset* Asset);// 0x33e2590
	void SetBrushColor(LinearColor InBrushColor);// 0x33e2500
	void SetBrush(out const SlateBrush InBrush);// 0x33e23f0
	MaterialInstanceDynamic* GetDynamicMaterial();// 0x33e1b60

--------------------------------
Class: CanvasPanel.PanelWidget.Widget.Visual.Object
	CanvasPanelSlot* AddChildToCanvas(Widget* Content);// 0x33e18e0

--------------------------------
Class: SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	enum RadialWidgetSize;//[Offset: 0x318, Size: 1]
	float RadialWidgetAngle;//[Offset: 0x31c, Size: 1]
	SoundCue* MouseEnterSoundCue;//[Offset: 0x320, Size: 1]
	void UpdateRadialAngle(float UpdatedAngle);// 0xdeac20
	void OnHoverEnd();// 0xd6ce60
	void OnHoverBegin();// 0xd3d950

--------------------------------
Class: SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bIsHovering;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	bool bIsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x261, Size: 1]
	float HoveringColorBlend;//[Offset: 0x264, Size: 1]
	float HoverColorBlendSpeed;//[Offset: 0x268, Size: 1]
	bool bIsPressing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x26c, Size: 1]
	float PressColorBlend;//[Offset: 0x270, Size: 1]
	float PressColorBlendSpeed;//[Offset: 0x274, Size: 1]
	Image* ButtonImage;//[Offset: 0x278, Size: 1]
	Border* ButtonBorder;//[Offset: 0x280, Size: 1]
	TextBlock* ButtonTextBlock;//[Offset: 0x288, Size: 1]
	SQButtonStyle SQButtonStyle;//[Offset: 0x290, Size: 1]
	float Alpha;//[Offset: 0x310, Size: 1]
	void UpdateActiveState();// 0xd3dac0
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: TextBlock.TextLayoutWidget.Widget.Visual.Object
	FText Text;//[Offset: 0x128, Size: 1]
	delegate TextDelegate;//[Offset: 0x140, Size: 1]
	SlateColor ColorAndOpacity;//[Offset: 0x150, Size: 1]
	delegate ColorAndOpacityDelegate;//[Offset: 0x178, Size: 1]
	SlateFontInfo Font;//[Offset: 0x188, Size: 1]
	SlateBrush StrikeBrush;//[Offset: 0x1e0, Size: 1]
	Vector2D ShadowOffset;//[Offset: 0x268, Size: 1]
	LinearColor ShadowColorAndOpacity;//[Offset: 0x270, Size: 1]
	delegate ShadowColorAndOpacityDelegate;//[Offset: 0x280, Size: 1]
	float MinDesiredWidth;//[Offset: 0x290, Size: 1]
	bool bWrapWithInvalidationPanel;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x294, Size: 1]
	bool bAutoWrapText;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x295, Size: 1]
	enum TextTransformPolicy;//[Offset: 0x296, Size: 1]
	bool bSimpleTextMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x297, Size: 1]
	void SetTextTransformPolicy(enum InTransformPolicy);// 0x33f91a0
	void SetText(FText InText);// 0x33f90b0
	void SetStrikeBrush(SlateBrush InStrikeBrush);// 0x33f8fa0
	void SetShadowOffset(Vector2D InShadowOffset);// 0x33f8d00
	void SetShadowColorAndOpacity(LinearColor InShadowColorAndOpacity);// 0x33f8c70
	void SetOpacity(float InOpacity);// 0x33f8bf0
	void SetMinDesiredWidth(float InMinDesiredWidth);// 0x33f88d0
	void SetFont(SlateFontInfo InFontInfo);// 0x33f8310
	void SetColorAndOpacity(SlateColor InColorAndOpacity);// 0x33f80a0
	void SetAutoWrapText(bool InAutoTextWrap);// 0x33f8010
	FText GetText();// 0x33f7c30
	MaterialInstanceDynamic* GetDynamicOutlineMaterial();// 0x33f7a20
	MaterialInstanceDynamic* GetDynamicFontMaterial();// 0x33f79f0

--------------------------------
Class: TextLayoutWidget.Widget.Visual.Object
	ShapedTextOptions ShapedTextOptions;//[Offset: 0x108, Size: 1]
	byte Justification;//[Offset: 0x10b, Size: 1]
	enum WrappingPolicy;//[Offset: 0x10c, Size: 1]
	bool AutoWrapText;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x10d, Size: 1]
	float WrapTextAt;//[Offset: 0x110, Size: 1]
	Margin Margin;//[Offset: 0x114, Size: 1]
	float LineHeightPercentage;//[Offset: 0x124, Size: 1]
	void SetJustification(byte InJustification);// 0x33f85b0

--------------------------------
Class: ShapedTextOptions
	bool bOverride_TextShapingMethod;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bOverride_TextFlowDirection;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	enum TextShapingMethod;//[Offset: 0x1, Size: 1]
	enum TextFlowDirection;//[Offset: 0x2, Size: 1]

--------------------------------
Class: SlateFontInfo
	Object* FontObject;//[Offset: 0x0, Size: 1]
	Object* FontMaterial;//[Offset: 0x8, Size: 1]
	FontOutlineSettings OutlineSettings;//[Offset: 0x10, Size: 1]
	FName TypefaceFontName;//[Offset: 0x40, Size: 1]
	int Size;//[Offset: 0x48, Size: 1]
	int LetterSpacing;//[Offset: 0x4c, Size: 1]

--------------------------------
Class: FontOutlineSettings
	int OutlineSize;//[Offset: 0x0, Size: 1]
	bool bSeparateFillAlpha;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4, Size: 1]
	bool bApplyOutlineToDropShadows;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5, Size: 1]
	Object* OutlineMaterial;//[Offset: 0x8, Size: 1]
	LinearColor OutlineColor;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQButtonStyle
	bool bUseStyling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool bUseImageStyling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	Texture2D* NormalImage;//[Offset: 0x8, Size: 1]
	Texture2D* HoveredImage;//[Offset: 0x10, Size: 1]
	Texture2D* PressedImage;//[Offset: 0x18, Size: 1]
	Texture2D* DisabledImage;//[Offset: 0x20, Size: 1]
	bool bUseTintStyling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bUseColorBlending;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	LinearColor NormalTint;//[Offset: 0x2c, Size: 1]
	LinearColor HoveredTint;//[Offset: 0x3c, Size: 1]
	LinearColor PressedTint;//[Offset: 0x4c, Size: 1]
	LinearColor DisabledTint;//[Offset: 0x5c, Size: 1]
	SoundCue* PressedSoundCue;//[Offset: 0x70, Size: 1]
	SoundCue* HoveredSoundCue;//[Offset: 0x78, Size: 1]

--------------------------------
Class: BP_RadialMenuModel_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x28, Size: 1]
	class BP_RadialItemModel_C* CenterButton;//[Offset: 0x30, Size: 1]
	class BP_RadialItemModel_C[] OuterRing;//[Offset: 0x38, Size: 1]
	class BP_RadialMenuModel_C[] Sub Models;//[Offset: 0x48, Size: 1]
	void FormatButtonSize(BaseRadialMenu_C* BaseRadialMenu, BP_RadialItemModel_C* BPRadialItemModel, int Number Of Widgets, enum Surrounding Widget Size, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, enum Temp_byte_Variable, BP_RadialItemModel_C* CallFunc_GetModelReferencesFromClass_AsBP_Radial_Item_Model, BPRadialPopulatorIcon_C* CallFunc_GetModelReferencesFromClass_AsBPRadial_Populator_Icon, int K2Node_Select_Default, SQUserWidget* CallFunc_CreateRadialChildWidget_CreatedWidget, int CallFunc_Multiply_IntInt_ReturnValue, int Temp_int_Variable, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void GetModelReferencesFromClass(class Object ModelClass, out BP_RadialItemModel_C* AsBP Radial Item Model, out BPRadialPopulatorIcon_C* AsBPRadial Populator Icon, bool CallFunc_IsValidClass_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialItemModel_C* K2Node_DynamicCast_AsBP_Radial_Item_Model, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValidClass_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BPRadialPopulatorIcon_C* K2Node_DynamicCast_AsBPRadial_Populator_Icon, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void CreateRadialChildWidget(BaseRadialMenu_C* BaseRadialMenu, BP_RadialItemModel_C* WidgetModel, BPRadialPopulatorIcon_C* Populator, out SQUserWidget* CreatedWidget, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQUserWidget* CallFunc_CreateRadialWidget_CreatedWidget, UserWidget* CallFunc_CreateToolTip_OutToolTip, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Center Button Hit(BaseRadialMenu_C* Radial Menu);// 0x1d69c50
	void CreateChildWidgets(BaseRadialMenu_C* BaseRadialMenu);// 0x1d69c50
	void CreateRadialEntries(W_RadialWheel_C* RadialWheel);// 0x1d69c50
	void ExecuteUbergraph_BP_RadialMenuModel(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, BaseRadialMenu_C* K2Node_CustomEvent_Radial_Menu, BaseRadialMenu_C* K2Node_CustomEvent_BaseRadialMenu, Object* CallFunc_GetDefaultObjectFor_ReturnValue, int Temp_int_Loop_Counter_Variable, BP_RadialItemModel_C* K2Node_DynamicCast_AsBP_Radial_Item_Model, bool K2Node_DynamicCast_bSuccess, int CallFunc_Add_IntInt_ReturnValue, class BP_RadialItemModel_C CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, BP_RadialItemModel_C* CallFunc_GetModelReferencesFromClass_AsBP_Radial_Item_Model, BPRadialPopulatorIcon_C* CallFunc_GetModelReferencesFromClass_AsBPRadial_Populator_Icon, bool CallFunc_Less_IntInt_ReturnValue, SQUserWidget* CallFunc_CreateRadialChildWidget_CreatedWidget, W_RadialWheel_C* K2Node_CustomEvent_RadialWheel, BP_RadialItemModel_C* CallFunc_GetModelReferencesFromClass_AsBP_Radial_Item_Model, BPRadialPopulatorIcon_C* CallFunc_GetModelReferencesFromClass_AsBPRadial_Populator_Icon, SQUserWidget* CallFunc_CreateRadialChildWidget_CreatedWidget, class BP_RadialItemModel_C CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, BP_RadialItemModel_C* CallFunc_GetModelReferencesFromClass_AsBP_Radial_Item_Model, BPRadialPopulatorIcon_C* CallFunc_GetModelReferencesFromClass_AsBPRadial_Populator_Icon, bool CallFunc_Less_IntInt_ReturnValue, BP_RadialItemModel_C* CallFunc_GetModelReferencesFromClass_AsBP_Radial_Item_Model, BPRadialPopulatorIcon_C* CallFunc_GetModelReferencesFromClass_AsBPRadial_Populator_Icon);// 0x1d69c50

--------------------------------
Class: BP_RadialItemModel_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x28, Size: 1]
	FText Name;//[Offset: 0x30, Size: 1]
	Texture2D* Icon;//[Offset: 0x48, Size: 1]
	FText details;//[Offset: 0x50, Size: 1]
	bool ShowsToolTip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x68, Size: 1]
	FName ToolTipKey0;//[Offset: 0x6c, Size: 1]
	FName ToolTipKey1;//[Offset: 0x74, Size: 1]
	FName ToolTipKey2;//[Offset: 0x7c, Size: 1]
	enum WidgetSize;//[Offset: 0x84, Size: 1]
	bool UnavailableInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x85, Size: 1]
	class BPRadialPopulatorIcon_C* WidgetCreatorMethod;//[Offset: 0x88, Size: 1]
	class RadialEntry_Tooltip_C* TooltipClass;//[Offset: 0x90, Size: 1]
	void OnClicked(BaseRadialMenu_C* Radial);// 0x1d69c50
	void Populate(SQRadialButton* Widget, BaseRadialMenu_C* Menu, Object* Context);// 0x1d69c50
	void OnReleased(BaseRadialMenu_C* Radial);// 0x1d69c50
	void ExecuteUbergraph_BP_RadialItemModel(int EntryPoint, BaseRadialMenu_C* K2Node_CustomEvent_Radial, BaseRadialMenu_C* K2Node_CustomEvent_Radial, SQRadialButton* K2Node_CustomEvent_Widget, BaseRadialMenu_C* K2Node_CustomEvent_Menu, Object* K2Node_CustomEvent_Context);// 0x1d69c50

--------------------------------
Class: BPRadialPopulatorIcon_C.Object
	class SQUserWidget* WidgetClass;//[Offset: 0x28, Size: 1]
	void SetupWidget(SQUserWidget* Widget, BaseRadialMenu_C* RadialMenu, BP_RadialItemModel_C* Model);// 0x1d69c50
	void InitialSetup(SQUserWidget* Widget, BP_RadialItemModel_C* Model, BaseRadialMenu_C* RadialMenu, bool CallFunc_IsValid_ReturnValue, IconRadialEntry_C* K2Node_DynamicCast_AsIcon_Radial_Entry, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void FinishWidgetSetup(SQUserWidget* Widget, BaseRadialMenu_C* RadialMenu, BP_RadialItemModel_C* ActionModel, SQRadialButton* K2Node_DynamicCast_AsSQRadial_Button, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue);// 0x1d69c50

--------------------------------
Class: IconRadialEntry_C.SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x440, Size: 1]
	Image* BPElementImage;//[Offset: 0x448, Size: 1]
	Image* BPIconImage;//[Offset: 0x450, Size: 1]
	Image* BPOuterRimImage;//[Offset: 0x458, Size: 1]
	Texture2D* BPIconImageTexture;//[Offset: 0x460, Size: 1]
	BP_RadialItemModel_C* RelatedActionModel;//[Offset: 0x468, Size: 1]
	void BPInit();// 0x1d69c50
	void UpdateActiveState();// 0x1d69c50
	void OnHoverBegin();// 0x1d69c50
	void ExecuteUbergraph_IconRadialEntry(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_RadialActionModel_C* K2Node_DynamicCast_AsBP_Radial_Action_Model, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialAction_C* K2Node_DynamicCast_AsBP_Radial_Action, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanClick_CanClick);// 0x1d69c50

--------------------------------
Class: SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	Vector2D SmallOuterRimDistOffset;//[Offset: 0x328, Size: 1]
	Vector2D MediumOuterRimDistOffset;//[Offset: 0x330, Size: 1]
	Vector2D LargeOuterRimDistOffset;//[Offset: 0x338, Size: 1]
	Vector2D SmallIconDistOffset;//[Offset: 0x340, Size: 1]
	Vector2D MediumIconDistOffset;//[Offset: 0x348, Size: 1]
	Vector2D LargeIconDistOffset;//[Offset: 0x350, Size: 1]
	Image* InnerHoverImage;//[Offset: 0x358, Size: 1]
	Image* IconImage;//[Offset: 0x360, Size: 1]
	Image* OuterRimImage;//[Offset: 0x368, Size: 1]
	Texture2D* IconImageTexture;//[Offset: 0x370, Size: 1]
	LinearColor IconImageActiveColor;//[Offset: 0x378, Size: 1]
	LinearColor IconImageInactiveColor;//[Offset: 0x388, Size: 1]
	LinearColor IconImageHoveredColor;//[Offset: 0x398, Size: 1]
	LinearColor IconImagePressedColor;//[Offset: 0x3a8, Size: 1]
	Texture2D* InnerHoverSmallImageTexture;//[Offset: 0x3b8, Size: 1]
	Texture2D* InnerHoverMediumImageTexture;//[Offset: 0x3c0, Size: 1]
	Texture2D* InnerHoverLargeImageTexture;//[Offset: 0x3c8, Size: 1]
	LinearColor InnerHoverInactiveColor;//[Offset: 0x3d0, Size: 1]
	LinearColor InnerHoverHoveredColor;//[Offset: 0x3e0, Size: 1]
	LinearColor InnerHoverPressedColor;//[Offset: 0x3f0, Size: 1]
	Texture2D* OuterRimSmallImageTexture;//[Offset: 0x400, Size: 1]
	Texture2D* OuterRimMediumImageTexture;//[Offset: 0x408, Size: 1]
	Texture2D* OuterRimLargeImageTexture;//[Offset: 0x410, Size: 1]
	LinearColor OuterRimActiveColor;//[Offset: 0x418, Size: 1]
	LinearColor OuterRimInactiveColor;//[Offset: 0x428, Size: 1]
	float IconSize;//[Offset: 0x438, Size: 1]
	void UpdateOuterRimImage();// 0xd6c7d0
	void UpdateInnerHoverImage();// 0xdeac00
	void UpdateIconImage();// 0xd6cd20

--------------------------------
Class: BP_RadialActionModel_C.BP_RadialItemModel_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x98, Size: 1]
	class BP_RadialAction_C* Action;//[Offset: 0xa0, Size: 1]
	void IsInVehicle(Controller* Controller, out bool IsInVehicle, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void OnClicked(BaseRadialMenu_C* Radial);// 0x1d69c50
	void ExecuteUbergraph_BP_RadialActionModel(int EntryPoint, BaseRadialMenu_C* K2Node_Event_Radial, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialAction_C* K2Node_DynamicCast_AsBP_Radial_Action, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_CanClick_CanClick);// 0x1d69c50

--------------------------------
Class: BP_RadialAction_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x28, Size: 1]
	void IsInVehicle(Controller* Controller, out bool IsInVehicle, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void CanClick(PlayerController* Controller, BP_RadialItemModel_C* Model, out bool CanClick, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInVehicle_IsInVehicle, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void OnClicked(BaseRadialMenu_C* Raidal Menu);// 0x1d69c50
	void ExecuteUbergraph_BP_RadialAction(int EntryPoint, BaseRadialMenu_C* K2Node_CustomEvent_Raidal_Menu);// 0x1d69c50

--------------------------------
Class: RadialEntry_Tooltip_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	void OnSetContext(BP_RadialItemModel_C* In Outer Context);// 0x1d69c50
	void ExecuteUbergraph_RadialEntry_Tooltip(int EntryPoint, BP_RadialItemModel_C* K2Node_CustomEvent_In_Outer_Context);// 0x1d69c50

--------------------------------
Class: W_RadialWheel_C.SQWidget_RadialWheel.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2b8, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x2c0, Size: 1]
	NamedSlot* CenterSlot;//[Offset: 0x2c8, Size: 1]
	Border* CursorRing;//[Offset: 0x2d0, Size: 1]
	float CurrentHoveredIndex;//[Offset: 0x2d8, Size: 1]
	SQRadialButton* Center Widget;//[Offset: 0x2e0, Size: 1]
	W_RadialEntry_C*[] RadialEntries;//[Offset: 0x2e8, Size: 1]
	bool Inactive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	FName CloseMenuActionName;//[Offset: 0x2fc, Size: 1]
	float Radial Centre Hover Division;//[Offset: 0x304, Size: 1]
	bool Hovering Centre;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x308, Size: 1]
	MulticastInlineDelegateProperty CenterHoverChanged;//[Size: 1]
	bool Is Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x320, Size: 1]
	class BP_RadialMenuModel_C* RadialMenuModel;//[Offset: 0x328, Size: 1]
	Object* Context;//[Offset: 0x330, Size: 1]
	Vector2D LastMousePos;//[Offset: 0x338, Size: 1]
	class BP_RadialMenuModel_C[] LastOpenedMenu;//[Offset: 0x340, Size: 1]
	void CreateMenuFromModel(Object* CallFunc_GetDefaultObjectFor_ReturnValue, int CallFunc_Array_Add_ReturnValue, BP_RadialMenuModel_C* K2Node_DynamicCast_AsBP_Radial_Menu_Model, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void ClearMenu(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, W_RadialEntry_C* CallFunc_Array_Get_Item, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void IsMouseInCenterHitbox(out bool CenterHitbox, bool L Is Hovering Center, int CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetAbsoluteSize_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_VSize2D_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_VSize2D_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50
	void CloseSelf(bool CallFunc_IsMouseInCenterHitbox_CenterHitbox);// 0x1d69c50
	EventReply OnKeyUp(Geometry MyGeometry, KeyEvent InKeyEvent, EventReply Ret, Key CallFunc_GetKey_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, Key[] CallFunc_GetKeysMappedToAction_Keys, bool CallFunc_Array_Contains_ReturnValue);// 0x1d69c50
	void RemoveChildWidget(out const W_RadialEntry_C* Item, bool CallFunc_RemoveChild_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue);// 0x1d69c50
	void AddChildWidget(W_RadialEntry_C* RadialEntry, Anchors K2Node_MakeStruct_Anchors, int CallFunc_Array_Add_ReturnValue, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue);// 0x1d69c50
	void FadeAnimation(bool bReverse, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool CallFunc_Not_PreBool_ReturnValue, byte K2Node_Select_Default, float CallFunc_GetAnimationCurrentTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_IsAnimationPlayingForward_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Radial Option Released(int Index);// 0x1d69c50
	void Reset();// 0x1d69c50
	void ExecuteUbergraph_W_RadialWheel(int EntryPoint, bool K2Node_Event_IsDesignTime, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, int CallFunc_Divide_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_GetProperRotation_ReturnValue, float CallFunc_GetCurrentSection_ReturnValue, int K2Node_CustomEvent_Index, W_RadialEntry_C* CallFunc_Array_Get_Item, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue);// 0x1d69c50
	void CenterHoverChanged__DelegateSignature(bool bCenterHovered);// 0x1d69c50

--------------------------------
Class: SQWidget_RadialWheel.UserWidget.Widget.Visual.Object
	Image* RadialMenu;//[Offset: 0x260, Size: 1]
	CanvasPanel* RadialCanvas;//[Offset: 0x268, Size: 1]
	class SQWidget_RadialEntry* StoreCardClass;//[Offset: 0x270, Size: 1]
	int SectionCount;//[Offset: 0x278, Size: 1]
	MaterialInstanceDynamic* MIDRadialMenu;//[Offset: 0x280, Size: 1]
	int SectionSize;//[Offset: 0x288, Size: 1]
	float CurrentSectionAngle;//[Offset: 0x2b0, Size: 1]
	int CurrentHoveredIndex;//[Offset: 0x2b4, Size: 1]
	void GetSectionBounds(int InSectionCount);// 0xe4a0f0
	float GetProperRotation();// 0xe4a080
	float GetCurrentSection(float CurrentAngle);// 0xe49fa0

--------------------------------
Class: SQWidget_RadialEntry.UserWidget.Widget.Visual.Object
	Image* RadialEntry;//[Offset: 0x260, Size: 1]
	Image* RadialEntryIcon;//[Offset: 0x268, Size: 1]
	int SectionIndex;//[Offset: 0x270, Size: 1]
	MaterialInstanceDynamic* MIDRadialEntry;//[Offset: 0x278, Size: 1]
	int SectionSize;//[Offset: 0x280, Size: 1]
	float SectionAngle;//[Offset: 0x284, Size: 1]

--------------------------------
Class: W_RadialEntry_C.SQWidget_RadialEntry.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x288, Size: 1]
	CanvasPanel* IconPivot;//[Offset: 0x290, Size: 1]
	int SectionCount;//[Offset: 0x298, Size: 1]
	void ButtonReleased();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_W_RadialEntry(int EntryPoint, bool K2Node_Event_IsDesignTime, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, int CallFunc_Divide_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: RadialCenter_Deployable_C.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x328, Size: 1]
	TextBlock* Cost;//[Offset: 0x330, Size: 1]
	CanvasPanel* CostZone;//[Offset: 0x338, Size: 1]
	Image* CurrencyBG;//[Offset: 0x340, Size: 1]
	Image* CurrencyIcon;//[Offset: 0x348, Size: 1]
	TextBlock* DeployableName;//[Offset: 0x350, Size: 1]
	TextBlock* details;//[Offset: 0x358, Size: 1]
	ScaleBox* DetailsZone;//[Offset: 0x360, Size: 1]
	TextBlock* errorMessage;//[Offset: 0x368, Size: 1]
	CanvasPanel* ErrorZone;//[Offset: 0x370, Size: 1]
	BaseRadialMenu_C* OwnerRadialMenu;//[Offset: 0x378, Size: 1]
	BP_RadialItemModel_C* RelatedActionModel;//[Offset: 0x380, Size: 1]
	SlateColor UnavailableCurrency;//[Offset: 0x388, Size: 1]
	SlateColor UnavailableBG;//[Offset: 0x3b0, Size: 1]
	SlateColor AvailableBG;//[Offset: 0x3d8, Size: 1]
	SlateColor AvailableCurrency;//[Offset: 0x400, Size: 1]
	void ShowLabel(SQRadialButton* Item, IconRadialEntry_C* K2Node_DynamicCast_AsIcon_Radial_Entry, bool K2Node_DynamicCast_bSuccess, MarkerRadialEntry_C* K2Node_DynamicCast_AsMarker_Radial_Entry, bool K2Node_DynamicCast_bSuccess, BP_PlaceMarkerActionModel_C* K2Node_DynamicCast_AsBP_Place_Marker_Action_Model, bool K2Node_DynamicCast_bSuccess, IconRadialGotoEntry_C* K2Node_DynamicCast_AsIcon_Radial_Goto_Entry, bool K2Node_DynamicCast_bSuccess, BP_GotoMenuActionModel_C* K2Node_DynamicCast_AsBP_Goto_Menu_Action_Model, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void GetDeployableInfos(RadialItem_Deployable_C* In Radial Deployable Item, out SQAvailabilityState Out State, out BP_SQAvailability_Deployable_C* Out Availability, out BP_SQDeployableSettings_C* Out Settings, SQAvailabilityState_Deployable CallFunc_RefreshDeployableState_Out_Deployable_Availability_State, BP_SQAvailability_Deployable_C* K2Node_DynamicCast_AsBP_SQAvailability_Deployable, bool K2Node_DynamicCast_bSuccess, BP_SQDeployableSettings_C* K2Node_DynamicCast_AsBP_SQDeployable_Settings, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void ShowRequirement(BP_SQAvailability_Deployable_C* In Availability, FText L_Requirement, bool CallFunc_HasLimitedCount_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQRestriction_Boolean* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void ShowProblem(SQAvailabilityState In Status, BP_SQAvailability_Deployable_C* In Availability, Timespan CallFunc_GetAvailabilityDelay_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, float CallFunc_GetTotalSeconds_ReturnValue, int CallFunc_FTrunc_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue, float CallFunc_GetTotalMinutes_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_FTrunc_ReturnValue, bool CallFunc_HasActiveTimer_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_IsAvailable_ReturnValue, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void ShowCost(BP_SQRestriction_Cost_C* InCost, bool InAvailable, bool Temp_bool_Variable, byte Temp_byte_Variable, Texture2D* Temp_object_Variable, FText CallFunc_Conv_IntToText_ReturnValue, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, Texture2D* K2Node_Select_Default, SlateColor K2Node_Select_Default, bool Temp_bool_Variable, SlateColor K2Node_Select_Default);// 0x1d69c50
	void RefreshDeployableState(RadialItem_Deployable_C* In Radial Deployable Item, out SQAvailabilityState_Deployable Out Deployable Availability State, int Temp_int_Variable, SQTeamState* CallFunc_TryGetTeamState_OutTeamState, bool CallFunc_TryGetTeamState_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, SQAvailabilityState_Deployable CallFunc_TryGetDeployableAvailability_OutUpdatedDeployableState, bool CallFunc_TryGetDeployableAvailability_ReturnValue, int CallFunc_GetTeamId_ReturnValue);// 0x1d69c50
	void HideDetails();// 0x1d69c50
	void ShowDetails(RadialItem_Deployable_C* In Deployable Item Model, SQAvailabilityState CallFunc_GetDeployableInfos_Out_State, BP_SQAvailability_Deployable_C* CallFunc_GetDeployableInfos_Out_Availability, BP_SQDeployableSettings_C* CallFunc_GetDeployableInfos_Out_Settings, FText CallFunc_GetDisplayName_OutDisplayName, bool CallFunc_GetDisplayName_ReturnValue, bool CallFunc_HasCost_ReturnValue, BP_SQRestriction_Cost_C* K2Node_DynamicCast_AsBP_SQRestriction_Cost, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsAvailable_ReturnValue, FText Temp_text_Variable, bool Temp_bool_Variable, FText K2Node_Select_Default);// 0x1d69c50
	void UpdateContent(SQRadialButton* In Hovered Widget, IconRadialGotoEntry_C* K2Node_DynamicCast_AsIcon_Radial_Goto_Entry, bool K2Node_DynamicCast_bSuccess, IconRadialEntry_C* K2Node_DynamicCast_AsIcon_Radial_Entry, bool K2Node_DynamicCast_bSuccess, BP_GotoMenuActionModel_C* K2Node_DynamicCast_AsBP_Goto_Menu_Action_Model, bool K2Node_DynamicCast_bSuccess, RadialItem_Deployable_C* K2Node_DynamicCast_AsRadial_Item_Deployable, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void OnHoverBegin();// 0x1d69c50
	void OnHoverWidgetChanged(SQRadialButton* In Hovered);// 0x1d69c50
	void ExecuteUbergraph_RadialCenter_Deployable(int EntryPoint, SQRadialButton* K2Node_CustomEvent_In_Hovered);// 0x1d69c50

--------------------------------
Class: ScaleBox.ContentWidget.PanelWidget.Widget.Visual.Object
	byte Stretch;//[Offset: 0x120, Size: 1]
	byte StretchDirection;//[Offset: 0x121, Size: 1]
	float UserSpecifiedScale;//[Offset: 0x124, Size: 1]
	bool IgnoreInheritedScale;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x128, Size: 1]
	void SetUserSpecifiedScale(float InUserSpecifiedScale);// 0x33f5110
	void SetStretchDirection(byte InStretchDirection);// 0x33f4ea0
	void SetStretch(byte InStretch);// 0x33f4e20
	void SetIgnoreInheritedScale(bool bInIgnoreInheritedScale);// 0x33f42e0

--------------------------------
Class: MarkerRadialEntry_C.SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x440, Size: 1]
	Image* BPElementImage;//[Offset: 0x448, Size: 1]
	Image* BPIconImage;//[Offset: 0x450, Size: 1]
	Image* BPOuterRimImage;//[Offset: 0x458, Size: 1]
	Texture2D* BPIconImageTexture;//[Offset: 0x460, Size: 1]
	BP_RadialItemModel_C* RelatedActionModel;//[Offset: 0x468, Size: 1]
	void BPInit();// 0x1d69c50
	void UpdateActiveState();// 0x1d69c50
	void OnHoverBegin();// 0x1d69c50
	void ExecuteUbergraph_MarkerRadialEntry(int EntryPoint, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, BP_PlaceMarkerActionModel_C* K2Node_DynamicCast_AsBP_Place_Marker_Action_Model, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialActionModel_C* K2Node_DynamicCast_AsBP_Radial_Action_Model, bool K2Node_DynamicCast_bSuccess, BP_SpottedMapMarker_C* K2Node_DynamicCast_AsBP_Spotted_Map_Marker, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialAction_C* K2Node_DynamicCast_AsBP_Radial_Action, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_CanClick_CanClick);// 0x1d69c50

--------------------------------
Class: BP_PlaceMarkerActionModel_C.BP_RadialActionModel_C.BP_RadialItemModel_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xa8, Size: 1]
	SQMapMarkerDataAsset* MapMarkerData;//[Offset: 0xb0, Size: 1]
	class SQMapMarker* MarkerClass;//[Offset: 0xb8, Size: 1]
	void OnClicked(BaseRadialMenu_C* Radial);// 0x1d69c50
	void ExecuteUbergraph_BP_PlaceMarkerActionModel(int EntryPoint, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_PlaceMarkerAction_C* K2Node_DynamicCast_AsBP_Place_Marker_Action, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* K2Node_Event_Radial, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsInVehicle_IsInVehicle, bool CallFunc_CanClick_CanClick);// 0x1d69c50

--------------------------------
Class: BP_PlaceMarkerAction_C.BP_RadialAction_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x30, Size: 1]
	MulticastInlineDelegateProperty DoAction;//[Size: 1]
	int PlaceMarkerRange;//[Offset: 0x48, Size: 1]
	void DoAction_Event(SQMapMarkerDataAsset* MapMarkerData, BaseRadialMenu_C* RadialMenu, class SQMapMarker MapMarkerClass);// 0x1d69c50
	void ExecuteUbergraph_BP_PlaceMarkerAction(int EntryPoint, SQMapMarkerDataAsset* K2Node_CustomEvent_MapMarkerData, BaseRadialMenu_C* K2Node_CustomEvent_RadialMenu, class SQMapMarker K2Node_CustomEvent_MapMarkerClass, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, Rotator CallFunc_GetCameraRotation_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_Conv_RotatorToVector_ReturnValue, Vector CallFunc_Multiply_VectorInt_ReturnValue, Vector CallFunc_GetCameraLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue);// 0x1d69c50
	void DoAction__DelegateSignature(class SQMarker NewParam);// 0x1d69c50

--------------------------------
Class: SQMarker.Actor.Object

--------------------------------
Class: BP_SpottedMapMarker_C.BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object

--------------------------------
Class: BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x268, Size: 1]
	LinearColor DefaultTint;//[Offset: 0x270, Size: 1]
	void Remove FT Markers(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, BP_WaypointMapMarker_C*[] CallFunc_GetAllActorsOfClass_OutActors, Actor* CallFunc_GetOwner_ReturnValue, BP_WaypointMapMarker_C* CallFunc_Array_Get_Item, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSquadLeader_ReturnValue, int CallFunc_GetFireteamId_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Tint(bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, enum CallFunc_GetMarkerType_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsLocalController_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int CallFunc_GetFireteamId_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void MarkerIsRelevant(Controller* Controller, out bool Success, int CallFunc_GetFireteamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, SQSquadState* CallFunc_GetSquadState_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void UserConstructionScript(Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, bool CallFunc_IsStandaloneOrListenServer_ReturnValue);// 0x1d69c50
	void SetTexture(Texture2D* Texture);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveDestroyed();// 0x1d69c50
	void ExecuteUbergraph_BP_GenericMapMarker(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Texture2D* K2Node_CustomEvent_Texture, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_MarkerIsRelevant_Success, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, int CallFunc_Array_Add_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_IsStandaloneOrListenServer_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQPlayerState* CallFunc_Array_Get_Item, Actor* CallFunc_GetOwner_ReturnValue, int CallFunc_Array_Add_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_MarkerIsRelevant_Success, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_WaypointMapMarker_C.BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_WaypointMapMarker(int EntryPoint, Actor* CallFunc_GetOwner_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQHUD.HUD.Actor.Object
	SQInputState[] InputStateStack;//[Offset: 0x318, Size: 1]
	bool bTraceViewEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x328, Size: 1]
	SQVehicleViewWidget* VehicleOverlayWidget;//[Offset: 0x330, Size: 1]
	SQBaseHudWidget* BaseHudWidget;//[Offset: 0x338, Size: 1]
	SQMapMarker* CurrentlyShownHudMarker;//[Offset: 0x340, Size: 1]
	bool bEndOfRound;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x348, Size: 1]
	float MapTopPadding;//[Offset: 0x34c, Size: 1]
	float MapRightPadding;//[Offset: 0x350, Size: 1]
	float MapBottomPadding;//[Offset: 0x354, Size: 1]
	float MapMaxWidthRatio;//[Offset: 0x358, Size: 1]
	LinearColor MapGridLetterColor;//[Offset: 0x35c, Size: 1]
	LinearColor SquadToSquadRadioColor;//[Offset: 0x36c, Size: 1]
	LinearColor SquadToAllSquadsRadioColor;//[Offset: 0x37c, Size: 1]
	float MapGridLetterPadding;//[Offset: 0x38c, Size: 1]
	float MapGridLetterScale;//[Offset: 0x390, Size: 1]
	Actor*[] LineOfSightDrawTextCache;//[Offset: 0x398, Size: 1]
	SQCoreStateSelectionHUB* SelectionHUB;//[Offset: 0x3a8, Size: 1]
	SQCoreStateMapComponent* MapComponent;//[Offset: 0x3b0, Size: 1]
	SQMapWidgetBase* MapWidgetBase;//[Offset: 0x3b8, Size: 1]
	SQCoreStateSpawnPointsListComponent* SpawnPointsListComponent;//[Offset: 0x3c0, Size: 1]
	SQCoreStateSquadListComponent* SquadListComponent;//[Offset: 0x3c8, Size: 1]
	SQCoreStateRolesSquadListComponent* RoleSquadListComponent;//[Offset: 0x3d0, Size: 1]
	SQNetworkPollingComponent* NetworkPolling;//[Offset: 0x3d8, Size: 1]
	Texture2D* HUDMainTexture;//[Offset: 0x418, Size: 1]
	Texture2D* LowHealthOverlayTexture;//[Offset: 0x420, Size: 1]
	MaterialInterface* CircularProgressMaterial;//[Offset: 0x428, Size: 1]
	FName CircularProgressMaterialPercentageName;//[Offset: 0x430, Size: 1]
	FName CircularProgressMaterialTransparencyName;//[Offset: 0x438, Size: 1]
	FName CircularProgressMaterialColorName;//[Offset: 0x440, Size: 1]
	<SQSoldier*,MaterialInstanceDynamic*> CircularProgressMIDMap;//[Offset: 0x448, Size: 1]
	Texture* MedicIconTexture;//[Offset: 0x498, Size: 1]
	Texture* HealedIconTexture;//[Offset: 0x4a0, Size: 1]
	Texture* DragIconTexture;//[Offset: 0x4a8, Size: 1]
	Texture* VehicleRepairIconTexture;//[Offset: 0x4b0, Size: 1]
	Texture* BleedingIconTexture;//[Offset: 0x4b8, Size: 1]
	Texture* ItemCollisionIconTexture;//[Offset: 0x4c0, Size: 1]
	Font* BigFont;//[Offset: 0x4c8, Size: 1]
	Font* NormalFont;//[Offset: 0x4d0, Size: 1]
	Font* NametagFont;//[Offset: 0x4d8, Size: 1]
	Font* ChatMessageFont;//[Offset: 0x4e0, Size: 1]
	Font* SystemMessageFont;//[Offset: 0x4e8, Size: 1]
	LinearColor TicketTextColor;//[Offset: 0x4f0, Size: 1]
	SQRemoteTalkerDisplayInfo[] RemoteTalkers;//[Offset: 0x500, Size: 1]
	SQRemoteTalkerDisplayInfo[] TestTalkers;//[Offset: 0x510, Size: 1]
	bool bUseTestTalkers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x520, Size: 1]
	enum OwnerSpeakingState;//[Offset: 0x521, Size: 1]
	SQMessageBoxInfo ChatBoxInfo;//[Offset: 0x528, Size: 1]
	SQMessageBoxInfo SystemMessageBoxInfo;//[Offset: 0x5a8, Size: 1]
	SQMessageBoxInfo GameNotificationBoxInfo;//[Offset: 0x628, Size: 1]
	SQMessageBoxInfo PlayerNotificationBoxInfo;//[Offset: 0x6a8, Size: 1]
	LinearColor SystemMessagesColor;//[Offset: 0x728, Size: 1]
	bool bShouldOffsetSpawnText;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x73c, Size: 1]
	bool bShouldShowEnemyFobWidgets;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x73c, Size: 1]
	int StartingMapZoomLevel;//[Offset: 0x740, Size: 1]
	float[] MapZoomLevels;//[Offset: 0x748, Size: 1]
	SQScoreboard* ScoreBoard;//[Offset: 0x788, Size: 1]
	SQDrawChatWidget* ChatDrawingWidget;//[Offset: 0x790, Size: 1]
	float NametagDistantVisibilityDropoffStart;//[Offset: 0x7a8, Size: 1]
	float NametagDistantVisibilityDropoffFinish;//[Offset: 0x7ac, Size: 1]
	float NametagDistantVisibilitySize;//[Offset: 0x7b0, Size: 1]
	float NametagNearVerticalOffset;//[Offset: 0x7b4, Size: 1]
	float NametagFarVerticalOffset;//[Offset: 0x7b8, Size: 1]
	float NametagNearVerticalInterpStart;//[Offset: 0x7bc, Size: 1]
	float NametagFadingInterpStart;//[Offset: 0x7c0, Size: 1]
	float UsableDistantVisibilityDropoffStart;//[Offset: 0x7c4, Size: 1]
	float UsableDistantVisibilityDropoffFinish;//[Offset: 0x7c8, Size: 1]
	float UsableDistantVisibilitySize;//[Offset: 0x7cc, Size: 1]
	float UsableNearVerticalOffset;//[Offset: 0x7d0, Size: 1]
	float UsableFarVerticalOffset;//[Offset: 0x7d4, Size: 1]
	float UsableNearVerticalInterpStart;//[Offset: 0x7d8, Size: 1]
	float UsableFadingInterpStart;//[Offset: 0x7dc, Size: 1]
	LinearColor EnemyColor;//[Offset: 0x7e0, Size: 1]
	LinearColor TeamColor;//[Offset: 0x7f0, Size: 1]
	LinearColor SquadColor;//[Offset: 0x800, Size: 1]
	LinearColor FireTeamColor;//[Offset: 0x810, Size: 1]
	LinearColor NametagOutlineColor;//[Offset: 0x820, Size: 1]
	float MaxDistanceToShowHUDIcons;//[Offset: 0x830, Size: 1]
	float MaxDistanceToShowWoundedHUDIcons;//[Offset: 0x834, Size: 1]
	float MaxDistanceToShowDragHUDIcons;//[Offset: 0x838, Size: 1]
	FName BoneForDragIcon;//[Offset: 0x83c, Size: 1]
	float DragIconXOffset;//[Offset: 0x844, Size: 1]
	float DragIconYOffset;//[Offset: 0x848, Size: 1]
	LinearColor DragHUDIconColor;//[Offset: 0x84c, Size: 1]
	float DragHUDIconSizeMultiplier;//[Offset: 0x85c, Size: 1]
	FName BoneForBleedingIcon;//[Offset: 0x860, Size: 1]
	Vector HUDIconOffset;//[Offset: 0x868, Size: 1]
	Vector HUDIconCrouchedOffset;//[Offset: 0x874, Size: 1]
	Vector HUDIconProneOffset;//[Offset: 0x880, Size: 1]
	Vector HUDIconWoundedOffset;//[Offset: 0x88c, Size: 1]
	float HUDIconFarSize;//[Offset: 0x898, Size: 1]
	float HUDIconNearSize;//[Offset: 0x89c, Size: 1]
	Vector2D HealedIconOffset;//[Offset: 0x8a0, Size: 1]
	Vector2D HealedIconSize;//[Offset: 0x8a8, Size: 1]
	Vector2D ItemCollisionIconOffset;//[Offset: 0x8b0, Size: 1]
	Vector2D ItemCollisionIconSize;//[Offset: 0x8b8, Size: 1]
	float MaxTimeSinceLastHealedToDrawHealedIcon;//[Offset: 0x8c0, Size: 1]
	float MaxTimeSinceLastRepairedToDrawRepairedIcon;//[Offset: 0x8c4, Size: 1]
	CurveLinearColor* HealthColorCurve;//[Offset: 0x8c8, Size: 1]
	bool bHudWidgetsEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8d0, Size: 1]
	MulticastInlineDelegateProperty OnChatReceived;//[Size: 1]
	SoundBase* CommandVoiceStartingSound;//[Offset: 0x8f8, Size: 1]
	SoundBase* CommandVoiceEndingSound;//[Offset: 0x900, Size: 1]
	SoundBase* SquadVoiceStartingSound;//[Offset: 0x908, Size: 1]
	SoundBase* SquadVoiceEndingSound;//[Offset: 0x910, Size: 1]
	SQColorsDataAsset* ColorsDataAsset;//[Offset: 0x920, Size: 1]
	Enum* ChatEnumObj;//[Offset: 0x928, Size: 1]
	MulticastInlineDelegateProperty OnWorldOriginUpdated;//[Size: 1]
	void WorldOriginUpdated(World* World, IntVector Old, IntVector New);// 0xda4140
	void VehicleResetZoom();// 0xd88d30
	void VehicleRemoveOverlay(class SQVehicleViewWidget WidgetClass);// 0xd92530
	void VehicleIncreaseZoomOverlay();// 0xda4120
	void VehicleDecreaseZoomOverlay();// 0xd88c40
	void VehicleCreateOverlay(class SQVehicleViewWidget WidgetClass);// 0xd93990
	void TraceViewToggle();// 0xda4100
	void ToggleScoreboard();// 0xda40e0
	void ShowScoreboard(bool bEnable);// 0xda3fb0
	void ShowMarkerOnHUD(SQMapMarkerVisualData MapMarkerVisualData);// 0x1d69c50
	bool ShouldOffsetSpawnText();// 0xda3f80
	void SetHudWidgetsEnabled(bool bValue);// 0xda3ef0
	void RemoveLineOfSightActor(Actor* Actor);// 0xda3db0
	SQInputState RemoveInputStackState(SQInputState OldState);// 0xda3c40
	void OnReceiveChatEvent__DelegateSignature(const FString PlayerName, const FString Message, enum Channel, LinearColor Color, enum NotificationType);// 0x1d69c50
	bool IsScoreboardVisible();// 0xda3a80
	float IncrementMapZoomLevel(float CurrentMapZoom, int Amount, bool bLoop);// 0xda38d0
	bool HudWidgetsEnabled();// 0xda38b0
	void HideDeployableInteractableOverlay(SQDeployableInteractable* ammobag);// 0x1d69c50
	void HideAmmoBagOverlay(SQDeployableAmmoBag* ammobag);// 0x1d69c50
	LinearColor GetTeamColor();// 0xda36c0
	LinearColor GetTeamBasedColor(enum InTeam);// 0xda3620
	LinearColor GetSystemMessagesColor();// 0xda35e0
	float GetStartingMapZoom();// 0xda35b0
	LinearColor GetSquadColor();// 0xda3570
	float GetScaleUI();// 0xda3540
	SQRemoteTalkerDisplayInfo[] GetRemoteTalkers();// 0xda3440
	enum GetOwnerSpeakerState();// 0xda33e0
	LinearColor GetOtherPlayerColor(SQPlayerState* OtherPlayer);// 0xda3340
	bool GetMouseScreenSpacePosition(out IntPoint OutPosition);// 0xda32a0
	LinearColor GetFireTeamColor();// 0xda3150
	LinearColor GetEnemyColor();// 0xda3110
	Canvas* GetCanvas();// 0xda30e0
	void DrawSystemMessages(const float PosX, const float PosY);// 0xda2f50
	float DrawString(int Index, FString Text, float PosX, float PosY, out const LinearColor Color, SQMessageBoxInfo Info, enum HorizontalAlignment, enum VerticalAlignment);// 0xda2a60
	void DrawChatMessages(out SQMessageBoxInfo ChatBox, const float PosX, const float PosY);// 0xda2880
	void DisplayDeployableInteractableOverlay(SQDeployableInteractable* ammobag, bool bCanPickup);// 0x1d69c50
	void DisplayAmmoBagOverlay(SQDeployableAmmoBag* ammobag, bool bCanPickup);// 0x1d69c50
	void DeleteMarkerOnHUD();// 0x1d69c50
	void ConditionalCloseScoreboard();// 0xda2860
	void BPOnUsableVisible(Actor* Actor, bool bIsVisible);// 0x1d69c50
	void BPOnSetHudWidgetsEnabled(bool bEnabled);// 0x1d69c50
	void BlueprintNotifyHit(float DamageTaken, out const DamageEvent DamageEvent, Pawn* PawnInstigator);// 0x1d69c50
	void AddSystemMessage(FString Message, out const LinearColor Color, const float MessageLifetimeOverride, enum NotificationType);// 0xda24b0
	void AddLineOfSightActor(Actor* Actor);// 0xda2390
	SQInputState AddInputStackState(SQInputState NewState);// 0xda2220
	void AddChatMessageDefaultColor(SQPlayerState* Player, FString Message, enum Channel, float MessageLifetimeOverride, enum NotificationType);// 0xda1f00
	void AddChatMessage(SQPlayerState* Player, FString Message, enum Channel, LinearColor Color, float MessageLifetimeOverride, enum NotificationType);// 0xda1cf0

--------------------------------
Class: SQInputState
	FString RequestReason;//[Offset: 0x0, Size: 1]
	UserWidget* Focus;//[Offset: 0x10, Size: 1]
	bool bGameInput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x18, Size: 1]
	bool bDisplayMouse;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19, Size: 1]
	bool bUIInput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1a, Size: 1]

--------------------------------
Class: SQBaseHudWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	UserWidget* StateIndicators;//[Offset: 0x260, Size: 1]
	SQAmmoWidget* AmmoWidget;//[Offset: 0x268, Size: 1]
	UserWidget* SightRangeWidget;//[Offset: 0x270, Size: 1]
	SQCompassMK2* CompassWidget;//[Offset: 0x278, Size: 1]
	UserWidget* CaptureZoneWidget;//[Offset: 0x280, Size: 1]
	UserWidget* FOBStatusWidget;//[Offset: 0x288, Size: 1]
	UserWidget* StaminaWidget;//[Offset: 0x290, Size: 1]
	UserWidget* VehicleHealthWidget;//[Offset: 0x298, Size: 1]
	SQApprovalQueueWidget* ApprovalQueueWidget;//[Offset: 0x2a0, Size: 1]
	SQSeatProgressWidget* SeatProgressWidget;//[Offset: 0x2a8, Size: 1]
	SQStagingTimerText* StagingTimerText;//[Offset: 0x2b0, Size: 1]
	UserWidget* CenterDotWidget;//[Offset: 0x2b8, Size: 1]
	void UpdateActiveState();// 0xd3dac0
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQAmmoWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	SQMagazineGroupWidget*[] MagazineGroupWidgets;//[Offset: 0x260, Size: 1]
	CanvasPanel* HighestLevelCanvas;//[Offset: 0x270, Size: 1]
	TextBlock* FiremodeTextBlock;//[Offset: 0x278, Size: 1]
	TextBlock* AmmoCountTextBlock;//[Offset: 0x280, Size: 1]
	TextBlock* ZeroingTextBlock;//[Offset: 0x288, Size: 1]
	Image* RoundInChamberImage;//[Offset: 0x290, Size: 1]
	bool bShowFireSelectorInfo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	bool bShowAmmoInMag;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x299, Size: 1]
	SQPlayerController* PlayerController;//[Offset: 0x2a0, Size: 1]
	SQPlayerState* PlayerState;//[Offset: 0x2a8, Size: 1]
	LinearColor RefillableMagazineColor;//[Offset: 0x2b0, Size: 1]
	LinearColor FullMagazineColor;//[Offset: 0x2c0, Size: 1]
	LinearColor NearlyFullMagazineColor;//[Offset: 0x2d0, Size: 1]
	LinearColor HalfMagazineColor;//[Offset: 0x2e0, Size: 1]
	LinearColor EmptyMagazineColor;//[Offset: 0x2f0, Size: 1]
	FText FireModeAutoText;//[Offset: 0x300, Size: 1]
	FText SightRangeText;//[Offset: 0x318, Size: 1]
	FText FireModeSingleText;//[Offset: 0x330, Size: 1]
	FText FireModeBurstText;//[Offset: 0x348, Size: 1]
	SQEquipableItem* CachedCurrentWeapon;//[Offset: 0x360, Size: 1]
	void UpdateState();// 0xd3dac0
	bool UpdateShowingStatus();// 0xd3da90
	void UpdateMags(SQEquipableItem* CurrentItem);// 0xd3da00
	void UpdateFiremode(SQEquipableItem* CurrentItem);// 0xd3d970
	void UpdateCurrentWeapon();// 0xd3d950
	void OnShowResourceAmounts();// 0x1d69c50
	void OnShowCurrentWeapon();// 0x1d69c50
	void OnCurrentWeaponChanged();// 0x1d69c50
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQMagazineGroupWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	SQMagazineWidget*[] MagazineWidgets;//[Offset: 0x260, Size: 1]
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQMagazineWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	Image* SelectedImage;//[Offset: 0x260, Size: 1]
	Image* AmmoImage;//[Offset: 0x268, Size: 1]
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQCompassMK2.SQCompass.SQUserWidget.UserWidget.Widget.Visual.Object
	CanvasPanel* MainP;//[Offset: 0x280, Size: 1]
	TextBlock* CompassBearingText;//[Offset: 0x288, Size: 1]
	bool bPreciseBearingMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	Image* LeftArrow;//[Offset: 0x298, Size: 1]
	Image* RightArrow;//[Offset: 0x2a0, Size: 1]
	bool bTopScreenView;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	MaterialInstanceDynamic* CompassMID;//[Offset: 0x2b0, Size: 1]
	FName BearingMatParamName;//[Offset: 0x2b8, Size: 1]
	SQPlayerState* InitialPlayerState;//[Offset: 0x2c0, Size: 1]
	float MarkerYPositionOffset;//[Offset: 0x2c8, Size: 1]
	SQCompassPlayer*[] TrackedSquadMatesWidgets;//[Offset: 0x2d0, Size: 1]
	CurveFloat* DistanceCurve;//[Offset: 0x2e0, Size: 1]
	bool bAlwaysShowSquadLeader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e8, Size: 1]
	SQCompassMarker*[] TrackedMarkerWidgets;//[Offset: 0x2f0, Size: 1]
	enum[] MarkerTypesToTrack;//[Offset: 0x300, Size: 1]
	float CompassEdgeFadePercentage;//[Offset: 0x310, Size: 1]
	float CompassEdgeMinFade;//[Offset: 0x314, Size: 1]
	Vector2D MarkerBottomPosition;//[Offset: 0x318, Size: 1]
	Vector2D MarkerTopPosition;//[Offset: 0x320, Size: 1]
	class SQCompassPlayer* CompassPlayerType;//[Offset: 0x328, Size: 1]
	class SQCompassMarker* CompassMarkerType;//[Offset: 0x330, Size: 1]
	void UpdateVisibility();// 0xd3d1a0
	void UpdateSquadMembers();// 0xd5f460
	void UpdateSquadMarkers();// 0xd6ce60
	float UpdatePlayerWidgetTransform(out bool bShowIcon, SQSoldier* SoldierRef, SQCompassPlayer* WidgetRef);// 0xd6cd40
	void UpdateMarkerArrows();// 0xd6cd20
	void UpdateCompassBearing();// 0xd3dac0
	void SquadChangedHandler(SQSquadState* NewSquad, SQSquadState* OldSquad, SQPlayerState* Player);// 0xd6cbf0
	void RemoveMarker(Actor* DestroyedActor);// 0xd6cb60
	void RemoveCompassMarker(byte ID);// 0xd6cae0
	void PlayerLeftSquad(SQSquadState* Squad, SQPlayerState* PlayerState);// 0xd6ca10
	void PlayerJoinedSquad(SQSquadState* Squad, SQPlayerState* PlayerState);// 0xd6c940
	void InitWidget();// 0xd6c7d0
	void CreateSquadMateWidget(SQPlayerState* SquadMate);// 0xd6c4e0
	void CreateNewMarker(int SquadId, SQMapMarker* Marker);// 0xd6c410
	void CreateNewCompassMarker(SQMapMarkerVisualData MapMarkerVisualData);// 0xd6c2f0

--------------------------------
Class: SQCompass.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bIsOwnerMedic;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	float RotationXFix;//[Offset: 0x264, Size: 1]
	float XScale;//[Offset: 0x268, Size: 1]
	float MaxVisibilityDistance;//[Offset: 0x26c, Size: 1]
	float YPositionOffset;//[Offset: 0x270, Size: 1]
	float TotalScale;//[Offset: 0x274, Size: 1]
	float BearingLERP;//[Offset: 0x278, Size: 1]
	bool bDoCompassLERP;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27c, Size: 1]
	bool bShouldHide;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27d, Size: 1]

--------------------------------
Class: SQCompassPlayer.SQCompassBaseUnit.SQUserWidget.UserWidget.Widget.Visual.Object
	Image* MedicIcon;//[Offset: 0x268, Size: 1]
	LinearColor ColorHealthy;//[Offset: 0x270, Size: 1]
	LinearColor ColorWounded;//[Offset: 0x280, Size: 1]
	LinearColor ColorDown;//[Offset: 0x290, Size: 1]
	LinearColor ColorInvisible;//[Offset: 0x2a0, Size: 1]
	Texture2D* TexturePlayer;//[Offset: 0x2b0, Size: 1]
	Texture2D* TextureSL;//[Offset: 0x2b8, Size: 1]
	Texture2D* TextureMedic;//[Offset: 0x2c0, Size: 1]
	float PlayerIconScale;//[Offset: 0x2c8, Size: 1]
	float SLPlayerIconScale;//[Offset: 0x2cc, Size: 1]
	float MedicPlayerIconScale;//[Offset: 0x2d0, Size: 1]
	float MedicIconScale;//[Offset: 0x2d4, Size: 1]
	SQPlayerState* PlayerState;//[Offset: 0x2d8, Size: 1]
	void UpdateState(float InScale, bool bShowIcon, int HealthStateIndex, bool bIsMedic, bool bIsSL, bool bIsOwnderMedic);// 0xd71430
	void InitWidget();// 0xd3dac0

--------------------------------
Class: SQCompassBaseUnit.SQUserWidget.UserWidget.Widget.Visual.Object
	Image* BaseImage;//[Offset: 0x260, Size: 1]

--------------------------------
Class: SQCompassMarker.SQCompassBaseUnit.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bTopScreenView;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	LinearColor MarkerColor;//[Offset: 0x26c, Size: 1]
	CurveFloat* DistanceResolutionCurveInMeters;//[Offset: 0x280, Size: 1]
	SQMapMarker* MapMarker;//[Offset: 0x288, Size: 1]
	SQMapMarkerVisualData MapMarkerVisualData;//[Offset: 0x290, Size: 1]
	TextBlock* DistanceTextBlock;//[Offset: 0x358, Size: 1]
	TextBlock* MeterTextBlock;//[Offset: 0x360, Size: 1]
	void UpdateState(float InScale, bool bShowIcon);// 0xd6ce80
	void RefreshDisplayMode();// 0x1d69c50
	void InitWidget();// 0xd3dac0

--------------------------------
Class: SQApprovalQueueWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	class SQApprovalEntryWidget* ApprovalEntry;//[Offset: 0x260, Size: 1]
	ScrollBox* ScrollBoxCPP;//[Offset: 0x268, Size: 1]
	<uint32,SQApprovalEntryWidget*> EntryWidgets;//[Offset: 0x270, Size: 1]
	TextBlock* ApprovalKeyTextCPP;//[Offset: 0x2c0, Size: 1]
	TextBlock* DisapprovalKeyTextCPP;//[Offset: 0x2c8, Size: 1]
	void Init();// 0xd45a30

--------------------------------
Class: SQApprovalEntryWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	TextBlock* TextBlockCPP;//[Offset: 0x260, Size: 1]
	Image* IconImageCPP;//[Offset: 0x268, Size: 1]
	TextBlock* DescriptionTextCPP;//[Offset: 0x270, Size: 1]

--------------------------------
Class: ScrollBox.PanelWidget.Widget.Visual.Object
	ScrollBoxStyle WidgetStyle;//[Offset: 0x120, Size: 1]
	ScrollBarStyle WidgetBarStyle;//[Offset: 0x348, Size: 1]
	SlateWidgetStyleAsset* Style;//[Offset: 0x818, Size: 1]
	SlateWidgetStyleAsset* BarStyle;//[Offset: 0x820, Size: 1]
	byte Orientation;//[Offset: 0x828, Size: 1]
	enum ScrollBarVisibility;//[Offset: 0x829, Size: 1]
	enum ConsumeMouseWheel;//[Offset: 0x82a, Size: 1]
	Vector2D ScrollbarThickness;//[Offset: 0x82c, Size: 1]
	Margin ScrollbarPadding;//[Offset: 0x834, Size: 1]
	bool AlwaysShowScrollbar;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x844, Size: 1]
	bool AlwaysShowScrollbarTrack;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x845, Size: 1]
	bool AllowOverscroll;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x846, Size: 1]
	bool bAnimateWheelScrolling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x847, Size: 1]
	enum NavigationDestination;//[Offset: 0x848, Size: 1]
	float NavigationScrollPadding;//[Offset: 0x84c, Size: 1]
	enum ScrollWhenFocusChanges;//[Offset: 0x850, Size: 1]
	bool bAllowRightClickDragScrolling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x851, Size: 1]
	float WheelScrollMultiplier;//[Offset: 0x854, Size: 1]
	MulticastInlineDelegateProperty OnUserScrolled;//[Size: 1]
	void SetWheelScrollMultiplier(float NewWheelScrollMultiplier);// 0x33f5290
	void SetScrollWhenFocusChanges(enum NewScrollWhenFocusChanges);// 0x33f4a20
	void SetScrollOffset(float NewScrollOffset);// 0x33f49a0
	void SetScrollbarVisibility(enum NewScrollBarVisibility);// 0x33f4920
	void SetScrollbarThickness(out const Vector2D NewScrollbarThickness);// 0x33f4b40
	void SetScrollbarPadding(out const Margin NewScrollbarPadding);// 0x33f4aa0
	void SetOrientation(byte NewOrientation);// 0x33f46f0
	void SetConsumeMouseWheel(enum NewConsumeMouseWheel);// 0x33f3c00
	void SetAnimateWheelScrolling(bool bShouldAnimateWheelScrolling);// 0x33f3ae0
	void SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar);// 0x33f3a50
	void SetAllowOverscroll(bool NewAllowOverscroll);// 0x33f39c0
	void ScrollWidgetIntoView(Widget* WidgetToFind, bool AnimateScroll, enum ScrollDestination, float Padding);// 0x33f3860
	void ScrollToStart();// 0x33f3840
	void ScrollToEnd();// 0x33f3820
	float GetViewOffsetFraction();// 0x33f2fc0
	float GetScrollOffsetOfEnd();// 0x33f2ef0
	float GetScrollOffset();// 0x33f2ec0
	void EndInertialScrolling();// 0x33f29e0

--------------------------------
Class: ScrollBoxStyle.SlateWidgetStyle
	SlateBrush TopShadowBrush;//[Offset: 0x8, Size: 1]
	SlateBrush BottomShadowBrush;//[Offset: 0x90, Size: 1]
	SlateBrush LeftShadowBrush;//[Offset: 0x118, Size: 1]
	SlateBrush RightShadowBrush;//[Offset: 0x1a0, Size: 1]

--------------------------------
Class: SlateWidgetStyle

--------------------------------
Class: ScrollBarStyle.SlateWidgetStyle
	SlateBrush HorizontalBackgroundImage;//[Offset: 0x8, Size: 1]
	SlateBrush VerticalBackgroundImage;//[Offset: 0x90, Size: 1]
	SlateBrush VerticalTopSlotImage;//[Offset: 0x118, Size: 1]
	SlateBrush HorizontalTopSlotImage;//[Offset: 0x1a0, Size: 1]
	SlateBrush VerticalBottomSlotImage;//[Offset: 0x228, Size: 1]
	SlateBrush HorizontalBottomSlotImage;//[Offset: 0x2b0, Size: 1]
	SlateBrush NormalThumbImage;//[Offset: 0x338, Size: 1]
	SlateBrush HoveredThumbImage;//[Offset: 0x3c0, Size: 1]
	SlateBrush DraggedThumbImage;//[Offset: 0x448, Size: 1]

--------------------------------
Class: SlateWidgetStyleAsset.Object
	SlateWidgetStyleContainerBase* CustomStyle;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SlateWidgetStyleContainerBase.Object

--------------------------------
Class: SQSeatProgressWidget.SQProgressWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	float TotalTime;//[Offset: 0x280, Size: 1]
	SQVehicle* WithVehicle;//[Offset: 0x288, Size: 1]
	enum MenuMode;//[Offset: 0x290, Size: 1]
	void FinishOnServer();// 0xdfaba0
	void BPOnShowVehicleInventory();// 0x1d69c50

--------------------------------
Class: SQProgressWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	float TimerDuration;//[Offset: 0x260, Size: 1]
	float TimerEnd;//[Offset: 0x264, Size: 1]
	bool bTimerActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	float TimeRemaining;//[Offset: 0x26c, Size: 1]
	MulticastInlineDelegateProperty OnTimerReached;//[Size: 1]
	void ToggleTimer();// 0xdeabc0
	void StartTimer();// 0xdeab60
	void ResumeTimerFromTime(float TimerStartedAt);// 0xdea9a0
	void ResumeTimer();// 0xdea980
	void PauseTimer();// 0xdea7d0
	void CancelTimer();// 0xde94c0
	void BPOnTimerStarted();// 0x1d69c50
	void BPOnTimerResumed();// 0x1d69c50
	void BPOnTimerReached();// 0x1d69c50
	void BPOnTimerProgress(float RemainingPct);// 0x1d69c50
	void BPOnTimerPaused();// 0x1d69c50
	void BPOnTimerCanceled();// 0x1d69c50

--------------------------------
Class: SQStagingTimerText.UserWidget.Widget.Visual.Object
	int NearZeroThreshold;//[Offset: 0x260, Size: 1]
	SQTeamPrep* TeamPrepRef;//[Offset: 0x268, Size: 1]
	TextBlock* TextBlockCPP;//[Offset: 0x270, Size: 1]
	FText StagingPhaseText;//[Offset: 0x278, Size: 1]
	void OnFellBelowThreshold();// 0x1d69c50

--------------------------------
Class: SQTeamPrep.Actor.Object
	int TeamId;//[Offset: 0x228, Size: 1]
	PrimitiveComponent* VehicleStagingPrimitive;//[Offset: 0x230, Size: 1]
	float StagingTimeInSeconds;//[Offset: 0x250, Size: 1]
	int ReplicatedRemainingTime;//[Offset: 0x254, Size: 1]
	SQSoldier* LocalSoldier;//[Offset: 0x270, Size: 1]
	void StartCountdown(FName NewMatchState);// 0xe24d90
	void OnCompExit(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0xe247a0
	void OnCompBeginOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xe24580
	int GetStagingTimeRemaining();// 0xe24270
	void CheckOverlap();// 0xe23a80

--------------------------------
Class: SQCoreStateSelectionHUB.ActorComponent.Object
	void UnselectAll(const Object* SelectionInstigator);// 0xd713a0

--------------------------------
Class: SQCoreStateMapComponent.SQCoreStateWidgetFactory.SQCoreStateListener.ActorComponent.Object
	PanelWidget* RootWidget;//[Offset: 0x318, Size: 1]
	SQMapWidgetBase* MapWidgetBase;//[Offset: 0x320, Size: 1]
	float WidgetScale;//[Offset: 0x328, Size: 1]
	void SetWidgetScale(float UniformScale);// 0xd71320
	void SetRootWidget(PanelWidget* Value);// 0xd71180
	bool GetWidgetWorldLocation(out Vector OutWorldLocation, out const SQCoreStateId ID);// 0xd70940
	bool GetWidgetScreenPosition(out Vector2D OutPosition, out const SQCoreStateId ID);// 0xd70850
	<int,SQCoreStateId> GetWaypointWidgets();// 0xd70820
	<int,SQCoreStateId> GetWaypointFTWidgets();// 0xd707f0
	<int,SQCoreStateId> GetOrderTargetWidgets();// 0xd70790

--------------------------------
Class: SQCoreStateWidgetFactory.SQCoreStateListener.ActorComponent.Object
	<SQCoreStateId,SQCoreStateWidget*> Widgets;//[Offset: 0x120, Size: 1]
	<class SQCoreStateWidget,WidgetGroup> UnusedWidgets;//[Offset: 0x170, Size: 1]
	<SQCoreStateData*,int> SubDataPendingSuperKey;//[Offset: 0x2b0, Size: 1]
	SQCoreStateSelectionHUB* SelectionHUB;//[Offset: 0x310, Size: 1]
	void UnselectAll(const Object* SelectionInstigator);// 0xd75a00
	void ReceiveSelection(out const SQCoreStateId ComponentId, enum SelectionState, const Object* SelectionInstigator);// 0xd75240

--------------------------------
Class: SQCoreStateWidget.UserWidget.Widget.Visual.Object
	enum UnconfiguredVisibility;//[Offset: 0x260, Size: 1]
	SQCoreStateWidgetFactory* SourceComponent;//[Offset: 0x268, Size: 1]
	enum SelectionState;//[Offset: 0x270, Size: 1]
	Object* SelectionInstigator;//[Offset: 0x278, Size: 1]
	void OnSelectionStateChanged();// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void AnnounceSelectionState(enum InSelectionState);// 0xd74cd0

--------------------------------
Class: SQMapWidgetBase.UserWidget.Widget.Visual.Object
	PanelWidget* MapBody;//[Offset: 0x260, Size: 1]
	void SetMapBody(PanelWidget* NewMapBody);// 0xdb8750
	bool RemoveMarkerWidget(SQMapMarkerBase* Target);// 0x1d69c50
	Box2D GetWorldBounds();// 0xdb7e60
	Vector2D GetNumGridLines();// 0xdb7d60
	Vector2D GetMapBoundsScale();// 0xdb7c80
	PanelWidget* GetMapBody();// 0xdb7c50
	SQMapMarkerBase* CreateMarkerWidget(const SQMapMarkerVisualData MapMarkerVisualData);// 0x1d69c50

--------------------------------
Class: WidgetGroup
	SQCoreStateWidget*[] List;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQCoreStateSpawnPointsListComponent.SQCoreStateWidgetFactory.SQCoreStateListener.ActorComponent.Object
	class SQCoreStateSpawnPointsListWidget* WidgetClass;//[Offset: 0x318, Size: 1]
	GridPanel* BaseRoot;//[Offset: 0x320, Size: 1]
	GridPanel* HABRoot;//[Offset: 0x328, Size: 1]
	GridPanel* RallyRoot;//[Offset: 0x330, Size: 1]
	void SetRootWidgets(GridPanel* InBaseRoot, GridPanel* InHABRoot, GridPanel* InRallyRoot);// 0xd71210

--------------------------------
Class: SQCoreStateSpawnPointsListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	bool bSpawnOnSelection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	bool bIsSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x28c, Size: 1]
	bool bSieged;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x28c, Size: 1]
	bool bSpawningEnabled;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x28c, Size: 1]
	Vector SpawnPointLocation;//[Offset: 0x290, Size: 1]
	enum SpawnPointType;//[Offset: 0x29c, Size: 1]
	float ActivatedTimeStamp;//[Offset: 0x2a0, Size: 1]
	Texture2D* BaseTexture;//[Offset: 0x2a8, Size: 1]
	Texture2D* HABTexture;//[Offset: 0x2b0, Size: 1]
	Texture2D* RallyTexture;//[Offset: 0x2b8, Size: 1]
	Texture2D* CacheTexture;//[Offset: 0x2c0, Size: 1]
	SQGameSpawn* OwningGameSpawn;//[Offset: 0x2c8, Size: 1]
	void SelectSpawnPoint();// 0xd70fa0
	void OnSpawnPointTypeChanged();// 0x1d69c50
	void OnSpawnPointLocationChanged();// 0x1d69c50
	void OnSpawningEnabledChanged();// 0x1d69c50
	void OnSiegedChanged();// 0x1d69c50
	void OnIsSelectedChanged();// 0x1d69c50
	void OnActivatedTimeStampChanged();// 0x1d69c50
	Texture2D* GetSpawnIcon();// 0xd707c0

--------------------------------
Class: GridPanel.PanelWidget.Widget.Visual.Object
	float[] ColumnFill;//[Offset: 0x120, Size: 1]
	float[] RowFill;//[Offset: 0x130, Size: 1]
	void SetRowFill(int ColumnIndex, float Coefficient);// 0x33e7280
	void SetColumnFill(int ColumnIndex, float Coefficient);// 0x33e68d0
	GridSlot* AddChildToGrid(Widget* Content, int InRow, int InColumn);// 0x33e5b00

--------------------------------
Class: GridSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x38, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x48, Size: 1]
	byte VerticalAlignment;//[Offset: 0x49, Size: 1]
	int Row;//[Offset: 0x4c, Size: 1]
	int RowSpan;//[Offset: 0x50, Size: 1]
	int Column;//[Offset: 0x54, Size: 1]
	int ColumnSpan;//[Offset: 0x58, Size: 1]
	int Layer;//[Offset: 0x5c, Size: 1]
	Vector2D Nudge;//[Offset: 0x60, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33ec020
	void SetRowSpan(int InRowSpan);// 0x33ebb80
	void SetRow(int InRow);// 0x33ebaf0
	void SetPadding(Margin InPadding);// 0x33eb9d0
	void SetNudge(Vector2D InNudge);// 0x33eb8d0
	void SetLayer(int InLayer);// 0x33eb760
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33eb580
	void SetColumnSpan(int InColumnSpan);// 0x33eb400
	void SetColumn(int InColumn);// 0x33eb370

--------------------------------
Class: SQCoreStateSquadListComponent.SQCoreStateWidgetFactory.SQCoreStateListener.ActorComponent.Object
	class SQCoreStateSquadItemWidget* SquadWidgetClass;//[Offset: 0x318, Size: 1]
	class SQCoreStateSquadMemberWidget* PlayerWidgetClass;//[Offset: 0x320, Size: 1]
	PanelWidget* SquadRoot;//[Offset: 0x328, Size: 1]
	PanelWidget* UnassignedRoot;//[Offset: 0x330, Size: 1]
	PanelWidget* CommanderRoot;//[Offset: 0x338, Size: 1]
	enum ListLayout;//[Offset: 0x340, Size: 1]
	enum UnassignedLayout;//[Offset: 0x341, Size: 1]
	<int,SQCoreStateSquadItemWidget*> ActiveSquadWidgets;//[Offset: 0x348, Size: 1]
	void SetRootWidgets(PanelWidget* InSquadRoot, PanelWidget* InUnassignedRoot, PanelWidget* InCommanderRoot);// 0xd75360

--------------------------------
Class: SQCoreStateSquadItemWidget.SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	SQSquadState* SquadState;//[Offset: 0x290, Size: 1]
	int SquadId;//[Offset: 0x298, Size: 1]
	FString SquadName;//[Offset: 0x2a0, Size: 1]
	FString LeaderName;//[Offset: 0x2b0, Size: 1]
	int MemberNum;//[Offset: 0x2c0, Size: 1]
	int MaxMembers;//[Offset: 0x2c4, Size: 1]
	bool bIsSelfInSquad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	bool bIsCommandSquad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c9, Size: 1]
	enum JoinButtonState;//[Offset: 0x2ca, Size: 1]
	SQPlayerController* CachedSQPlayerController;//[Offset: 0x2d0, Size: 1]
	void OnSquadNameChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnMemberNumChanged();// 0x1d69c50
	void OnMaxMembersChanged();// 0x1d69c50
	void OnLeaderNameChanged();// 0x1d69c50
	void OnJoinButtonStateChanged();// 0x1d69c50
	void OnIsSelfInSquadChanged();// 0x1d69c50
	void OnIsCommandSquadChanged();// 0x1d69c50
	void OnBanned(int SquadId, float BanDuration);// 0x1d69c50
	void JoinSquad();// 0xd75170
	PanelWidget* GetMemberRoot(int FireTeamIndex);// 0x1d69c50
	SQPlayerController* GetCachedSQPlayerController();// 0xd74fc0

--------------------------------
Class: SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	enum ListLayout;//[Offset: 0x288, Size: 1]
	void OnListLayoutChanged();// 0x1d69c50

--------------------------------
Class: SQCoreStateSquadMemberWidget.SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	int RootWidgetSquadId;//[Offset: 0x290, Size: 1]
	SQPlayerState* PlayerState;//[Offset: 0x298, Size: 1]
	int SquadId;//[Offset: 0x2a0, Size: 1]
	bool bIsPossessingPawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2a4, Size: 1]
	bool bIsSquadLeader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	bool bIsFireTeamLeader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a9, Size: 1]
	int FireTeamIndex;//[Offset: 0x2ac, Size: 1]
	int FireTeamPosition;//[Offset: 0x2b4, Size: 1]
	SQRoleSettings* DeployRole;//[Offset: 0x2c0, Size: 1]
	FString PlayerName;//[Offset: 0x2c8, Size: 1]
	SQVehicleUIStaticDataAsset* CurrentVehicleData;//[Offset: 0x2d8, Size: 1]
	enum VoipChannel;//[Offset: 0x2e0, Size: 1]
	bool bIsMuted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e1, Size: 1]
	bool bIsAlive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e2, Size: 1]
	bool bIsBleeding;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e3, Size: 1]
	bool bIsWounded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e4, Size: 1]
	void OnVoipChannelChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnPlayerNameChanged();// 0x1d69c50
	void OnIsWoundedChanged();// 0x1d69c50
	void OnIsSquadLeaderChanged();// 0x1d69c50
	void OnIsPossessingPawnChanged();// 0x1d69c50
	void OnIsMutedChanged();// 0x1d69c50
	void OnIsFireTeamLeaderChanged();// 0x1d69c50
	void OnIsBleedingChanged();// 0x1d69c50
	void OnIsAliveChanged();// 0x1d69c50
	void OnFireTeamPositionChanged();// 0x1d69c50
	void OnFireTeamIndexChanged();// 0x1d69c50
	void OnDeployRoleChanged();// 0x1d69c50
	void OnCurrentVehicleDataChanged();// 0x1d69c50

--------------------------------
Class: SQCoreStateRolesSquadListComponent.SQCoreStateSquadListComponent.SQCoreStateWidgetFactory.SQCoreStateListener.ActorComponent.Object

--------------------------------
Class: SQNetworkPollingComponent.ActorComponent.Object

--------------------------------
Class: SQRemoteTalkerDisplayInfo
	SQPlayerState* PlayerState;//[Offset: 0x0, Size: 1]
	enum Channel;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQMessageBoxInfo
	SlateFontInfo FontInfo;//[Offset: 0x0, Size: 1]
	SQHUDMessage[] Messages;//[Offset: 0x58, Size: 1]
	Vector2D MessageBoxLocation;//[Offset: 0x68, Size: 1]
	int MaxNumberOfMessagesToShow;//[Offset: 0x70, Size: 1]
	float MessagesLifetime;//[Offset: 0x74, Size: 1]
	float MessagesFadeTime;//[Offset: 0x78, Size: 1]
	enum MessageHorizontalAlignment;//[Offset: 0x7c, Size: 1]
	enum MessageVerticalAlignment;//[Offset: 0x7d, Size: 1]
	bool bScrollUp;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x7e, Size: 1]

--------------------------------
Class: SQHUDMessage
	FString Message;//[Offset: 0x0, Size: 1]
	LinearColor Color;//[Offset: 0x10, Size: 1]
	float Scale;//[Offset: 0x20, Size: 1]
	float ExpireTime;//[Offset: 0x24, Size: 1]
	float FadeTime;//[Offset: 0x28, Size: 1]

--------------------------------
Class: SQScoreboard.SQUserWidget.UserWidget.Widget.Visual.Object
	SQScoreboardTeam* ScoreboardFriendly;//[Offset: 0x260, Size: 1]
	SQScoreboardTeam* ScoreboardEnemy;//[Offset: 0x268, Size: 1]
	SQPlayerController* SQPC;//[Offset: 0x270, Size: 1]
	SQGameState* SQGameState;//[Offset: 0x278, Size: 1]
	TimerHandle UpdateStateTimerHandle;//[Offset: 0x280, Size: 1]
	class SQScoreboardTeam* ScoreboardTeamType;//[Offset: 0x288, Size: 1]
	FText WinningTeamText;//[Offset: 0x290, Size: 1]
	FText TicketsRemainingText;//[Offset: 0x2a8, Size: 1]
	FText DrawText;//[Offset: 0x2c0, Size: 1]
	Image* GameTimeClockImage;//[Offset: 0x2d8, Size: 1]
	TextBlock* RemainingGameTimeText;//[Offset: 0x2e0, Size: 1]
	Image* ScoreboardFlairFlag1;//[Offset: 0x2e8, Size: 1]
	Image* ScoreboardFlairFlag2;//[Offset: 0x2f0, Size: 1]
	TextBlock* GameResultText;//[Offset: 0x2f8, Size: 1]
	TextBlock* GameResultTicketsRemaining;//[Offset: 0x300, Size: 1]
	CanvasPanel* GameResultCanvas;//[Offset: 0x308, Size: 1]
	void UpdateState();// 0xdf7c70
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQScoreboardTeam.SQUserWidget.UserWidget.Widget.Visual.Object
	SQScoreboardTeamScore* ScoreboardTeamScore;//[Offset: 0x260, Size: 1]
	HorizontalBox* EndOfRoundHorizontalBox;//[Offset: 0x268, Size: 1]
	VerticalBox* TopVerticalBox;//[Offset: 0x270, Size: 1]
	Spacer* NotEndOfRoundSpacer;//[Offset: 0x278, Size: 1]
	Spacer* EnemyTeamPingAligner;//[Offset: 0x280, Size: 1]
	HorizontalBox* TeamHorizontalBox;//[Offset: 0x288, Size: 1]
	GridPanel* SquadsGrid;//[Offset: 0x290, Size: 1]
	CanvasPanel* NonSquadPlayersCanvasPanel;//[Offset: 0x298, Size: 1]
	GridPanel* PlayersGrid;//[Offset: 0x2a0, Size: 1]
	Border* ColoredHeaderTabImage;//[Offset: 0x2a8, Size: 1]
	Image* RemainingTicketsImage;//[Offset: 0x2b0, Size: 1]
	Image* ColoredHeaderBarImage;//[Offset: 0x2b8, Size: 1]
	Image* FlagImage;//[Offset: 0x2c0, Size: 1]
	TextBlock* PlayerNumberText;//[Offset: 0x2c8, Size: 1]
	TextBlock* RemainingTicketsText;//[Offset: 0x2d0, Size: 1]
	TextBlock* TeamNameText;//[Offset: 0x2d8, Size: 1]
	SQPlayerController* SQPC;//[Offset: 0x2e0, Size: 1]
	SQPlayerState* SQPlayerState;//[Offset: 0x2e8, Size: 1]
	SQTeamState* SQTeamState;//[Offset: 0x2f0, Size: 1]
	SQGameState* SQGameState;//[Offset: 0x2f8, Size: 1]
	SQScoreboardPlayer* OwnerPlayerWidget;//[Offset: 0x300, Size: 1]
	SQScoreboardSquad* OwnerPlayerSquadWidget;//[Offset: 0x308, Size: 1]
	int TeamKills;//[Offset: 0x310, Size: 1]
	int TeamDeaths;//[Offset: 0x314, Size: 1]
	int TeamIncaps;//[Offset: 0x318, Size: 1]
	int TeamWounds;//[Offset: 0x31c, Size: 1]
	int TeamRevives;//[Offset: 0x320, Size: 1]
	int TeamHeals;//[Offset: 0x324, Size: 1]
	int TeamTeamKills;//[Offset: 0x328, Size: 1]
	int TeamTeamwork;//[Offset: 0x32c, Size: 1]
	int TeamObjective;//[Offset: 0x330, Size: 1]
	int TeamScore;//[Offset: 0x334, Size: 1]
	LinearColor FriendlyTeamColor;//[Offset: 0x338, Size: 1]
	LinearColor EnemyTeamColor;//[Offset: 0x348, Size: 1]
	bool bIsFriendlyScoreboard;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x358, Size: 1]
	bool bShowAllStats;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x359, Size: 1]
	float EndOfRoundEnemyWidth;//[Offset: 0x35c, Size: 1]
	float DuringRoundEnemyWidth;//[Offset: 0x360, Size: 1]
	FText RemainingTicketsTextString;//[Offset: 0x368, Size: 1]
	FText PlayersText;//[Offset: 0x380, Size: 1]
	SquadWidgetPair[] DisplayedSquads;//[Offset: 0x398, Size: 1]
	PlayerWidgetPair[] DisplayedPlayers;//[Offset: 0x3a8, Size: 1]
	SQRemoteTalkerDisplayInfo[] FormerTalkers;//[Offset: 0x3b8, Size: 1]
	class SQScoreboardSquad* ScoreboardSquadType;//[Offset: 0x3c8, Size: 1]
	class SQScoreboardPlayer* ScoreboardPlayerType;//[Offset: 0x3d0, Size: 1]
	void UpdateState();// 0xdfc830
	void UpdateSquads();// 0xdfc810
	void UpdatePlayers();// 0xdfc770
	void UpdatePlayerJoinedSquad(SQPlayerState* Player);// 0xdfc6e0
	void UpdateAllSpeakers(out const SQRemoteTalkerDisplayInfo[] CurrentTalkers);// 0xdfc630
	void ToggleShowAllStats();// 0xd3d1a0
	void SortSquads();// 0xdfb550
	void InitWidget();// 0xdfac10
	void CreateNewSquad(SQSquadState* NewSquad);// 0xdfa9f0
	void CreateNewPlayer(SQTeamState* Team, SQPlayerState* Player);// 0xdfa920
	void CleanDataForWidget();// 0xd3dac0

--------------------------------
Class: SQScoreboardTeamScore.SQUserWidget.UserWidget.Widget.Visual.Object
	HorizontalBox* EndOfRoundPanel;//[Offset: 0x260, Size: 1]
	Spacer* NotEndOfRoundSpacer;//[Offset: 0x268, Size: 1]
	TextBlock* KillsText;//[Offset: 0x270, Size: 1]
	TextBlock* IncapsText;//[Offset: 0x278, Size: 1]
	TextBlock* DeathsText;//[Offset: 0x280, Size: 1]
	TextBlock* RevivesText;//[Offset: 0x288, Size: 1]
	TextBlock* HealsText;//[Offset: 0x290, Size: 1]
	TextBlock* TeamworkText;//[Offset: 0x298, Size: 1]
	TextBlock* ObjectivesText;//[Offset: 0x2a0, Size: 1]
	TextBlock* ScoreText;//[Offset: 0x2a8, Size: 1]
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: HorizontalBox.PanelWidget.Widget.Visual.Object
	HorizontalBoxSlot* AddChildToHorizontalBox(Widget* Content);// 0x33e9990

--------------------------------
Class: HorizontalBoxSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x40, Size: 1]
	SlateChildSize Size;//[Offset: 0x50, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x58, Size: 1]
	byte VerticalAlignment;//[Offset: 0x59, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33ec0a0
	void SetSize(SlateChildSize InSize);// 0x33ebf10
	void SetPadding(Margin InPadding);// 0x33eba60
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33eb600

--------------------------------
Class: SlateChildSize
	float Value;//[Offset: 0x0, Size: 1]
	byte SizeRule;//[Offset: 0x4, Size: 1]

--------------------------------
Class: Spacer.Widget.Visual.Object
	Vector2D Size;//[Offset: 0x108, Size: 1]
	void SetSize(Vector2D InSize);// 0x33f8d80

--------------------------------
Class: VerticalBox.PanelWidget.Widget.Visual.Object
	VerticalBoxSlot* AddChildToVerticalBox(Widget* Content);// 0x3402190

--------------------------------
Class: VerticalBoxSlot.PanelSlot.Visual.Object
	SlateChildSize Size;//[Offset: 0x38, Size: 1]
	Margin Padding;//[Offset: 0x40, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x58, Size: 1]
	byte VerticalAlignment;//[Offset: 0x59, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x3403bd0
	void SetSize(SlateChildSize InSize);// 0x3403950
	void SetPadding(Margin InPadding);// 0x34034e0
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x3402f20

--------------------------------
Class: SQGameState.GameState.GameStateBase.Info.Actor.Object
	MulticastInlineDelegateProperty RS_OnMatchStart;//[Size: 1]
	bool bTimerPaused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	bool bIsTicketBasedGame;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a9, Size: 1]
	bool bAllowPublicClientsToRecord;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2aa, Size: 1]
	bool bTeamPrepsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ab, Size: 1]
	MulticastInlineDelegateProperty OnPlayerJoined;//[Size: 1]
	MulticastInlineDelegateProperty OnPlayerRemoved;//[Size: 1]
	SQTeamState*[] TeamStates;//[Offset: 0x2e8, Size: 1]
	SQTeamState*[] IndexedTeamStates;//[Offset: 0x2f8, Size: 1]
	int ChangeTeamWaitTime;//[Offset: 0x308, Size: 1]
	SQTeamState* WinningTeam;//[Offset: 0x310, Size: 1]
	int WinningTeamTickets;//[Offset: 0x318, Size: 1]
	float ServerTickRate;//[Offset: 0x31c, Size: 1]
	FString GameModeName;//[Offset: 0x320, Size: 1]
	SQGameModeRules[] GameModeRules;//[Offset: 0x330, Size: 1]
	FString NextMapName;//[Offset: 0x340, Size: 1]
	SQGameCommandComponent* GameCommandComponent;//[Offset: 0x350, Size: 1]
	class SQGameCommandComponent* GameCommandComponentClass;//[Offset: 0x358, Size: 1]
	int MaxFireTeamCount;//[Offset: 0x360, Size: 1]
	int MaxFireTeamSize;//[Offset: 0x364, Size: 1]
	SQVotingState* VotingState;//[Offset: 0x368, Size: 1]
	FString MapName;//[Offset: 0x370, Size: 1]
	int MaxPlayers;//[Offset: 0x380, Size: 1]
	FString ServerName;//[Offset: 0x388, Size: 1]
	FString MessageOfTheDay;//[Offset: 0x398, Size: 1]
	SQCoreStateConnectionChildActorComponent* CoreStateConnectionChildActorComponent;//[Offset: 0x3a8, Size: 1]
	float TimeOfCompletion;//[Offset: 0x3b0, Size: 1]
	int ServerStartTimeStamp;//[Offset: 0x3c8, Size: 1]
	SQMapMarkerManagerComponent* MapMarkerManagerComponent;//[Offset: 0x3d0, Size: 1]
	Guid GlobalSessionId;//[Offset: 0x3d8, Size: 1]
	SQGameFlags GameFlags;//[Offset: 0x3e8, Size: 1]
	SQServerSettings ServerSettings;//[Offset: 0x3f8, Size: 1]
	bool TryGetTeamState(int TeamId, out SQTeamState* OutTeamState);// 0xd9a7d0
	void SetRemainingTime(int Seconds);// 0xd92a80
	void RequestFinishAndExitToMainMenu();// 0xd999b0
	void RefreshTeamStates();// 0xd99990
	void OnRep_ServerStartTimeStamp();// 0xd99570
	void OnRep_ServerName();// 0xd99550
	void OnRep_NeutralTeamInfoClass();// 0xd59a20
	void OnRep_MaxPlayers();// 0xd99530
	void OnRep_IndexedTeamStates();// 0xd99510
	void OnRep_GameModeRules();// 0xd994f0
	bool IsGameReadyToStart();// 0xd99130
	int GetRemainingTime();// 0xd98be0
	enum GetRelationShipByIndex(const int InTeamIdA, const int InTeamIdB);// 0xd98ae0
	enum GetRelationshipById(const enum InTeamA, const enum InTeamIdB);// 0xd98a00
	int GetPlayerCount();// 0xd989a0
	SQMapMarkerManagerComponent* GetMarkerManager();// 0xd98950
	void AddGameModeRules(SQGameModeRules[] InGameModeRules);// 0xd97730

--------------------------------
Class: GameState.GameStateBase.Info.Actor.Object
	FName MatchState;//[Offset: 0x278, Size: 1]
	FName PreviousMatchState;//[Offset: 0x280, Size: 1]
	int ElapsedTime;//[Offset: 0x288, Size: 1]
	void OnRep_MatchState();// 0xd88c20
	void OnRep_ElapsedTime();// 0xd88d30

--------------------------------
Class: SQMapMarkerManagerComponent.ActorComponent.Object
	SQStaticMapMarkerArray MarkerArray;//[Offset: 0xb0, Size: 1]
	MulticastInlineDelegateProperty MapMarkerWidgetCreatedEvent;//[Size: 1]
	SQMapWidgetBase* RootWidget;//[Offset: 0x208, Size: 1]
	SQHUD* RootHUD;//[Offset: 0x210, Size: 1]
	int COMarkerTypeLimits;//[Offset: 0x218, Size: 8]
	int SLMarkerTypeLimits;//[Offset: 0x238, Size: 8]
	int FTMarkerTypeLimits;//[Offset: 0x258, Size: 8]
	float WidgetScale;//[Offset: 0x278, Size: 1]
	<byte,SQMapMarkerBase*> RelevantMarkerWidgets;//[Offset: 0x280, Size: 1]
	<byte,SQMapMarkerVisualData> RelevantMarkers;//[Offset: 0x2d0, Size: 1]
	class Pawn[] AdminTypes;//[Offset: 0x378, Size: 1]
	void SetRootWidget(SQMapWidgetBase* NewRootWidget);// 0xdb89f0
	void SetRootHUD(SQHUD* NewRootHUD);// 0xdb8960
	void SetMarkerWidgetScale(float ScaleValue);// 0xdb88e0
	void RemoveMapMarker(byte ID, bool bHasTimedOut);// 0xdb8490
	void OnSquadLeaderChangedEvent(SQSquad* Squad, SQPlayerController* Player);// 0xdb83a0
	void OnSquadDeletedEvent(int OldSquadId, int TeamId);// 0xdb82d0
	void OnMarkerReceived(out const int[] MapMarkerModifiedIndices);// 0xdb8220
	void OnMarkerDeleted(out const int[] MapMarkerModifiedIndices);// 0xdb8170
	void OnFireteamLeaderChangedEvent(SQSquad* Squad, int FireTeamId);// 0xdb80a0
	void OnFireteamDeletedEvent(SQSquad* Squad, int FireTeamId);// 0xdb80a0
	void OnCommanderPromotedEvent(SQPlayerState* NewCommander);// 0xdb8010
	void OnCommanderDemotedEvent(SQPlayerState* OldCommander);// 0xdb7f80
	void InitializeRelevantMarkers(out const int[] MapMarkerModifiedIndices);// 0xdb7e90
	void FindMapMarkersByType(out SQMapMarkerGameplayData[] OutMarkers, SQMapMarkerDataAsset* MarkerType);// 0xdb7b20
	void DeleteRelevantMarkers(out const int[] MapMarkerModifiedIndices);// 0xdb7a70

--------------------------------
Class: SQStaticMapMarkerArray.FastArraySerializer
	SQMapMarkerFastArraySerializerItem[] Items;//[Offset: 0x108, Size: 1]
	int[] ModifiedMarkerIndices;//[Offset: 0x118, Size: 1]
	MulticastInlineDelegateProperty MapMarkerCreatedEvent;//[Size: 1]
	MulticastInlineDelegateProperty MapMarkerDeletedEvent;//[Size: 1]

--------------------------------
Class: SQMapMarkerFastArraySerializerItem.FastArraySerializerItem
	SQMapMarkerGameplayData MarkerGameplayData;//[Offset: 0x10, Size: 1]
	SQMarkerTimestamps AssignedTimestamp;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQMarkerTimestamps

--------------------------------
Class: SQGameModeRules
	enum Team;//[Offset: 0x0, Size: 1]
	FText[] Rules;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQGameCommandComponent.ActorComponent.Object
	void HandleVoteResult_VoteNextLevel(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd8c980
	void HandleVoteResult_VoteNextLayer(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd8c8a0
	void HandleVoteResult_VoteLevel(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd8c7c0
	void HandleVoteResult_VoteLayer(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd8c6e0
	void HandleVoteResult_Vote(SQVoteSession* VoteSession, out const SQChoice Winner);// 0xd8c600

--------------------------------
Class: SQVotingState.ActorComponent.Object
	SQVoteSessionAuthority*[] ActiveVotes;//[Offset: 0xb0, Size: 1]
	bool LevelVoteInProgress;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc0, Size: 1]
	bool LayerVoteInProgress;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc1, Size: 1]
	bool GenericVoteProgress;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc2, Size: 1]
	int[] FactionVotesInProgress;//[Offset: 0xc8, Size: 1]
	bool StartVote_Level(out const SQLevel*[] InLevels, out SQVoteSessionAuthority* OutAuthoritySession);// 0xe425d0
	bool StartVote_Layer(out const SQLayer*[] InLayers, out SQVoteSessionAuthority* OutAuthoritySession);// 0xe42380
	bool StartVote_Generic(out const SQVoteConfig InVoteConfig, out const SQChoice[] InChoices, out SQVoteSessionAuthority* OutAuthoritySession);// 0xe42080
	bool StartVote_FactionSetup(const int TeamId, out const SQFactionSetup*[] InFactionsSetups, out SQVoteSessionAuthority* OutAuthoritySession);// 0xe41d40
	void RemovePlayerFromCurrentVotes(PlayerController* LeavingPlayer);// 0xe41310
	void JoinPlayerToCurrentVotes(PlayerController* NewPlayer);// 0xe40d50
	bool HasAnyVoteInProgress();// 0xe40480
	void ApplySlomoFactor(float TimeDilationFactor);// 0xe3fe50

--------------------------------
Class: SQVoteSessionAuthority.SQVoteSession.Object
	enum AccessFilter;//[Offset: 0x88, Size: 1]
	int[] TeamFilter;//[Offset: 0x90, Size: 1]
	SQVotingComponent*[] Voters;//[Offset: 0xa0, Size: 1]
	FName[] RecordedVotes;//[Offset: 0xb0, Size: 1]
	MulticastInlineDelegateProperty RS_OnResult;//[Size: 1]
	MulticastInlineDelegateProperty RS_OnPresentationEnded;//[Size: 1]
	bool HasChanges;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe0, Size: 1]
	bool IsFinished;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe1, Size: 1]
	bool HasPresentationEnded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe2, Size: 1]
	FName WinnerId;//[Offset: 0xe4, Size: 1]
	void Start(const Object* WorldContextObject, out const SQVote VoteTemplate, SQVotingComponent*[] InitialVoters);// 0xe419e0
	bool ShouldFinalize();// 0xe419b0
	void RemoveVoter(SQVotingComponent* Voter);// 0xe41550
	void RemoveVote(out const FName ChoiceId, const SQVotingComponent* Voter);// 0xe413a0
	void PropagateChanges();// 0xe41230
	int OnRemoveVotesFrom(const SQVotingComponent* Voter);// 0xe41100
	int OnRemoveVoter(const SQVotingComponent* Voter);// 0xe41060
	int OnRemoveVote(out const FName ChoiceId, const SQVotingComponent* Voter);// 0xe40f70
	int OnAddVoter(const SQVotingComponent* Voter);// 0xe40ed0
	int OnAddVote(out const FName ChoiceId, const SQVotingComponent* Voter);// 0xe40de0
	World* GetWorld();// 0xe40450
	FName Finalize();// 0xe3ff40
	void EndPresentation();// 0xe3ff20
	void Cancel();// 0xe3ff00
	void BP_Tick(float DeltaTime);// 0x1d69c50
	bool AreAllVoteRecieved();// 0xe3fed0
	void AddVoter(SQVotingComponent* Voter, bool NotifyVoter);// 0xe3fd80
	void AddVote(out const FName ChoiceId, const SQVotingComponent* Voter);// 0xe3fbd0

--------------------------------
Class: SQVoteConfig
	DataTableRowHandle Data;//[Offset: 0x0, Size: 1]
	Timespan Duration;//[Offset: 0x10, Size: 1]
	Timespan ResultPresentationDuration;//[Offset: 0x18, Size: 1]
	enum AccessFilter;//[Offset: 0x20, Size: 1]
	enum[] TeamFilter;//[Offset: 0x28, Size: 1]
	class SQVoteSessionAuthority* AuthoritySessionType;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SQCoreStateConnectionChildActorComponent.ChildActorComponent.SceneComponent.ActorComponent.Object
	float NetPriority;//[Offset: 0x230, Size: 1]
	float NetUpdateFrequency;//[Offset: 0x234, Size: 1]
	float MinNetUpdateFrequency;//[Offset: 0x238, Size: 1]

--------------------------------
Class: SQServerSettings
	FString ServerName;//[Offset: 0x0, Size: 1]
	int NumPlayersDiffForTeamChanges;//[Offset: 0x20, Size: 1]
	bool bAllowTeamChanges;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24, Size: 1]
	bool bPreventTeamChangeIfUnbalanced;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x25, Size: 1]
	bool bEnforceTeamBalance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x26, Size: 1]
	bool bCommunityAdminAccess;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27, Size: 1]
	bool bRecordDemos;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool bAllowPublicClientsToRecord;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	int NumReservedSlots;//[Offset: 0x2c, Size: 1]
	int PublicQueueLimit;//[Offset: 0x30, Size: 1]
	int RejoinSquadDelayAfterKick;//[Offset: 0x34, Size: 1]
	int MaxPlayers;//[Offset: 0x38, Size: 1]
	int ServerMessageInterval;//[Offset: 0x44, Size: 1]
	int AutoTKBanTime;//[Offset: 0x60, Size: 1]
	int AutoTKBanNumberTKs;//[Offset: 0x64, Size: 1]
	bool bTKAutoKickEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6b, Size: 1]
	FString MessageOfTheDay;//[Offset: 0x70, Size: 1]
	enum MapRotationMode;//[Offset: 0x80, Size: 1]
	bool RandomizeAtStart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x81, Size: 1]
	bool UseVoteFactions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x82, Size: 1]
	bool UseVoteLevel;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x83, Size: 1]
	bool UseVoteLayer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x84, Size: 1]
	FName[] LevelRotation;//[Offset: 0x88, Size: 1]
	FName[] LayerRotation;//[Offset: 0x98, Size: 1]
	FName[] ExcludedFactions;//[Offset: 0xa8, Size: 1]
	FName[] ExcludedFactionSetups;//[Offset: 0xb8, Size: 1]
	FName[] ExcludedLevels;//[Offset: 0xc8, Size: 1]
	FName[] ExcludedLayers;//[Offset: 0xd8, Size: 1]
	<FString,FString> CustomOptions;//[Offset: 0xe8, Size: 1]
	int LevelCountPerVote;//[Offset: 0x138, Size: 1]
	SQVoteConfig LevelVoteConfig;//[Offset: 0x140, Size: 1]
	int LayerCountPerVote;//[Offset: 0x180, Size: 1]
	SQVoteConfig LayerVoteConfig;//[Offset: 0x188, Size: 1]
	SQVoteConfig[] FactionVoteConfigs;//[Offset: 0x1c8, Size: 1]

--------------------------------
Class: SQScoreboardPlayer.SQUserWidget.UserWidget.Widget.Visual.Object
	SQStatefulButton* TalkingButton;//[Offset: 0x270, Size: 1]
	SQPlayerController* SQPC;//[Offset: 0x278, Size: 1]
	SQPlayerState* SQPlayerState;//[Offset: 0x280, Size: 1]
	SQPlayerState* OwnerSQPlayerState;//[Offset: 0x288, Size: 1]
	LinearColor SelfColor;//[Offset: 0x2a8, Size: 1]
	LinearColor OtherColor;//[Offset: 0x2b8, Size: 1]
	LinearColor BleedingColor;//[Offset: 0x2c8, Size: 1]
	LinearColor IncapColor;//[Offset: 0x2d8, Size: 1]
	LinearColor DeadColor;//[Offset: 0x2e8, Size: 1]
	Texture2D* BleedingTexture;//[Offset: 0x2f8, Size: 1]
	Texture2D* IncapTexture;//[Offset: 0x300, Size: 1]
	Texture2D* DeadTexture;//[Offset: 0x308, Size: 1]
	FText HealthTooltipDead;//[Offset: 0x310, Size: 1]
	FText HealthTooltipIncap;//[Offset: 0x328, Size: 1]
	FText HealthTooltipBleeding;//[Offset: 0x340, Size: 1]
	bool bShowAllStats;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x358, Size: 1]
	bool bIsFriendlyScoreboard;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x359, Size: 1]
	CanvasPanel* LeaderPanel;//[Offset: 0x360, Size: 1]
	HorizontalBox* EndOfRoundPanel;//[Offset: 0x368, Size: 1]
	Spacer* NotEndOfRoundSpacer;//[Offset: 0x370, Size: 1]
	TextBlock* LeaderText;//[Offset: 0x378, Size: 1]
	TextBlock* PlayerNameText;//[Offset: 0x380, Size: 1]
	TextBlock* KillsText;//[Offset: 0x388, Size: 1]
	TextBlock* IncapsText;//[Offset: 0x390, Size: 1]
	TextBlock* DeathsText;//[Offset: 0x398, Size: 1]
	TextBlock* RevivesText;//[Offset: 0x3a0, Size: 1]
	TextBlock* HealsText;//[Offset: 0x3a8, Size: 1]
	TextBlock* TeamworkText;//[Offset: 0x3b0, Size: 1]
	TextBlock* ObjectivesText;//[Offset: 0x3b8, Size: 1]
	TextBlock* ScoreText;//[Offset: 0x3c0, Size: 1]
	TextBlock* PingText;//[Offset: 0x3c8, Size: 1]
	Image* LeaderTypeImage;//[Offset: 0x3d0, Size: 1]
	Image* FireteamImage;//[Offset: 0x3d8, Size: 1]
	Image* HealthStateImage;//[Offset: 0x3e0, Size: 1]
	Image* VehicleImage;//[Offset: 0x3e8, Size: 1]
	Image* RoleImage;//[Offset: 0x3f0, Size: 1]
	void UpdateState();// 0xd3dac0
	void OnMutePlayer(int CurrentState);// 0xdf7790
	void InitWidget();// 0xd3d1a0
	Texture2D* GetRoleIcon();// 0x1d69c50
	void ChangeVoipColor(enum Channel);// 0xdf7500

--------------------------------
Class: SQStatefulButton.SQUserWidget.UserWidget.Widget.Visual.Object
	Texture2D*[] StateImages;//[Offset: 0x260, Size: 1]
	LinearColor NormalTint;//[Offset: 0x270, Size: 1]
	LinearColor HoveredTint;//[Offset: 0x280, Size: 1]
	Image* CurrentImage;//[Offset: 0x290, Size: 1]
	bool bIsHovering;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	float HoveringColorBlend;//[Offset: 0x29c, Size: 1]
	float HoverColorBlendSpeed;//[Offset: 0x2a0, Size: 1]
	void OnPressed();// 0x1d69c50
	int GetCurrentState();// 0xe1a780
	void ChangeImage(int ImageIndex);// 0xe1a6f0

--------------------------------
Class: SQScoreboardSquad.SQUserWidget.UserWidget.Widget.Visual.Object
	SQPlayerController* SQPC;//[Offset: 0x260, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x268, Size: 1]
	PlayerWidgetPair[] DisplayedPlayers;//[Offset: 0x270, Size: 1]
	bool bShowAllStats;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	bool bUseAccumulativeLifetimeScores;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x281, Size: 1]
	LinearColor OwnSquadColor;//[Offset: 0x284, Size: 1]
	LinearColor FriendlySquadColor;//[Offset: 0x294, Size: 1]
	LinearColor EnemySquadColor;//[Offset: 0x2a4, Size: 1]
	bool bIsFriendlyScoreboard;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b4, Size: 1]
	class SQScoreboardPlayer* ScoreboardPlayerType;//[Offset: 0x2b8, Size: 1]
	HorizontalBox* EndOfRoundHorizontalBox;//[Offset: 0x2c0, Size: 1]
	GridPanel* PlayersGrid;//[Offset: 0x2c8, Size: 1]
	Spacer* NotEndOfRoundSpacer;//[Offset: 0x2d0, Size: 1]
	TextBlock* SquadNumberText;//[Offset: 0x2d8, Size: 1]
	TextBlock* SquadNameText;//[Offset: 0x2e0, Size: 1]
	TextBlock* SquadKillsText;//[Offset: 0x2e8, Size: 1]
	TextBlock* SquadIncapsText;//[Offset: 0x2f0, Size: 1]
	TextBlock* SquadDeathsText;//[Offset: 0x2f8, Size: 1]
	TextBlock* SquadRevivesText;//[Offset: 0x300, Size: 1]
	TextBlock* SquadHealsText;//[Offset: 0x308, Size: 1]
	TextBlock* SquadTeamworkText;//[Offset: 0x310, Size: 1]
	TextBlock* SquadObjectiveText;//[Offset: 0x318, Size: 1]
	TextBlock* SquadScoreText;//[Offset: 0x320, Size: 1]
	Image* SquadColorImage;//[Offset: 0x328, Size: 1]
	Image* SquadTalkingImage;//[Offset: 0x330, Size: 1]
	void UpdateState();// 0xdf7c90
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: PlayerWidgetPair
	SQScoreboardPlayer* PlayerWidget;//[Offset: 0x0, Size: 1]
	SQPlayerState* PlayerState;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SquadWidgetPair
	SQScoreboardSquad* SquadWidget;//[Offset: 0x0, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQDrawChatWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	SQDrawChatStruct[] MessagesToDraw;//[Offset: 0x260, Size: 1]
	void InitWidget();// 0xd3d1a0
	static void DrawWidget(SQDrawChatWidget* ChatWidget, out PaintContext Context);// 0xd82050

--------------------------------
Class: SQDrawChatStruct
	Vector2D RenderPosition;//[Offset: 0x0, Size: 1]
	FText Text;//[Offset: 0x8, Size: 1]
	LinearColor Color;//[Offset: 0x20, Size: 1]
	SQMessageBoxInfo Info;//[Offset: 0x30, Size: 1]
	int Index;//[Offset: 0xb0, Size: 1]

--------------------------------
Class: Enum.Field.Object

--------------------------------
Class: IconRadialGotoEntry_C.SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x440, Size: 1]
	Image* BPElementImage;//[Offset: 0x448, Size: 1]
	Image* BPIconImage;//[Offset: 0x450, Size: 1]
	Image* BPOuterRimImage;//[Offset: 0x458, Size: 1]
	Texture2D* BPIconImageTexture;//[Offset: 0x460, Size: 1]
	BP_RadialItemModel_C* RelatedActionModel;//[Offset: 0x468, Size: 1]
	void BPInit();// 0x1d69c50
	void UpdateActiveState();// 0x1d69c50
	void OnHoverBegin();// 0x1d69c50
	void ExecuteUbergraph_IconRadialGotoEntry(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_RadialActionModel_C* K2Node_DynamicCast_AsBP_Radial_Action_Model, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_RadialAction_C* K2Node_DynamicCast_AsBP_Radial_Action, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanClick_CanClick);// 0x1d69c50

--------------------------------
Class: BP_GotoMenuActionModel_C.BP_RadialActionModel_C.BP_RadialItemModel_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xa8, Size: 1]
	class BP_RadialMenuModel_C* GotoMenuModel;//[Offset: 0xb0, Size: 1]
	void OnClicked(BaseRadialMenu_C* Radial);// 0x1d69c50
	void ExecuteUbergraph_BP_GotoMenuActionModel(int EntryPoint, BaseRadialMenu_C* K2Node_Event_Radial, Object* CallFunc_GetDefaultObjectFor_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_GotoMenuAction_C* K2Node_DynamicCast_AsBP_Goto_Menu_Action, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanClick_CanClick);// 0x1d69c50

--------------------------------
Class: BP_GotoMenuAction_C.BP_RadialAction_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x30, Size: 1]
	class BP_RadialMenuModel_C* GotoMenuModel;//[Offset: 0x38, Size: 1]
	void DoAction(BaseRadialMenu_C* RadialMenu, class BP_RadialMenuModel_C MenuModel);// 0x1d69c50
	void ExecuteUbergraph_BP_GotoMenuAction(int EntryPoint, BaseRadialMenu_C* K2Node_CustomEvent_RadialMenu, class BP_RadialMenuModel_C K2Node_CustomEvent_MenuModel);// 0x1d69c50

--------------------------------
Class: RadialItem_Deployable_C.SQRadialDeployableButton.SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x4f0, Size: 1]
	Image* Background;//[Offset: 0x4f8, Size: 1]
	TextBlock* details;//[Offset: 0x500, Size: 1]
	Image* Icon;//[Offset: 0x508, Size: 1]
	Image* InnerRimImage;//[Offset: 0x510, Size: 1]
	BP_RadialItemModel_C* RelatedActionModel;//[Offset: 0x518, Size: 1]
	SQDeployableEntry RelatedDeployableEntry;//[Offset: 0x520, Size: 1]
	float StatusRefreshTimer;//[Offset: 0x588, Size: 1]
	float StatusRefreshRateInSeconds;//[Offset: 0x58c, Size: 1]
	void UpdateAvailabilityStatus(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQAvailabilityState_Deployable CallFunc_TryGetDeployableAvailability_OutUpdatedDeployableState, bool CallFunc_TryGetDeployableAvailability_ReturnValue);// 0x1d69c50
	void GetUnavailabilityReason(out const SQAvailabilityState SQAvailabilityState, out FText Return Value, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	FText GetAvailabilityText(out const SQAvailabilityState SQAvailabilityState, bool In HasLimitedCount, FString Temp_string_Variable, bool CallFunc_IsAvailable_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, bool Temp_bool_Variable, FString K2Node_Select_Default, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	FText GetTimerText(out const SQAvailabilityState SQAvailabilityState, DateTime CallFunc_GetServerUtcTime_ReturnValue, Timespan CallFunc_Subtract_DateTimeDateTime_ReturnValue, FText CallFunc_ConvertTimerToText_ReturnValue);// 0x1d69c50
	FText ConvertTimerToText(Timespan InTimespan, bool Temp_bool_Variable, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Format_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void GetDetailText(out FText DetailText, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasDeployableActiveTimer_ReturnValue, FText CallFunc_GetTimerText_ReturnValue, bool CallFunc_HasLimitedCount_ReturnValue, FText CallFunc_GetAvailabilityText_ReturnValue);// 0x1d69c50
	bool IsAvailable(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQAvailabilityState CallFunc_IsDeployableAvailableForPlayer_OutPlayerState, bool CallFunc_IsDeployableAvailableForPlayer_ReturnValue);// 0x1d69c50
	void BPInit();// 0x1d69c50
	void OnHoverBegin();// 0x1d69c50
	void RefreshStatus();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_RadialItem_Deployable(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQRadialDeployableButton.SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	LinearColor TextUnAvailableColor;//[Offset: 0x440, Size: 1]
	LinearColor TextAvailableColor;//[Offset: 0x450, Size: 1]
	LinearColor RimAvailableColor;//[Offset: 0x460, Size: 1]
	LinearColor RimUnAvailableColor;//[Offset: 0x470, Size: 1]
	LinearColor IconUnavailableColor;//[Offset: 0x480, Size: 1]
	LinearColor InnerHoverUnavailableColor;//[Offset: 0x490, Size: 1]
	SQAvailabilityState_Deployable RelatedDeployableState;//[Offset: 0x4a0, Size: 1]
	void UpdateDetailText();// 0xdeabe0
	bool IsAvailable();// 0xde9c10
	void GetDetailText(out FText DetailText);// 0xde95e0

--------------------------------
Class: BP_PlayerController_C.SQPlayerController.PlayerController.Controller.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xaa0, Size: 1]
	BP_RotorListener_C* BP_RotorListener;//[Offset: 0xaa8, Size: 1]
	Comp_ResourceControl_C* Comp_ResourceControl;//[Offset: 0xab0, Size: 1]
	PostProcessComponent* MapPostProcess;//[Offset: 0xab8, Size: 1]
	PostProcessComponent* UIBlurPostProcess;//[Offset: 0xac0, Size: 1]
	float TraceInterestRadius;//[Offset: 0xac8, Size: 1]
	SQSoldier*[] PawnsWithinRadius;//[Offset: 0xad0, Size: 1]
	FName RoleCategory;//[Offset: 0xae0, Size: 1]
	LinearColor InvalidPlacementColor;//[Offset: 0xae8, Size: 1]
	bool PawnHidden;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xaf8, Size: 1]
	Transform SavedActorTransform;//[Offset: 0xb00, Size: 1]
	TimerHandle TimerCheckValidGhost;//[Offset: 0xb30, Size: 1]
	PhysicsHandleComponent* DraggingPhysicsHandle;//[Offset: 0xb38, Size: 1]
	SQMapWidgetMapMarkerSelectable* LastSQMarker;//[Offset: 0xb40, Size: 1]
	int Max Spot Markers;//[Offset: 0xb48, Size: 1]
	int Max Action Markers;//[Offset: 0xb4c, Size: 1]
	int Max POI Markers;//[Offset: 0xb50, Size: 1]
	int Max Fireteam Markers;//[Offset: 0xb54, Size: 1]
	int Max Request Markers;//[Offset: 0xb58, Size: 1]
	class SQMapMarker[] FireteamMarkers;//[Offset: 0xb60, Size: 1]
	MulticastInlineDelegateProperty Opened Chat;//[Size: 1]
	BP_MapMarker_CommandMaster_C* Last Command Request Marker;//[Offset: 0xb80, Size: 1]
	int Max Command Spot Markers;//[Offset: 0xb88, Size: 1]
	int Max Command Request Markers;//[Offset: 0xb8c, Size: 1]
	BP_MapMarker_DirectorMaster_C*[] Director Markers;//[Offset: 0xb90, Size: 1]
	int Max Director Markers;//[Offset: 0xba0, Size: 1]
	MulticastInlineDelegateProperty Marker Created;//[Size: 1]
	bool bAllowAdminCam;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbb8, Size: 1]
	TimerHandle Out of Bounds Timer;//[Offset: 0xbc0, Size: 1]
	class BP_CommanderActionCondition_C* Command Action Conditions;//[Offset: 0xbc8, Size: 1]
	float Last Command Request Time;//[Offset: 0xbd0, Size: 1]
	float Command Request Interval;//[Offset: 0xbd4, Size: 1]
	BP_MapMarker_Selectable_C* SelectedMapMarker;//[Offset: 0xbd8, Size: 1]
	<class SQMapMarker,SQMapMarkerDataAsset*> SL_TraceMarkerMapping;//[Offset: 0xbe0, Size: 1]
	<class SQMapMarker,SQMapMarkerDataAsset*> FTL_TraceMarkerMapping;//[Offset: 0xc30, Size: 1]
	float 3DMarkerCooldownSL;//[Offset: 0xc80, Size: 1]
	float 3DMarkerCooldownFTL;//[Offset: 0xc84, Size: 1]
	TimerHandle 3DMarkerCooldownTimer;//[Offset: 0xc88, Size: 1]
	bool CachedFTLNotification;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc90, Size: 1]
	int CachedFireteamIndexNotification;//[Offset: 0xc94, Size: 1]
	FText CachedFTLNameNotificaiton;//[Offset: 0xc98, Size: 1]
	TimerHandle CheckPlayerStateInitializedTimerHandle;//[Offset: 0xcb0, Size: 1]
	void bCanRemoveMapMarkerNew(BP_MapMarker_Selectable_C* Map Marker, out bool Can Remove, bool CallFunc_IsSquadLeader_ReturnValue, SQMapMarkerVisualData CallFunc_GetMapMarkerData_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanOR_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Get Command Request Available(out bool Available, out float Remaining Time, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Get Command Action Condition(out class BP_CommanderActionCondition_C Condition Class);// 0x1d69c50
	void Get Last Selected Marker(out SQMapWidgetMapMarkerSelectable* Marker);// 0x1d69c50
	void bCan Remove Marker(out bool Can Remove, int L FT ID, bool L Fireteam Leader, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void bCan Place Marker(out bool Can Place, bool CallFunc_IsSquadLeader_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	bool IsAimingDownSights(Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsAimingDownSights_ReturnValue);// 0x1d69c50
	void Set Restricted Team Zone Notification(bool Show, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void HandleFireteamUpdatedNotification(int FireTeamIndex, bool IsFTL, int Temp_int_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, int Temp_int_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, Texture2D* K2Node_Select_Default, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Format_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_EqualEqual_BoolBool_ReturnValue, FText CallFunc_Format_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue);// 0x1d69c50
	void GetDeployableReference(SQDeployableSettings* InDeployableSettings, out class SQDeployable OutDeployableReference, SQLayer* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, BP_SQDeployableSettings_C* K2Node_DynamicCast_AsBP_SQDeployable_Settings, bool K2Node_DynamicCast_bSuccess, class SQDeployable CallFunc_TryGetDeployableWithLayer_OutDeployable, bool CallFunc_TryGetDeployableWithLayer_ReturnValue);// 0x1d69c50
	void CanOpenRadialMenu(out bool CanOpenRadialMenu, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsPullingTrigger_ReturnValue, bool CallFunc_IsPendingFire_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Set Out of Bounds Notification(bool Show, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Boundary_Interface, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Boundary_Interface, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void PossessAdminCam(SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, CameraMan_C* CallFunc_FinishSpawningActor_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSoldierInAVehicle_ReturnValue, bool CallFunc_IsCameraMan_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, CameraMan_C* K2Node_DynamicCast_AsCamera_Man, bool K2Node_DynamicCast_bSuccess, const Transform CallFunc_GetTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, CameraMan_C* CallFunc_FinishSpawningActor_ReturnValue);// 0x1d69c50
	void Get Deployable(out class SQDeployable Deployable);// 0x1d69c50
	void Create Director Marker(class GridData_DirectorOption_C Action, Transform Transform, float distance, int Squad, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, BP_MapMarker_DirectorMaster_C* CallFunc_Array_Get_Item, bool Temp_bool_Variable, int K2Node_Select_Default, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, BP_MapMarker_DirectorMaster_C* CallFunc_FinishSpawningActor_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Create Command Request(class SQGridData_CommandOption Action, Transform Transform, float distance, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, class BP_MapMarker_CommandMaster_C K2Node_ClassDynamicCast_AsBP_Map_Marker_Command_Master, bool K2Node_ClassDynamicCast_bSuccess, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsCommander_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_GetTeam_ReturnValue, float Temp_float_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, BP_MapMarker_CommandMaster_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Remove Last Command Request Marker(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Try to Open Menu(HUD* CallFunc_GetHUD_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Cancel Spawn();// 0x1d69c50
	void Force Show Spawns on Map(SaveData_UI_C* L Save, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, W_MapControls_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, BP_MapWidgetRallyPoint_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_MapControls_C* CallFunc_Array_Get_Item, BP_MapWidgetRallyPoint_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, BP_MapWidgetSpawnPoint_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, BP_MapWidgetSpawnPoint_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Remove Fireteam Markers(bool bAction, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQMapMarker* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void MouseWheelZoomMapAction(float MouseWheelAxis, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Can Place Marker(out bool Valid, int SpotMarkerCount);// 0x1d69c50
	void Can Remove Marker(int SpotMarkerCount);// 0x1d69c50
	void CommandKeyAction(Pawn* CallFunc_K2_GetPawn_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming);// 0x1d69c50
	void Leave Menu(HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Get_Showing_Main_Menu_Showing);// 0x1d69c50
	void ClearFiring(SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleInventoryComponent* CallFunc_GetVehicleInventory_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPawnInventoryComponent* CallFunc_GetInventory_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void ManageMarkers(SQMapMarker* NewMarker, enum New Marker Type, SQMapMarker*[] Current Marker List, int L Marker FT, int SpotMarkerCount, SQMapMarker*[] Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, enum Temp_byte_Variable, SQMapMarker*[] Temp_object_Variable, SQMapMarker*[] Temp_object_Variable, SQMapMarker*[] Temp_object_Variable, enum Temp_byte_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQMapMarker*[] Temp_object_Variable, enum Temp_byte_Variable, int Temp_int_Loop_Counter_Variable, SQMapMarker*[] Temp_object_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, enum Temp_byte_Variable, bool Temp_bool_Variable, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsCommander_ReturnValue, SQMapMarker*[] K2Node_Select_Default, int Temp_int_Variable, int CallFunc_Array_Length_ReturnValue, int Temp_int_Variable, bool CallFunc_Less_IntInt_ReturnValue, SQMapMarker* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetFireteamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, enum CallFunc_GetMarkerType_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, enum CallFunc_GetMarkerType_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SQMapMarker*[] K2Node_Select_Default, int CallFunc_Array_Add_ReturnValue, BP_MarkerPing_C* K2Node_DynamicCast_AsBP_Marker_Ping, bool K2Node_DynamicCast_bSuccess, int Temp_int_Array_Index_Variable, SQMapMarker* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQMapMarker* CallFunc_Array_Get_Item, int K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, int K2Node_Select_Default, int CallFunc_GetFireteamId_ReturnValue, int K2Node_Select_Default, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void TraceMarkerLocation(class SQMapMarker MarkerClass, Vector Start, Vector End, SQMapMarkerDataAsset* In Marker, bool Hotkeyed, bool Emote, out bool ValidPosition, out bool StillInCooldown, bool LStillInCooldown, bool LValidPosition, SQPlayerState* L PState, bool Temp_bool_Variable, bool Temp_bool_Variable, float CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, int CallFunc_Array_Find_ReturnValue, const int K2Node_Select_Default, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class SQMapMarker CallFunc_Array_Get_Item, class SQMapMarker K2Node_Select_Default, int CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, const int K2Node_Select_Default, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, const Actor*[] K2Node_MakeArray_Array, bool CallFunc_BooleanOR_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector_NetQuantize K2Node_MakeStruct_Vector_NetQuantize, SQMapMarkerGameplayData K2Node_MakeStruct_SQMapMarkerGameplayData);// 0x1d69c50
	bool IsSoldierInAVehicle(SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void ZoomKeyAction(HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void RoamingMapKeyAction(Pawn* CallFunc_K2_GetPawn_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming);// 0x1d69c50
	void DeploymentKeyAction(Pawn* CallFunc_K2_GetPawn_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming, interface classNone K2Node_DynamicCast_AsBPI_Menus, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	bool OnAltFireWeaponOverride(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	bool OnFireWeaponOverride(bool CallFunc_FinalizePendingDeployable_OutSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void OnRep_Current Kit();// 0x1d69c50
	void HideGameMenus(bool CallFunc_MatchWaitingAfterCompletion_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void InpActEvt_InGameMenu_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_SpawnMenu_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Map_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Scoreboard_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Scoreboard_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ToggleScoreboard_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Shift_P_K2Node_InputKeyEvent(Key Key);// 0x1d69c50
	void InpActEvt_CommandMenu_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_CommandMenu_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_MapZoom_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_CommandMap_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ChatToAll_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ChatToSquad_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ChatToTeam_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Interact_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F(Object* Loaded);// 0x1d69c50
	void InpActEvt_ToggleCompassView_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ToggleSquadList_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ModifyZeroing_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ModifyZeroing_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void BlueprintOnMatchEnded(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets);// 0x1d69c50
	void StopShowingTMenu();// 0x1d69c50
	void BlueprintPlayerSpawned();// 0x1d69c50
	void BlueprintPlayerDied();// 0x1d69c50
	void ServerEnableCamera();// 0x1d69c50
	void RequestPlaceMarker(class SQMapMarker MarkerClass, Vector Location, out const int FireTeamId, bool Emote);// 0x1d69c50
	void ServerHidePawn();// 0x1d69c50
	void RequestRemoveMarker(SQMapItemComponent* MarkerItem);// 0x1d69c50
	void RemoveLastSelectedMarker();// 0x1d69c50
	void BPTraceMarkerLocation(class SQMapMarker MarkerClass, out const Vector Start, out const Vector End);// 0x1d69c50
	void SERVER Set Selected Marker(SQMapWidgetMapMarkerSelectable* Marker Ref);// 0x1d69c50
	void InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent(float AxisValue);// 0x1d69c50
	void Client Notification(FText Text, enum Type, Texture2D* Custom Icon);// 0x1d69c50
	void Request Place Command Map Marker(class SQGridData_CommandOption Action, Transform T, float distance);// 0x1d69c50
	void Request Place Director Marker(class GridData_DirectorOption_C Action, Transform T, float distance, int Squad);// 0x1d69c50
	void Trace Marker(Vector Start, Vector End, SQMapMarkerDataAsset* Marker, bool Hotkey, bool Emote, class SQMapMarker MarkerClass);// 0x1d69c50
	void Set Selected Marker(SQMapWidgetMapMarkerSelectable* Marker Ref);// 0x1d69c50
	void Clear Selected Marker();// 0x1d69c50
	void SetAllowAdminCam(bool bAllowAdminCam);// 0x1d69c50
	void Play Emote(enum Emote, FName Name);// 0x1d69c50
	void OnOutOfMapBoundsChanged(float KillTimestamp, bool bIsOutOfBounds);// 0x1d69c50
	void OutOfBoundsTimerCheck();// 0x1d69c50
	void Request Map Marker(int Squad ID, enum Team ID, int Fire Team ID, Vector_NetQuantize Location, Vector_NetQuantize DistanceRotation, SQMapMarkerDataAsset* Map Marker Data);// 0x1d69c50
	void Request Marker(class SQMapMarker Marker Class, Vector Location, int Fire Team ID, bool Emote);// 0x1d69c50
	void Request Director Marker(class GridData_DirectorOption_C Director Marker, Vector Location, Rotator Rotation, Vector Scale, float distance, int Squad ID);// 0x1d69c50
	void Request Command Marker(class SQGridData_CommandOption Command Marker, Transform Transform, float distance);// 0x1d69c50
	void Remove Selected Marker();// 0x1d69c50
	void Accept Deny Command Request(BP_MapMarker_Command_Request_C* Marker, bool Accepted);// 0x1d69c50
	void Server Accept Deny Command(BP_MapMarker_Command_Request_C* Marker, bool Accepted);// 0x1d69c50
	void Set Last Command Request Time();// 0x1d69c50
	void Remove Map Marker New(byte MapMarkerID);// 0x1d69c50
	void BlueprintOnMatchStarted();// 0x1d69c50
	void BP_InitializeDeployableFromEquippable(SQDeployableItem* DeployableItem, SQEquipableItem* Equippable);// 0x1d69c50
	void BP_FailPlaceDeployableFromEquippable(SQEquipableItem* Equippable);// 0x1d69c50
	void BP_ExposeUnavailabilityReason(out const DataTableRowHandle InReason);// 0x1d69c50
	void Override Music(SoundBase* In Music);// 0x1d69c50
	void FireteamUpdatedNotification(int FireteamNumber, bool IsFTL);// 0x1d69c50
	void LeftSquadNotification(SQPlayerState* Target);// 0x1d69c50
	void PromotedNotification(bool Commander);// 0x1d69c50
	void JoinedSquadNotification(SQPlayerState* Target);// 0x1d69c50
	void RequiresLeaderKitNotification();// 0x1d69c50
	void ClearTimer3DMarkerCooldown();// 0x1d69c50
	void FireteamLeaderChanged(FText PlayerName, int FireTeamIndex);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void CheckPlayerStateInitialized();// 0x1d69c50
	void OnSquadChanged(SQSquadState* NewSquad, SQSquadState* OldSquad, SQPlayerState* Player);// 0x1d69c50
	void OnPendingDeathChanged(float KillTimestamp, bool bDeathIsPending);// 0x1d69c50
	void ToggleHighPrecisionBearing(bool NewState);// 0x1d69c50
	void ServerPickupItem(Actor* Item Object);// 0x1d69c50
	void ExecuteUbergraph_BP_PlayerController(int EntryPoint, bool CallFunc_IsAimingDownSights_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_Not_PreBool_ReturnValue, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, Key Temp_struct_Variable, HUD* CallFunc_GetHUD_ReturnValue, int K2Node_Event_WinningTeam, int K2Node_Event_LosingTeam, int K2Node_Event_WinnerTickets, int K2Node_Event_LoserTickets, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue, class SQMapMarker K2Node_CustomEvent_MarkerClass, Vector K2Node_CustomEvent_Location, const int K2Node_CustomEvent_FireteamId, bool K2Node_CustomEvent_Emote, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, SQMapMarker* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsCameraMan_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_Variable, SQMapItemComponent* K2Node_CustomEvent_MarkerItem, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, Actor* CallFunc_GetOwner_ReturnValue, SQMapMarker* K2Node_DynamicCast_AsSQMap_Marker, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, class SQMapMarker K2Node_Event_MarkerClass, const Vector K2Node_Event_Start, const Vector K2Node_Event_End, SQMapWidgetMapMarkerSelectable* K2Node_CustomEvent_Marker_Ref, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, float K2Node_InputAxisKeyEvent_AxisValue, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_GetTeam_ReturnValue, bool CallFunc_IsCameraMan_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, FText K2Node_CustomEvent_Text, enum K2Node_CustomEvent_Type, Texture2D* K2Node_CustomEvent_Custom_Icon, class SQGridData_CommandOption K2Node_CustomEvent_Action, Transform K2Node_CustomEvent_T, float K2Node_CustomEvent_Distance, class GridData_DirectorOption_C K2Node_CustomEvent_Action, Transform K2Node_CustomEvent_T, float K2Node_CustomEvent_Distance, int K2Node_CustomEvent_squad, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, Vector K2Node_Event_Start, Vector K2Node_Event_End, SQMapMarkerDataAsset* K2Node_Event_Marker, bool K2Node_Event_Hotkey, bool K2Node_Event_Emote, class SQMapMarker K2Node_Event_MarkerClass, bool CallFunc_TraceMarkerLocation_ValidPosition, bool CallFunc_TraceMarkerLocation_StillInCooldown, SQMapWidgetMapMarkerSelectable* K2Node_Event_Marker_Ref, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, Key K2Node_InputActionEvent_Key, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQScoreboard* CallFunc_Get_Scoreboard_Scoreboard, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, bool K2Node_Event_bAllowAdminCam, enum K2Node_Event_Emote, FName K2Node_Event_Name, float K2Node_Event_KillTimestamp, bool K2Node_Event_bIsOutOfBounds, float CallFunc_GetTimeSeconds_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_IsAdminCamera_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQHelicopter2* K2Node_DynamicCast_AsSQHelicopter, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Helicopter, bool K2Node_DynamicCast_bSuccess, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPawnInventoryComponent* CallFunc_GetInventory_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Helicopter, bool K2Node_DynamicCast_bSuccess, SQVehicleSeatComponent*[] CallFunc_GetSeats_ReturnValue, SQVehicleSeatComponent* CallFunc_GetCurrentSeat_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQVehicleSeatComponent* CallFunc_GetCurrentSeat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, int K2Node_Event_Squad_ID, enum K2Node_Event_Team_ID, int K2Node_Event_Fire_Team_ID, Vector_NetQuantize K2Node_Event_Location, Vector_NetQuantize K2Node_Event_DistanceRotation, SQMapMarkerDataAsset* K2Node_Event_Map_Marker_Data, SQMapMarkerGameplayData K2Node_MakeStruct_SQMapMarkerGameplayData, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, class SQMapMarker K2Node_Event_Marker_Class, Vector K2Node_Event_Location, int K2Node_Event_Fire_Team_ID, bool K2Node_Event_Emote, class GridData_DirectorOption_C K2Node_Event_Director_Marker, Vector K2Node_Event_Location, Rotator K2Node_Event_Rotation, Vector K2Node_Event_Scale, float K2Node_Event_Distance, int K2Node_Event_Squad_ID, Transform CallFunc_MakeTransform_ReturnValue, class SQGridData_CommandOption K2Node_Event_Command_Marker, Transform K2Node_Event_Transform, float K2Node_Event_Distance, BP_MapMarker_Command_Request_C* K2Node_Event_Marker, bool K2Node_Event_Accepted, BP_MapMarker_Command_Request_C* K2Node_CustomEvent_Marker, bool K2Node_CustomEvent_Accepted, float CallFunc_GetGameTimeInSeconds_ReturnValue, byte K2Node_Event_MapMarkerID, bool CallFunc_CanOpenRadialMenu_CanOpenRadialMenu, Key K2Node_InputActionEvent_Key, HUD* CallFunc_GetHUD_ReturnValue, Key Temp_struct_Variable, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQDeployableItem* K2Node_Event_DeployableItem, SQEquipableItem* K2Node_Event_Equippable, interface classNone K2Node_DynamicCast_AsIDeployable_Events, bool K2Node_DynamicCast_bSuccess, SQEquipableItem* K2Node_Event_Equippable, interface classNone K2Node_DynamicCast_AsIDeployable_Events, bool K2Node_DynamicCast_bSuccess, Key K2Node_InputActionEvent_Key, const DataTableRowHandle K2Node_Event_InReason, SoundBase* K2Node_CustomEvent_In_Music, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, SoundBase* K2Node_DynamicCast_AsSound_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, Key K2Node_InputActionEvent_Key, Object* Temp_object_Variable, int K2Node_CustomEvent_FireteamNumber, bool K2Node_CustomEvent_IsFTL, SQPlayerState* K2Node_CustomEvent_Target, FString CallFunc_GetFullPlayerName_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool K2Node_CustomEvent_Commander, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, SQPlayerState* K2Node_CustomEvent_Target, Object* K2Node_CustomEvent_Loaded, FString CallFunc_GetFullPlayerName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsFireTeamLeader_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Key K2Node_InputKeyEvent_Key, Key K2Node_InputActionEvent_Key, Key Temp_struct_Variable, SQPlayerState* CallFunc_GetSquadPlayerState_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, FText K2Node_CustomEvent_PlayerName, int K2Node_CustomEvent_FireTeamIndex, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, float K2Node_Select_Default, FormatArgumentData[] K2Node_MakeArray_Array, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, FText CallFunc_Format_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_NotEqual_TextText_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* CallFunc_GetSquadPlayerState_ReturnValue, SQSquadState* K2Node_CustomEvent_NewSquad, SQSquadState* K2Node_CustomEvent_OldSquad, SQPlayerState* K2Node_CustomEvent_Player, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQMapMarkerDataAsset* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, SQMapMarkerDataAsset* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQMapMarkerDataAsset* K2Node_Select_Default, bool CallFunc_TraceMarkerLocation_ValidPosition, bool CallFunc_TraceMarkerLocation_StillInCooldown, float K2Node_Event_KillTimestamp, bool K2Node_Event_bDeathIsPending, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsAdminCamera_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, Key K2Node_InputActionEvent_Key, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, bool K2Node_CustomEvent_NewState, bool CallFunc_IsLocalPlayerController_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, Actor* K2Node_CustomEvent_Item_Object, interface classNone K2Node_DynamicCast_AsBPI_Items, bool K2Node_DynamicCast_bSuccess, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DoesImplementInterface_ReturnValue, Key K2Node_InputActionEvent_Key, float CallFunc_GetOutOfMapBoundsKillTimestamp_ReturnValue, Key K2Node_InputActionEvent_Key, float CallFunc_Subtract_FloatFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, Key K2Node_InputActionEvent_Key, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanOpenRadialMenu_CanOpenRadialMenu, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, Key K2Node_InputActionEvent_Key, bool CallFunc_IsAimingDownSights_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, bool CallFunc_IsBeingUsed_ReturnValue, bool CallFunc_IsBeingUsed_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Marker Created__DelegateSignature(int Squad ID, SQMapMarker* Marker);// 0x1d69c50
	void Opened Chat__DelegateSignature(enum Channel);// 0x1d69c50

--------------------------------
Class: BP_RotorListener_C.SQRotorWashEffectListener.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xc8, Size: 1]
	BP_RotorWashSender_C*[] NonCulledEmitters;//[Offset: 0xd0, Size: 1]
	bool Debug;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xe0, Size: 1]
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ExecuteUbergraph_BP_RotorListener(int EntryPoint, LinearColor K2Node_MakeStruct_LinearColor, int Temp_int_Variable, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, int Temp_int_Variable, float K2Node_Event_DeltaSeconds, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, BP_RotorWashSender_C* CallFunc_Array_Get_Item, int CallFunc_Min_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, int CallFunc_Add_IntInt_ReturnValue, LinearColor K2Node_MakeStruct_LinearColor, int CallFunc_Max_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, FString CallFunc_Conv_VectorToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQRotorWashEffectListener.ActorComponent.Object
	SQRotorWashEffectSender*[] ActiveEmitters;//[Offset: 0xb0, Size: 1]
	float EmitterCullDistance;//[Offset: 0xc0, Size: 1]
	void UnregisterRotorWashEffectEmitter(SQRotorWashEffectSender* Emitter);// 0xdf7be0
	void SetEmitterCullDistance(float NewCullDistance);// 0xdf7980
	void RegisterRotorWashEffectEmitter(SQRotorWashEffectSender* Emitter);// 0xdf78d0
	void GetEmittersCulled(out SQRotorWashEffectSender*[] OutEmitters);// 0xdf75e0
	void BPEmitterUnregistered(SQRotorWashEffectSender* Emitter);// 0x1d69c50
	void BPEmitterRegistered(SQRotorWashEffectSender* Emitter);// 0x1d69c50

--------------------------------
Class: SQRotorWashEffectSender.SceneComponent.ActorComponent.Object
	SQRotorWashEffectListener*[] ActiveListeners;//[Offset: 0x1f8, Size: 1]
	float EffectRadius;//[Offset: 0x208, Size: 1]
	RotorWashData EmitterData;//[Offset: 0x210, Size: 1]
	void UnregisterListener(SQRotorWashEffectListener* Listener);// 0xdf7b50
	void RegisterListener(SQRotorWashEffectListener* Listener);// 0xdf7840
	void Initialize();// 0xdf7770

--------------------------------
Class: RotorWashData
	SQRotorWashEffectSender* Emitter;//[Offset: 0x0, Size: 1]
	Vector EmitterPosition;//[Offset: 0x8, Size: 1]
	float EffectRadius;//[Offset: 0x14, Size: 1]

--------------------------------
Class: BP_RotorWashSender_C.SQRotorWashEffectSender.SceneComponent.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x230, Size: 1]
	bool StartRegistered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x238, Size: 1]
	bool IsUpdating;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x239, Size: 1]
	BP_RotorListener_C* Listener;//[Offset: 0x240, Size: 1]
	void SetCanUpdate(bool CanUpdate);// 0x1d69c50
	void Initialize();// 0x1d69c50
	void ExecuteUbergraph_BP_RotorWashSender(int EntryPoint, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_RotorListener_C* CallFunc_GetComponentByClass_ReturnValue, bool K2Node_CustomEvent_CanUpdate);// 0x1d69c50

--------------------------------
Class: BP_MapMarker_Selectable_C.SQMapMarkerBase.UserWidget.Widget.Visual.Object
	float MarkerScale;//[Offset: 0x350, Size: 1]
	float FadeOpacity;//[Offset: 0x354, Size: 1]
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, PointerEvent MousePress, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_SQMapCore_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	W_SQMapBody_C* MapBody;//[Offset: 0x268, Size: 1]
	float ZoomAmount;//[Offset: 0x270, Size: 1]
	MaterialInstanceDynamic* MapMaterialInstance;//[Offset: 0x278, Size: 1]
	class W_GridMenu_C* SL Menu Class;//[Offset: 0x280, Size: 1]
	W_GridMenu_C* SL Grid Menu;//[Offset: 0x288, Size: 1]
	bool bIsPanning;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	Key PanButton;//[Offset: 0x298, Size: 1]
	float ZoomScrollRate;//[Offset: 0x2b0, Size: 1]
	float ZoomMax;//[Offset: 0x2b4, Size: 1]
	float ZoomMin;//[Offset: 0x2b8, Size: 1]
	float TargetZoom;//[Offset: 0x2bc, Size: 1]
	Vector2D FollowPosition;//[Offset: 0x2c0, Size: 1]
	bool FollowPositionRelative;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	bool Following;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c9, Size: 1]
	float Edge Padding;//[Offset: 0x2cc, Size: 1]
	float StartingZoom;//[Offset: 0x2d0, Size: 1]
	float MaxZoomFactor;//[Offset: 0x2d4, Size: 1]
	float ZoomSpeed;//[Offset: 0x2d8, Size: 1]
	float MinimumMaxZoomClamp;//[Offset: 0x2dc, Size: 1]
	SQCoreStateMapComponent* MapComponent;//[Offset: 0x2e0, Size: 1]
	FString CachedMouseLocationCoords;//[Offset: 0x2e8, Size: 1]
	FString CachedPlayerLocationCoords;//[Offset: 0x2f8, Size: 1]
	bool ZoomCenterOnPlayer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x308, Size: 1]
	float Required Pan Delta;//[Offset: 0x30c, Size: 1]
	bool Did Pan;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x310, Size: 1]
	W_MousePosition_C* REF Widget Mouse Pos;//[Offset: 0x318, Size: 1]
	FString MarkedMouseLocationCoords;//[Offset: 0x320, Size: 1]
	bool Can Ping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x330, Size: 1]
	TimerHandle Ping Timer;//[Offset: 0x338, Size: 1]
	bool bZoomCenterToCursor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	Vector Last World Location Zero Based;//[Offset: 0x344, Size: 1]
	bool Can Show Mouse Coords;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x350, Size: 1]
	PointerEvent Last Click Event;//[Offset: 0x358, Size: 1]
	MulticastInlineDelegateProperty Mouse Down;//[Size: 1]
	bool Can Create Map Menu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3d8, Size: 1]
	class W_GridMenu_C* Fireteam Menu Class;//[Offset: 0x3e0, Size: 1]
	W_GridMenu_C* Fireteam Menu;//[Offset: 0x3e8, Size: 1]
	PointerEvent Mouse Move Event;//[Offset: 0x3f0, Size: 1]
	MulticastInlineDelegateProperty OnUpdateZoom;//[Size: 1]
	void Create Fireteam Actions Menu(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_GridMenu_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Can Place Map Menu(out bool Valid, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_FloatingWidget_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_FloatingWidget_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void FindZoomLocation(out Vector2D OutScreenLocation, Vector2D OutSLocation, const Geometry CallFunc_GetCachedGeometry_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, PanelWidget* CallFunc_GetMapBody_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, Vector2D CallFunc_GetLocalSize_ReturnValue, IntPoint CallFunc_GetMouseScreenSpacePosition_OutPosition, bool CallFunc_GetMouseScreenSpacePosition_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, Vector2D CallFunc_LocalToAbsolute_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, Pawn* CallFunc_GetOwningPlayerPawn_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, Vector2D CallFunc_MapLocationToScreenLocation_OutScreenLocation, bool CallFunc_MapLocationToScreenLocation_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void SetMapTexture(Texture* Value);// 0x1d69c50
	void InitializeZoomLevels(float HUDMinZoomLevel, float HUDMaxZoomLevel, int Temp_int_Array_Index_Variable, const Box2D CallFunc_GetWorldBounds_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue, float CallFunc_Array_Get_Item, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue);// 0x1d69c50
	void AdjustVerticalBarPadding(float TargetZoom, SizeBoxSlot* K2Node_DynamicCast_AsSize_Box_Slot, bool K2Node_DynamicCast_bSuccess, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Margin K2Node_MakeStruct_Margin);// 0x1d69c50
	void AdjustHorizontalBarPadding(float TargetZoom, SizeBoxSlot* K2Node_DynamicCast_AsSize_Box_Slot, bool K2Node_DynamicCast_bSuccess, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Margin K2Node_MakeStruct_Margin);// 0x1d69c50
	void Remove Mouse Pos(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	EventReply OnMouseWheel(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue, float CallFunc_PointerEvent_GetWheelDelta_ReturnValue);// 0x1d69c50
	void OnMouseWheelZoom(float MouseAxis, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);// 0x1d69c50
	void UpdatePlayerCoordinates(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, const Vector2D CallFunc_GetNumGridLines_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, FString CallFunc_MapLocationToGridCoordinateString_ReturnValue);// 0x1d69c50
	void UpdateCursorGridLocationString(PointerEvent MouseInput, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, PanelWidget* CallFunc_GetMapBody_ReturnValue, const Vector2D CallFunc_GetNumGridLines_ReturnValue, Vector2D CallFunc_ScreenLocationToMapLocation_OutMapLocation, bool CallFunc_ScreenLocationToMapLocation_ReturnValue, FString CallFunc_MapLocationToGridCoordinateString_ReturnValue);// 0x1d69c50
	void ScreenLocationToMapLocation(Vector2D ScreenLocation, out Vector2D MapLocation, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void Setup(SQCoreStateMapComponent* MapComponent, const Vector2D CallFunc_GetNumGridLines_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y);// 0x1d69c50
	void PerformFollow(PanelWidget* PanLayer, Vector2D FocusPosition, bool RelativePosition, float CacheScale, UserWidget* RootLayer, bool Temp_bool_Variable, Vector2D CallFunc_ScreenToPanPosition_PanPosition, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D CallFunc_GetDesiredSize_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, Vector2D CallFunc_Multiply_Vector2DVector2D_ReturnValue, Vector2D K2Node_Select_Default, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, Vector2D CallFunc_ClampPanPosition_Result);// 0x1d69c50
	void PerformPan(Vector2D Vector, bool IsScreenDelta, float CacheScale, UserWidget* RootLayer, PanelWidget* PanLayer, bool Temp_bool_Variable, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D CallFunc_GetPosition_ReturnValue, Vector2D CallFunc_ScreenToPanVector_PanVector, Vector2D K2Node_Select_Default, Vector2D CallFunc_Add_Vector2DVector2D_ReturnValue, Vector2D CallFunc_ClampPanPosition_Result);// 0x1d69c50
	void PerformZoom(float TargetZoom, Vector2D ZoomPosition, UserWidget* RootLayer, PanelWidget* ZoomLayer, PanelWidget* PanLayer, SizeBox* Local SizeBox, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, SizeBox* K2Node_DynamicCast_AsSize_Box, bool K2Node_DynamicCast_bSuccess, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D CallFunc_GetPosition_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, Vector2D CallFunc_Add_Vector2DVector2D_ReturnValue, Vector2D CallFunc_ClampPanPosition_Result);// 0x1d69c50
	void GetElementRoot(out PanelWidget* Out Root);// 0x1d69c50
	void Clear Selections(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void UpdateFollow();// 0x1d69c50
	void UpdateZoom(float DeltaTime, float PrevZoomAmount, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);// 0x1d69c50
	void Unfollow();// 0x1d69c50
	void ScreenToPanPosition(Vector2D ScreenPosition, out Vector2D PanPosition, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue);// 0x1d69c50
	void Follow(bool Instant, Vector2D FocusPosition, bool RelativePosition, float ClampCacheScale);// 0x1d69c50
	void ClampPanPosition(Vector2D Position, float CacheScale, UserWidget* RootLayer, PanelWidget* PanLayer, out Vector2D Result, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, const Geometry CallFunc_GetCachedGeometry_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_LocalToAbsolute_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_LocalToAbsolute_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_FMax_ReturnValue, float CallFunc_FMax_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void ScreenToPanVector(Vector2D ScreenVector, PanelWidget* PanLayer, out Vector2D PanVector, PanelWidget* CallFunc_GetParent_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue);// 0x1d69c50
	void MovePan(Vector2D Delta, bool IsScreenDelta, float ClampCacheScale);// 0x1d69c50
	EventReply OnMouseMove(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply Result, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_MousePosition_C* CallFunc_Create_ReturnValue, Vector2D CallFunc_PointerEvent_GetCursorDelta_ReturnValue, float CallFunc_VSize2D_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Vector2D CallFunc_PointerEvent_GetLastScreenSpacePosition_ReturnValue, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply Result, EventReply CallFunc_Handled_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue);// 0x1d69c50
	void EndPan();// 0x1d69c50
	void StartPan();// 0x1d69c50
	void Remove Floating Widgets(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Create Actions Menu(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_GridMenu_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Show/Hide SL Menu(bool New Visible, Geometry Visible Geometry, PointerEvent Mouse Event, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply Result, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, Vector CallFunc_Mouse_Position_to_World_Location_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, bool CallFunc_Can_Place_Map_Menu_Valid, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, EventReply CallFunc_Handled_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, EventReply CallFunc_Handled_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_bCan_Place_Marker_Can_Place, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue);// 0x1d69c50
	void InitialiseMapTexture(delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Zoom(bool Instant, float Amount, bool IsUpdate, Vector2D ZoomTargetLocation, Vector2D CallFunc_FindZoomLocation_OutScreenLocation, float CallFunc_FClamp_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Allow Ping();// 0x1d69c50
	void ExecuteUbergraph_W_SQMapCore(int EntryPoint, const PointerEvent K2Node_Event_MouseEvent, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void OnUpdateZoom__DelegateSignature();// 0x1d69c50
	void Mouse Down__DelegateSignature(PointerEvent Mouse Event, Vector World Location);// 0x1d69c50

--------------------------------
Class: W_GridMenu_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button_GridMenuMain;//[Offset: 0x268, Size: 1]
	Border* CenterBorder;//[Offset: 0x270, Size: 1]
	Image* CenterIcon;//[Offset: 0x278, Size: 1]
	Image* Icon;//[Offset: 0x280, Size: 1]
	SizeBox* SizeBox_Main;//[Offset: 0x288, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x290, Size: 1]
	class W_GridHeader_C[] Grid Headers;//[Offset: 0x298, Size: 1]
	W_GridHeader_C*[] Current Headers;//[Offset: 0x2a8, Size: 1]
	Vector2D Origin Screen Position;//[Offset: 0x2b8, Size: 1]
	float Min X;//[Offset: 0x2c0, Size: 1]
	float Max X;//[Offset: 0x2c4, Size: 1]
	float Min Y;//[Offset: 0x2c8, Size: 1]
	float Max Y;//[Offset: 0x2cc, Size: 1]
	Vector SL Grid Zero Based World Location;//[Offset: 0x2d0, Size: 1]
	float Custom Padding;//[Offset: 0x2dc, Size: 1]
	class SQMapMarker* Center Marker;//[Offset: 0x2e0, Size: 1]
	bool Is Deleting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e8, Size: 1]
	Vector2D Origin Mouse Position;//[Offset: 0x2ec, Size: 1]
	Vector2D Origin Mouse Screen Position;//[Offset: 0x2f4, Size: 1]
	SQPlayerController* SQ PC;//[Offset: 0x300, Size: 1]
	BP_MapMarker_Selectable_C* SelectedMapMarker;//[Offset: 0x308, Size: 1]
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Place Map Marker(SQMapMarkerDataAsset* Map Marker Data, int FireTeamId, Vector CallFunc_Get_Traced_Map_Location_Zero, Vector CallFunc_Get_Traced_Map_Location_Local, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, byte CallFunc_Conv_IntToByte_ReturnValue, Vector_NetQuantize K2Node_MakeStruct_Vector_NetQuantize, byte CallFunc_GetValidValue_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Get Traced Map Location(out Vector Zero, out Vector Local, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, const Actor*[] Temp_object_Variable, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, HitResult[] CallFunc_LineTraceMulti_OutHits, bool CallFunc_LineTraceMulti_ReturnValue, int CallFunc_Array_Length_ReturnValue, HitResult CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, LandscapeProxy* K2Node_DynamicCast_AsLandscape_Proxy, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue);// 0x1d69c50
	void Place Marker(class SQMapMarker MarkerClass, out const int FireTeamId, Vector CallFunc_Get_Traced_Map_Location_Zero, Vector CallFunc_Get_Traced_Map_Location_Local, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Remove Self();// 0x1d69c50
	void Close All Actions(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, W_GridHeader_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, W_GridButton_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Close All Headers(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, W_GridHeader_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Add Self to Viewport(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void Remove Headers(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, UserWidget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Add Header(bool Double Child, byte Direction, out int Button ID, Vector2D Edge Alpha, byte L Dir, class W_GridHeader_C[] L Headers, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, int Temp_int_Variable, byte Temp_byte_Variable, int Temp_int_Variable, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_Greater_FloatFloat_ReturnValue, byte K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, byte K2Node_Select_Default, byte Temp_byte_Variable, bool K2Node_SwitchEnum_CmpSuccess, byte Temp_byte_Variable, class W_GridHeader_C CallFunc_Array_Get_Item, W_GridHeader_C* CallFunc_Create_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, byte Temp_byte_Variable, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, byte K2Node_Select_Default, byte Temp_byte_Variable, byte K2Node_Select_Default, byte K2Node_Select_Default, byte K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, byte K2Node_Select_Default, W_GridHeader_C* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, GridSlot* K2Node_DynamicCast_AsGrid_Slot, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Build Grid(out const Geometry In Geometry, PointerEvent In Mouse Event, Vector Zero Based World Location, Vector2D L Edge Alpha, byte L Dir, int Button ID, bool Not Centre, byte[] HeaderDirections, const byte Temp_byte_Variable, const byte Temp_byte_Variable, const byte Temp_byte_Variable, const byte Temp_byte_Variable, const byte Temp_byte_Variable, const byte Temp_byte_Variable, const byte Temp_byte_Variable, byte[] K2Node_MakeArray_Array, int Temp_int_Array_Index_Variable, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_bCanRemoveMapMarkerNew_Can_Remove, bool CallFunc_bCan_Remove_Marker_Can_Remove, bool CallFunc_BooleanOR_ReturnValue, const byte Temp_byte_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, byte CallFunc_Array_Get_Item, bool K2Node_SwitchEnum_CmpSuccess, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, int Temp_int_Loop_Counter_Variable, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void BndEvt__Button_Waypoint_K2Node_ComponentBoundEvent_25_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Grid Main Action();// 0x1d69c50
	void ExecuteUbergraph_W_GridMenu(int EntryPoint, int Temp_int_Array_Index_Variable, UserWidget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, SQMapMarkerVisualData CallFunc_GetMapMarkerData_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: Button.ContentWidget.PanelWidget.Widget.Visual.Object
	SlateWidgetStyleAsset* Style;//[Offset: 0x120, Size: 1]
	ButtonStyle WidgetStyle;//[Offset: 0x128, Size: 1]
	LinearColor ColorAndOpacity;//[Offset: 0x3a0, Size: 1]
	LinearColor BackgroundColor;//[Offset: 0x3b0, Size: 1]
	byte ClickMethod;//[Offset: 0x3c0, Size: 1]
	byte TouchMethod;//[Offset: 0x3c1, Size: 1]
	byte PressMethod;//[Offset: 0x3c2, Size: 1]
	bool IsFocusable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3c3, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	MulticastInlineDelegateProperty OnPressed;//[Size: 1]
	MulticastInlineDelegateProperty OnReleased;//[Size: 1]
	MulticastInlineDelegateProperty OnHovered;//[Size: 1]
	MulticastInlineDelegateProperty OnUnhovered;//[Size: 1]
	void SetTouchMethod(byte InTouchMethod);// 0x33e3810
	void SetStyle(out const ButtonStyle InStyle);// 0x33e3730
	void SetPressMethod(byte InPressMethod);// 0x33e3530
	void SetColorAndOpacity(LinearColor InColorAndOpacity);// 0x33e28c0
	void SetClickMethod(byte InClickMethod);// 0x33e27c0
	void SetBackgroundColor(LinearColor InBackgroundColor);// 0x33e2240
	bool IsPressed();// 0x33e1fb0

--------------------------------
Class: ButtonStyle.SlateWidgetStyle
	SlateBrush Normal;//[Offset: 0x8, Size: 1]
	SlateBrush Hovered;//[Offset: 0x90, Size: 1]
	SlateBrush Pressed;//[Offset: 0x118, Size: 1]
	SlateBrush Disabled;//[Offset: 0x1a0, Size: 1]
	Margin NormalPadding;//[Offset: 0x228, Size: 1]
	Margin PressedPadding;//[Offset: 0x238, Size: 1]
	SlateSound PressedSlateSound;//[Offset: 0x248, Size: 1]
	SlateSound HoveredSlateSound;//[Offset: 0x260, Size: 1]

--------------------------------
Class: SlateSound
	Object* ResourceObject;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SizeBox.ContentWidget.PanelWidget.Widget.Visual.Object
	float WidthOverride;//[Offset: 0x130, Size: 1]
	float HeightOverride;//[Offset: 0x134, Size: 1]
	float MinDesiredWidth;//[Offset: 0x138, Size: 1]
	float MinDesiredHeight;//[Offset: 0x13c, Size: 1]
	float MaxDesiredWidth;//[Offset: 0x140, Size: 1]
	float MaxDesiredHeight;//[Offset: 0x144, Size: 1]
	float MinAspectRatio;//[Offset: 0x148, Size: 1]
	float MaxAspectRatio;//[Offset: 0x14c, Size: 1]
	bool bOverride_WidthOverride;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x150, Size: 1]
	bool bOverride_HeightOverride;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x150, Size: 1]
	bool bOverride_MinDesiredWidth;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x150, Size: 1]
	bool bOverride_MinDesiredHeight;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x150, Size: 1]
	bool bOverride_MaxDesiredWidth;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x150, Size: 1]
	bool bOverride_MaxDesiredHeight;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x150, Size: 1]
	bool bOverride_MinAspectRatio;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x150, Size: 1]
	bool bOverride_MaxAspectRatio;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x150, Size: 1]
	void SetWidthOverride(float InWidthOverride);// 0x33f5310
	void SetMinDesiredWidth(float InMinDesiredWidth);// 0x33f4670
	void SetMinDesiredHeight(float InMinDesiredHeight);// 0x33f4570
	void SetMinAspectRatio(float InMinAspectRatio);// 0x33f44f0
	void SetMaxDesiredWidth(float InMaxDesiredWidth);// 0x33f4470
	void SetMaxDesiredHeight(float InMaxDesiredHeight);// 0x33f43f0
	void SetMaxAspectRatio(float InMaxAspectRatio);// 0x33f4370
	void SetHeightOverride(float InHeightOverride);// 0x33f4160
	void ClearWidthOverride();// 0x33f29c0
	void ClearMinDesiredWidth();// 0x33f29a0
	void ClearMinDesiredHeight();// 0x33f2980
	void ClearMinAspectRatio();// 0x33f2960
	void ClearMaxDesiredWidth();// 0x33f2940
	void ClearMaxDesiredHeight();// 0x33f2920
	void ClearMaxAspectRatio();// 0x33f2900
	void ClearHeightOverride();// 0x33f28e0

--------------------------------
Class: WidgetSwitcher.PanelWidget.Widget.Visual.Object
	int ActiveWidgetIndex;//[Offset: 0x120, Size: 1]
	void SetActiveWidgetIndex(int Index);// 0x340dfa0
	void SetActiveWidget(Widget* Widget);// 0x33eab90
	Widget* GetWidgetAtIndex(int Index);// 0x340d580
	int GetNumWidgets();// 0x340d2d0
	int GetActiveWidgetIndex();// 0x340d000
	Widget* GetActiveWidget();// 0x340cfd0

--------------------------------
Class: W_GridHeader_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	GridPanel* GridPanel_Main;//[Offset: 0x268, Size: 1]
	byte Draw Direction;//[Offset: 0x270, Size: 1]
	byte Build Direction;//[Offset: 0x271, Size: 1]
	class W_GridButton_C[] Buttons;//[Offset: 0x278, Size: 1]
	Texture2D* Header Icon;//[Offset: 0x288, Size: 1]
	LinearColor Icon Color;//[Offset: 0x290, Size: 1]
	W_GridButton_C*[] My Buttons;//[Offset: 0x2a0, Size: 1]
	bool Buttons Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	Vector2D Screen Position;//[Offset: 0x2b4, Size: 1]
	W_GridMenu_C* Grid Menu;//[Offset: 0x2c0, Size: 1]
	void Get Squad ID(out int ID);// 0x1d69c50
	void Get Fireteam ID(out int ID);// 0x1d69c50
	void Set Buttons Visibility(bool Visible, enum Temp_byte_Variable, enum Temp_byte_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, W_GridButton_C* CallFunc_Array_Get_Item, enum K2Node_Select_Default, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Set Viewport Position(byte Temp_byte_Variable, byte Temp_byte_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D K2Node_Select_Default, Vector2D CallFunc_Add_Vector2DVector2D_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Construct Buttons();// 0x1d69c50
	void ExecuteUbergraph_W_GridHeader(int EntryPoint, int CallFunc_Get_Squad_ID_ID, int Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class W_GridButton_C CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int CallFunc_Array_Length_ReturnValue, W_GridButton_C* CallFunc_Create_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, GridSlot* CallFunc_AddChildToGrid_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Get_Fireteam_ID_ID);// 0x1d69c50

--------------------------------
Class: W_GridButton_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button_Main;//[Offset: 0x268, Size: 1]
	Image* Icon;//[Offset: 0x270, Size: 1]
	WidgetSwitcher* Switch_IconText;//[Offset: 0x278, Size: 1]
	TextBlock* TB_ID;//[Offset: 0x280, Size: 1]
	byte Parent Draw Direction;//[Offset: 0x288, Size: 1]
	byte Build Direction;//[Offset: 0x289, Size: 1]
	Texture2D* Button Icon;//[Offset: 0x290, Size: 1]
	LinearColor Icon Color;//[Offset: 0x298, Size: 1]
	W_GridHeader_C* Header Parent;//[Offset: 0x2a8, Size: 1]
	bool Parent Button;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	bool Actions Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b1, Size: 1]
	class SQMapMarker* Default Map Marker;//[Offset: 0x2b8, Size: 1]
	class W_Grid_ActionList_C* Action List Class;//[Offset: 0x2c0, Size: 1]
	FText Tooltip;//[Offset: 0x2c8, Size: 1]
	class GridData_BaseOption_C[] Action List;//[Offset: 0x2e0, Size: 1]
	W_Grid_ActionList_C* REF Action List;//[Offset: 0x2f0, Size: 1]
	int Fireteam ID;//[Offset: 0x2f8, Size: 1]
	int Squad ID;//[Offset: 0x2fc, Size: 1]
	SQMapMarkerDataAsset* MapMarkerData;//[Offset: 0x300, Size: 1]
	void Get Text(out FText Text);// 0x1d69c50
	void Get Squad ID(out int ID);// 0x1d69c50
	void Get Color(out LinearColor Icon Color);// 0x1d69c50
	void Draw List(int CallFunc_Get_Squad_ID_ID, int CallFunc_Get_Fireteam_ID_ID, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_Grid_ActionList_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Get Fireteam ID(out int ID);// 0x1d69c50
	Widget* Get_Button_Main_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue);// 0x1d69c50
	void Close Actions(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Show Actions();// 0x1d69c50
	void Update Appearance(FText CallFunc_Get_Text_Text, LinearColor CallFunc_Get_Color_Icon_Color, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__Button_Main_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Main_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Grid Button Pressed();// 0x1d69c50
	void ExecuteUbergraph_W_GridButton(int EntryPoint, int CallFunc_Get_Fireteam_ID_ID, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_Event_IsDesignTime, int CallFunc_Get_Fireteam_ID_ID, bool CallFunc_MapMarkersEnabledDefined_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_Grid_ActionList_C.W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x278, Size: 1]
	Border* HoverCheckArea;//[Offset: 0x280, Size: 1]
	VerticalBox* VerticalBox;//[Offset: 0x288, Size: 1]
	class GridData_BaseOption_C[] Actions;//[Offset: 0x290, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	MulticastInlineDelegateProperty Closed;//[Size: 1]
	W_GridHeader_C* Header;//[Offset: 0x2b8, Size: 1]
	int Fireteam ID;//[Offset: 0x2c0, Size: 1]
	int Squad ID;//[Offset: 0x2c4, Size: 1]
	void Get Squad ID(out int ID);// 0x1d69c50
	void Get Fireteam ID(out int ID);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Close();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Populate List();// 0x1d69c50
	void ExecuteUbergraph_W_Grid_ActionList(int EntryPoint, int CallFunc_Get_Squad_ID_ID, byte Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, int Temp_int_Array_Index_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsHovered_ReturnValue, bool K2Node_Event_IsDesignTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, float K2Node_Select_Default, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, class GridData_BaseOption_C CallFunc_Array_Get_Item, float CallFunc_Multiply_FloatFloat_ReturnValue, W_Grid_Action_C* CallFunc_Create_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, float K2Node_Select_Default, int CallFunc_Array_Length_ReturnValue, float K2Node_Select_Default, bool CallFunc_Less_IntInt_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Add_Vector2DVector2D_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, int CallFunc_Get_Fireteam_ID_ID);// 0x1d69c50
	void Closed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	bool Can Block Grid Menu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	SQWorldSettings* SQ World Settings;//[Offset: 0x270, Size: 1]
	void Validate Action(PointerEvent Mouse Event, out bool Valid, bool CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue, bool CallFunc_IsVisible_ReturnValue);// 0x1d69c50
	void On Map Mouse Down(PointerEvent Mouse Event, Vector World Location);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Remove floating widget();// 0x1d69c50
	void ExecuteUbergraph_W_FloatingWidget(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, PointerEvent K2Node_CustomEvent_Mouse_Event, Vector K2Node_CustomEvent_World_Location, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: GridData_BaseOption_C.Object
	FText Display Name;//[Offset: 0x28, Size: 1]
	Texture2D* Texture;//[Offset: 0x40, Size: 1]
	LinearColor Tint;//[Offset: 0x48, Size: 1]
	class W_Grid_Action_C* Action Widget Class;//[Offset: 0x58, Size: 1]

--------------------------------
Class: W_Grid_Action_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button_Action;//[Offset: 0x268, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x270, Size: 1]
	Image* MainImage;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Name;//[Offset: 0x280, Size: 1]
	class GridData_BaseOption_C* OptionData;//[Offset: 0x288, Size: 1]
	W_Grid_ActionList_C* Option Parent;//[Offset: 0x290, Size: 1]
	int Fireteam ID;//[Offset: 0x298, Size: 1]
	int Squad ID;//[Offset: 0x29c, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a0, Size: 1]
	Widget* Get Tooltip();// 0x1d69c50
	void Get Color(out LinearColor Tint);// 0x1d69c50
	void Get Fireteam ID(out int Fireteam ID);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_15_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Action Button Pressed();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_Grid_Action(int EntryPoint, bool K2Node_Event_IsDesignTime, FText CallFunc_TextToUpper_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, GridData_BaseOption_C* K2Node_DynamicCast_AsGrid_Data_Base_Option, bool K2Node_DynamicCast_bSuccess, LinearColor CallFunc_Get_Color_Tint, PlayerController* CallFunc_GetPlayerController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: UMG_Tooltip_C.SQToolTipBaseWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	WidgetAnimation* OpenAnim;//[Offset: 0x278, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x280, Size: 1]
	FText Inherit Text;//[Offset: 0x288, Size: 1]
	LinearColor Color;//[Offset: 0x2a0, Size: 1]
	FText GetText();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_Tooltip(int EntryPoint, SlateColor K2Node_MakeStruct_SlateColor, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: LandscapeProxy.Actor.Object
	LandscapeSplinesComponent* SplineComponent;//[Offset: 0x228, Size: 1]
	Guid LandscapeGuid;//[Offset: 0x230, Size: 1]
	IntPoint LandscapeSectionOffset;//[Offset: 0x240, Size: 1]
	int MaxLODLevel;//[Offset: 0x248, Size: 1]
	float LODDistanceFactor;//[Offset: 0x24c, Size: 1]
	byte LODFalloff;//[Offset: 0x250, Size: 1]
	float ComponentScreenSizeToUseSubSections;//[Offset: 0x254, Size: 1]
	float LOD0ScreenSize;//[Offset: 0x258, Size: 1]
	float LOD0DistributionSetting;//[Offset: 0x25c, Size: 1]
	float LODDistributionSetting;//[Offset: 0x260, Size: 1]
	float TessellationComponentScreenSize;//[Offset: 0x264, Size: 1]
	bool UseTessellationComponentScreenSizeFalloff;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	float TessellationComponentScreenSizeFalloff;//[Offset: 0x26c, Size: 1]
	int OccluderGeometryLOD;//[Offset: 0x270, Size: 1]
	int StaticLightingLOD;//[Offset: 0x274, Size: 1]
	PhysicalMaterial* DefaultPhysMaterial;//[Offset: 0x278, Size: 1]
	float StreamingDistanceMultiplier;//[Offset: 0x280, Size: 1]
	MaterialInterface* LandscapeMaterial;//[Offset: 0x288, Size: 1]
	MaterialInterface* LandscapeHoleMaterial;//[Offset: 0x2b0, Size: 1]
	LandscapeProxyMaterialOverride[] LandscapeMaterialsOverride;//[Offset: 0x2b8, Size: 1]
	bool bMeshHoles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	byte MeshHolesMaxLod;//[Offset: 0x2c9, Size: 1]
	RuntimeVirtualTexture*[] RuntimeVirtualTextures;//[Offset: 0x2d0, Size: 1]
	int VirtualTextureNumLods;//[Offset: 0x2e0, Size: 1]
	int VirtualTextureLodBias;//[Offset: 0x2e4, Size: 1]
	enum VirtualTextureRenderPassType;//[Offset: 0x2e8, Size: 1]
	float NegativeZBoundsExtension;//[Offset: 0x2ec, Size: 1]
	float PositiveZBoundsExtension;//[Offset: 0x2f0, Size: 1]
	LandscapeComponent*[] LandscapeComponents;//[Offset: 0x2f8, Size: 1]
	LandscapeHeightfieldCollisionComponent*[] CollisionComponents;//[Offset: 0x308, Size: 1]
	HierarchicalInstancedStaticMeshComponent*[] FoliageComponents;//[Offset: 0x318, Size: 1]
	bool bHasLandscapeGrass;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x38c, Size: 1]
	float StaticLightingResolution;//[Offset: 0x390, Size: 1]
	bool CastShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x394, Size: 1]
	bool bCastDynamicShadow;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x394, Size: 1]
	bool bCastStaticShadow;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x394, Size: 1]
	bool bCastFarShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x398, Size: 1]
	bool bCastHiddenShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x39c, Size: 1]
	bool bCastShadowAsTwoSided;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x3a0, Size: 1]
	bool bAffectDistanceFieldLighting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x3a4, Size: 1]
	LightingChannels LightingChannels;//[Offset: 0x3a5, Size: 1]
	bool bUseMaterialPositionOffsetInStaticLighting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x3a8, Size: 1]
	bool bRenderCustomDepth;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x3a8, Size: 1]
	enum CustomDepthStencilWriteMask;//[Offset: 0x3ac, Size: 1]
	int CustomDepthStencilValue;//[Offset: 0x3b0, Size: 1]
	float LDMaxDrawDistance;//[Offset: 0x3b4, Size: 1]
	LightmassPrimitiveSettings LightmassSettings;//[Offset: 0x3b8, Size: 1]
	int CollisionMipLevel;//[Offset: 0x3d0, Size: 1]
	int SimpleCollisionMipLevel;//[Offset: 0x3d4, Size: 1]
	float CollisionThickness;//[Offset: 0x3d8, Size: 1]
	BodyInstance BodyInstance;//[Offset: 0x3e0, Size: 1]
	bool bGenerateOverlapEvents;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x538, Size: 1]
	bool bBakeMaterialPositionOffsetIntoCollision;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x538, Size: 1]
	int ComponentSizeQuads;//[Offset: 0x53c, Size: 1]
	int SubsectionSizeQuads;//[Offset: 0x540, Size: 1]
	int NumSubsections;//[Offset: 0x544, Size: 1]
	bool bUsedForNavigation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x548, Size: 1]
	bool bFillCollisionUnderLandscapeForNavmesh;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x548, Size: 1]
	bool bUseDynamicMaterialInstance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x54c, Size: 1]
	enum NavigationGeometryGatheringMode;//[Offset: 0x54d, Size: 1]
	bool bUseLandscapeForCullingInvisibleHLODVertices;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x54e, Size: 1]
	bool bHasLayersContent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x54f, Size: 1]
	<Texture2D*,LandscapeWeightmapUsage*> WeightmapUsageMap;//[Offset: 0x550, Size: 1]
	void SetLandscapeMaterialVectorParameterValue(FName ParameterName, LinearColor Value);// 0x30b34d0
	void SetLandscapeMaterialTextureParameterValue(FName ParameterName, Texture* Value);// 0x30b3400
	void SetLandscapeMaterialScalarParameterValue(FName ParameterName, float Value);// 0x30b3330
	bool LandscapeExportHeightmapToRenderTarget(TextureRenderTarget2D* InRenderTarget, bool InExportHeightIntoRGChannel, bool InExportLandscapeProxies);// 0x30b3210
	void EditorSetLandscapeMaterial(MaterialInterface* NewLandscapeMaterial);// 0x30b3180
	void EditorApplySpline(SplineComponent* InSplineComponent, float StartWidth, float EndWidth, float StartSideFalloff, float EndSideFalloff, float StartRoll, float EndRoll, int NumSubdivisions, bool bRaiseHeights, bool bLowerHeights, LandscapeLayerInfoObject* PaintLayer, FName EditLayerName);// 0x30b2df0
	void ChangeUseTessellationComponentScreenSizeFalloff(bool InComponentScreenSizeToUseSubSections);// 0x30b2d60
	void ChangeTessellationComponentScreenSizeFalloff(float InUseTessellationComponentScreenSizeFalloff);// 0x30b2cd0
	void ChangeTessellationComponentScreenSize(float InTessellationComponentScreenSize);// 0x30b2c40
	void ChangeLODDistanceFactor(float InLODDistanceFactor);// 0x30b2bb0
	void ChangeComponentScreenSizeToUseSubSections(float InComponentScreenSizeToUseSubSections);// 0x30b2b20

--------------------------------
Class: LandscapeSplinesComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	LandscapeSplineControlPoint*[] ControlPoints;//[Offset: 0x450, Size: 1]
	LandscapeSplineSegment*[] Segments;//[Offset: 0x460, Size: 1]
	MeshComponent*[] CookedForeignMeshComponents;//[Offset: 0x470, Size: 1]
	SplineMeshComponent*[] GetSplineMeshComponents();// 0x30b50b0

--------------------------------
Class: LandscapeSplineControlPoint.Object
	Vector Location;//[Offset: 0x28, Size: 1]
	Rotator Rotation;//[Offset: 0x34, Size: 1]
	float Width;//[Offset: 0x40, Size: 1]
	float LayerWidthRatio;//[Offset: 0x44, Size: 1]
	float SideFalloff;//[Offset: 0x48, Size: 1]
	float LeftSideFalloffFactor;//[Offset: 0x4c, Size: 1]
	float RightSideFalloffFactor;//[Offset: 0x50, Size: 1]
	float LeftSideLayerFalloffFactor;//[Offset: 0x54, Size: 1]
	float RightSideLayerFalloffFactor;//[Offset: 0x58, Size: 1]
	float EndFalloff;//[Offset: 0x5c, Size: 1]
	LandscapeSplineConnection[] ConnectedSegments;//[Offset: 0x60, Size: 1]
	LandscapeSplineInterpPoint[] Points;//[Offset: 0x70, Size: 1]
	Box Bounds;//[Offset: 0x80, Size: 1]
	ControlPointMeshComponent* LocalMeshComponent;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: LandscapeSplineConnection
	LandscapeSplineSegment* Segment;//[Offset: 0x0, Size: 1]
	bool End;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]

--------------------------------
Class: LandscapeSplineSegment.Object
	LandscapeSplineSegmentConnection Connections;//[Offset: 0x28, Size: 2]
	InterpCurveVector SplineInfo;//[Offset: 0x58, Size: 1]
	LandscapeSplineInterpPoint[] Points;//[Offset: 0x70, Size: 1]
	Box Bounds;//[Offset: 0x80, Size: 1]
	SplineMeshComponent*[] LocalMeshComponents;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: LandscapeSplineSegmentConnection
	LandscapeSplineControlPoint* ControlPoint;//[Offset: 0x0, Size: 1]
	float TangentLen;//[Offset: 0x8, Size: 1]
	FName SocketName;//[Offset: 0xc, Size: 1]

--------------------------------
Class: LandscapeSplineInterpPoint
	Vector Center;//[Offset: 0x0, Size: 1]
	Vector Left;//[Offset: 0xc, Size: 1]
	Vector Right;//[Offset: 0x18, Size: 1]
	Vector FalloffLeft;//[Offset: 0x24, Size: 1]
	Vector FalloffRight;//[Offset: 0x30, Size: 1]
	Vector LayerLeft;//[Offset: 0x3c, Size: 1]
	Vector LayerRight;//[Offset: 0x48, Size: 1]
	Vector LayerFalloffLeft;//[Offset: 0x54, Size: 1]
	Vector LayerFalloffRight;//[Offset: 0x60, Size: 1]
	float StartEndFalloff;//[Offset: 0x6c, Size: 1]

--------------------------------
Class: SplineMeshComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	SplineMeshParams SplineParams;//[Offset: 0x4e8, Size: 1]
	Vector SplineUpDir;//[Offset: 0x540, Size: 1]
	float SplineBoundaryMin;//[Offset: 0x54c, Size: 1]
	Guid CachedMeshBodySetupGuid;//[Offset: 0x550, Size: 1]
	BodySetup* BodySetup;//[Offset: 0x560, Size: 1]
	float SplineBoundaryMax;//[Offset: 0x568, Size: 1]
	bool bAllowSplineEditingPerInstance;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x56c, Size: 1]
	bool bSmoothInterpRollScale;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x56c, Size: 1]
	bool bMeshDirty;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x56c, Size: 1]
	byte ForwardAxis;//[Offset: 0x56d, Size: 1]
	float VirtualTextureMainPassMaxDrawDistance;//[Offset: 0x570, Size: 1]
	void UpdateMesh();// 0x4016760
	void SetStartTangent(Vector StartTangent, bool bUpdateMesh);// 0x40165d0
	void SetStartScale(Vector2D StartScale, bool bUpdateMesh);// 0x4016500
	void SetStartRoll(float StartRoll, bool bUpdateMesh);// 0x4016420
	void SetStartPosition(Vector StartPos, bool bUpdateMesh);// 0x4016340
	void SetStartOffset(Vector2D StartOffset, bool bUpdateMesh);// 0x4016270
	void SetStartAndEnd(Vector StartPos, Vector StartTangent, Vector EndPos, Vector EndTangent, bool bUpdateMesh);// 0x4016090
	void SetSplineUpDir(out const Vector InSplineUpDir, bool bUpdateMesh);// 0x4015fb0
	void SetForwardAxis(byte InForwardAxis, bool bUpdateMesh);// 0x4015ce0
	void SetEndTangent(Vector EndTangent, bool bUpdateMesh);// 0x4015c00
	void SetEndScale(Vector2D EndScale, bool bUpdateMesh);// 0x4015b30
	void SetEndRoll(float EndRoll, bool bUpdateMesh);// 0x4015a50
	void SetEndPosition(Vector EndPos, bool bUpdateMesh);// 0x4015970
	void SetEndOffset(Vector2D EndOffset, bool bUpdateMesh);// 0x40158a0
	void SetBoundaryMin(float InBoundaryMin, bool bUpdateMesh);// 0x40157c0
	void SetBoundaryMax(float InBoundaryMax, bool bUpdateMesh);// 0x40156e0
	Vector GetStartTangent();// 0x4015530
	Vector2D GetStartScale();// 0x40154f0
	float GetStartRoll();// 0x40154c0
	Vector GetStartPosition();// 0x4015480
	Vector2D GetStartOffset();// 0x4015440
	Vector GetSplineUpDir();// 0x4015400
	byte GetForwardAxis();// 0x4015010
	Vector GetEndTangent();// 0x4014fd0
	Vector2D GetEndScale();// 0x4014f90
	float GetEndRoll();// 0x4014f60
	Vector GetEndPosition();// 0x4014f20
	Vector2D GetEndOffset();// 0x4014ee0
	float GetBoundaryMin();// 0x4014e10
	float GetBoundaryMax();// 0x4014de0

--------------------------------
Class: SplineMeshParams
	Vector StartPos;//[Offset: 0x0, Size: 1]
	Vector StartTangent;//[Offset: 0xc, Size: 1]
	Vector2D StartScale;//[Offset: 0x18, Size: 1]
	float StartRoll;//[Offset: 0x20, Size: 1]
	Vector2D StartOffset;//[Offset: 0x24, Size: 1]
	Vector EndPos;//[Offset: 0x2c, Size: 1]
	Vector2D EndScale;//[Offset: 0x38, Size: 1]
	Vector EndTangent;//[Offset: 0x40, Size: 1]
	float EndRoll;//[Offset: 0x4c, Size: 1]
	Vector2D EndOffset;//[Offset: 0x50, Size: 1]

--------------------------------
Class: ControlPointMeshComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	float VirtualTextureMainPassMaxDrawDistance;//[Offset: 0x4e0, Size: 1]

--------------------------------
Class: TextureRenderTarget2D.TextureRenderTarget.Texture.StreamableRenderAsset.Object
	int SizeX;//[Offset: 0x180, Size: 1]
	int SizeY;//[Offset: 0x184, Size: 1]
	LinearColor ClearColor;//[Offset: 0x188, Size: 1]
	byte AddressX;//[Offset: 0x198, Size: 1]
	byte AddressY;//[Offset: 0x199, Size: 1]
	bool bForceLinearGamma;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x19a, Size: 1]
	bool bHDR;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x19a, Size: 1]
	bool bGPUSharedFlag;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x19a, Size: 1]
	byte RenderTargetFormat;//[Offset: 0x19b, Size: 1]
	bool bAutoGenerateMips;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x19c, Size: 1]
	byte MipsSamplerFilter;//[Offset: 0x19d, Size: 1]
	byte MipsAddressU;//[Offset: 0x19e, Size: 1]
	byte MipsAddressV;//[Offset: 0x19f, Size: 1]
	byte OverrideFormat;//[Offset: 0x1a0, Size: 1]

--------------------------------
Class: TextureRenderTarget.Texture.StreamableRenderAsset.Object
	float TargetGamma;//[Offset: 0x178, Size: 1]

--------------------------------
Class: LandscapeLayerInfoObject.Object
	FName LayerName;//[Offset: 0x28, Size: 1]
	PhysicalMaterial* PhysMaterial;//[Offset: 0x30, Size: 1]
	float Hardness;//[Offset: 0x38, Size: 1]
	LinearColor LayerUsageDebugColor;//[Offset: 0x3c, Size: 1]

--------------------------------
Class: LandscapeProxyMaterialOverride
	PerPlatformInt LODIndex;//[Offset: 0x0, Size: 1]
	MaterialInterface* Material;//[Offset: 0x8, Size: 1]

--------------------------------
Class: LandscapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	int SectionBaseX;//[Offset: 0x450, Size: 1]
	int SectionBaseY;//[Offset: 0x454, Size: 1]
	int ComponentSizeQuads;//[Offset: 0x458, Size: 1]
	int SubsectionSizeQuads;//[Offset: 0x45c, Size: 1]
	int NumSubsections;//[Offset: 0x460, Size: 1]
	MaterialInterface* OverrideMaterial;//[Offset: 0x468, Size: 1]
	MaterialInterface* OverrideHoleMaterial;//[Offset: 0x470, Size: 1]
	LandscapeComponentMaterialOverride[] OverrideMaterials;//[Offset: 0x478, Size: 1]
	MaterialInstanceConstant*[] MaterialInstances;//[Offset: 0x488, Size: 1]
	MaterialInstanceDynamic*[] MaterialInstancesDynamic;//[Offset: 0x498, Size: 1]
	int8[] LODIndexToMaterialIndex;//[Offset: 0x4a8, Size: 1]
	int8[] MaterialIndexToDisabledTessellationMaterial;//[Offset: 0x4b8, Size: 1]
	Texture2D* XYOffsetmapTexture;//[Offset: 0x4c8, Size: 1]
	Vector4 WeightmapScaleBias;//[Offset: 0x4d0, Size: 1]
	float WeightmapSubsectionOffset;//[Offset: 0x4e0, Size: 1]
	Vector4 HeightmapScaleBias;//[Offset: 0x4f0, Size: 1]
	Box CachedLocalBox;//[Offset: 0x500, Size: 1]
	LandscapeHeightfieldCollisionComponent* CollisionComponent;//[Offset: 0x51c, Size: 1]
	Texture2D* HeightmapTexture;//[Offset: 0x538, Size: 1]
	WeightmapLayerAllocationInfo[] WeightmapLayerAllocations;//[Offset: 0x540, Size: 1]
	Texture2D*[] WeightmapTextures;//[Offset: 0x550, Size: 1]
	LandscapeLODStreamingProxy* LODStreamingProxy;//[Offset: 0x560, Size: 1]
	Guid MapBuildDataId;//[Offset: 0x568, Size: 1]
	Guid[] IrrelevantLights;//[Offset: 0x578, Size: 1]
	int CollisionMipLevel;//[Offset: 0x588, Size: 1]
	int SimpleCollisionMipLevel;//[Offset: 0x58c, Size: 1]
	float NegativeZBoundsExtension;//[Offset: 0x590, Size: 1]
	float PositiveZBoundsExtension;//[Offset: 0x594, Size: 1]
	float StaticLightingResolution;//[Offset: 0x598, Size: 1]
	int ForcedLOD;//[Offset: 0x59c, Size: 1]
	int LODBias;//[Offset: 0x5a0, Size: 1]
	Guid StateId;//[Offset: 0x5a4, Size: 1]
	Guid BakedTextureMaterialGuid;//[Offset: 0x5b4, Size: 1]
	Texture2D* GIBakedBaseColorTexture;//[Offset: 0x5c8, Size: 1]
	byte MobileBlendableLayerMask;//[Offset: 0x5d0, Size: 1]
	MaterialInterface* MobileMaterialInterface;//[Offset: 0x5d8, Size: 1]
	MaterialInterface*[] MobileMaterialInterfaces;//[Offset: 0x5e0, Size: 1]
	Texture2D*[] MobileWeightmapTextures;//[Offset: 0x5f0, Size: 1]
	MaterialInstanceDynamic* GetMaterialInstanceDynamic(int InIndex);// 0x30b1200
	float EditorGetPaintLayerWeightByNameAtLocation(out const Vector InLocation, const FName InPaintLayerName);// 0x30b1120
	float EditorGetPaintLayerWeightAtLocation(out const Vector InLocation, LandscapeLayerInfoObject* PaintLayer);// 0x30b1040

--------------------------------
Class: LandscapeComponentMaterialOverride
	PerPlatformInt LODIndex;//[Offset: 0x0, Size: 1]
	MaterialInterface* Material;//[Offset: 0x8, Size: 1]

--------------------------------
Class: MaterialInstanceConstant.MaterialInstance.MaterialInterface.Object
	PhysicalMaterialMask* PhysMaterialMask;//[Offset: 0x310, Size: 1]
	LinearColor K2_GetVectorParameterValue(FName ParameterName);// 0x3fa7030
	Texture* K2_GetTextureParameterValue(FName ParameterName);// 0x3fa6ee0
	float K2_GetScalarParameterValue(FName ParameterName);// 0x3fa6cf0

--------------------------------
Class: LandscapeHeightfieldCollisionComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	LandscapeLayerInfoObject*[] ComponentLayerInfos;//[Offset: 0x450, Size: 1]
	int SectionBaseX;//[Offset: 0x460, Size: 1]
	int SectionBaseY;//[Offset: 0x464, Size: 1]
	int CollisionSizeQuads;//[Offset: 0x468, Size: 1]
	float CollisionScale;//[Offset: 0x46c, Size: 1]
	int SimpleCollisionSizeQuads;//[Offset: 0x470, Size: 1]
	byte[] CollisionQuadFlags;//[Offset: 0x478, Size: 1]
	Guid HeightfieldGuid;//[Offset: 0x488, Size: 1]
	Box CachedLocalBox;//[Offset: 0x498, Size: 1]
	LandscapeComponent* RenderComponent;//[Offset: 0x4b4, Size: 1]
	PhysicalMaterial*[] CookedPhysicalMaterials;//[Offset: 0x4e0, Size: 1]
	LandscapeComponent* GetRenderComponent();// 0x30b12a0

--------------------------------
Class: WeightmapLayerAllocationInfo
	LandscapeLayerInfoObject* LayerInfo;//[Offset: 0x0, Size: 1]
	byte WeightmapTextureIndex;//[Offset: 0x8, Size: 1]
	byte WeightmapTextureChannel;//[Offset: 0x9, Size: 1]

--------------------------------
Class: LandscapeLODStreamingProxy.StreamableRenderAsset.Object

--------------------------------
Class: HierarchicalInstancedStaticMeshComponent.InstancedStaticMeshComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	int[] SortedInstances;//[Offset: 0x598, Size: 1]
	int NumBuiltInstances;//[Offset: 0x5a8, Size: 1]
	Box BuiltInstanceBounds;//[Offset: 0x5b0, Size: 1]
	Box UnbuiltInstanceBounds;//[Offset: 0x5cc, Size: 1]
	Box[] UnbuiltInstanceBoundsList;//[Offset: 0x5e8, Size: 1]
	bool bEnableDensityScaling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x5f8, Size: 1]
	int OcclusionLayerNumNodes;//[Offset: 0x600, Size: 1]
	BoxSphereBounds CacheMeshExtendedBounds;//[Offset: 0x604, Size: 1]
	bool bDisableCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x620, Size: 1]
	int InstanceCountToRender;//[Offset: 0x624, Size: 1]
	bool RemoveInstances(out const int[] InstancesToRemove);// 0x3f20ad0

--------------------------------
Class: InstancedStaticMeshComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	InstancedStaticMeshInstanceData[] PerInstanceSMData;//[Offset: 0x4e0, Size: 1]
	int NumCustomDataFloats;//[Offset: 0x4f0, Size: 1]
	float[] PerInstanceSMCustomData;//[Offset: 0x4f8, Size: 1]
	int InstancingRandomSeed;//[Offset: 0x508, Size: 1]
	int InstanceStartCullDistance;//[Offset: 0x50c, Size: 1]
	int InstanceEndCullDistance;//[Offset: 0x510, Size: 1]
	int[] InstanceReorderTable;//[Offset: 0x518, Size: 1]
	int NumPendingLightmaps;//[Offset: 0x570, Size: 1]
	InstancedStaticMeshMappingInfo[] CachedMappings;//[Offset: 0x578, Size: 1]
	bool UpdateInstanceTransform(int InstanceIndex, out const Transform NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);// 0x3f26700
	bool SetCustomDataValue(int InstanceIndex, int CustomDataIndex, float CustomDataValue, bool bMarkRenderStateDirty);// 0x3f265a0
	void SetCullDistances(int StartCullDistance, int EndCullDistance);// 0x3f264d0
	bool RemoveInstance(int InstanceIndex);// 0x3f26410
	bool GetInstanceTransform(int InstanceIndex, out Transform OutInstanceTransform, bool bWorldSpace);// 0x3f25a80
	int[] GetInstancesOverlappingSphere(out const Vector Center, float Radius, bool bSphereInWorldSpace);// 0x3f25cf0
	int[] GetInstancesOverlappingBox(out const Box Box, bool bBoxInWorldSpace);// 0x3f25be0
	int GetInstanceCount();// 0x3f25a50
	void ClearInstances();// 0x3f251e0
	bool BatchUpdateInstancesTransforms(int StartInstanceIndex, out const Transform[] NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);// 0x3f24fd0
	bool BatchUpdateInstancesTransform(int StartInstanceIndex, int NumInstances, out const Transform NewInstancesTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport);// 0x3f24d80
	int AddInstanceWorldSpace(out const Transform WorldTransform);// 0x3f24b80
	int[] AddInstances(out const Transform[] InstanceTransforms, bool bShouldReturnIndices);// 0x3f24c60
	int AddInstance(out const Transform InstanceTransform);// 0x3f24aa0

--------------------------------
Class: InstancedStaticMeshInstanceData
	Matrix Transform;//[Offset: 0x0, Size: 1]

--------------------------------
Class: InstancedStaticMeshMappingInfo

--------------------------------
Class: LandscapeWeightmapUsage.Object
	LandscapeComponent* ChannelUsage;//[Offset: 0x28, Size: 4]
	Guid LayerGuid;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SizeBoxSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x38, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x58, Size: 1]
	byte VerticalAlignment;//[Offset: 0x59, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33f5210
	void SetPadding(Margin InPadding);// 0x33f4890
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33f4260

--------------------------------
Class: W_SQMapBody_C.SQMapWidgetBase.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x290, Size: 1]
	RelativeCanvasPanel* ElementsRoot;//[Offset: 0x298, Size: 1]
	CanvasPanel* FixedSizeLayer;//[Offset: 0x2a0, Size: 1]
	W_SQMapGridLines_C* GridLines;//[Offset: 0x2a8, Size: 1]
	W_SQMapHorizontalBar_C* HorizontalBar;//[Offset: 0x2b0, Size: 1]
	Image* MapBoundary;//[Offset: 0x2b8, Size: 1]
	Image* MapImage;//[Offset: 0x2c0, Size: 1]
	CanvasPanel* PanLayer;//[Offset: 0x2c8, Size: 1]
	W_SQMapScaleBars_C* Scalebars;//[Offset: 0x2d0, Size: 1]
	TextBlock* TB_MapName;//[Offset: 0x2d8, Size: 1]
	W_MapLattice_C* UMG_MapLattice;//[Offset: 0x2e0, Size: 1]
	W_SQMapVerticalBar_C* VerticalBar;//[Offset: 0x2e8, Size: 1]
	W_SQMapOrderWaypointLines_C* W_SQMapOrderWaypointLines;//[Offset: 0x2f0, Size: 1]
	SizeBox* ZoomLayer;//[Offset: 0x2f8, Size: 1]
	Vector2D DesignTimeGridLines;//[Offset: 0x300, Size: 1]
	Vector2D AppliedMapBoundsScale;//[Offset: 0x308, Size: 1]
	TimerHandle MapBoundaryInitTimer;//[Offset: 0x310, Size: 1]
	int MaxMapBoundaryInitAttempts;//[Offset: 0x318, Size: 1]
	int MapBoundaryInitAttemptCount;//[Offset: 0x31c, Size: 1]
	void Get Relative Location(Vector In Location, out Vector2D Relative, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_FMin_ReturnValue, float CallFunc_FMax_ReturnValue, float CallFunc_FMin_ReturnValue, float CallFunc_FMax_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void Map Corner Bounds(out Vector Extent, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, Vector CallFunc_Divide_VectorFloat_ReturnValue);// 0x1d69c50
	void Init Map Boundary(out bool Success, MaterialInstanceDynamic* MI Map Boundary, Vector2D L Relative Boundary Origin, SQMapBoundary* L Boundary, Vector CallFunc_GetComponentBounds_Origin, Vector CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, Vector CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, FString CallFunc_GetDisplayName_ReturnValue, float CallFunc_Abs_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, float CallFunc_Abs_ReturnValue, Vector2D CallFunc_Get_Relative_Location_Relative, Vector CallFunc_Map_Corner_Bounds_Extent, Vector CallFunc_Multiply_VectorFloat_ReturnValue, int CallFunc_Blueprint_GetSizeX_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Abs_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Abs_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, SQMapBoundary*[] CallFunc_GetAllActorsOfClass_OutActors, float CallFunc_MapRangeClamped_ReturnValue, SQMapBoundary* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue);// 0x1d69c50
	bool RemoveMarkerWidget(SQMapMarkerBase* Target, bool CallFunc_RemoveChild_ReturnValue);// 0x1d69c50
	SQMapMarkerBase* CreateMarkerWidget(const SQMapMarkerVisualData MapMarkerVisualData, SQMapMarkerBase* NewMarker, SQMapMarkerVisualData MarkerData, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, SQMapMarkerBase* CallFunc_Create_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void InitializeLattice(SQCoreStateMapComponent* MapComponent);// 0x1d69c50
	void Set Flag Lattice Visibility(bool InVisibility);// 0x1d69c50
	void LoopInitMapBoundary();// 0x1d69c50
	void ExecuteUbergraph_W_SQMapBody(int EntryPoint, bool K2Node_Event_IsDesignTime, SQCoreStateMapComponent* K2Node_CustomEvent_MapComponent, int Temp_int_Variable, bool K2Node_CustomEvent_InVisibility, GameStateBase* CallFunc_GetGameState_ReturnValue, BP_GameStateSquad_C* K2Node_DynamicCast_AsBP_Game_State_Squad, bool K2Node_DynamicCast_bSuccess, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, bool CallFunc_TryGetLayerEntry_Success, SQLayerEntry CallFunc_TryGetLayerEntry_LayerEntry, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Init_Map_Boundary_Success, bool Temp_bool_Variable, enum Temp_byte_Variable, bool CallFunc_GreaterEqual_IntInt_ReturnValue, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: SQMapBoundary.SQBoundary.Actor.Object
	SQMapBoundarySettings* CommonSettings;//[Offset: 0x2e8, Size: 1]
	bool bOverrideDefaultKillTime;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f0, Size: 1]
	float DefaultKillTime;//[Offset: 0x2f4, Size: 1]
	<class Object,float> ClassKillTimes;//[Offset: 0x2f8, Size: 1]
	float FindKillTime(out const class Object Class);// 0xdae810
	float CalcKillTimestamp(out const class Object Class);// 0xdadd50

--------------------------------
Class: SQMapBoundarySettings.DataAsset.Object
	float DefaultKillTime;//[Offset: 0x30, Size: 1]
	<class Object,float> ClassKillTimes;//[Offset: 0x38, Size: 1]

--------------------------------
Class: RelativeCanvasPanel.CanvasPanel.PanelWidget.Widget.Visual.Object

--------------------------------
Class: W_SQMapGridLines_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	Overlay* GridOverlay;//[Offset: 0x270, Size: 1]
	GridLinesPerZoomLevel[] GridLineLevels;//[Offset: 0x278, Size: 1]
	void InitializeTexture(Vector2D GridNumbers, float StartingZoom);// 0x1d69c50
	void UpdateZoom(float ZoomAmount);// 0x1d69c50
	void Update Grid Opacity();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_SQMapGridLines(int EntryPoint, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float K2Node_CustomEvent_ZoomAmount, W_SQMapGridLinePerZoomLevel_C* CallFunc_Create_ReturnValue, Vector2D K2Node_CustomEvent_GridNumbers, float K2Node_CustomEvent_StartingZoom, PanelSlot* CallFunc_AddChild_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, OverlaySlot* K2Node_DynamicCast_AsOverlay_Slot, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, int Temp_int_Variable, int Temp_int_Array_Index_Variable, Widget* CallFunc_GetChildAt_ReturnValue, GridLinesPerZoomLevel CallFunc_Array_Get_Item, W_SQMapGridLinePerZoomLevel_C* K2Node_DynamicCast_AsW_SQMap_Grid_Line_Per_Zoom_Level, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, LinearColor K2Node_MakeStruct_LinearColor);// 0x1d69c50

--------------------------------
Class: Overlay.PanelWidget.Widget.Visual.Object
	OverlaySlot* AddChildToOverlay(Widget* Content);// 0x33ee9a0

--------------------------------
Class: OverlaySlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x40, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x50, Size: 1]
	byte VerticalAlignment;//[Offset: 0x51, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33eff40
	void SetPadding(Margin InPadding);// 0x33ef950
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33ef720

--------------------------------
Class: GridLinesPerZoomLevel
	CurveFloat* OpacityPerZoom_8_7D4D594647988B210638DCA367C8F9DA;//[Offset: 0x0, Size: 1]
	Texture2D* Texture_2_513F535945D2FFFAA449FA922C520958;//[Offset: 0x8, Size: 1]
	float ZoomAmountBegin_20_CCBF4CDF4CB0084B153CAEA044D4CA18;//[Offset: 0x10, Size: 1]
	float ZoomAmountEnd_21_972E750A4C1ACB475F9EE7B38D389776;//[Offset: 0x14, Size: 1]
	int ScaleFactor_25_1F6A722B4DB5237162393799FF69B000;//[Offset: 0x18, Size: 1]
	LinearColor Tint_28_C16F00104057164EAE6283B19B77017E;//[Offset: 0x1c, Size: 1]

--------------------------------
Class: W_SQMapGridLinePerZoomLevel_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* GridLineImage;//[Offset: 0x268, Size: 1]
	MaterialInstanceDynamic* MaterialInstance;//[Offset: 0x270, Size: 1]
	CurveFloat* OpacityCurve;//[Offset: 0x278, Size: 1]
	float ScaleAmountStart;//[Offset: 0x280, Size: 1]
	float ScaleAmountEnd;//[Offset: 0x284, Size: 1]
	float ViewableDistance;//[Offset: 0x288, Size: 1]
	void UpdateOpacity(float ZoomAmount);// 0x1d69c50
	void InitializeTexture(CurveFloat* GridZoomOpacities, Texture2D* GridTextures, float ZoomFadeIn, float ZoomOpaque, int ScaleFactor, LinearColor Tint, Vector2D GridNumbers, float StartingZoom);// 0x1d69c50
	void ExecuteUbergraph_W_SQMapGridLinePerZoomLevel(int EntryPoint, CurveFloat* K2Node_CustomEvent_GridZoomOpacities, Texture2D* K2Node_CustomEvent_GridTextures, float K2Node_CustomEvent_ZoomFadeIn, float K2Node_CustomEvent_ZoomOpaque, int K2Node_CustomEvent_ScaleFactor, LinearColor K2Node_CustomEvent_Tint, Vector2D K2Node_CustomEvent_GridNumbers, float K2Node_CustomEvent_StartingZoom, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Conv_IntToFloat_ReturnValue, float K2Node_CustomEvent_ZoomAmount, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, float CallFunc_MapRangeUnclamped_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, float CallFunc_GetFloatValue_ReturnValue, bool CallFunc_IsValid_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: SaveData_UI_C.SaveGame.Object
	bool Show Map Roles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool SL Icon Always On;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	bool Show Stance Indicator;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a, Size: 1]
	bool Show FOB Radius;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b, Size: 1]
	bool Show FOB Supplies;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c, Size: 1]
	bool Show Team Waypoints;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d, Size: 1]
	bool Show Grid;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e, Size: 1]
	bool Show Spawns;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f, Size: 1]
	bool Show Weapons in Deployment;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x30, Size: 1]
	bool Show FT In Name Tag;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x31, Size: 1]
	float Map Marker Scale;//[Offset: 0x34, Size: 1]
	float Lattice Opacity;//[Offset: 0x38, Size: 1]
	float Grid Opacity;//[Offset: 0x3c, Size: 1]
	bool SkipGiveUpOption;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x40, Size: 1]
	bool Show Fireteam Letters;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x41, Size: 1]
	bool Show Deployment Tutorial;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x42, Size: 1]
	bool Show Game Mode Animation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43, Size: 1]
	bool Show Whitelist Mods;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x44, Size: 1]
	bool Show Modded Servers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x45, Size: 1]
	bool Show Vehicle Keybinds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x46, Size: 1]
	bool Show TC Zones;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x47, Size: 1]
	bool Play Capture Sounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48, Size: 1]
	FString[] FavouriteServers;//[Offset: 0x50, Size: 1]
	bool Show Favourites Only;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x60, Size: 1]
	bool Show Full Servers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x61, Size: 1]
	byte LastSortType;//[Offset: 0x62, Size: 1]
	bool LastAscendingSortType;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x63, Size: 1]
	bool DisableOnScreenChat;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x64, Size: 1]
	bool Show Director Lines;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x65, Size: 1]
	SQEmotesData*[] EquippedEmotes;//[Offset: 0x68, Size: 1]

--------------------------------
Class: SaveGame.Object

--------------------------------
Class: BP_GameStateSquad_C.SQGameState.GameState.GameStateBase.Info.Actor.Object
	SceneComponent* DefaultSceneRoot;//[Offset: 0x5d0, Size: 1]

--------------------------------
Class: BP_SQLayer_C.SQLayer.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	DataTableRowHandle GameMode;//[Offset: 0xa8, Size: 1]
	bool Editor Only;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb8, Size: 1]
	SQVehicleCountModifier[] Vehicle Count Modifiers;//[Offset: 0xc0, Size: 1]
	DataTableRowHandle FobRadius;//[Offset: 0xd0, Size: 1]
	DataTableRowHandle GetFobRadiusTableRow();// 0x1d69c50
	bool CanVoteForFactionConcurrently(byte[] L_AlreadyUseAlliances, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQLayerTeamConfig* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, BP_SQLayerTeamConfig_C* K2Node_DynamicCast_AsBP_SQLayer_Team_Config, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, byte[] CallFunc_Set_ToArray_Result, byte CallFunc_Array_Get_Item, bool CallFunc_IsValidSoftObjectReference_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	bool TryGetLayerStagingDuration(out Timespan OutDuration, Timespan CallFunc_MakeTimespan_ReturnValue, bool CallFunc_TryGetGameModeEntry_Success, SQGameModeEntry CallFunc_TryGetGameModeEntry_GameModeEntry);// 0x1d69c50
	bool TryGetAvailabilityModifierPct(const int InTeam, const SQAvailability* InAvailability, out int OutModifier, bool L_ShouldUseModifier, bool L_ShouldUseValue, int L_Result, int Temp_int_Loop_Counter_Variable, BP_SQAvailability_Vehicle_C* K2Node_DynamicCast_AsBP_SQAvailability_Vehicle, bool K2Node_DynamicCast_bSuccess, int CallFunc_Add_IntInt_ReturnValue, BP_SQVehicleSettings_C* K2Node_DynamicCast_AsBP_SQVehicle_Settings, bool K2Node_DynamicCast_bSuccess, int CallFunc_TryGetAvailabilityModifierPct_OutModifier, bool CallFunc_TryGetAvailabilityModifierPct_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Loop_Counter_Variable, int Temp_int_Array_Index_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQVehicleCountModifier CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, byte[] CallFunc_Set_ToArray_Result, byte CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, int CallFunc_Array_Length_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	bool TryGetGameMode(out FText OutGameMode, bool CallFunc_TryGetGameModeEntry_Success, SQGameModeEntry CallFunc_TryGetGameModeEntry_GameModeEntry);// 0x1d69c50
	bool TryGetDisplayName(out FText OutDisplayName, bool CallFunc_TryGetLayerEntry_Success, SQLayerEntry CallFunc_TryGetLayerEntry_LayerEntry);// 0x1d69c50
	void GetOuterLevel(out bool Out Success, out BP_SQLevel_C* OuterLevel, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void TryGetGameModeEntry(out bool Success, out SQGameModeEntry GameModeEntry, SQGameModeEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void TryGetLayerEntry(out bool Success, out SQLayerEntry LayerEntry, SQLayerEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void TryGetLevelEntry(out bool Success, out SQLevelEntry LevelEntry, bool CallFunc_IsValid_ReturnValue, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry);// 0x1d69c50

--------------------------------
Class: BP_SQLayerTeamConfig_C.SQLayerTeamConfig.Object
	bool DisableVehicleDuringStaggingPhase;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x60, Size: 1]
	<byte> Allowed Alliances;//[Offset: 0x68, Size: 1]
	<byte> AllowedFactionSetupTypes;//[Offset: 0xb8, Size: 1]
	<byte> RequiredTags;//[Offset: 0x108, Size: 1]
	int Intelligence On Enemy;//[Offset: 0x158, Size: 1]
	void HasIntel(byte In Intel, out bool Out Has Intel, byte Temp_byte_Variable, int CallFunc_MakeLiteralInt_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, int K2Node_Select_Default, int CallFunc_And_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	bool HasFactionSetupChoice(out SQFactionSetup* OutSpecificFaction, Object* CallFunc_LoadAsset_Blocking_ReturnValue, int CallFunc_Set_Length_ReturnValue, SQFactionSetup* K2Node_DynamicCast_AsSQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue);// 0x1d69c50
	bool GetCompatibleFactionSetups(const SQLayer* InOuterLayer, out const <FName,SQFactionSetup*> InAvailableFactionSetups, out SQFactionSetup*[] OutCompatibleFactionSetups, bool L_Selected, byte[] L_RequiredTags, SQFactionSetup*[] L_Out_FactionSetups, int Temp_int_Loop_Counter_Variable, SQFactionSetup*[] CallFunc_Map_Values_Values, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, BP_SQLayer_C* K2Node_DynamicCast_AsBP_SQLayer, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetOuterLevel_Out_Success, BP_SQLevel_C* CallFunc_GetOuterLevel_OuterLevel, int Temp_int_Array_Index_Variable, SQFactionSetup* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ByteByte_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetOuterFaction_Out_Success, BP_SQFaction_C* CallFunc_GetOuterFaction_OuterFaction, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, int Temp_int_Array_Index_Variable, byte CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, byte[] CallFunc_Set_ToArray_Result, bool Temp_bool_Variable, bool Temp_bool_Variable, bool K2Node_Select_Default, int CallFunc_Set_Length_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	bool EditorOnly_ShouldUseSpecificFaction(int CallFunc_Set_Length_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void IsDefendingTeam(out bool IsDefendngTeam, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void IsAttackingTeam(out bool IsAttackingTeam);// 0x1d69c50

--------------------------------
Class: BP_SQLevel_C.SQLevel.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	byte Biome;//[Offset: 0xa8, Size: 1]
	byte TheaterOfOperations;//[Offset: 0xa9, Size: 1]
	bool TryGetLoadingMusic(out SoundBase* OutLoadingMusic, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry, Object* CallFunc_LoadAsset_Blocking_ReturnValue, SoundBase* K2Node_DynamicCast_AsSound_Base, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	bool TryGetDisplayName(out FText OutDisplayName, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry);// 0x1d69c50
	bool TryGetDescription(out FText OutDescription, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry);// 0x1d69c50
	bool TryGetLoadingScreen(out Texture2D* OutLoadingScreen, out const Vector2D InViewportSize, bool Temp_bool_Variable, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default);// 0x1d69c50
	void TryGetLevelEntry(out bool Success, out SQLevelEntry LevelEntry, SQLevelEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQLevelEntry
	FText DisplayName_14_223B49C94810ABAC30BC15AA83B5BC3C;//[Offset: 0x0, Size: 1]
	FText CountryName_27_712BD6C84DE12C74D0BAB38AC4FF8C30;//[Offset: 0x18, Size: 1]
	FText Lore_17_A6F05BD54DBABCCFC1AED4A9EF315793;//[Offset: 0x30, Size: 1]
	Texture2D* Thumbnail_37_72DB25C24A3DFA3E4811B996E55670B7;//[Offset: 0x48, Size: 1]
	Texture2D* LoadingScreen_FHD_28_5F812B3640D9B1BE818DDB8161E09F38;//[Offset: 0x70, Size: 1]
	Texture2D* LoadingScreen_UHD_31_FA04FD614E4A659730AC3FA37AADF668;//[Offset: 0x98, Size: 1]
	Texture2D* LoadingScreen_DQHD_33_07BD69C04EB09F84B88AAC99F85E027D;//[Offset: 0xc0, Size: 1]
	Texture2D* Map_19_EE43B3C74987980EAA8FAF9AE783CA64;//[Offset: 0xe8, Size: 1]
	SoundBase* LoadingMusic_26_F4C51A52463A8E342AA83F82F51120E9;//[Offset: 0x110, Size: 1]

--------------------------------
Class: BP_SQFactionSetup_C.SQFactionSetup.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	byte Type;//[Offset: 0xd0, Size: 1]
	<byte> Tags;//[Offset: 0xd8, Size: 1]
	bool CanUseCommanderActionNearVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x128, Size: 1]
	bool HasBuddyRally;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x129, Size: 1]
	SQRoleGroupingStrategy[] RoleGroupingStrategies;//[Offset: 0x130, Size: 1]
	SQRoleGroupingStrategy[] RoleCategories;//[Offset: 0x140, Size: 1]
	SQRoleGroupingStrategy[] RoleGroupingTags;//[Offset: 0x150, Size: 1]
	SQDeployableGroupingStrategy[] DeployableGroupingStrategies;//[Offset: 0x160, Size: 1]
	SQActionGroupingStrategy[] ActionGroupingStrategies;//[Offset: 0x170, Size: 1]
	void TryGetActionGroupingStrategies(out bool Success, out SQActionGroupingStrategy[] Grouping Strategies, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_TryGetFactionSetupEntry_Success, SQFactionSetupEntry CallFunc_TryGetFactionSetupEntry_FactionSetupEntry, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void TryGetDeployableGroupingStrategies(out bool Success, out SQDeployableGroupingStrategy[] Grouping Strategies, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_TryGetFactionSetupEntry_Success, SQFactionSetupEntry CallFunc_TryGetFactionSetupEntry_FactionSetupEntry, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void GetUnitSymbol(out Texture2D* Out Symbol, byte Temp_byte_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* Temp_softobject_Variable, Texture2D* K2Node_Select_Default);// 0x1d69c50
	void GetOuterFaction(out bool Out Success, out BP_SQFaction_C* OuterFaction, BP_SQFaction_C* K2Node_DynamicCast_AsBP_SQFaction, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void TryGetRoleGroupingTags(out bool OutSuccess, out SQRoleGroupingStrategy[] OutGroupTags, SQRoleGroupingStrategy[] L_GroupStrategies, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, SQRoleGroupingStrategy CallFunc_Array_Get_Item, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_TryGetRoleGroupingStrategies_Success, SQRoleGroupingStrategy[] CallFunc_TryGetRoleGroupingStrategies_RoleGroupingStrategies);// 0x1d69c50
	void TryGetRoleCategories(out bool OutSuccess, out SQRoleGroupingStrategy[] OutRoleCategories, SQRoleGroupingStrategy[] L_GroupingStrategies, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQRoleGroupingStrategy CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_TryGetRoleGroupingStrategies_Success, SQRoleGroupingStrategy[] CallFunc_TryGetRoleGroupingStrategies_RoleGroupingStrategies, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	void TryGetRoleGroupingStrategies(out bool Success, out SQRoleGroupingStrategy[] RoleGroupingStrategies, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_TryGetFactionSetupEntry_Success, SQFactionSetupEntry CallFunc_TryGetFactionSetupEntry_FactionSetupEntry, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void TryGetFactionEntry(out bool Success, out SQFactionEntry FactionEntry, bool CallFunc_IsValid_ReturnValue, SQFactionEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void TryGetFactionSetupEntry(out bool Success, out SQFactionSetupEntry FactionSetupEntry, SQFactionSetupEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQActionGroupingStrategy
	FText DisplayName_2_17E0D23A4D20C3A14A5248A4FB796EDF;//[Offset: 0x0, Size: 1]
	Texture2D* Icon_5_25C81F3D485EDEA183DC62A6AFAC2019;//[Offset: 0x18, Size: 1]
	byte TargetType_9_5616FDFA4714B15259D9E3A21E05F22A;//[Offset: 0x40, Size: 1]
	bool ReversedRule_12_D6B0985A49C7BE841CE0BCB6AE12F4C1;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x41, Size: 1]

--------------------------------
Class: SQFactionSetupEntry
	FText ShortName_2_7ED5FE3E4551011D7164EEA7093086F5;//[Offset: 0x0, Size: 1]
	FText DisplayName_58_AC79DBBC48DDFEFFE67622BD1296F7CD;//[Offset: 0x18, Size: 1]
	FText Description_6_74A276AC436525A8CBD2F1BC68D0AD5D;//[Offset: 0x30, Size: 1]
	Texture2D* UI_UnitBadge_50_CE92CEB643008739B04CC88C8640ADC8;//[Offset: 0x48, Size: 1]
	FName OuterFactionId_39_4385427843DA4F72431EEE98D875406E;//[Offset: 0x70, Size: 1]
	SQRoleGroupingStrategy[] UI_RoleGroupingStrategies_64_6D2F7CBB480EB4189C6547945C8EC2BB;//[Offset: 0x78, Size: 1]
	SQDeployableGroupingStrategy[] UI_DeployableGroupingStategies_68_8E9A0612455DDBEA20E1959E5DF16C57;//[Offset: 0x88, Size: 1]
	SQActionGroupingStrategy[] UI_ActionGroupingStategies_71_5A39416848A1755881F921A3A91B98D7;//[Offset: 0x98, Size: 1]

--------------------------------
Class: SQRoleGroupingStrategy
	FText DisplayName_11_A4E8407B469736A3818E4A84F0AE71C1;//[Offset: 0x0, Size: 1]
	Texture2D* Icon_14_7F8F70B84859593DBB20CBBD7C148C4E;//[Offset: 0x18, Size: 1]
	bool IsCategory_15_09AE1CC240EC98C83A339E8AC5FB5115;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x40, Size: 1]
	<byte> TargetTags_16_8C7D568947601ABED9301195CC06E60C;//[Offset: 0x48, Size: 1]
	bool ReversedRule_7_39D8031F4C52D649458FE18BABBB8B1E;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x98, Size: 1]

--------------------------------
Class: SQDeployableGroupingStrategy
	FText DisplayName_2_F99B8C43430BAF4FF50FAB9079014748;//[Offset: 0x0, Size: 1]
	FText Description_20_9D063CFC4D56524A453A7891125E6AE6;//[Offset: 0x18, Size: 1]
	Texture2D* Icon_16_47DBEEF44044C91E422315AE8AD2307D;//[Offset: 0x30, Size: 1]
	<byte> TargetTags_15_7D977F504B2C80DD6EBF01A470463DAD;//[Offset: 0x38, Size: 1]
	bool ReversedRule_12_548311FD4F326FC0DCFF66B6B6DBBC70;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88, Size: 1]

--------------------------------
Class: SQFactionEntry
	FText ShortName_2_7ED5FE3E4551011D7164EEA7093086F5;//[Offset: 0x0, Size: 1]
	FText DisplayName_70_AC79DBBC48DDFEFFE67622BD1296F7CD;//[Offset: 0x18, Size: 1]
	FText Description_6_74A276AC436525A8CBD2F1BC68D0AD5D;//[Offset: 0x30, Size: 1]
	FText CommanderRequirements_27_2A0F353E4122BDC0F0E343AFCAAA77FA;//[Offset: 0x48, Size: 1]
	<FName,SQFactionGameModeSounds> GameModeSounds_23_B039D0D5462417F7CF2B2EA0AA92DA63;//[Offset: 0x60, Size: 1]
	SQCommanderSounds CommanderSounds_33_5377ADFF4FAB5D89C9A417A7AD69C954;//[Offset: 0xb0, Size: 1]
	SQTeamEventSounds TeamEventSounds_30_BCF7ABB640C4359D2B3B608C8CC74297;//[Offset: 0x1f0, Size: 1]
	SQMedicCalls MedicCall_36_7C718FA54167CE5988A105B8A059D74F;//[Offset: 0x2b8, Size: 1]
	SQObjectiveSounds[] ObjectiveSounds_41_C50FBF8A43A12ABAF037F2AC851A7280;//[Offset: 0x330, Size: 1]
	bool BuddyRallyEnabled_54_EDE0B5A94A0AFAB810A352AE643E0B4D;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	<byte,StaticMesh*> RallyPointMesh_77_FC5BD4EB4AC23BD471ED80AD160978F7;//[Offset: 0x348, Size: 1]
	Texture2D* UI_FullSizeFlag_57_2647E604403291F09A8FC6B0BC1E46DC;//[Offset: 0x398, Size: 1]
	Texture2D* UI_MapSizeFlag_59_19637C35467F3A74B6AF24A261E34647;//[Offset: 0x3c0, Size: 1]
	Texture2D* UI_VertexAnimatedFlag_92_DCAAB34048B7B9E45EF119847F01DE00;//[Offset: 0x3e8, Size: 1]
	Texture2D* UI_Badge_65_BB90FCDC44BE71A8471D339E947345D5;//[Offset: 0x410, Size: 1]
	<byte,Texture2D*> UI_BannerOverlay_89_4A9ACF774E9785C64EA425824BA31D4B;//[Offset: 0x438, Size: 1]
	SQRoleGroupingStrategy[] UI_RoleGroupingStrategies_78_3CF52014461A5C2E7DD6C1BAF1CA6E62;//[Offset: 0x488, Size: 1]
	SQDeployableGroupingStrategy[] UI_DeployableGroupingStategies_83_1B3C98DD412CE568A2C34FBEC0C7D38E;//[Offset: 0x498, Size: 1]
	SQActionGroupingStrategy[] UI_ActionGroupingStategies_86_DC2CFAA9442F95DB9866569AA865255E;//[Offset: 0x4a8, Size: 1]
	Texture2D* UI_IdentifySoldier_Default_96_D92CBCA84CD09744C413F29F64EF461C;//[Offset: 0x4b8, Size: 1]
	Texture2D* UI_IdentifySoldier_Woodland_99_CFD10EE546082F25D4295C830DE0E95F;//[Offset: 0x4e0, Size: 1]
	Texture2D* UI_IdentifySoldier_Desert_101_3F2D404E434CA39574C204B355D09ABA;//[Offset: 0x508, Size: 1]
	Texture2D* UI_IdentifySoldier_Snow_103_B35A74834CAA1936B46440A6F0EC3AE5;//[Offset: 0x530, Size: 1]

--------------------------------
Class: SQFactionGameModeSounds
	SoundCue* AttackerCue_2_8CEEDA4A43116E8679EC63B5A8BDA448;//[Offset: 0x0, Size: 1]
	SoundCue* DefenderCue_7_AFAEE0D84A23631C0D42E7910174FD52;//[Offset: 0x28, Size: 1]
	SoundCue* OtherCue_8_B8CF01914B7ABCDEDAD53DB45785EED5;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQCommanderSounds
	SoundCue* CommanderVoteStarted;//[Offset: 0x0, Size: 1]
	SoundCue* CommanderVotePassedNormalSelf;//[Offset: 0x28, Size: 1]
	SoundCue* CommanderVotePassedNormalOthers;//[Offset: 0x50, Size: 1]
	SoundCue* CommanderVotePassedMutinySelf;//[Offset: 0x78, Size: 1]
	SoundCue* CommanderVotePassedMutinyOthers;//[Offset: 0xa0, Size: 1]
	SoundCue* RequestCommandReinforcements;//[Offset: 0xc8, Size: 1]
	SoundCue* CommanderReinforcementsApproved;//[Offset: 0xf0, Size: 1]
	SoundCue* CommanderReinforcementsDenied;//[Offset: 0x118, Size: 1]

--------------------------------
Class: SQTeamEventSounds
	SoundCue* Join;//[Offset: 0x0, Size: 1]
	SoundCue* Win;//[Offset: 0x28, Size: 1]
	SoundCue* Lose;//[Offset: 0x50, Size: 1]
	SoundCue* FriendlyTicketsLow;//[Offset: 0x78, Size: 1]
	SoundCue* EnemyTicketsLow;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: SQMedicCalls
	SoundCue* MedicCO;//[Offset: 0x0, Size: 1]
	SoundCue* MedicSL;//[Offset: 0x28, Size: 1]
	SoundCue* MedicGrunt;//[Offset: 0x50, Size: 1]

--------------------------------
Class: SQObjectiveSounds
	SoundCue* ObjectiveBeingWon;//[Offset: 0x0, Size: 1]
	SoundCue* ObjectiveWon;//[Offset: 0x28, Size: 1]
	SoundCue* ObjectiveBeingLost;//[Offset: 0x50, Size: 1]
	SoundCue* ObjectiveLost;//[Offset: 0x78, Size: 1]

--------------------------------
Class: BP_SQFaction_C.SQFaction.SQPrimaryData.PrimaryDataAsset.DataAsset.Object
	DataTable* GruntVoiceTable;//[Offset: 0x78, Size: 1]
	DataTable* SLVoiceTable;//[Offset: 0x80, Size: 1]
	byte Alliance;//[Offset: 0x88, Size: 1]
	<byte> TheatersOfOperations;//[Offset: 0x90, Size: 1]
	bool TryGetFlagForAnimatedFlags(out Texture2D* OutTexture, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void TryGetActionGroupingStrategies(out bool Success, out SQActionGroupingStrategy[] GroupingStrategies, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void TryGetDeployableGroupingStrategies(out bool Success, out SQDeployableGroupingStrategy[] GroupingStrategies, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void TryGetRoleGroupingStrategies(out bool Success, out SQRoleGroupingStrategy[] GroupingStrategies, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	bool TryGetRallyPointMesh(SQLayer* Layer, out StaticMesh* OutMesh, BP_SQLayer_C* K2Node_DynamicCast_AsBP_SQLayer, bool K2Node_DynamicCast_bSuccess, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, StaticMesh* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, StaticMesh*[] CallFunc_Map_Values_Values, StaticMesh* CallFunc_Array_Get_Item, int CallFunc_Map_Length_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue);// 0x1d69c50
	bool TryGetFlagForMap(out Texture2D* OutTexture, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	bool TryGetFlagForFullScreen(out Texture2D* OutTexture, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void TryGetFactionEntry(out bool Success, out SQFactionEntry FactionEntry, SQFactionEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQVehicleCountModifier
	<byte> TargetType_7_F90601ED40463964DEF8C0A76ED3DFB7;//[Offset: 0x0, Size: 1]
	<byte> TargetTags_3_5DD977BA42F28411830DF39CC6BC5865;//[Offset: 0x50, Size: 1]
	int Modifier_12_AD280A0344E05118EF7C028BE593AC98;//[Offset: 0xa0, Size: 1]

--------------------------------
Class: SQGameModeEntry
	FText DisplayName_4_9731CC49444EBC0537B49D9B402B1D91;//[Offset: 0x0, Size: 1]
	FText Description_5_D3C593ED4E6A73F076885FA521D265F2;//[Offset: 0x18, Size: 1]
	FText Instructions_14_83AB5F3D4DB18489485022A30FC0E743;//[Offset: 0x30, Size: 1]
	Texture2D* Icon_8_A053F0D649C0304DC223248A39FD50E0;//[Offset: 0x48, Size: 1]
	Texture2D* Logo_10_B06AB5274A9EB2915F6DA4A4BB6A943F;//[Offset: 0x70, Size: 1]
	Texture2D* HelpImage_15_7C6A985248269109DE665ABBD4E4A97F;//[Offset: 0x98, Size: 1]
	FText NeutralText_49_58F0337E408E8B27D3FB17AD9654AE6B;//[Offset: 0xc0, Size: 1]
	FText AttackerText_48_380D41444D5A0B9F27618BBEDE47708A;//[Offset: 0xd8, Size: 1]
	FText DefenderText_47_80F3F2164F9C63C73A56E1B0216DB80D;//[Offset: 0xf0, Size: 1]
	class UserWidget* Widget_29_00180EA8495022F358048488F98D8B78;//[Offset: 0x108, Size: 1]
	bool ShowTCButton_39_EE3A0BE54EF11F5BFD9D45B4692FE969;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x130, Size: 1]
	Timespan StagingTime_54_C22452B94634B82EB77CEC91F833A1E9;//[Offset: 0x138, Size: 1]

--------------------------------
Class: BP_SQAvailability_Vehicle_C.SQAvailability_Vehicle.SQAvailability.Object

--------------------------------
Class: BP_SQVehicleSettings_C.SQVehicleSettings.SQSettings.DataAsset.Object
	byte VehicleType;//[Offset: 0x58, Size: 1]
	<byte> VehicleTags;//[Offset: 0x60, Size: 1]
	SQVehicleVersion[] VehicleVersions;//[Offset: 0xb0, Size: 1]
	byte SpawnerSize;//[Offset: 0xc0, Size: 1]
	bool TryGetVehicleWithBiome(byte Biome, out class SQVehicle OutVehicle, class SQVehicle[] L_MatchingVehicles, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_RandomInteger_ReturnValue, SQVehicleVersion CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, class SQVehicle CallFunc_Array_Get_Item);// 0x1d69c50
	bool ShouldCauseSieged(const SQGameSpawn* Spawn, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void HasTags(out byte[] InTags, bool InAll, out bool Out HasTag, bool L_Result, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, byte CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	void HasTag(byte InTag, out bool Out HasTag, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool TryGetVehicleWithLayer(const SQLayer* InLayer, out class SQVehicle OutVehicle, class SQVehicle[] L_MatchingVehicles, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQVehicleVersion CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_RandomInteger_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, class SQVehicle CallFunc_Array_Get_Item, SQVehicleVersion CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	void GetVehicleEntry(out bool Success, out SQVehicleEntry VehicleEntry, SQVehicleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQVehicleVersion
	byte Biome_2_58A4CEA741BF83041C298699514F3401;//[Offset: 0x0, Size: 1]
	class SQVehicle* Vehicle_6_F3193FEA4E8C11847F01B7B328A45158;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQVehicleEntry
	FText DisplayName_2_AE20EB5F4F79C0010BCDCE847B39E625;//[Offset: 0x0, Size: 1]
	FText Details_5_05E7EAEF4F1306A917C5A4837F8F40D0;//[Offset: 0x18, Size: 1]
	FText Specifics_7_184DD04A4D44CF9D518A218A50B31AA6;//[Offset: 0x30, Size: 1]
	Texture2D* Icon_13_CEC409E14C155F9F18EC1C961848686E;//[Offset: 0x48, Size: 1]

--------------------------------
Class: SQLayerEntry
	FText DisplayName_2_FDA98E4C4391E4B5FE853F88263333D6;//[Offset: 0x0, Size: 1]

--------------------------------
Class: W_SQMapHorizontalBar_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SizeBox* FixedSizeLayer;//[Offset: 0x268, Size: 1]
	HorizontalBox* MarkerGroup;//[Offset: 0x270, Size: 1]
	CanvasPanel* PanLayer;//[Offset: 0x278, Size: 1]
	Overlay* RemainderOffset;//[Offset: 0x280, Size: 1]
	W_HorizontalMarker_C* W_HorizontalMarker;//[Offset: 0x288, Size: 1]
	SizeBox* ZoomLayer;//[Offset: 0x290, Size: 1]
	bool DisplayNumeric;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	float GridLines;//[Offset: 0x29c, Size: 1]
	void Configure(float GridLines, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FString CallFunc_ConvertNumberToGridLetter_OutResult, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, SizeBoxSlot* K2Node_DynamicCast_AsSize_Box_Slot, bool K2Node_DynamicCast_bSuccess, SlateChildSize K2Node_MakeStruct_SlateChildSize, FText K2Node_Select_Default, int CallFunc_FCeil_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, W_HorizontalMarker_C* CallFunc_Create_ReturnValue, Margin K2Node_MakeStruct_Margin, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, Margin K2Node_MakeStruct_Margin);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_W_SQMapHorizontalBar(int EntryPoint, bool K2Node_Event_IsDesignTime);// 0x1d69c50

--------------------------------
Class: W_HorizontalMarker_C.UserWidget.Widget.Visual.Object
	Image* LeftBorder;//[Offset: 0x260, Size: 1]
	Image* RightBorder;//[Offset: 0x268, Size: 1]
	TextBlock* Text;//[Offset: 0x270, Size: 1]

--------------------------------
Class: W_SQMapScaleBars_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	W_SQMapScaleBarSingle_C* 100Bar;//[Offset: 0x268, Size: 1]
	W_SQMapScaleBarSingle_C* 300Bar;//[Offset: 0x270, Size: 1]
	W_SQMapScaleBarSingle_C* 33Bar;//[Offset: 0x278, Size: 1]
	W_SQMapScaleBarSingle_C* 900Bar;//[Offset: 0x280, Size: 1]
	VerticalBox* Scalebars;//[Offset: 0x288, Size: 1]
	void InitializeScaleBars(float InitialZoom, SizeBox* ZoomLayer);// 0x1d69c50
	void UpdateZoom(float ZoomAmount);// 0x1d69c50
	void ExecuteUbergraph_W_SQMapScaleBars(int EntryPoint, float K2Node_CustomEvent_InitialZoom, SizeBox* K2Node_CustomEvent_ZoomLayer, int Temp_int_Variable, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, float K2Node_CustomEvent_ZoomAmount, Widget* CallFunc_GetChildAt_ReturnValue, W_SQMapScaleBarSingle_C* K2Node_DynamicCast_AsW_SQMap_Scale_Bar_Single, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, W_SQMapScaleBarSingle_C* K2Node_DynamicCast_AsW_SQMap_Scale_Bar_Single, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_SQMapScaleBarSingle_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* LeftEdge;//[Offset: 0x268, Size: 1]
	Image* LineLength;//[Offset: 0x270, Size: 1]
	TextBlock* MetersText;//[Offset: 0x278, Size: 1]
	Image* RightEdge;//[Offset: 0x280, Size: 1]
	float ScaleInMeters;//[Offset: 0x288, Size: 1]
	SizeBox* ZoomLayer;//[Offset: 0x290, Size: 1]
	float InitialZoom;//[Offset: 0x298, Size: 1]
	float PixelLengthAtInitialZoom;//[Offset: 0x29c, Size: 1]
	float MaxFractionOfMap;//[Offset: 0x2a0, Size: 1]
	float MinFractionOfMap;//[Offset: 0x2a4, Size: 1]
	void BarSizeInPixels(out float OutWidth, float CallFunc_Multiply_FloatFloat_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Abs_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void UpdateZoom(float ZoomAmount);// 0x1d69c50
	void InitializeScaleBar(float InitialZoomAmount, SizeBox* ZoomLayer);// 0x1d69c50
	void ExecuteUbergraph_W_SQMapScaleBarSingle(int EntryPoint, float K2Node_CustomEvent_ZoomAmount, FText CallFunc_Conv_FloatToText_ReturnValue, float K2Node_CustomEvent_InitialZoomAmount, SizeBox* K2Node_CustomEvent_ZoomLayer, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BarSizeInPixels_OutWidth, bool CallFunc_LessEqual_FloatFloat_ReturnValue, PanelWidget* CallFunc_GetParent_ReturnValue, PanelWidget* CallFunc_GetParent_ReturnValue, CanvasPanel* K2Node_DynamicCast_AsCanvas_Panel, bool K2Node_DynamicCast_bSuccess, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50

--------------------------------
Class: FormatArgumentData
	FString ArgumentName;//[Offset: 0x0, Size: 1]
	byte ArgumentValueType;//[Offset: 0x10, Size: 1]
	FText ArgumentValue;//[Offset: 0x18, Size: 1]
	int ArgumentValueInt;//[Offset: 0x30, Size: 1]
	float ArgumentValueFloat;//[Offset: 0x34, Size: 1]
	enum ArgumentValueGender;//[Offset: 0x38, Size: 1]

--------------------------------
Class: W_MapLattice_C.SQAASGraphLattice.SQMapLattice.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2c0, Size: 1]
	void Initialize();// 0x1d69c50
	void Update Lattice Opacity();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_MapLattice(int EntryPoint, SQAASGraph*[] CallFunc_GetAllActorsOfClass_OutActors, SQAASGraph* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, LinearColor K2Node_MakeStruct_LinearColor, LinearColor K2Node_MakeStruct_LinearColor, LinearColor K2Node_MakeStruct_LinearColor);// 0x1d69c50

--------------------------------
Class: SQAASGraphLattice.SQMapLattice.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bHidesUncapLinks;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	LinearColor LatticeNeutralColor;//[Offset: 0x284, Size: 1]
	LinearColor LatticeEnemyColor;//[Offset: 0x294, Size: 1]
	LinearColor LatticeFriendlyColor;//[Offset: 0x2a4, Size: 1]
	float LineThickness;//[Offset: 0x2b4, Size: 1]
	SQAASGraph* lattice;//[Offset: 0x2b8, Size: 1]

--------------------------------
Class: SQMapLattice.SQUserWidget.UserWidget.Widget.Visual.Object
	SQLatticeLine[] LatticeLines;//[Offset: 0x260, Size: 1]
	SQCoreStateMapComponent* MapComponent;//[Offset: 0x270, Size: 1]
	Vector2D WorldLocationToDrawLocation(out const Vector Location, const SQMapWidgetBase* MapWidget);// 0xdafaf0
	void DrawWidget(PaintContext Context);// 0xdae760

--------------------------------
Class: SQAASGraph.SQUndirectedGraph.Actor.Object
	bool bNodesHaveReplicated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	void RemoveSourceNode(SQGraphNodeComponent* Node);// 0xd3d6d0
	void PostNodeOwnerChanged(SQCaptureZoneComponent* CaptureZone, byte Team);// 0xd3d600
	void GetTeamSourceNodes(byte Team, out SQGraphNodeComponent*[] InOutNodes);// 0xd3d0b0
	void GetSourceNodes(out SQGraphNodeComponent*[] InOutNodes);// 0xd3d000
	void AddSourceNode(SQGraphNodeComponent* Node);// 0xd3cb90

--------------------------------
Class: SQUndirectedGraph.Actor.Object
	SceneComponent* Root;//[Offset: 0x228, Size: 1]
	MulticastInlineDelegateProperty OnLatticeUpdated;//[Size: 1]
	SQGraphNodeComponent*[] Nodes;//[Offset: 0x240, Size: 1]
	SQGraphLink[] Links;//[Offset: 0x250, Size: 1]
	void RemoveNode(SQGraphNodeComponent* Node);// 0xd5a520
	void RemoveLink(SQGraphLink Link);// 0xe307e0
	void OnRep_Nodes();// 0xd81a80
	void GetNodes(out SQGraphNodeComponent*[] InOutNodes);// 0xe2fd00
	void GetLinks(out SQGraphLink[] InOutLinks);// 0xe2fc50
	void ClearNodesAndLinks();// 0xe2f390
	void AddNode(SQGraphNodeComponent* Node);// 0xd5a5b0
	void AddLink(SQGraphLink Link);// 0xe2f190

--------------------------------
Class: SQGraphNodeComponent.ActorComponent.Object
	class RouteSelectorPredicate* RouteSelectorPredicate;//[Offset: 0xb0, Size: 1]
	class RouteSelectorPredicate* RouteSelectorVisualizerPredicate;//[Offset: 0xb8, Size: 1]
	class RouteCombinerPredicate* RouteCombinerPredicate;//[Offset: 0xc0, Size: 1]
	<SQGraphNodeComponent*> DesignOutgoingLinks;//[Offset: 0xc8, Size: 1]
	SQGraphNodeComponent*[] Neighbors;//[Offset: 0x118, Size: 1]
	void RemoveNeighbor(SQGraphNodeComponent* Neighbor);// 0xd9f190
	void OnNeighborRemoved(SQGraphNodeComponent* Neighbor);// 0xd5a470
	void OnNeighborAdded(SQGraphNodeComponent* Neighbor);// 0xd9ed80
	void GetNeighbors(out SQGraphNodeComponent*[] InOutNodes);// 0xd9ebf0
	void AddNeighbor(SQGraphNodeComponent* Neighbor);// 0xd9e300

--------------------------------
Class: RouteSelectorPredicate.Object
	int NumLinksToChoose;//[Offset: 0x28, Size: 1]
	bool Execute(out SQGraphNodeComponent*[] LinksLeft, out SQGraphNodeComponent*[] ChosenLinks, out RandomStream RandStream);// 0xd9e800

--------------------------------
Class: RandomStream
	int InitialSeed;//[Offset: 0x0, Size: 1]
	int Seed;//[Offset: 0x4, Size: 1]

--------------------------------
Class: RouteCombinerPredicate.Object
	void Execute(out SQRoute2[] NewRoutes, out SQRoute2[] Routes);// 0xd9e670

--------------------------------
Class: SQRoute2
	<SQGraphLink> Links;//[Offset: 0x0, Size: 1]

--------------------------------
Class: SQGraphLink
	SQGraphNodeComponent* NodeA;//[Offset: 0x0, Size: 1]
	SQGraphNodeComponent* NodeB;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQCaptureZoneComponent.SQGraphNodeComponent.ActorComponent.Object
	byte InitialTeam;//[Offset: 0x128, Size: 1]
	FText FlagName;//[Offset: 0x130, Size: 1]
	byte CapturingTeam;//[Offset: 0x148, Size: 1]
	byte OwningTeam;//[Offset: 0x149, Size: 1]
	byte LastOwningTeam;//[Offset: 0x14a, Size: 1]
	bool Uncappable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x14b, Size: 1]
	<class SQGameMode,CaptureZoneStats> CaptureZoneValues;//[Offset: 0x150, Size: 1]
	CaptureZoneStats DefaultCaptureZoneValues;//[Offset: 0x1a0, Size: 1]
	float BonusCaptureMultiplier;//[Offset: 0x1b8, Size: 1]
	float PlayerAdvantage;//[Offset: 0x1bc, Size: 1]
	float CapturePercentDelta;//[Offset: 0x1c0, Size: 1]
	float CapturePercent;//[Offset: 0x1c4, Size: 1]
	int CapturePercentDirection;//[Offset: 0x1c8, Size: 1]
	bool bIsLocked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1cc, Size: 1]
	MulticastInlineDelegateProperty CaptureStateChangeEvent;//[Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x1e0, Size: 1]
	uint32 TeamCapturabilities;//[Offset: 0x210, Size: 1]
	uint32 TeamKnowledge;//[Offset: 0x214, Size: 1]
	CaptureZoneStats CurrentCaptureZoneStats;//[Offset: 0x218, Size: 1]
	void UpdateTeamKnowledge(out SQCaptureZoneComponent*[] TeamOneDir, out SQCaptureZoneComponent*[] TeamTwoDir);// 0xd5b040
	void UpdateLockState();// 0xd5b020
	void UpdateCaptureState(SQCaptureZoneComponent* CaptureZone, byte Team);// 0xd5af50
	void UpdateCanCaptureState(out SQCaptureZoneComponent*[] TeamOneDir, out SQCaptureZoneComponent*[] TeamTwoDir);// 0xd5ae30
	void UnlockCaptureZone();// 0xd5ad50
	bool SetTeamHaveKnowledge(byte Team, bool bHaveKnowledge);// 0xd5ab20
	bool SetTeamCanCapture(byte Team, bool bCanCap);// 0xd5aa40
	void OnRep_Uncappable();// 0xd5a500
	void OnRep_TeamKnowledge();// 0xd5a680
	void OnRep_TeamCapturabilities();// 0xd5a660
	void OnRep_OwningTeam();// 0xd5a640
	void OnRep_CapturingTeam();// 0xd5a500
	void OnRep_CapturePercent();// 0xd5a500
	void OnIndexedTeamStatesReplicated();// 0xd5a500
	void Neutralize();// 0xd5a3c0
	void LockCaptureZone();// 0xd5a3a0
	bool GetTeamHaveKnowledge(byte Team);// 0xd5a1a0
	void GetPlayersInCaptureZone(out Actor*[] TeamOne, out Actor*[] TeamTwo);// 0xd5a080
	bool GetCurrentModeCaptureZoneStats(out CaptureZoneStats OutputCaptureZoneStats);// 0xd59fe0
	void GetCapturezoneDirections(out SQCaptureZoneComponent*[] TeamOneDir, out SQCaptureZoneComponent*[] TeamTwoDir);// 0xd59e90
	bool GetCanTeamCapture(byte Team);// 0xd59e00
	void FullyCap(byte ForTeam);// 0xd59d00
	SQGraphNodeComponent* FindMainBase(byte Team, out SQGraphNodeComponent*[] VisitedNodes);// 0xd59c00
	void CaptureTick();// 0xd59a00

--------------------------------
Class: CaptureZoneStats
	CurveFloat* PlayerAdvantageToTimeToCapHeldPoint;//[Offset: 0x0, Size: 1]
	float NeutralFlagCaptureRateMultiplier;//[Offset: 0x8, Size: 1]
	int MinSoldiersToCaptureHeldPoint;//[Offset: 0xc, Size: 1]
	int MinSoldiersToCaptureNeutralPoint;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQLatticeLine
	Vector StartWorldLocation;//[Offset: 0x0, Size: 1]
	Vector EndWorldLocation;//[Offset: 0xc, Size: 1]
	LinearColor Color;//[Offset: 0x18, Size: 1]
	float EdgeWidth;//[Offset: 0x28, Size: 1]

--------------------------------
Class: W_SQMapVerticalBar_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SizeBox* FixedSizeLayer;//[Offset: 0x268, Size: 1]
	VerticalBox* MarkerGroup;//[Offset: 0x270, Size: 1]
	CanvasPanel* PanLayer;//[Offset: 0x278, Size: 1]
	Overlay* RemainderOffset;//[Offset: 0x280, Size: 1]
	SizeBox* ZoomLayer;//[Offset: 0x288, Size: 1]
	bool DisplayNumeric;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	float GridLines;//[Offset: 0x294, Size: 1]
	void Configure(float GridLines, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FString CallFunc_ConvertNumberToGridLetter_OutResult, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool Temp_bool_Variable, SlateChildSize K2Node_MakeStruct_SlateChildSize, SizeBoxSlot* K2Node_DynamicCast_AsSize_Box_Slot, bool K2Node_DynamicCast_bSuccess, int CallFunc_FCeil_ReturnValue, FText K2Node_Select_Default, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Margin K2Node_MakeStruct_Margin, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_VerticalMarker_C* CallFunc_Create_ReturnValue, Margin K2Node_MakeStruct_Margin, VerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_W_SQMapVerticalBar(int EntryPoint, bool K2Node_Event_IsDesignTime);// 0x1d69c50

--------------------------------
Class: W_VerticalMarker_C.UserWidget.Widget.Visual.Object
	Image* Image;//[Offset: 0x260, Size: 1]
	Image* Image;//[Offset: 0x268, Size: 1]
	TextBlock* Text;//[Offset: 0x270, Size: 1]

--------------------------------
Class: W_SQMapOrderWaypointLines_C.SQOrderLines.SQMapLattice.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	void Construct();// 0x1d69c50
	void RefreshUIData(SaveData_UI_C* Data);// 0x1d69c50
	void ExecuteUbergraph_W_SQMapOrderWaypointLines(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, SaveData_UI_C* K2Node_CustomEvent_Data, BP_SquadGameInstance_C* K2Node_DynamicCast_AsBP_Squad_Game_Instance, bool K2Node_DynamicCast_bSuccess, SaveData_UI_C* CallFunc_Get_UI_Data_AsSave_Data_UI);// 0x1d69c50

--------------------------------
Class: SQOrderLines.SQMapLattice.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bShowTeamOrderLines;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	float SelfSquadLineThickness;//[Offset: 0x284, Size: 1]
	float OtherSquadLineThickness;//[Offset: 0x288, Size: 1]
	SQMapMarkerManagerComponent* MapMarkerManagerComponent;//[Offset: 0x290, Size: 1]

--------------------------------
Class: SQGameInstance.GameInstance.Object
	SQSoliderNetPriorityObject[] SoliderNetPriorities;//[Offset: 0x1a8, Size: 1]
	float SoldierNetPriorityConeSensitivity;//[Offset: 0x1b8, Size: 1]
	float SoldierNetPriorityConeFactor;//[Offset: 0x1bc, Size: 1]
	SQConnectionCheckBeaconHostObj* SQConnectionCheckHost;//[Offset: 0x1c0, Size: 1]
	SQJoinBeaconHost* SQJoinQueueHost;//[Offset: 0x1c8, Size: 1]
	OnlineBeaconHost* BeaconHost;//[Offset: 0x1d0, Size: 1]
	SQJoinBeaconClient* JoinQueueClient;//[Offset: 0x1d8, Size: 1]
	SQServerListItemWidget* LastServerAttemptWidget;//[Offset: 0x1e0, Size: 1]
	SQFindSessionsCallbackProxy* ActiveFindSessionsCallback;//[Offset: 0x1e8, Size: 1]
	SQFindFriendsCallbackProxy* ActiveFindFriendsCallback;//[Offset: 0x1f0, Size: 1]
	<FString,SQConnectionCheckBeaconClient*> ConnectionCheckClients;//[Offset: 0x1f8, Size: 1]
	bool bSaveServerBrowserResultsToFile;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x264, Size: 1]
	SQConfig* SquadConfig;//[Offset: 0x380, Size: 1]
	MulticastInlineDelegateProperty OnMapIconCreated;//[Size: 1]
	MulticastInlineDelegateProperty OnMapIconDestroyed;//[Size: 1]
	MulticastInlineDelegateProperty OnWorldOriginLocationChangedEvent;//[Size: 1]
	FString UserEnteredPassword;//[Offset: 0x3b8, Size: 1]
	AudioComponent* MusicAudioComponent;//[Offset: 0x3c8, Size: 1]
	SoundBase* MusicSoundCue;//[Offset: 0x3d0, Size: 1]
	BlueprintSessionResult PendingServer;//[Offset: 0x3d8, Size: 1]
	bool bHasPendingServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e0, Size: 1]
	byte[] LastTicket;//[Offset: 0x4e8, Size: 1]
	DateTime LastTicketRefresh;//[Offset: 0x4f8, Size: 1]
	FString ServerPartMessage;//[Offset: 0x508, Size: 1]
	ModdingRuntimeModInfoDetails[] ModInfo;//[Offset: 0x518, Size: 1]
	FString MainMenuMap;//[Offset: 0x528, Size: 1]
	SQLevel* CurrentLevel;//[Offset: 0x538, Size: 1]
	SQLayer* CurrentLayer;//[Offset: 0x540, Size: 1]
	SQLayer* NextLayer;//[Offset: 0x548, Size: 1]
	SQLevel* NextLevel;//[Offset: 0x550, Size: 1]
	bool InitialGameDiscoveryCompleted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x583, Size: 1]
	<FName,SQLevel*> AvailableLevels;//[Offset: 0x588, Size: 1]
	<FName,SQLayer*> AvailableLayers;//[Offset: 0x5d8, Size: 1]
	<FName,SQFaction*> AvailableFactions;//[Offset: 0x628, Size: 1]
	<FName,SQFactionSetup*> AvailableFactionSetups;//[Offset: 0x678, Size: 1]
	bool InitialModDiscoveryCompleted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6d8, Size: 1]
	bool VerifyPassword(out const BlueprintSessionResult BlueprintSessionResult, FString UserPassword);// 0xd8def0
	bool TryGetNextLevels(int InCount, out SQLevel*[] OutLevels);// 0xd8ddf0
	bool TryGetNextLayers(int InCount, out SQLayer*[] OutLayers);// 0xd8dcf0
	bool TryGetLayersInRotationFor(SQLevel* InLevel, out SQLayer*[] OutLayers);// 0xd8dbf0
	void StopMusic();// 0xd8dbd0
	void ShowLoadingScreen(bool LoadingGameMap);// 0xd8db40
	void ServerTravelToNextMap(FString Params);// 0xd8d4a0
	void ServerTravelToNextLevel(FString Params);// 0xd8d3f0
	void ServerTravelToNextLayer(FString Params);// 0xd8d340
	void SendTicketToEAC(bool bEncryptedDataAvailable, int ResultCode);// 0xd8d1a0
	void ResetRotation();// 0xd8d180
	void RandomizeRotation();// 0xd8d140
	void QueueForServer(Object* WorldContextObject, SQServerListItemWidget* SessionWidget);// 0xd8d070
	void PlayMusic(SoundBase* InOverrideMusic);// 0xd8cfe0
	bool OverrideNextLevel(out const FName NextLevelName);// 0xd8cf40
	bool OverrideNextLayer(out const FName NextLayerName);// 0xd8cea0
	void OnNewModdedLevelAvailable(SQLevel* Level);// 0x1d69c50
	void OnNewModdedLayerAvailable(SQLayer* Layer);// 0x1d69c50
	void OnNewModdedFactionSetupAvailable(SQFactionSetup* FactionSetup);// 0x1d69c50
	void OnNewModdedFactionAvailable(SQFaction* Faction);// 0x1d69c50
	bool NeedToVoteForNextLevel();// 0xd8cca0
	bool NeedToVoteForNextLayer();// 0xd8cc70
	bool IsSteamConnected();// 0xd8cc40
	bool HostGame(LocalPlayer* LocalPlayer, FString GameType, FString InTravelURL);// 0xd8cae0
	void HideLoadingScreen();// 0xd8cac0
	void GotoMainMenu();// 0xd8c5e0
	SQUISettings* GetSquadUISettings();// 0xd8c570
	static FString GetServerURL(Object* WorldContextObject, out const BlueprintSessionResult BlueprintSessionResult);// 0xd8c0f0
	static bool GetServerUniqueId(out const BlueprintSessionResult BlueprintSessionResult, Object* WorldContextObject, out FString OutUniqueId);// 0xd8c300
	SQServerSettings GetServerSettings();// 0xd8c080
	FString GetNextLevelDisplayName();// 0xd8bfb0
	FString GetNextLayerDisplayName();// 0xd8bf60
	FString GetMenuMap();// 0xd8bf10
	FString GetCurrentLevelId();// 0xd8bda0
	FString GetCurrentLevelDisplayName();// 0xd8bd50
	FString GetCurrentLayerId();// 0xd8bd00
	FString GetCurrentLayerDisplayName();// 0xd8bcb0
	bool FindLevels(out const FString[] InSpecificLevelList, out SQLevel*[] OutLevels);// 0xd8bb30
	bool FindLayers(out const FString[] InSpecificLayerList, out SQLayer*[] OutLayers);// 0xd8b9e0
	void EOSAuthTicketExpiringSoon();// 0xd8b9c0
	void DisconnectToMenu();// 0xd8b9a0
	void DetermineNextMap();// 0xd8b980
	void DetermineNextLevel();// 0xd8b960
	void DetermineNextLayer();// 0xd8b940
	void CheckConnectionToServer(Object* WorldContextObject, SQServerListItemWidget* SessionWidget);// 0xd8b870
	bool CanQueueForServer(Object* WorldContextObject, SQServerListItemWidget* SessionWidget);// 0xd8b7a0

--------------------------------
Class: SQSoliderNetPriorityObject
	float distance;//[Offset: 0x0, Size: 1]
	float NetPriority;//[Offset: 0x4, Size: 1]
	float NetPriorityWhenBehind;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQConnectionCheckBeaconHostObj.OnlineBeaconHostObject.Actor.Object

--------------------------------
Class: OnlineBeaconHostObject.Actor.Object
	FString BeaconTypeName;//[Offset: 0x228, Size: 1]
	class OnlineBeaconClient* ClientBeaconActorClass;//[Offset: 0x238, Size: 1]
	OnlineBeaconClient*[] ClientActors;//[Offset: 0x240, Size: 1]

--------------------------------
Class: OnlineBeaconClient.OnlineBeacon.Actor.Object
	OnlineBeaconHostObject* BeaconOwner;//[Offset: 0x258, Size: 1]
	NetConnection* BeaconConnection;//[Offset: 0x260, Size: 1]
	enum ConnectionState;//[Offset: 0x268, Size: 1]
	void ClientOnConnected();// 0xd81a80

--------------------------------
Class: OnlineBeacon.Actor.Object
	float BeaconConnectionInitialTimeout;//[Offset: 0x230, Size: 1]
	float BeaconConnectionTimeout;//[Offset: 0x234, Size: 1]
	NetDriver* NetDriver;//[Offset: 0x238, Size: 1]

--------------------------------
Class: SQJoinBeaconHost.OnlineBeaconHostObject.Actor.Object
	SQServerSlot[] PublicQueue;//[Offset: 0x250, Size: 1]
	SQServerSlot[] ReservedQueue;//[Offset: 0x260, Size: 1]
	SQServerSlot[] JoiningServerSlots;//[Offset: 0x270, Size: 1]

--------------------------------
Class: SQServerSlot
	SQJoinBeaconClient* ClientBeacon;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQJoinBeaconClient.OnlineBeaconClient.OnlineBeacon.Actor.Object
	int PlayerCount;//[Offset: 0x2b8, Size: 1]
	int QueuePosition;//[Offset: 0x2bc, Size: 1]
	int ReservedQueueCount;//[Offset: 0x2c0, Size: 1]
	int PublicQueueCount;//[Offset: 0x2c4, Size: 1]
	bool bIsReservedMember;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	bool bHasReplicated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c9, Size: 1]
	SQServerListItemWidget* ServerWidget;//[Offset: 0x2d0, Size: 1]
	double SecondsToKeepAttemptingReconnect;//[Offset: 0x2d8, Size: 1]
	void RequestClientJoin();// 0xdab6c0
	void LeaveQueue();// 0xdab500
	void InitConnection(FString ServerURL);// 0xdaafc0
	void HostTravelRequestReconnect(int TimeLeftInMatch, float SecondsPerRetry);// 0xdaaeb0

--------------------------------
Class: SQServerListItemWidget.UserWidget.Widget.Visual.Object
	int ItemIndex;//[Offset: 0x260, Size: 1]
	BlueprintSessionResult SessionResult;//[Offset: 0x268, Size: 1]
	FString ServerName;//[Offset: 0x370, Size: 1]
	bool bAnticheatProtected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x380, Size: 1]
	bool bIsModded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x381, Size: 1]
	bool bIsWhitelisted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x382, Size: 1]
	FString GameVersion;//[Offset: 0x388, Size: 1]
	SQSessionFlagStruct SessionFlagStruct;//[Offset: 0x398, Size: 1]
	int ServerHealth;//[Offset: 0x3a0, Size: 1]
	bool bLicensedServer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a4, Size: 1]
	int MatchTimeout;//[Offset: 0x3a8, Size: 1]
	bool bPasswordProtected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3ac, Size: 1]
	FString LayerNameString;//[Offset: 0x3b0, Size: 1]
	SQLayer* Layer;//[Offset: 0x3c0, Size: 1]
	FText LayerName;//[Offset: 0x3c8, Size: 1]
	Timespan PlayedTime;//[Offset: 0x3e0, Size: 1]
	SQFactionSetup* TeamOneFactionSetup;//[Offset: 0x3e8, Size: 1]
	SQFactionSetup* TeamTwoFactionSetup;//[Offset: 0x3f0, Size: 1]
	FString GameMode;//[Offset: 0x3f8, Size: 1]
	int Ping;//[Offset: 0x408, Size: 1]
	int NumPlayers;//[Offset: 0x40c, Size: 1]
	int MaxNumPlayers;//[Offset: 0x410, Size: 1]
	int NumReservedSlots;//[Offset: 0x414, Size: 1]
	int NumQueuedTotal;//[Offset: 0x418, Size: 1]
	int NumQueuedPublic;//[Offset: 0x41c, Size: 1]
	int PublicQueueLimit;//[Offset: 0x420, Size: 1]
	int NumQueuedReservedMembers;//[Offset: 0x424, Size: 1]
	SQModInfoRequest ModDetailsRequest;//[Offset: 0x428, Size: 1]
	SQModLoadProgress[] ModLoadProgressArray;//[Offset: 0x440, Size: 1]
	void SetSession(out const BlueprintSessionResult Result);// 0xdfaff0
	void ServerConnectionCheckUpdate(SQConnectionCheckResponse UpdateResponse);// 0x1d69c50
	FString GetServerURL();// 0xdfabc0
	void ClientJoinAccepted();// 0x1d69c50
	SQModLoadProgress[] CheckMissingMods();// 0xdfa7f0

--------------------------------
Class: BlueprintSessionResult

--------------------------------
Class: SQSessionFlagStruct
	int ServerHealth;//[Offset: 0x0, Size: 1]
	bool bIsAnticheatProtected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x4, Size: 1]

--------------------------------
Class: SQConnectionCheckResponse
	bool bCanQueue;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	byte CurrentTotalPlayers;//[Offset: 0x1, Size: 1]
	float RoundTripRPCTimeMS;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SQModLoadProgress
	uint64 ID;//[Offset: 0x0, Size: 1]
	FString ServerMD5;//[Offset: 0x8, Size: 1]
	float Progress;//[Offset: 0x18, Size: 1]
	bool bFinishedLoading;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c, Size: 1]
	bool bLoadedSuccessfully;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1d, Size: 1]

--------------------------------
Class: SQModInfoRequest
	SQModInfo[] RequestedModInfoArray;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQModInfo
	uint64 ID;//[Offset: 0x0, Size: 1]
	FString Name;//[Offset: 0x8, Size: 1]
	FString Description;//[Offset: 0x18, Size: 1]
	FString ImageUrl;//[Offset: 0x28, Size: 1]
	FString ClientMD5;//[Offset: 0x38, Size: 1]
	bool bIsWhitelisted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48, Size: 1]
	bool bIsLoaded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x49, Size: 1]
	bool bIsSteamPublished;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4a, Size: 1]
	bool bHasBeenFilled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b, Size: 1]

--------------------------------
Class: OnlineBeaconHost.OnlineBeacon.Actor.Object
	int ListenPort;//[Offset: 0x258, Size: 1]
	OnlineBeaconClient*[] ClientActors;//[Offset: 0x260, Size: 1]

--------------------------------
Class: SQFindSessionsCallbackProxy.OnlineBlueprintCallProxyBase.BlueprintAsyncActionBase.Object
	Object* WorldContextObject;//[Offset: 0x88, Size: 1]
	static bool IsSameServer(out const BlueprintSessionResult ResultA, out const BlueprintSessionResult ResultB);// 0xd887c0
	static SQSessionFlagStruct GetSessionFlagStruct(out const BlueprintSessionResult Result);// 0xd882e0
	static FString GetServerName(out const BlueprintSessionResult Result);// 0xd88110
	static FString GetSearchKeywords(out const BlueprintSessionResult Result);// 0xd87f40
	static int GetPingInMs(out const BlueprintSessionResult Result);// 0xd87cf0
	static bool GetPasswordProtected(out const BlueprintSessionResult Result);// 0xd87b40
	static int GetMaxPlayers(out const BlueprintSessionResult Result);// 0xd87960
	static int GetMatchTimeout(out const BlueprintSessionResult Result);// 0xd877b0
	static FString GetMapName(out const BlueprintSessionResult Result);// 0xd875e0
	static bool GetLicensedServer(Object* WorldContextObject, out const BlueprintSessionResult Result);// 0xd873f0
	static FString GetGameVersion(out const BlueprintSessionResult Result);// 0xd87220
	static FString GetGameMode(out const BlueprintSessionResult Result);// 0xd87050
	static int GetCurrentPlayers(out const BlueprintSessionResult Result);// 0xd86ea0
	static bool GetAnticheatProtected(out const BlueprintSessionResult Result);// 0xd86cc0

--------------------------------
Class: OnlineBlueprintCallProxyBase.BlueprintAsyncActionBase.Object

--------------------------------
Class: BlueprintAsyncActionBase.Object
	void Activate();// 0x2d867e0

--------------------------------
Class: SQFindFriendsCallbackProxy.OnlineBlueprintCallProxyBase.BlueprintAsyncActionBase.Object
	PlayerController* PlayerController;//[Offset: 0x58, Size: 1]

--------------------------------
Class: SQConnectionCheckBeaconClient.OnlineBeaconClient.OnlineBeacon.Actor.Object
	SQServerListItemWidget* ServerWidget;//[Offset: 0x2b8, Size: 1]
	void ServerPong(SQConnectionCheckResponse response);// 0xd71010
	void InitConnection(FString ServerURL);// 0xd70a30

--------------------------------
Class: ModdingRuntimeModInfoDetails
	FString SteamWorkshopURL;//[Offset: 0x0, Size: 1]
	FString ModName;//[Offset: 0x10, Size: 1]
	FString Description;//[Offset: 0x20, Size: 1]
	FString ImageUrl;//[Offset: 0x30, Size: 1]
	float Rating;//[Offset: 0x40, Size: 1]
	FString DayTimeCreated;//[Offset: 0x48, Size: 1]
	FString DayTimeUpdated;//[Offset: 0x58, Size: 1]
	FString NumSubscriptions;//[Offset: 0x68, Size: 1]
	FString NumUniqueVisitors;//[Offset: 0x78, Size: 1]
	FString NumFavorites;//[Offset: 0x88, Size: 1]
	int UpVotes;//[Offset: 0x98, Size: 1]
	int DownVotes;//[Offset: 0x9c, Size: 1]

--------------------------------
Class: SQUISettings.DeveloperSettings.Object
	Color Yellow;//[Offset: 0x38, Size: 1]
	Color Grey;//[Offset: 0x3c, Size: 1]
	Color Other;//[Offset: 0x40, Size: 1]
	LinearColor NeutralColor;//[Offset: 0x44, Size: 1]
	LinearColor FriendlyColor;//[Offset: 0x54, Size: 1]
	LinearColor EnemyColor;//[Offset: 0x64, Size: 1]
	LinearColor SquadColor;//[Offset: 0x74, Size: 1]

--------------------------------
Class: DeveloperSettings.Object

--------------------------------
Class: BP_SquadGameInstance_C.SQGameInstance.GameInstance.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x700, Size: 1]
	SaveDataUIWrapper_C* UISaveDataWrapper;//[Offset: 0x708, Size: 1]
	MulticastInlineDelegateProperty UI Data Changed;//[Size: 1]
	void Get UI Data(out SaveData_UI_C* AsSave Data UI, SaveGame* CallFunc_GetSavedGame_ReturnValue, SaveData_UI_C* K2Node_DynamicCast_AsSave_Data_UI, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Set UI Data(SaveData_UI_C* UISaveData);// 0x1d69c50
	void ReceiveInit();// 0x1d69c50
	void On Origin Rebase(Vector OriginLocation);// 0x1d69c50
	void ExecuteUbergraph_BP_SquadGameInstance(int EntryPoint, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, LinearColor CallFunc_Conv_VectorToLinearColor_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, Vector K2Node_CustomEvent_OriginLocation, SaveDataUIWrapper_C* CallFunc_SpawnObject_ReturnValue);// 0x1d69c50
	void UI Data Changed__DelegateSignature(SaveData_UI_C* Data);// 0x1d69c50

--------------------------------
Class: SaveDataUIWrapper_C.SQSaveGameWrapper.Object

--------------------------------
Class: SQSaveGameWrapper.Object
	class SaveGame* SaveGameClass;//[Offset: 0x28, Size: 1]
	FString SlotName;//[Offset: 0x30, Size: 1]
	bool bClientOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x40, Size: 1]
	SaveGame* SaveGame;//[Offset: 0x48, Size: 1]
	void SetSavedGame(SaveGame* NewSaveGame);// 0xdf7a00
	void Save();// 0xdf7960
	SaveGame* GetSavedGame();// 0xdf7740

--------------------------------
Class: W_MousePosition_C.W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Pos;//[Offset: 0x280, Size: 1]
	bool BPHUD;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	FString Pos String;//[Offset: 0x290, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_MousePosition(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, Vector2D CallFunc_MakeVector2D_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_CommanderActionCondition_C.Object
	SQGameState* GameState;//[Offset: 0x28, Size: 1]
	void Can Use Actions(SQPlayerController* Player, class SQGridData_CommandOption Command Option, bool Require Active, out bool Valid, out FText Out Reason, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, FText K2Node_Select_Default, enum CallFunc_CalculateState_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_GetActionsEnabled_ReturnValue, bool CallFunc_CanUseAction_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQMapWidgetMapMarkerSelectable.SQMapWidgetMapMarker.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	SQMapIconComponent* MapIcon;//[Offset: 0x2f8, Size: 1]
	void OnRightClicked();// 0x1d69c50

--------------------------------
Class: SQMapWidgetMapMarker.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	Texture2D* Texture;//[Offset: 0x2d8, Size: 1]
	LinearColor Tint;//[Offset: 0x2e0, Size: 1]
	int SquadId;//[Offset: 0x2f0, Size: 1]
	int FireTeamId;//[Offset: 0x2f4, Size: 1]
	void OnTintChanged();// 0x1d69c50
	void OnTextureChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnFireteamIdChanged();// 0x1d69c50

--------------------------------
Class: SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	float Angle;//[Offset: 0x2a0, Size: 1]
	SQColorsDataAsset* ColorsDataAsset;//[Offset: 0x2a8, Size: 1]
	bool bUseAngleEvent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	float AngleTolerance;//[Offset: 0x2b4, Size: 1]
	float LocationTolerance;//[Offset: 0x2b8, Size: 1]
	void OnTintValueChanged();// 0x1d69c50
	void OnAngleChanged();// 0x1d69c50
	byte GetTintValue();// 0xdb7e00
	LinearColor GetTintColor();// 0xdb7dc0

--------------------------------
Class: SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	float ZOrder;//[Offset: 0x288, Size: 1]
	bool bAutoSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28c, Size: 1]
	Vector2D Alignment;//[Offset: 0x290, Size: 1]
	SQCoreStateMapComponent* MapComponent;//[Offset: 0x298, Size: 1]

--------------------------------
Class: UMG_BaseHUD_C.SQBaseHudWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2c0, Size: 1]
	AmmoWidget_C* AmmoWidgetNew;//[Offset: 0x2c8, Size: 1]
	CanvasPanel* CanvasPanel_Main;//[Offset: 0x2d0, Size: 1]
	CaptureZoneStatusWidget_C* CaptureZoneStatusWidget;//[Offset: 0x2d8, Size: 1]
	DebugScreenDot_C* DebugScreenDot;//[Offset: 0x2e0, Size: 1]
	FOBStatusWidget_C* FOBStatusWidgetNew;//[Offset: 0x2e8, Size: 1]
	W_SquadList_HUD_C* SquadList;//[Offset: 0x2f0, Size: 1]
	TravelQueueWidgetSmall_C* TravelQueueWidgetSmall;//[Offset: 0x2f8, Size: 1]
	UMG_AmmoBagCounter_C* UMG_AmmoBagCounter;//[Offset: 0x300, Size: 1]
	UMG_Compass_C* UMG_Compass;//[Offset: 0x308, Size: 1]
	UMG_NameTag_C* UMG_NameTag;//[Offset: 0x310, Size: 1]
	UMG_NameTag_C* UMG_NameTagSL;//[Offset: 0x318, Size: 1]
	UMG_PostRecovery_C* UMG_PostRecovery;//[Offset: 0x320, Size: 1]
	UMG_SeatProgress_C* UMG_ProgressBar;//[Offset: 0x328, Size: 1]
	UMG_SeedingPhaseStatusText_C* UMG_SeedingPhaseStatusText;//[Offset: 0x330, Size: 1]
	UMG_SightRange_C* UMG_SightRange;//[Offset: 0x338, Size: 1]
	UMG_StagingTimerText_C* UMG_StagingTimerText;//[Offset: 0x340, Size: 1]
	UMG_StaminaWidget_C* UMG_StaminaWidget;//[Offset: 0x348, Size: 1]
	UMG_StanceState_C* UMG_StanceState;//[Offset: 0x350, Size: 1]
	UMG_VehicleSpeedo_C* UMG_VehicleStats;//[Offset: 0x358, Size: 1]
	UMG_Inventory_C* UMGInventory;//[Offset: 0x360, Size: 1]
	NamedSlot* VOIPList_Slot;//[Offset: 0x368, Size: 1]
	NamedSlot* VoteSlot;//[Offset: 0x370, Size: 1]
	W_ChatBoxBaseHUD_C* W_ChatBoxBaseHUD;//[Offset: 0x378, Size: 1]
	W_DestructionObjectiveEvent_C* W_DestructionObjectiveEvent;//[Offset: 0x380, Size: 1]
	W_FlagCapturedEvent_C* W_FlagCapturedEvent;//[Offset: 0x388, Size: 1]
	W_HelicopterStatus_C* W_HelicopterStatus;//[Offset: 0x390, Size: 1]
	W_InteractableItem_SelfHeal_C* W_InteractableItem_SelfHeal;//[Offset: 0x398, Size: 1]
	W_Medic_GiveUp_C* W_Medic_GiveUp;//[Offset: 0x3a0, Size: 1]
	W_OutOfBounds_C* W_OutOfBounds;//[Offset: 0x3a8, Size: 1]
	W_RestrictedTeamZone_C* W_RestrictedTeamZone;//[Offset: 0x3b0, Size: 1]
	W_LandingCamUI_C* W_UH60M_LandingCamUI;//[Offset: 0x3b8, Size: 1]
	W_Vehicle_Tutorial_C* W_Vehicle_Tutorial;//[Offset: 0x3c0, Size: 1]
	W_VehicleSeatList_C* W_VehicleSeatList;//[Offset: 0x3c8, Size: 1]
	W_VehicleStatus_C* W_VehicleStatus;//[Offset: 0x3d0, Size: 1]
	W_VoipOwningPlayer_C* W_VoipOwningPlayer;//[Offset: 0x3d8, Size: 1]
	W_NotificationPanel_C* Notification Widget;//[Offset: 0x3e0, Size: 1]
	W_VoipList_C* Voip Widget;//[Offset: 0x3e8, Size: 1]
	class W_HealPrompt_C* Heal Prompt Class Widget;//[Offset: 0x3f0, Size: 1]
	W_HealPrompt_C* Heal Prompt Widget;//[Offset: 0x3f8, Size: 1]
	void Get Seeding Phase Widget(out UMG_SeedingPhaseStatusText_C* SeedingPhaseWidget);// 0x1d69c50
	void Get Destruction Event Widget(out W_DestructionObjectiveEvent_C* Destruction Event Widget);// 0x1d69c50
	void Get Capture Event Widget(out W_FlagCapturedEvent_C* Capture Event Widget);// 0x1d69c50
	void Create Heal Prompt(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, W_HealPrompt_C* CallFunc_Create_ReturnValue, Anchors K2Node_MakeStruct_Anchors);// 0x1d69c50
	void Create Voip(bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_VoipList_C* CallFunc_Create_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void Create Notifications(Anchors K2Node_MakeStruct_Anchors, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_NotificationPanel_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Create Approval(Anchors K2Node_MakeStruct_Anchors, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, UMG_ApprovalQueueWidget_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature(bool bIsOpen);// 0x1d69c50
	void UpdateVoipPosition();// 0x1d69c50
	void ExecuteUbergraph_UMG_BaseHUD(int EntryPoint, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D CallFunc_GetSize_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_ComponentBoundEvent_bIsOpen, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Anchors CallFunc_GetAnchors_ReturnValue, Vector2D CallFunc_GetAlignment_ReturnValue, Vector2D CallFunc_GetPosition_ReturnValue, Vector2D CallFunc_GetSize_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Anchors CallFunc_GetAnchors_ReturnValue, Vector2D CallFunc_GetAlignment_ReturnValue, Vector2D CallFunc_GetPosition_ReturnValue);// 0x1d69c50

--------------------------------
Class: AmmoWidget_C.SQAmmoWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x370, Size: 1]
	TextBlock* BPAmmoCountTextBlock;//[Offset: 0x378, Size: 1]
	Image* BPChamberedRound;//[Offset: 0x380, Size: 1]
	TextBlock* BPFiremode;//[Offset: 0x388, Size: 1]
	TextBlock* BPWeaponName;//[Offset: 0x390, Size: 1]
	TextBlock* BPZeroingTextblock;//[Offset: 0x398, Size: 1]
	CanvasPanel* CanvasPanel;//[Offset: 0x3a0, Size: 1]
	CanvasPanel* CanvasWeaponName;//[Offset: 0x3a8, Size: 1]
	MagazineGroupWidget_C* MagGroup1;//[Offset: 0x3b0, Size: 1]
	MagazineGroupWidget_C* MagGroup2;//[Offset: 0x3b8, Size: 1]
	UMG_VehicleCargo_C* UMG_VehicleCargo;//[Offset: 0x3c0, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x3c8, Size: 1]
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void OnCurrentWeaponChanged();// 0x1d69c50
	void OnShowResourceAmounts();// 0x1d69c50
	void OnShowCurrentWeapon();// 0x1d69c50
	void ExecuteUbergraph_AmmoWidget(int EntryPoint, SQMagazineGroupWidget*[] K2Node_MakeArray_Array);// 0x1d69c50

--------------------------------
Class: MagazineGroupWidget_C.SQMagazineGroupWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	MagazineWidget_C* MagazineWidget_C;//[Offset: 0x278, Size: 1]
	MagazineWidget_C* MagazineWidget_C;//[Offset: 0x280, Size: 1]
	MagazineWidget_C* MagazineWidget_C_00;//[Offset: 0x288, Size: 1]
	MagazineWidget_C* MagazineWidget_C_01;//[Offset: 0x290, Size: 1]
	MagazineWidget_C* MagazineWidget_C_02;//[Offset: 0x298, Size: 1]
	MagazineWidget_C* MagazineWidget_C_03;//[Offset: 0x2a0, Size: 1]
	MagazineWidget_C* MagazineWidget_C_04;//[Offset: 0x2a8, Size: 1]
	MagazineWidget_C* MagazineWidget_C_05;//[Offset: 0x2b0, Size: 1]
	MagazineWidget_C* MagazineWidget_C_06;//[Offset: 0x2b8, Size: 1]
	MagazineWidget_C* MagazineWidget_C_07;//[Offset: 0x2c0, Size: 1]
	MagazineWidget_C* MagazineWidget_C_08;//[Offset: 0x2c8, Size: 1]
	MagazineWidget_C* MagazineWidget_C_09;//[Offset: 0x2d0, Size: 1]
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void ExecuteUbergraph_MagazineGroupWidget(int EntryPoint, SQMagazineWidget*[] K2Node_MakeArray_Array);// 0x1d69c50

--------------------------------
Class: MagazineWidget_C.SQMagazineWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	Image* BPAmmoStatus;//[Offset: 0x278, Size: 1]
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void ExecuteUbergraph_MagazineWidget(int EntryPoint);// 0x1d69c50

--------------------------------
Class: UMG_VehicleCargo_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* AmmoAmount;//[Offset: 0x268, Size: 1]
	Image* ConstructionAmount;//[Offset: 0x270, Size: 1]
	Image* EmptyAmount;//[Offset: 0x278, Size: 1]
	HorizontalBox* H_Ammo;//[Offset: 0x280, Size: 1]
	HorizontalBox* H_Construction;//[Offset: 0x288, Size: 1]
	Image* Image;//[Offset: 0x290, Size: 1]
	Image* Image;//[Offset: 0x298, Size: 1]
	SizeBox* SizeBox_Parent;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_AmmoAmount;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_ConstructionAmount;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Max;//[Offset: 0x2b8, Size: 1]
	TextBlock* WeaponName;//[Offset: 0x2c0, Size: 1]
	float Ammo;//[Offset: 0x2c8, Size: 1]
	float Construction;//[Offset: 0x2cc, Size: 1]
	float Total Points;//[Offset: 0x2d0, Size: 1]
	bool Has Ammo Weapon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d4, Size: 1]
	bool Has Construction Weapon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d5, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2d8, Size: 1]
	SQVehicleSeatComponent* Current Seat;//[Offset: 0x2e0, Size: 1]
	SQVehicleResourceWeaponInventoryComponent* VehicleResourceInventory;//[Offset: 0x2e8, Size: 1]
	void ValueSizeBox(float InPoints, out float Size, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void DisableUI(SQVehicle* CachedVehicleRef, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void SetupUI(SQVehicle* VehicleRef, SQVehicleInventoryComponent* CallFunc_GetVehicleInventory_ReturnValue, SQVehicleResourceWeaponInventoryComponent* K2Node_DynamicCast_AsSQVehicle_Resource_Weapon_Inventory_Component, bool K2Node_DynamicCast_bSuccess, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void Set Name(SQVehicleInventoryComponent* CallFunc_GetSeatPawnInventory_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Refresh Info(bool bIsRefreshInfoBound, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, bool Temp_bool_Variable, enum K2Node_Select_Default, enum K2Node_Select_Default, FText CallFunc_Conv_FloatToText_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, float CallFunc_ValueSizeBox_Size, float CallFunc_ValueSizeBox_Size, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush, SlateBrush K2Node_MakeStruct_SlateBrush, FText CallFunc_Conv_FloatToText_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_GetTotalSharedResourceAmount_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void ExecuteUbergraph_UMG_VehicleCargo(int EntryPoint, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50

--------------------------------
Class: CaptureZoneStatusWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	ProgressBar* CaptureBar;//[Offset: 0x268, Size: 1]
	Image* CaptureRateIcon;//[Offset: 0x270, Size: 1]
	Image* FlagImage;//[Offset: 0x278, Size: 1]
	Overlay* Overlay_Root;//[Offset: 0x280, Size: 1]
	SizeBox* SizeBox_CaptureBar;//[Offset: 0x288, Size: 1]
	TextBlock* TB_FlagName;//[Offset: 0x290, Size: 1]
	Image* UncapOverlay;//[Offset: 0x298, Size: 1]
	LinearColor Friendly Color;//[Offset: 0x2a0, Size: 1]
	LinearColor Enemy Color;//[Offset: 0x2b0, Size: 1]
	SQCaptureZoneComponent* CaptureZone;//[Offset: 0x2c0, Size: 1]
	MaterialInstanceDynamic* Scaling_MID;//[Offset: 0x2c8, Size: 1]
	int MaxNumArrows;//[Offset: 0x2d0, Size: 1]
	void CanLocalPlayerCapture(out bool Result, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_GetCanTeamCapture_ReturnValue);// 0x1d69c50
	void Fog of War(enum Temp_byte_Variable, enum Temp_byte_Variable, SQGameState* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_GetTeamHaveKnowledge_ReturnValue, bool CallFunc_GetCanTeamCapture_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	FText Get Location(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, const Vector2D CallFunc_GetNumGridLines_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, FString CallFunc_MapLocationToGridCoordinateString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Refresh Widget(bool bCanLocalPlayerCap, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, enum K2Node_Select_Default, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, enum Temp_byte_Variable, bool Temp_bool_Variable, bool CallFunc_CanLocalPlayerCapture_Result, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, CaptureZoneStats CallFunc_GetCurrentModeCaptureZoneStats_OutputCaptureZoneStats, bool CallFunc_GetCurrentModeCaptureZoneStats_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float K2Node_Select_Default, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_GetValueRange_MinValue, float CallFunc_GetValueRange_MaxValue, float K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_NormalizeToRange_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, float CallFunc_MapRangeClamped_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float Temp_float_Variable, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, LinearColor CallFunc_GetProgressColor_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, enum K2Node_Select_Default, class Pawn CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, Texture2D* CallFunc_GetFlagBrush_ReturnValue, float K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void UpdateCaptureZone(SQCaptureZoneComponent* CaptureZone, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Update Widget(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, Actor*[] CallFunc_GetOverlappingActors_OverlappingActors, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_Array_Get_Item, SQCaptureZoneComponent* CallFunc_GetComponentByClass_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	Texture2D* GetFlagBrush(bool CallFunc_IsValid_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, BP_SQFaction_C* CallFunc_TryGetCurrentFaction_OutFaction, bool CallFunc_TryGetCurrentFaction_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, Texture2D* CallFunc_TryGetFlagForMap_OutTexture, bool CallFunc_TryGetFlagForMap_ReturnValue);// 0x1d69c50
	LinearColor GetProgressColor(bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQTeamState* CallFunc_GetTeamState_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_CaptureZoneStatusWidget(int EntryPoint, bool K2Node_Event_IsDesignTime, delegate K2Node_CreateDelegate_OutputDelegate, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: ProgressBar.Widget.Visual.Object
	ProgressBarStyle WidgetStyle;//[Offset: 0x108, Size: 1]
	SlateWidgetStyleAsset* Style;//[Offset: 0x2a8, Size: 1]
	SlateBrushAsset* BackgroundImage;//[Offset: 0x2b0, Size: 1]
	SlateBrushAsset* FillImage;//[Offset: 0x2b8, Size: 1]
	SlateBrushAsset* MarqueeImage;//[Offset: 0x2c0, Size: 1]
	float Percent;//[Offset: 0x2c8, Size: 1]
	byte BarFillType;//[Offset: 0x2cc, Size: 1]
	bool bIsMarquee;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2cd, Size: 1]
	Vector2D BorderPadding;//[Offset: 0x2d0, Size: 1]
	delegate PercentDelegate;//[Offset: 0x2d8, Size: 1]
	LinearColor FillColorAndOpacity;//[Offset: 0x2e8, Size: 1]
	delegate FillColorAndOpacityDelegate;//[Offset: 0x2f8, Size: 1]
	void SetPercent(float InPercent);// 0x33ef9e0
	void SetIsMarquee(bool InbIsMarquee);// 0x33ef7a0
	void SetFillColorAndOpacity(LinearColor InColor);// 0x33ef4d0

--------------------------------
Class: ProgressBarStyle.SlateWidgetStyle
	SlateBrush BackgroundImage;//[Offset: 0x8, Size: 1]
	SlateBrush FillImage;//[Offset: 0x90, Size: 1]
	SlateBrush MarqueeImage;//[Offset: 0x118, Size: 1]

--------------------------------
Class: DebugScreenDot_C.UserWidget.Widget.Visual.Object
	Image* DebugCenterDot;//[Offset: 0x260, Size: 1]

--------------------------------
Class: FOBStatusWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Bleeding;//[Offset: 0x268, Size: 1]
	Image* Background;//[Offset: 0x270, Size: 1]
	W_FobBleedRadialTimer_C* BleedRadialProgress;//[Offset: 0x278, Size: 1]
	Image* FOBIcon;//[Offset: 0x280, Size: 1]
	HorizontalBox* HorizontalBox_FobState;//[Offset: 0x288, Size: 1]
	HorizontalBox* HorizontalBox_Points;//[Offset: 0x290, Size: 1]
	Image* Icon;//[Offset: 0x298, Size: 1]
	Image* Icon_State;//[Offset: 0x2a0, Size: 1]
	Image* Image;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	Image* Image;//[Offset: 0x2c0, Size: 1]
	Image* Image;//[Offset: 0x2c8, Size: 1]
	Image* Image;//[Offset: 0x2d0, Size: 1]
	ProgressBar* ProgressBar_Capture;//[Offset: 0x2d8, Size: 1]
	W_FobBleedRadialTimer_C* SpawnRadialProgress;//[Offset: 0x2e0, Size: 1]
	TextBlock* TB_Ammo;//[Offset: 0x2e8, Size: 1]
	TextBlock* TB_Construction;//[Offset: 0x2f0, Size: 1]
	TextBlock* TB_State;//[Offset: 0x2f8, Size: 1]
	SQForwardBase* fob;//[Offset: 0x300, Size: 1]
	TimerHandle RefreshTimerHandle;//[Offset: 0x308, Size: 1]
	LinearColor BleedPulseStartColor;//[Offset: 0x310, Size: 1]
	LinearColor BleedPulseEndColor;//[Offset: 0x320, Size: 1]
	LinearColor Normal FOB Color;//[Offset: 0x330, Size: 1]
	bool IsFOBonSameTeam(SQDeployable* InFOB, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void UnregisterFOB(delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void RegisterFOB(delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void UpdateFobSpawnerProgress(float RemainingTime, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetClientRemainingActivatingTime_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void UpdateProgressBarColor(LinearColor TargetColor, LinearColor DisabledColor, LinearColor NormalColor, LinearColor BleedColor, ProgressBarStyle TempStyle, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void Refresh Data(SQGameState* CallFunc_GetSquadGameState_Return_Value, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, float CallFunc_GetTimeSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, SlateBrush CallFunc_GetBrushFobIcon_ReturnValue, FText CallFunc_GetFobSpawnerText_ReturnValue, FText CallFunc_GetAmmoPoints_ReturnValue, FText CallFunc_GetConPoints_ReturnValue, enum CallFunc_GetEnemyVisibility_ReturnValue);// 0x1d69c50
	void UpdateState(Actor* L Controlled Actor, int Temp_int_Loop_Counter_Variable, int Temp_int_Array_Index_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Actor*[] CallFunc_GetOverlappingActors_OverlappingActors, Pawn* CallFunc_K2_GetPawn_ReturnValue, Actor* CallFunc_Array_Get_Item, SQForwardBase* K2Node_DynamicCast_AsSQForward_Base, bool K2Node_DynamicCast_bSuccess, SQVehicleTurret* K2Node_DynamicCast_AsSQVehicle_Turret, bool K2Node_DynamicCast_bSuccess, SQVehicle* CallFunc_GetVehicle_ReturnValue, bool CallFunc_IsFOBonSameTeam_ReturnValue, bool CallFunc_IsGhost_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQDeployableVehicle* K2Node_DynamicCast_AsSQDeployable_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQDeployable* CallFunc_GetOwnerDeployable_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsFOBonSameTeam_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	SlateBrush GetBrushFobIcon(SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, SlateBrush K2Node_MakeStruct_SlateBrush, SlateBrush K2Node_MakeStruct_SlateBrush, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetClientRemainingActivatingTime_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	FText GetFobSpawnerText(FText Temp_text_Variable, FText Temp_text_Variable, SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, bool Temp_bool_Variable, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_GetClientRemainingActivatingTime_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, FText K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	enum GetEnemyVisibility(enum Ret, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	FText GetAmmoPoints(bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50
	FText GetConPoints(bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50
	float GetCapturePercent(bool CallFunc_IsValid_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_FOBStatusWidget(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQVehicleTurret.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	bool IsCurrentWeaponInputEnabled();// 0xe3caf0
	SQTurretMovementComponent* GetTurretMovementComponent();// 0xe3c880

--------------------------------
Class: SQTurretMovementComponent.SQVelocityRotatingMovementComponent.SQMovementComponentPacked.SQMovementComponentBase.ActorComponent.Object
	SceneComponent* UpdatedPitchComponent;//[Offset: 0x2b0, Size: 1]
	SceneComponent* UpdatedYawComponent;//[Offset: 0x2b8, Size: 1]
	float YawStabilizationSpeed;//[Offset: 0x2c0, Size: 1]
	float PitchStabilizationSpeed;//[Offset: 0x2c4, Size: 1]
	float MaxYawSpeed;//[Offset: 0x2c8, Size: 1]
	float MaxPitchSpeed;//[Offset: 0x2cc, Size: 1]
	bool bHasAcceleration;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	Vector2D InputMultiplier;//[Offset: 0x2d4, Size: 1]

--------------------------------
Class: SQVelocityRotatingMovementComponent.SQMovementComponentPacked.SQMovementComponentBase.ActorComponent.Object
	float AngularDeltaCombineThreshold;//[Offset: 0x1b8, Size: 1]
	SceneComponent* UpdatedComponent;//[Offset: 0x1c0, Size: 1]
	float AccelerationMultiplier;//[Offset: 0x1c8, Size: 1]
	float NoInputDecelerationMultiplier;//[Offset: 0x1cc, Size: 1]
	float DecelerationMultiplier;//[Offset: 0x1d0, Size: 1]
	float StabilizationSpeed;//[Offset: 0x1d4, Size: 1]
	SQRotationConstraints RotationConstraints;//[Offset: 0x1d8, Size: 1]
	CurveFloat* ParentYawToMinPitch;//[Offset: 0x1f8, Size: 1]
	CurveFloat* ParentYawToMaxPitch;//[Offset: 0x200, Size: 1]
	SQVelocityRotatingMovementComponent* HeadingParentComponent;//[Offset: 0x208, Size: 1]
	SQRotationVelocityRepMovement RotationReplicatedMovement;//[Offset: 0x258, Size: 1]
	bool IsDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	bool ToggleStabilization();// 0xe36ef0
	void SetStabilizationTargetHeading(out const Rotator InTargetHeading);// 0xe3cfd0
	void SetStabilizationEnabled(bool bInIsStabilizationEnabled);// 0xe3cf40
	void ServerSetStabilizationTargetHeading(const Rotator InTargetHeading);// 0xe3cdf0
	void OnRep_RotationReplicatedMovement();// 0xe3cc40
	bool IsStabilizationEnabled();// 0xe3cb50
	Quat GetWorldRotation();// 0xe3cab0
	Rotator GetCurrentRotation();// 0xe3c720
	Vector GetCurrentLocation();// 0xe3c6e0
	void ClientSetStabilizationTargetHeading(const Rotator InTargetHeading);// 0xe3c620
	void AddRotationInput(out const Rotator InRotationInput);// 0xe3c470

--------------------------------
Class: SQRotationConstraints
	Vector2D PitchInterval;//[Offset: 0x0, Size: 1]
	Vector2D YawInterval;//[Offset: 0x8, Size: 1]
	Vector2D RollInterval;//[Offset: 0x10, Size: 1]
	bool bLockPitch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x18, Size: 1]
	bool bLockYaw;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x19, Size: 1]
	bool bLockRoll;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1a, Size: 1]

--------------------------------
Class: SQRotationVelocityRepMovement.SQRepMovement

--------------------------------
Class: SQDeployableVehicle.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	SQVehicleInventoryComponent* InventoryComponent;//[Offset: 0x888, Size: 1]
	SQMapIconComponent* MapIconComponent;//[Offset: 0x890, Size: 1]
	SQVehicleExitPointComponent* VehicleExitPoint;//[Offset: 0x898, Size: 1]
	SkeletalMeshComponent* SwivelMeshComponent;//[Offset: 0x8a0, Size: 1]
	SceneComponent* GunMountComponent;//[Offset: 0x8a8, Size: 1]
	SceneComponent* Camera1pPositionComponent;//[Offset: 0x8b0, Size: 1]
	CameraComponent* Camera1pComponent;//[Offset: 0x8b8, Size: 1]
	SpringArmComponent* Camera3pSpringComponent;//[Offset: 0x8c0, Size: 1]
	CameraComponent* Camera3pComponent;//[Offset: 0x8c8, Size: 1]
	bool bIsInThirdPerson;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8d0, Size: 1]
	SQDeployable* OwningDeployable;//[Offset: 0x8d8, Size: 1]
	void TurnAtRate(float Rate);// 0xd7e540
	void Turn(float Rate);// 0xd7e4b0
	void ToggleView();// 0xd7e2e0
	void MouseWheelScroll(float Rate);// 0xd7dd20
	void LookUpAtRate(float Rate);// 0xd7dca0
	void LookUp(float Rate);// 0xd7dc10
	bool IsCurrentWeaponInputEnabled();// 0xd7db40
	SQDeployable* GetOwnerDeployable();// 0xd7c7a0

--------------------------------
Class: SQVehicleExitPointComponent.SceneComponent.ActorComponent.Object
	bool bIsWaterExitPoint;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1f8, Size: 1]
	bool CanExit();// 0xe36f40

--------------------------------
Class: W_FobBleedRadialTimer_C.SQProgressWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	Image* RadialBar;//[Offset: 0x288, Size: 1]
	bool Reversed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	MaterialInstanceDynamic* Material;//[Offset: 0x298, Size: 1]
	void SetProgress(float ProgressPct, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default);// 0x1d69c50
	void BPOnTimerStarted();// 0x1d69c50
	void BPOnTimerProgress(float RemainingPct);// 0x1d69c50
	void BPOnTimerCanceled();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_FobBleedRadialTimer(int EntryPoint, float K2Node_Event_RemainingPct, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_SquadList_HUD_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* CloseSQList;//[Offset: 0x268, Size: 1]
	WidgetAnimation* NotifyChange;//[Offset: 0x270, Size: 1]
	SizeBox* InputSizeBox;//[Offset: 0x278, Size: 1]
	W_Menu_Input_ToolTip_C* InputToolTip;//[Offset: 0x280, Size: 1]
	BackgroundBlur* InputToolTipBlur;//[Offset: 0x288, Size: 1]
	GridPanel* SquadGrid;//[Offset: 0x290, Size: 1]
	BackgroundBlur* SquadListBlur;//[Offset: 0x298, Size: 1]
	Border* SquadListBorder;//[Offset: 0x2a0, Size: 1]
	VerticalBox* VerticalBox_SQList;//[Offset: 0x2a8, Size: 1]
	int Max List Size;//[Offset: 0x2b0, Size: 1]
	SQHUD* REF HUD;//[Offset: 0x2b8, Size: 1]
	W_SquadList_HUD_Player_C*[] Squad Player Widgets;//[Offset: 0x2c0, Size: 1]
	bool bIsOpen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	MulticastInlineDelegateProperty OnToggledOpen;//[Size: 1]
	enum Get_VerticalBox_SQList_Visibility(PlayerController* CallFunc_GetPlayerController_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void UpdateDisplay(bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, float K2Node_Select_Default, float K2Node_Select_Default, Margin K2Node_MakeStruct_Margin, BorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, FText K2Node_Select_Default, enum K2Node_Select_Default, VerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, byte K2Node_Select_Default);// 0x1d69c50
	void ToggleOpen(bool bIsOpen);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnSetRootWidget();// 0x1d69c50
	void OnChangeNotified();// 0x1d69c50
	void PlayOpenCloseAnimation(byte Direction);// 0x1d69c50
	void ExecuteUbergraph_W_SquadList_HUD(int EntryPoint, bool K2Node_Event_IsDesignTime, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, byte K2Node_CustomEvent_Direction, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	void OnToggledOpen__DelegateSignature(bool bIsOpen);// 0x1d69c50

--------------------------------
Class: BorderSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x38, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x48, Size: 1]
	byte VerticalAlignment;//[Offset: 0x49, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33e3a90
	void SetPadding(Margin InPadding);// 0x33e3310
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33e2be0

--------------------------------
Class: BP_HUD_C.SQHUD.HUD.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x940, Size: 1]
	UI_Events_Component_C* UI_Events_Component;//[Offset: 0x948, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x950, Size: 1]
	Texture2D* SquadLeadSymbolTexture;//[Offset: 0x958, Size: 1]
	BaseRadialMenu_C* RadialMenu;//[Offset: 0x960, Size: 1]
	float DamageIndicatorOpacity;//[Offset: 0x968, Size: 1]
	float DamageIndicatorFadeOutTime;//[Offset: 0x96c, Size: 1]
	bool HiddenWidgets;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x970, Size: 1]
	MainMenuScreen_C* MainMenu_Widget;//[Offset: 0x978, Size: 1]
	bool bShowingMainMenu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x980, Size: 1]
	TimerHandle ShowMarkerPlacementResetTimer;//[Offset: 0x988, Size: 1]
	float NewMarkerShowTime;//[Offset: 0x990, Size: 1]
	float HudMarkerScaleTime;//[Offset: 0x994, Size: 1]
	float HudMarkerSolidTime;//[Offset: 0x998, Size: 1]
	UMG_Compass_C* CompassWidgetNewUMG;//[Offset: 0x9a0, Size: 1]
	float MarkerStartFadeDistance;//[Offset: 0x9a8, Size: 1]
	float MarkerEndFadeDistance;//[Offset: 0x9ac, Size: 1]
	float MarkerScaleSizeMultiplier;//[Offset: 0x9b0, Size: 1]
	class SQHUDWidget[] WidgetTypesToHideOnMainMenu;//[Offset: 0x9b8, Size: 1]
	UMG_MenuBase_C* Deployment;//[Offset: 0x9c8, Size: 1]
	UMG_MenuBase_C* Command;//[Offset: 0x9d0, Size: 1]
	class SQBaseHudWidget* SQ Base HUD Class;//[Offset: 0x9d8, Size: 1]
	UMG_MenuBase_C* RoamingMap;//[Offset: 0x9e0, Size: 1]
	bool OpenMutex;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9e8, Size: 1]
	MulticastInlineDelegateProperty Zoom Updated;//[Size: 1]
	W_SQMapCore_C* MapCore;//[Offset: 0xa00, Size: 1]
	class UMG_MenuBase_C* Command Widget Class;//[Offset: 0xa08, Size: 1]
	class UMG_MenuBase_C* Deployment Widget Class;//[Offset: 0xa10, Size: 1]
	class UMG_MenuBase_C* Roaming Widget Class;//[Offset: 0xa18, Size: 1]
	class UMG_VoteScreen_C* VoteWidgetClass;//[Offset: 0xa20, Size: 1]
	UMG_MenuBase_C*[] All Menus;//[Offset: 0xa28, Size: 1]
	SQMapMarker* Last HUD Marker;//[Offset: 0xa38, Size: 1]
	W_WorldMarker_C* Last Widget Marker;//[Offset: 0xa40, Size: 1]
	MulticastInlineDelegateProperty Clear Widgets;//[Size: 1]
	SQNotificationData* Notification Data;//[Offset: 0xa58, Size: 1]
	class W_InteractableWidgetList_Master_C* Interact Widget Class;//[Offset: 0xa60, Size: 1]
	SQInteractableWidgetList* Interact Widget;//[Offset: 0xa68, Size: 1]
	class W_EndRound_Base_C* End Round Widget Class;//[Offset: 0xa70, Size: 1]
	MulticastInlineDelegateProperty Menu Closed;//[Size: 1]
	MulticastInlineDelegateProperty Menu Opened;//[Size: 1]
	MulticastInlineDelegateProperty HUD Can Start;//[Size: 1]
	class BP_RadialMenuModel_C* Default Voice Radial;//[Offset: 0xaa8, Size: 1]
	MulticastInlineDelegateProperty OnMapCoreChanged;//[Size: 1]
	UMG_VoteScreen_C* VoteScreen;//[Offset: 0xac0, Size: 1]
	W_RadialWheel_C* ModularRadialMenu;//[Offset: 0xac8, Size: 1]
	void Get Showing Main Menu(out bool Showing);// 0x1d69c50
	void Get Interactable Widget(out SQInteractableWidgetList* Interact Widget);// 0x1d69c50
	void Get UI Input Stacks(out SQInputState[] Input Stacks);// 0x1d69c50
	void Get Scoreboard(out SQScoreboard* ScoreBoard);// 0x1d69c50
	void Get Map Component(out SQCoreStateMapComponent* Map Component);// 0x1d69c50
	void Get Map Core(out W_SQMapCore_C* Map Core);// 0x1d69c50
	void Get Is Showing Settings Menu(out bool Showing Main Menu);// 0x1d69c50
	void Get Main Menus(out UMG_MenuBase_C* Deployment, out UMG_MenuBase_C* Command, out UMG_MenuBase_C* Roaming);// 0x1d69c50
	void Get Radial Menu(out BaseRadialMenu_C* Radial Menu);// 0x1d69c50
	void DestroyEmoteMenu(SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void CreateEmoteMenu(out BaseRadialMenu_C* OutputPin, BP_TeamInfo_C* L Info, BP_PlayerController_C* L PC, class BP_RadialMenuModel_C L Model To Draw, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQEmotePlayer* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_CanShowEmotesWheel_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Pawn* CallFunc_GetOwningPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, BaseRadialMenu_C* CallFunc_CreateRadialMenu_OutputPin, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void IsEndOfMatch(out bool Out Is End Of Match, bool CallFunc_MatchWaitingAfterCompletion_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void CreateVoteScreen(UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, UMG_VoteScreen_C* CallFunc_Create_ReturnValue, interface classNone CallFunc_SetVoteScreenActive_self_CastInput);// 0x1d69c50
	void IsGameStateValid(out bool IsValid, SQTeamState* CallFunc_TryGetLocalPlayerTeamState_OutTeamState, bool CallFunc_TryGetLocalPlayerTeamState_ReturnValue, SQGameState* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue);// 0x1d69c50
	void Remove All Interactable Widgets(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_InteractableWidgetList_Master_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_InteractableWidgetList_Master_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void CreateVoiceMenu(SQPlayerController* L SQPC, class BP_RadialMenuModel_C L Model To Draw, bool CallFunc_IsValidClass_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanOpenRadialMenu_CanOpenRadialMenu, BaseRadialMenu_C* CallFunc_CreateRadialMenu_OutputPin, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Get Interactor Display Name(Actor* Actor, out FText Name, FText L Text, FText L Object Name, FString CallFunc_GetDisplayName_ReturnValue, FString CallFunc_Replace_ReturnValue, FString CallFunc_Replace_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Draw Interact Widget(Actor* Actor, bool Add, bool CallFunc_IsValid_ReturnValue, class SQInteractableWidgetList CallFunc_GetObjectClass_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, interface classNone K2Node_DynamicCast_AsSQUsable, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQUsableData CallFunc_GetUsableData_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, interface classNone K2Node_DynamicCast_AsIWidget_Interactable, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, SQInteractableWidgetList* CallFunc_Create_ReturnValue, interface classNone K2Node_DynamicCast_AsIWidget_Interactable, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Close Radial Menu(bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Load Icon Scale(SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Show Spawn Points(SaveData_UI_C* L Save);// 0x1d69c50
	void Create Deployment(UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, W_DeploymentMenu_C* K2Node_DynamicCast_AsW_Deployment_Menu, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, UMG_MenuBase_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void ZoomMapWithWheel(float WheelAxis, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Is_Open_Open, bool CallFunc_Is_Open_Transitioning, bool CallFunc_IsValid_ReturnValue, W_DeploymentMenu_C* K2Node_DynamicCast_AsW_Deployment_Menu, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Is_Open_Open, bool CallFunc_Is_Open_Transitioning, float CallFunc_GetRenderOpacity_ReturnValue, EventReply CallFunc_ReceiveMouseWheel_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);// 0x1d69c50
	void Remove Menus(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_SQRoamingMap_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_SQRoamingMap_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, W_CommandUI_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_CommandUI_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, W_DeploymentMenu_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_DeploymentMenu_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Configure Map(W_SQMapCore_C* Target);// 0x1d69c50
	void Call Zoom Update(float Zoom Amount);// 0x1d69c50
	void Remove SL Menu(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_GridMenu_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_GridMenu_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Close All Menus(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, UMG_MenuBase_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Create RoamingMap(PlayerController* CallFunc_GetPlayerController_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, UMG_MenuBase_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Create Command(PlayerController* CallFunc_GetPlayerController_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, UMG_MenuBase_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Clear Floating Widgets(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_FloatingWidget_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_FloatingWidget_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Toggle Menu(bool Instant, UMG_MenuBase_C* In Menu, bool Show Mouse, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void CreateChat(PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, DrawChatWidget_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void CreateScoreboard(UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, UMG_Scoreboard_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void DrawCurrentMapMarker(float HudMarkerSize, W_WorldMarker_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, BP_GenericMapMarker_C* K2Node_DynamicCast_AsBP_Generic_Map_Marker, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void GetPlayerStateFromSoldier(Pawn* Pawn, out PlayerState* PlayerState, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQVehicleSeatComponent* CallFunc_GetCurrentSeat_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue);// 0x1d69c50
	void ToggleMainMenu();// 0x1d69c50
	void DestroyRadialMenu(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void DestroyCommandMenu(SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void CreateRadialMenu(class BP_RadialMenuModel_C Model, FName CloseWindowCommand, Object* Context, bool bEditMode, bool bCenterMouse, out BaseRadialMenu_C* OutputPin, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, BaseRadialMenu_C* CallFunc_Create_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void CreateCommandMenu(BP_TeamInfo_C* L Info, BP_PlayerController_C* L PC, class BP_RadialMenuModel_C L Model To Draw, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, BaseRadialMenu_C* CallFunc_CreateRadialMenu_OutputPin, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, BP_FlyingDrone_C* K2Node_DynamicCast_AsBP_Flying_Drone, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, Pawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void ShowHideMainMenu(SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50
	void CreateMainMenu(int Temp_int_Array_Index_Variable, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, MainMenuScreen_C* CallFunc_Create_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, MainMenuScreen_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, UserWidget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void DrawNametag(Pawn* Soldier, Vector2D Scale, LinearColor Color, Vector2D Location, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, int CallFunc_Blueprint_GetSizeX_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, int CallFunc_Blueprint_GetSizeY_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, PlayerState* CallFunc_GetPlayerStateFromSoldier_PlayerState, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, FString CallFunc_GetFullPlayerName_ReturnValue, SQSquadState* CallFunc_GetSquadState_ReturnValue, float CallFunc_GetTextSize_OutWidth, float CallFunc_GetTextSize_OutHeight, bool CallFunc_IsValid_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsMedic_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue);// 0x1d69c50
	void ZoomMap(UMG_MenuBase_C* L Current Menu, bool Zoomed, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, UMG_MenuBase_C*[] K2Node_MakeArray_Array, bool Temp_bool_Variable, UMG_MenuBase_C* CallFunc_Array_Get_Item, W_SQMapCore_C* K2Node_Select_Default, bool CallFunc_Is_Open_Open, bool CallFunc_Is_Open_Transitioning, int CallFunc_Array_Length_ReturnValue, float CallFunc_IncrementMapZoomLevel_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Close Menu(UMG_MenuBase_C* Target Menu, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Menus, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Close_UI_Element_Success);// 0x1d69c50
	void Open Menu(UMG_MenuBase_C* Target Menu, bool Show Mouse, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Menus, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Open_UI_Element_Success);// 0x1d69c50
	void DrawHUD(int Width, int Height, float Size Y, float Size X, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_MatchInProgress_ReturnValue);// 0x1d69c50
	void DrawHealthIcon(float Size X, float Size Y, Pawn* CallFunc_GetPlayerPawn_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetMaxHealth_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue);// 0x1d69c50
	void CalculateHitIndicatorOpacity(float Delta Time, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void DrawHitIndicator(float Size X, float Size Y, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, LinearColor CallFunc_MakeColor_ReturnValue);// 0x1d69c50
	void DrawTicketCount(float Size X, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetTickets_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, float CallFunc_GetTextSize_OutWidth, float CallFunc_GetTextSize_OutHeight, float CallFunc_Subtract_FloatFloat_ReturnValue);// 0x1d69c50
	void Open Deployment();// 0x1d69c50
	void Set Commander Max Cooldowns();// 0x1d69c50
	void Start Match();// 0x1d69c50
	void ReceiveDrawHUD(int SizeX, int SizeY);// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void BlueprintNotifyHit(float DamageTaken, out const DamageEvent DamageEvent, Pawn* PawnInstigator);// 0x1d69c50
	void HideMarkerPlacement_Event();// 0x1d69c50
	void VehicleCreateOverlay(class SQVehicleViewWidget WidgetClass);// 0x1d69c50
	void DisplayAmmoBagOverlay(SQDeployableAmmoBag* ammobag, bool bCanPickup);// 0x1d69c50
	void HideAmmoBagOverlay(SQDeployableAmmoBag* ammobag);// 0x1d69c50
	void Force Update Zoom(float Zoom Amount);// 0x1d69c50
	void OnDied();// 0x1d69c50
	void ReceiveEndPlay(byte EndPlayReason);// 0x1d69c50
	void ReceiveDestroyed();// 0x1d69c50
	void BPOnSetHudWidgetsEnabled(bool bEnabled);// 0x1d69c50
	void BPOnUsableVisible(Actor* Actor, bool bIsVisible);// 0x1d69c50
	void Show End Round Widget(int Winning Team, int Losing Team, int Winning Tickets, int Losing Tickets);// 0x1d69c50
	void Show Scoreboard();// 0x1d69c50
	void Hide Scoreboard();// 0x1d69c50
	void Toggle Scoreboard();// 0x1d69c50
	void Open Voice Model();// 0x1d69c50
	void Show 3D Marker(SQMapMarker* Marker);// 0x1d69c50
	void Create Radial Menu(class BP_RadialMenuModel_C Model, FName Close Command, Object* Context);// 0x1d69c50
	void Show End Scoreboard();// 0x1d69c50
	void Clear All Floating Widgets();// 0x1d69c50
	void Toggle Main Menu();// 0x1d69c50
	void Menu Close(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Create SL Menu();// 0x1d69c50
	void Destroy SL Menu();// 0x1d69c50
	void Close Radial();// 0x1d69c50
	void Show Leaderboard(bool Show);// 0x1d69c50
	void Toggle Leaderboard();// 0x1d69c50
	void Menu Toggle(bool Instant, UMG_MenuBase_C* In Menu, bool Show Mouse);// 0x1d69c50
	void Player Died();// 0x1d69c50
	void Game State Became Valid();// 0x1d69c50
	void End Match(int Winning Team, int Losing Team, int Winning Tickets, int Loser Tickets);// 0x1d69c50
	void Close Menus();// 0x1d69c50
	void Destroy Radial();// 0x1d69c50
	void Zoom In Map();// 0x1d69c50
	void Zoom In Map Wheel(float Axis);// 0x1d69c50
	void ShowMarkerOnHUD(SQMapMarkerVisualData MapMarkerVisualData);// 0x1d69c50
	void CreateMapMarker(SQMapMarkerVisualData MapMarkerVisualData);// 0x1d69c50
	void InvalidateMapMarker_Event();// 0x1d69c50
	void DeleteMarkerOnHUD();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void CreateEmoteWheel();// 0x1d69c50
	void DestroyEmoteWheel();// 0x1d69c50
	void ExecuteUbergraph_BP_HUD(int EntryPoint, W_WorldMarker_C* CallFunc_Create_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, int K2Node_Event_SizeX, int K2Node_Event_SizeY, float K2Node_Event_DeltaSeconds, float K2Node_Event_DamageTaken, const DamageEvent K2Node_Event_DamageEvent, Pawn* K2Node_Event_PawnInstigator, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, class SQVehicleViewWidget K2Node_Event_WidgetClass, bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, SQVehicleViewWidget* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQDeployableAmmoBag* K2Node_Event_AmmoBag, bool K2Node_Event_bCanPickup, SQDeployableAmmoBag* K2Node_Event_AmmoBag, interface classNone K2Node_DynamicCast_AsBPI_Items, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Items, bool K2Node_DynamicCast_bSuccess, float K2Node_CustomEvent_Zoom_Amount, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, SQBaseHudWidget* CallFunc_Create_ReturnValue, byte K2Node_Event_EndPlayReason, bool CallFunc_IsValid_ReturnValue, bool K2Node_Event_bEnabled, Actor* K2Node_Event_Actor, bool K2Node_Event_bIsVisible, int K2Node_CustomEvent_Winning_Team, int K2Node_CustomEvent_Losing_Team, int K2Node_CustomEvent_Winning_Tickets, int K2Node_CustomEvent_Losing_Tickets, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Scoreboard, bool K2Node_DynamicCast_bSuccess, W_EndRound_Base_C* CallFunc_Create_ReturnValue, SQMapMarker* K2Node_Event_Marker, class BP_RadialMenuModel_C K2Node_Event_Model, FName K2Node_Event_Close_Command, Object* K2Node_Event_Context, BaseRadialMenu_C* CallFunc_CreateRadialMenu_OutputPin, UMG_MenuBase_C* K2Node_Event_Menu, bool K2Node_Event_Show, bool K2Node_Event_Instant, UMG_MenuBase_C* K2Node_Event_In_Menu, bool K2Node_Event_Show_Mouse, int K2Node_Event_Winning_Team, int K2Node_Event_Losing_Team, int K2Node_Event_Winning_Tickets, int K2Node_Event_Loser_Tickets, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, float K2Node_Event_Axis, SQMapMarkerVisualData K2Node_Event_MapMarkerVisualData, SQMapMarkerVisualData K2Node_CustomEvent_MapMarkerVisualData, bool CallFunc_HudWidgetsEnabled_ReturnValue, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Anchors K2Node_MakeStruct_Anchors, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsGameStateValid_IsValid, enum Temp_byte_Variable, bool CallFunc_IsEndOfMatch_Out_Is_End_Of_Match, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum Temp_byte_Variable, enum K2Node_Select_Default, bool CallFunc_IsSimulatingInEditor_ReturnValue, BaseRadialMenu_C* CallFunc_CreateEmoteMenu_OutputPin);// 0x1d69c50
	void OnMapCoreChanged__DelegateSignature();// 0x1d69c50
	void HUD Can Start__DelegateSignature();// 0x1d69c50
	void Menu Opened__DelegateSignature(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Menu Closed__DelegateSignature(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Clear Widgets__DelegateSignature();// 0x1d69c50
	void Zoom Updated__DelegateSignature(float Zoom Amount);// 0x1d69c50

--------------------------------
Class: UI_Events_Component_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	SoundCue* GameModeIntroAudio;//[Offset: 0xb8, Size: 1]
	class UserWidget* Game Mode Intro Widget Class;//[Offset: 0xe0, Size: 1]
	UserWidget* Mode Intro Widget;//[Offset: 0xe8, Size: 1]
	GraphNodeBasedBleedComponent_C* Bleed Component;//[Offset: 0xf0, Size: 1]
	SQTeamState* Team State;//[Offset: 0xf8, Size: 1]
	AudioComponent* Current Sound;//[Offset: 0x100, Size: 1]
	SoundCue*[] QueuedSounds;//[Offset: 0x108, Size: 1]
	float Time Between Queued Sounds;//[Offset: 0x118, Size: 1]
	bool GameIntroAlreadyPlayed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x11c, Size: 1]
	void GetCommanderSounds(out SQCommanderSounds CommanderSounds, out bool SoundsAreValid, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void Commander Nomination Sounds(int Team, SQCommanderSounds CallFunc_GetCommanderSounds_CommanderSounds, bool CallFunc_GetCommanderSounds_SoundsAreValid, SQPlayerController* CallFunc_TryGetLocalPlayerController_OutPlayerController, bool CallFunc_TryGetLocalPlayerController_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Commander Changed Sounds(SQPlayerState* Old, SQPlayerState* New, int Team, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, SQPlayerController* CallFunc_TryGetLocalPlayerController_OutPlayerController, bool CallFunc_TryGetLocalPlayerController_ReturnValue, bool Temp_bool_Variable, SQCommanderSounds CallFunc_GetCommanderSounds_CommanderSounds, bool CallFunc_GetCommanderSounds_SoundsAreValid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SoundCue* K2Node_Select_Default, SoundCue* K2Node_Select_Default, bool Temp_bool_Variable, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SoundCue* K2Node_Select_Default);// 0x1d69c50
	void Get Mode Intro ID from Team Short Name(FString Short Name, out int Index, int NewLocalVar, bool K2Node_SwitchString_CmpSuccess);// 0x1d69c50
	void Get Ticket Bleed Component(SQAASGraph*[] CallFunc_GetAllActorsOfClass_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, SQAASGraph* CallFunc_Array_Get_Item, GraphNodeBasedBleedComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Get Intro Audio(SQTeamState* Team, out SoundCue* Output, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, bool CallFunc_Self_Team_is_Attacker_Is_Attacker, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool Temp_bool_Variable, SQFactionGameModeSounds CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, SoundCue* K2Node_Select_Default);// 0x1d69c50
	void Play Flag Capture Animation(SQCaptureZoneComponent* Capture Zone Component, byte New Owning Team, byte Last Owning Team, Actor* CallFunc_GetOwner_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Base_HUD, bool K2Node_DynamicCast_bSuccess, W_FlagCapturedEvent_C* CallFunc_Get_Capture_Event_Widget_Capture_Event_Widget);// 0x1d69c50
	void Play Destruction Objective Animation(int Owner Team, bool Temp_bool_Variable, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, int CallFunc_TryGetLocalPlayerTeamId_OutTeamId, bool CallFunc_TryGetLocalPlayerTeamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_Array_IsValidIndex_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, SoundCue* K2Node_Select_Default, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Base_HUD, bool K2Node_DynamicCast_bSuccess, W_DestructionObjectiveEvent_C* CallFunc_Get_Destruction_Event_Widget_Destruction_Event_Widget);// 0x1d69c50
	void Match is Valid(out bool Valid, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Self Team is Attacker(int ID, out bool Is Attacker, BP_SQLayerTeamConfig_C* CallFunc_TryGetTeamLayerConfig_OutTeamConfig, bool CallFunc_TryGetTeamLayerConfig_ReturnValue, bool CallFunc_IsAttackingTeam_IsAttackingTeam);// 0x1d69c50
	void Init Deployment(UMG_MenuBase_C* Deployment, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void OnLoaded_C2C962FD46CDE84F4452D5B6F1C39B2F(Object* Loaded);// 0x1d69c50
	void Team Selection Changed(SQTeamState* Team);// 0x1d69c50
	void Add Sound to Async Queue(SoundCue* Sound);// 0x1d69c50
	void Load and Play Queued Sound();// 0x1d69c50
	void Delay and Load Queued Sound();// 0x1d69c50
	void Init Commander Team 1();// 0x1d69c50
	void Team 1 Cmdr Changed Event(SQPlayerState* OldCommander, SQPlayerState* NewCommander);// 0x1d69c50
	void Team 2 Cmdr Changed Event(SQPlayerState* OldCommander, SQPlayerState* NewCommander);// 0x1d69c50
	void Team 1 Nomination Started();// 0x1d69c50
	void Team 2 Nomination Started();// 0x1d69c50
	void Init Commander Team 2();// 0x1d69c50
	void OnMatchStart();// 0x1d69c50
	void Reset Player Ticket Low Event();// 0x1d69c50
	void Reset Enemy Ticket Bleed Event();// 0x1d69c50
	void Play Low Ticket Sounds();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_UI_Events_Component(int EntryPoint, PlayerController* CallFunc_GetPlayerController_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, int Temp_int_Variable, W_DeploymentMenu_C* K2Node_DynamicCast_AsW_Deployment_Menu, bool K2Node_DynamicCast_bSuccess, int Temp_int_Variable, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_IsClosed_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, SQTeamState* K2Node_CustomEvent_Team, SoundCue* CallFunc_Get_Intro_Audio_Output, int Temp_int_Variable, Object* Temp_object_Variable, SoundCue* K2Node_DynamicCast_AsSound_Cue, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetPlayerController_ReturnValue, AudioComponent* CallFunc_SpawnSound2D_ReturnValue, UserWidget* CallFunc_Create_ReturnValue, interface classNone K2Node_DynamicCast_AsI_UI_Events, bool K2Node_DynamicCast_bSuccess, Object* K2Node_CustomEvent_Loaded, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, int Temp_int_Variable, bool CallFunc_Match_is_Valid_Valid, SoundCue* K2Node_CustomEvent_Sound, bool CallFunc_IsValidSoftObjectReference_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Array_IsValidIndex_ReturnValue, SoundCue* CallFunc_Array_Get_Item, bool CallFunc_IsValidSoftObjectReference_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, SQPlayerState* K2Node_CustomEvent_OldCommander, SQPlayerState* K2Node_CustomEvent_NewCommander, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQTeamState* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_CustomEvent_OldCommander, SQPlayerState* K2Node_CustomEvent_NewCommander, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Anchors K2Node_MakeStruct_Anchors, bool Temp_bool_Has_Been_Initd_Variable, delegate K2Node_CreateDelegate_OutputDelegate, int K2Node_Select_Default, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, GameStateBase* CallFunc_GetGameState_ReturnValue, SQGameState* K2Node_DynamicCast_AsSQGame_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasMatchStarted_ReturnValue, SQPlayerController* CallFunc_TryGetLocalPlayerController_OutPlayerController, bool CallFunc_TryGetLocalPlayerController_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, int CallFunc_GetTickets_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: GraphNodeBasedBleedComponent_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	SQGraphNodeComponent*[] GraphNodes;//[Offset: 0xb8, Size: 1]
	int[] CapturezonesByTeam;//[Offset: 0xc8, Size: 1]
	int[] CurrentLosers;//[Offset: 0xd8, Size: 1]
	int CurrentWinner;//[Offset: 0xe8, Size: 1]
	bool CountNeutralizedFlagAsLost;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xec, Size: 1]
	int TicketBleedPerLostFlagPerTick;//[Offset: 0xf0, Size: 1]
	float BleedTickFrequencyInSeconds;//[Offset: 0xf4, Size: 1]
	bool BleedOverUnevenFlag;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xf8, Size: 1]
	int[] CachedBleedByTeam;//[Offset: 0x100, Size: 1]
	int MercyBleedValuePerTick;//[Offset: 0x110, Size: 1]
	bool bIsMercyBleedActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x114, Size: 1]
	bool EnableMercyBleedFeature;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x115, Size: 1]
	float MercyBleedTickFrequencyInSeconds;//[Offset: 0x118, Size: 1]
	int BleedFlagPositionShift;//[Offset: 0x11c, Size: 1]
	SQGameMode* GameModeRef;//[Offset: 0x120, Size: 1]
	void SetBleedEnabled(bool bNewBleedEnabled, bool bResetBleedValues, bool bOldBleedEnabled, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_IsComponentTickEnabled_ReturnValue, int Temp_int_Variable, const int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void SetMercyBleedState(bool Enable, float CallFunc_GetComponentTickInterval_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, float CallFunc_GetComponentTickInterval_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void CalculateBleed(int LResultBleedValue, int LTeamID, bool IsLoserTeam, int LControlledCapsThreshold, int LTotalCaptureZones, int Temp_int_Variable, const int Temp_int_Variable, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, bool CallFunc_Less_IntInt_ReturnValue, int K2Node_Select_Default, int CallFunc_Clamp_ReturnValue, int CallFunc_Multiply_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue, int CallFunc_FFloor_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int CallFunc_Multiply_IntInt_ReturnValue, int CallFunc_FFloor_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Variable, int CallFunc_Multiply_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, int Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool Temp_bool_Variable, int K2Node_MathExpression_ReturnValue, int K2Node_Select_Default, int CallFunc_Divide_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void FindLosers(bool winnerUpdated, int Temp_int_Variable, int Temp_int_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void CountCaptureZonesByTeam(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, SQGraphNodeComponent* CallFunc_Array_Get_Item, SQUndirectedGraph* K2Node_DynamicCast_AsSQUndirected_Graph, bool K2Node_DynamicCast_bSuccess, SQCaptureZoneComponent* K2Node_DynamicCast_AsSQCapture_Zone_Component, bool K2Node_DynamicCast_bSuccess, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int Temp_int_Variable, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void CleanArrays(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void TickBleed(int TicksPerMin, int CachedTickets, int Temp_int_Array_Index_Variable, float CallFunc_GetComponentTickInterval_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int CallFunc_FFloor_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_Array_Length_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetTickets_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Divide_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Clamp_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void RecalculateBleedValues();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ExecuteUbergraph_GraphNodeBasedBleedComponent(int EntryPoint, bool CallFunc_HasMatchEnded_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, SQUndirectedGraph* K2Node_DynamicCast_AsSQUndirected_Graph, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaSeconds, float CallFunc_GetComponentTickInterval_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, GraphMercyBleedComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsComponentTickEnabled_ReturnValue, SQGameMode* CallFunc_GetSquadGameMode_Return_Value);// 0x1d69c50

--------------------------------
Class: GraphMercyBleedComponent_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	int TicketLoss;//[Offset: 0xb8, Size: 1]
	int TicketGain;//[Offset: 0xbc, Size: 1]
	int[] CapturezonesByTeam;//[Offset: 0xc0, Size: 1]
	int[] CurrentLosers;//[Offset: 0xd0, Size: 1]
	float TickFrequencyInSeconds;//[Offset: 0xe0, Size: 1]
	bool IsLoser(int CaptureZones, int Team, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void FindLosers(int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_IsLoser_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void CountCaptureZonesByTeam(SQGraphNodeComponent*[] Nodes, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int CallFunc_MakeLiteralInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQGraphNodeComponent* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, SQCaptureZoneComponent* K2Node_DynamicCast_AsSQCapture_Zone_Component, bool K2Node_DynamicCast_bSuccess, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, SQUndirectedGraph* K2Node_DynamicCast_AsSQUndirected_Graph, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void TickBleed(int CachedTickets, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_Array_Length_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetTickets_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int K2Node_Select_Default, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int CallFunc_Clamp_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void OnLatticeUpdated_Event();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ExecuteUbergraph_GraphMercyBleedComponent(int EntryPoint, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, Actor* CallFunc_GetOwner_ReturnValue, SQUndirectedGraph* K2Node_DynamicCast_AsSQUndirected_Graph, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaSeconds, float CallFunc_GetComponentTickInterval_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_FlagCapturedEvent_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* FlagAnim;//[Offset: 0x268, Size: 1]
	WidgetAnimation* AlphaAnim;//[Offset: 0x270, Size: 1]
	Image* Image_Flag;//[Offset: 0x278, Size: 1]
	Image* Image_Progress;//[Offset: 0x280, Size: 1]
	TextBlock* TB_FlagName;//[Offset: 0x288, Size: 1]
	TextBlock* TB_State;//[Offset: 0x290, Size: 1]
	byte New Team;//[Offset: 0x298, Size: 1]
	byte Old Team;//[Offset: 0x299, Size: 1]
	void Set Owner Flag Image(int CallFunc_Conv_ByteToInt_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, SQFaction* CallFunc_GetFaction_ReturnValue, Texture2D* CallFunc_TryGetFlagForMap_OutTexture, bool CallFunc_TryGetFlagForMap_ReturnValue);// 0x1d69c50
	void Set State Text(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Setup Fill Image(SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, int CallFunc_GetTeam_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void Change Flag Image();// 0x1d69c50
	void Play Capture Animation(FText Flag Name, byte New Owning Team, byte Last Owning Team);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_FlagCapturedEvent(int EntryPoint, FText K2Node_CustomEvent_Flag_Name, byte K2Node_CustomEvent_New_Owning_Team, byte K2Node_CustomEvent_Last_Owning_Team, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, FText CallFunc_TextToUpper_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_GetAnimationCurrentTime_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_DestructionObjectiveEvent_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* FlagAnim;//[Offset: 0x268, Size: 1]
	WidgetAnimation* AlphaAnim;//[Offset: 0x270, Size: 1]
	Image* Image_Progress;//[Offset: 0x278, Size: 1]
	TextBlock* TB_State;//[Offset: 0x280, Size: 1]
	int Objective Owner;//[Offset: 0x288, Size: 1]
	int Old Team;//[Offset: 0x28c, Size: 1]
	void Setup Fill Image(int CallFunc_TryGetLocalPlayerTeamId_OutTeamId, bool CallFunc_TryGetLocalPlayerTeamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void Play Destroy Animation(int Objective Owner);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_DestructionObjectiveEvent(int EntryPoint, int K2Node_CustomEvent_Objective_Owner, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_GetAnimationCurrentTime_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_GetEndTime_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_MenuBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	bool bOpen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x268, Size: 1]
	WidgetAnimation* Open Close Anim;//[Offset: 0x270, Size: 1]
	bool bHasOpenCloseOnce;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x278, Size: 1]
	W_SQMapCore_C* MapCore;//[Offset: 0x280, Size: 1]
	SoundBase* Open Close Sound;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty Team Selected;//[Size: 1]
	MulticastInlineDelegateProperty Started Open;//[Size: 1]
	MulticastInlineDelegateProperty Started Close;//[Size: 1]
	MulticastInlineDelegateProperty Finished Open;//[Size: 1]
	MulticastInlineDelegateProperty Finished Close;//[Size: 1]
	void Open UI Element(SQCoreStateMapComponent* Map Component, out bool Success, SQGameState* CallFunc_GetSquadGameState_Return_Value, SQMapMarkerManagerComponent* CallFunc_GetMarkerManager_ReturnValue, float CallFunc_GetAnimationCurrentTime_ReturnValue, bool CallFunc_IsAnimationPlayingForward_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue);// 0x1d69c50
	void Close UI Element(out bool Success, float CallFunc_GetAnimationCurrentTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlayingForward_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue);// 0x1d69c50
	void Get Voting Widget(out UserWidget* Voting Widget);// 0x1d69c50
	void Get Role List Roots(out PanelWidget* Squad Panel, out PanelWidget* Unassigned Panel);// 0x1d69c50
	void Get Squad List Roots(out PanelWidget* Squad Panel, out PanelWidget* Unassigned Panel, out PanelWidget* Commander Panel);// 0x1d69c50
	void Get Spawn Point Roots(out GridPanel* SpawnBase, out GridPanel* SpawnHab, out GridPanel* SpawnRally);// 0x1d69c50
	void On Close();// 0x1d69c50
	void On Open();// 0x1d69c50
	void Configure Map Elements(SQCoreStateMapComponent* MapComponent, SQMapMarkerManagerComponent* MarkerManager, bool CallFunc_IsValid_ReturnValue, PanelWidget* CallFunc_GetElementRoot_Out_Root, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Is Open(out bool Open, out bool Transitioning, bool CallFunc_IsAnimationPlaying_ReturnValue);// 0x1d69c50
	void Key Action();// 0x1d69c50
	void Opened();// 0x1d69c50
	void Closed();// 0x1d69c50
	void ExecuteUbergraph_UMG_MenuBase(int EntryPoint);// 0x1d69c50
	void Finished Close__DelegateSignature();// 0x1d69c50
	void Finished Open__DelegateSignature();// 0x1d69c50
	void Started Close__DelegateSignature();// 0x1d69c50
	void Started Open__DelegateSignature();// 0x1d69c50
	void Team Selected__DelegateSignature(SQTeamState* Team);// 0x1d69c50

--------------------------------
Class: W_DeploymentMenu_C.UMG_MenuBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e0, Size: 1]
	WidgetAnimation* LoadFade;//[Offset: 0x2e8, Size: 1]
	WidgetAnimation* CentreTransition;//[Offset: 0x2f0, Size: 1]
	WidgetAnimation* BlackTransition;//[Offset: 0x2f8, Size: 1]
	WidgetAnimation* DeploymentOpenCloseAnim;//[Offset: 0x300, Size: 1]
	Border* Blackout;//[Offset: 0x308, Size: 1]
	Image* BlockInput;//[Offset: 0x310, Size: 1]
	MainMenu_Button_C* BottomBarRole;//[Offset: 0x318, Size: 1]
	WidgetSwitcher* BottomSwitcher;//[Offset: 0x320, Size: 1]
	ChallengeWindow_C* ChallengeGiveUp;//[Offset: 0x328, Size: 1]
	ChallengeWindow_C* ChallengeLeaveSquad;//[Offset: 0x330, Size: 1]
	ChallengeWindow_C* ChallengeLeaveTeam;//[Offset: 0x338, Size: 1]
	Image* DeployArrow;//[Offset: 0x340, Size: 1]
	MainMenu_Button_C* DeployButton;//[Offset: 0x348, Size: 1]
	SizeBox* GiveupPanel;//[Offset: 0x350, Size: 1]
	Image* Image;//[Offset: 0x358, Size: 1]
	Image* Image;//[Offset: 0x360, Size: 1]
	Image* Image_BGFlag;//[Offset: 0x368, Size: 1]
	Image* Line;//[Offset: 0x370, Size: 1]
	Image* LineBottom;//[Offset: 0x378, Size: 1]
	VerticalBox* Loading;//[Offset: 0x380, Size: 1]
	CanvasPanel* MainPanel;//[Offset: 0x388, Size: 1]
	MainMenu_Button_C* NAV_SQUADS;//[Offset: 0x390, Size: 1]
	MainMenu_Button_C* NAV_TEAMSELECT;//[Offset: 0x398, Size: 1]
	Overlay* Overlay_DeployButton;//[Offset: 0x3a0, Size: 1]
	SizeBox* Size_Centre;//[Offset: 0x3a8, Size: 1]
	W_SquadSelect_C* SquadScreen;//[Offset: 0x3b0, Size: 1]
	WidgetSwitcher* SwitchCentre;//[Offset: 0x3b8, Size: 1]
	WidgetSwitcher* SwitchLoad;//[Offset: 0x3c0, Size: 1]
	TextBlock* TB_ServerName;//[Offset: 0x3c8, Size: 1]
	TextBlock* TB_TeamName;//[Offset: 0x3d0, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x3d8, Size: 1]
	W_TeamSelect_C* TeamScreen;//[Offset: 0x3e0, Size: 1]
	HorizontalBox* TopNavigation;//[Offset: 0x3e8, Size: 1]
	W_GameTime_C* W_GameTime;//[Offset: 0x3f0, Size: 1]
	W_GameTime_C* W_GameTime;//[Offset: 0x3f8, Size: 1]
	W_GiveUp_C* W_GiveUp;//[Offset: 0x400, Size: 1]
	W_PlayerRankAndRole_C* W_PlayerRankAndRole;//[Offset: 0x408, Size: 1]
	W_TeamTickets_C* W_TeamTickets;//[Offset: 0x410, Size: 1]
	W_TerritoryControl_Bar_C* W_TerritoryControl_TugofWar;//[Offset: 0x418, Size: 1]
	W_VoipOwningPlayer_C* W_VoipOwningPlayer;//[Offset: 0x420, Size: 1]
	WidgetSwitcher* WidgetSwitcherTitle;//[Offset: 0x428, Size: 1]
	byte Deploy State;//[Offset: 0x430, Size: 1]
	bool First Team Selection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x431, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x438, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x440, Size: 1]
	MaterialInstanceDynamic* MI_BGFlag;//[Offset: 0x448, Size: 1]
	TimerHandle Respawn Timer;//[Offset: 0x450, Size: 1]
	byte Deploy Screen;//[Offset: 0x458, Size: 1]
	bool Spawn Point Sieged;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x459, Size: 1]
	TimerHandle Update Timer;//[Offset: 0x460, Size: 1]
	W_DeploymentTutorial_C* Deployment Tutorial;//[Offset: 0x468, Size: 1]
	TimerHandle ChangeTeamAnswerTimer;//[Offset: 0x470, Size: 1]
	void SequenceEvent__ENTRYPOINTW_DeploymentMenu();// 0x1d69c50
	void SequenceEvent__ENTRYPOINTW_DeploymentMenu();// 0x1d69c50
	void Get Progression State(out byte Out Progression State, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte K2Node_Select_Default, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, SQGameSpawn* CallFunc_GetSelectedSpawn_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsRecruit_Out_IsRecruit, bool CallFunc_Not_PreBool_ReturnValue, byte K2Node_Select_Default, byte K2Node_Select_Default, byte K2Node_Select_Default);// 0x1d69c50
	void IsProgressionAvailable(bool In Role Available, out bool Out Available, bool Temp_bool_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool CallFunc_MatchWaitingToStart_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_GetRemainingTime_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool K2Node_Select_Default, bool K2Node_Select_Default, bool K2Node_Select_Default);// 0x1d69c50
	void UpdateRoleLists(bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQAvailabilityState_Role[] CallFunc_GetRoles_OutRoles, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Check Mouse Visibility(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQInputState[] CallFunc_Get_UI_Input_Stacks_Input_Stacks, int CallFunc_Add_IntInt_ReturnValue, SQInputState CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_StrStr_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Init Icon Scale(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQCoreStateMapComponent* CallFunc_Get_Map_Component_Map_Component);// 0x1d69c50
	void Create Deployment Tutorial(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Anchors K2Node_MakeStruct_Anchors, W_DeploymentTutorial_C* CallFunc_Create_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Transition Event(bool CallFunc_NotEqual_ByteByte_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue);// 0x1d69c50
	void Is Current Role Available(out bool Available, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsDeployRoleAvailable_ReturnValue);// 0x1d69c50
	void Set All Timers(bool Active);// 0x1d69c50
	void Get Spawn Point Roots(out GridPanel* SpawnBase, out GridPanel* SpawnHab, out GridPanel* SpawnRally);// 0x1d69c50
	void Get Squad List Roots(out PanelWidget* Squad Panel, out PanelWidget* Unassigned Panel, out PanelWidget* Commander Panel);// 0x1d69c50
	void Timer Menu Update(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, SQGameState* CallFunc_GetSquadGameState_Return_Value, FText CallFunc_MakeLiteralText_ReturnValue, bool CallFunc_IsValid_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, float CallFunc_GetGameTimeInSeconds_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_FFloor_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_LessEqual_IntInt_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_BooleanOR_ReturnValue, FText CallFunc_Format_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Update Next Button(bool L_ProgressionAvailable, bool L_RoleAvailable, SQGameSpawn* Selected Spawn, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, byte Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, byte CallFunc_Get_Progression_State_Out_Progression_State, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_Is_Current_Role_Available_Available, bool CallFunc_MatchWaitingToStart_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_GetRemainingTime_ReturnValue, bool CallFunc_IsProgressionAvailable_Out_Available, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, enum K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool Temp_bool_Variable, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, float CallFunc_TimeUntilCanSpawn_ReturnValue, float CallFunc_TimeUntilCanSpawn_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, FText K2Node_Select_Default, LinearColor CallFunc_SelectColor_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, FText K2Node_Select_Default, LinearColor CallFunc_SelectColor_ReturnValue, FText K2Node_Select_Default, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Anim Centre Fade(bool Reverse, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte K2Node_Select_Default, bool CallFunc_IsAnimationPlaying_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50
	void Update Team Flag(MaterialInstanceDynamic* NewLocalVar, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, Texture2D* CallFunc_TryGetFlagForFullScreen_OutTexture, bool CallFunc_TryGetFlagForFullScreen_ReturnValue, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, Object* CallFunc_LoadAsset_Blocking_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	SlateBrush BIND - Image Current Team Flag(SlateBrush K2Node_MakeStruct_SlateBrush, SQFaction* CallFunc_GetFaction_ReturnValue, Texture2D* CallFunc_TryGetFlagForMap_OutTexture, bool CallFunc_TryGetFlagForMap_ReturnValue, Object* CallFunc_LoadAsset_Blocking_ReturnValue, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	FText BIND - Team Name(FText CallFunc_TryGetFactionSetupDisplayName_OutDisplayName, bool CallFunc_TryGetFactionSetupDisplayName_ReturnValue, FText CallFunc_TextToUpper_ReturnValue);// 0x1d69c50
	FText BIND Text - Server Name(bool Temp_bool_Variable, FText Temp_text_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Init Deployment Menu();// 0x1d69c50
	void Goto Team Screen();// 0x1d69c50
	enum BIND Visibility - Block Input(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Set Deployment Screen(byte New Deploy Screen, byte L New Deploy, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue);// 0x1d69c50
	void Next Screen(byte CallFunc_Get_Progression_State_Out_Progression_State, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQFactionSetup* CallFunc_TryGetLocalPlayerFactionSetup_OutFactionSetup, bool CallFunc_TryGetLocalPlayerFactionSetup_ReturnValue, bool CallFunc_RequestRole_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsRecruit_Out_IsRecruit, bool CallFunc_EqualEqual_ByteByte_ReturnValue, SQGameSpawn* CallFunc_GetSelectedSpawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Auto_Select_Spawn_Point_Success);// 0x1d69c50
	FText BIND Text - Map & Mode(SQGameState* CallFunc_GetSquadGameState_Return_Value, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Anim Black Transition(bool Reverse, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, float CallFunc_GetAnimationCurrentTime_ReturnValue, byte K2Node_Select_Default, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__TEAM_K2Node_ComponentBoundEvent_94_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ROLES_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ChallengeLeaveSquad_K2Node_ComponentBoundEvent_651_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ChallengeLeaveSquad_K2Node_ComponentBoundEvent_665_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ButtonSwitch_K2Node_ComponentBoundEvent_1148_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__SquadScreen_K2Node_ComponentBoundEvent_249_Try Leave Squad__DelegateSignature();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void Team Changed(SQTeamState* OldTeam, SQTeamState* NewTeam);// 0x1d69c50
	void BndEvt__BottomBarRole_K2Node_ComponentBoundEvent_361_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__DeployButton_K2Node_ComponentBoundEvent_453_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ChallengeLeaveTeam_K2Node_ComponentBoundEvent_589_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ChallengeLeaveTeam_K2Node_ComponentBoundEvent_606_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void Key Action();// 0x1d69c50
	void BndEvt__ChallengeGiveUp_K2Node_ComponentBoundEvent_183_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ChallengeGiveUp_K2Node_ComponentBoundEvent_202_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__W_GiveUp_K2Node_ComponentBoundEvent_313_GiveUpPressed__DelegateSignature();// 0x1d69c50
	void BndEvt__W_GiveUp_K2Node_ComponentBoundEvent_485_Hide Confirmation__DelegateSignature();// 0x1d69c50
	void SetVisible();// 0x1d69c50
	void Set Menu Update(bool On);// 0x1d69c50
	void Opened();// 0x1d69c50
	void Closed();// 0x1d69c50
	void On Close();// 0x1d69c50
	void On Open();// 0x1d69c50
	void Loading Team();// 0x1d69c50
	void Bind Team Change();// 0x1d69c50
	void BndEvt__TeamScreen_K2Node_ComponentBoundEvent_1_Team Button Pressed__DelegateSignature(SQTeamState* New Team);// 0x1d69c50
	void OnSetRootWidget();// 0x1d69c50
	void DisplayLoadingAnimation();// 0x1d69c50
	void ClosedExclusive();// 0x1d69c50
	void ExecuteUbergraph_W_DeploymentMenu(int EntryPoint, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_Event_IsDesignTime, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_EqualEqual_IntInt_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, int CallFunc_FFloor_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQTeamState* K2Node_CustomEvent_OldTeam, SQTeamState* K2Node_CustomEvent_NewTeam, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsConfigured_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsAnimationPlayingForward_ReturnValue, bool CallFunc_IsAnimationPlayingForward_ReturnValue, bool K2Node_CustomEvent_On, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_SwitchEnum_CmpSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsAnimationPlayingForward_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, SQTeamState* K2Node_ComponentBoundEvent_New_Team, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, GridPanel* CallFunc_Get_Spawn_Point_Roots_SpawnBase, GridPanel* CallFunc_Get_Spawn_Point_Roots_SpawnHab, GridPanel* CallFunc_Get_Spawn_Point_Roots_SpawnRally, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsConfigured_ReturnValue, PanelWidget* CallFunc_Get_Squad_List_Roots_Squad_Panel, PanelWidget* CallFunc_Get_Squad_List_Roots_Unassigned_Panel, PanelWidget* CallFunc_Get_Squad_List_Roots_Commander_Panel, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQEditorPlaySettings* CallFunc_GetEditorPlaySettings_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsShippingBuild_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Pawn* CallFunc_K2_GetPawn_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_SQRoleSettings_C.SQRoleSettings.SQSettings.DataAsset.Object
	byte VehicleCapability;//[Offset: 0x170, Size: 1]
	<byte> Tags;//[Offset: 0x178, Size: 1]
	SQRoleVersion[] RoleVersions;//[Offset: 0x1c8, Size: 1]
	void GetRoleDisplayName(out FString CurrentRoleDisplayName, FSQRoleEntry RoleEntry, FName RowName, DataTable* DataTable, FString RoleName, bool CallFunc_NotEqual_NameName_ReturnValue, FString CallFunc_Conv_NameToString_ReturnValue);// 0x1d69c50
	void GetGroup(out byte Out Group, bool CallFunc_HasTag_Out_Has_Tag, bool CallFunc_HasTag_Out_Has_Tag, bool CallFunc_HasTag_Out_Has_Tag);// 0x1d69c50
	void HasTags(out byte[] In Tags, bool In All, out bool Out Has Tags, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, byte CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	void HasTag(byte In Tag, out bool Out Has Tag, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool TryGetSoldierWithLayer(const SQLayer* InLayer, out class SQSoldier OutSoldier, class SQSoldier[] MatchingRoles, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_RandomInteger_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, class SQSoldier CallFunc_Array_Get_Item, SQRoleVersion CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	bool CanEnterSeat(SQVehicleSeatComponent* Seat, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	void IsRecruit(out bool Out IsRecruit, const byte Temp_byte_Variable, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool IsSquadLeader(const byte Temp_byte_Variable, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool IsMedic(const byte Temp_byte_Variable, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool CanSeeHealthStatus(const byte Temp_byte_Variable, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool CanPlaceRallyPointWithMinimumTeamMate(bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void IsConcernedByStrategy(SQRoleGroupingStrategy InGroupingStrategy, out bool IsConcernedByStrategy, <byte> CallFunc_Set_Intersection_Result, int CallFunc_Set_Length_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void GetRoleEntry(out bool Success, out FSQRoleEntry RoleEntry, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQRoleVersion
	byte Biome_2_D719532142745FEC3461AB9F16BA3047;//[Offset: 0x0, Size: 1]
	class SQSoldier* Role_5_0B1D95B041C0F0B8DCA4CDB248BF9B85;//[Offset: 0x8, Size: 1]

--------------------------------
Class: FSQRoleEntry
	FText DisplayName_2_AE20EB5F4F79C0010BCDCE847B39E625;//[Offset: 0x0, Size: 1]
	FText Details_5_05E7EAEF4F1306A917C5A4837F8F40D0;//[Offset: 0x18, Size: 1]
	FText Specifics_7_184DD04A4D44CF9D518A218A50B31AA6;//[Offset: 0x30, Size: 1]
	Texture2D* UI_Icon_27_CEC409E14C155F9F18EC1C961848686E;//[Offset: 0x48, Size: 1]
	Texture2D* UI_Weapon_26_E1FE2D9E4C5478AF7D2BBB9B09C620FD;//[Offset: 0x70, Size: 1]
	Texture2D* UI_Icon_Simplified_30_F0A249DC42FF99BA8F2F8C896E253CE7;//[Offset: 0x98, Size: 1]

--------------------------------
Class: MainMenu_Button_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Press;//[Offset: 0x268, Size: 1]
	Image* BottomLine;//[Offset: 0x270, Size: 1]
	Button* Button;//[Offset: 0x278, Size: 1]
	HorizontalBox* HorizontalBoxMain;//[Offset: 0x280, Size: 1]
	ScaleBox* IconScaleBox;//[Offset: 0x288, Size: 1]
	Image* LeftLine;//[Offset: 0x290, Size: 1]
	Overlay* LineParent;//[Offset: 0x298, Size: 1]
	Image* MyIcon;//[Offset: 0x2a0, Size: 1]
	Image* NewBadge;//[Offset: 0x2a8, Size: 1]
	Image* RightLine;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Bold;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_Main;//[Offset: 0x2c0, Size: 1]
	Image* TopLine;//[Offset: 0x2c8, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Bold;//[Offset: 0x2d0, Size: 1]
	byte BoxAlignment;//[Offset: 0x2d8, Size: 1]
	byte Line Position;//[Offset: 0x2d9, Size: 1]
	bool Use Line;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2da, Size: 1]
	LinearColor RegularColor;//[Offset: 0x2dc, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x300, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x310, Size: 1]
	LinearColor SelectedHoveredColor;//[Offset: 0x320, Size: 1]
	bool bHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x330, Size: 1]
	bool bSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x331, Size: 1]
	bool bIsToggle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x332, Size: 1]
	MulticastInlineDelegateProperty OnHover;//[Size: 1]
	bool Use Icon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x348, Size: 1]
	bool Bold Text;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x349, Size: 1]
	Texture2D* Icon Image;//[Offset: 0x350, Size: 1]
	float Icon Size;//[Offset: 0x358, Size: 1]
	SlateColor Icon Color;//[Offset: 0x360, Size: 1]
	FText Display Text;//[Offset: 0x388, Size: 1]
	int Text Size;//[Offset: 0x3a0, Size: 1]
	Margin Text Padding Amount;//[Offset: 0x3a4, Size: 1]
	Margin Button Padding;//[Offset: 0x3b4, Size: 1]
	LinearColor Text Normal;//[Offset: 0x3c4, Size: 1]
	LinearColor Text Toggle Normal;//[Offset: 0x3d4, Size: 1]
	LinearColor Text Selected;//[Offset: 0x3e4, Size: 1]
	LinearColor Text Hovered;//[Offset: 0x3f4, Size: 1]
	LinearColor Text Selected Hovered;//[Offset: 0x404, Size: 1]
	LinearColor Line Color;//[Offset: 0x414, Size: 1]
	LinearColor Line Hover Color;//[Offset: 0x424, Size: 1]
	LinearColor Line Unhover Color;//[Offset: 0x434, Size: 1]
	MulticastInlineDelegateProperty OnDoubleClicked;//[Size: 1]
	float Last Click Time;//[Offset: 0x458, Size: 1]
	bool bNewContent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x45c, Size: 1]
	bool bDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x45d, Size: 1]
	void UpdateNewContentDisplay(bool bNewContent, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, EventReply CallFunc_Unhandled_ReturnValue, Key CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Refresh Line(byte Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, Widget* K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Setup Button(bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, TextBlock* K2Node_Select_Default, SlateFontInfo K2Node_MakeStruct_SlateFontInfo, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default, Margin K2Node_MakeStruct_Margin, enum K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void Update Button(bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, TextBlock* K2Node_Select_Default);// 0x1d69c50
	SlateColor Bind_TextColor(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	LinearColor Bind_LineColor(LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void SetText(FText Text, bool Temp_bool_Variable, TextBlock* K2Node_Select_Default, SlateFontInfo K2Node_MakeStruct_SlateFontInfo);// 0x1d69c50
	void UpdateColors(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, TextBlock* K2Node_Select_Default, OverlaySlot* K2Node_DynamicCast_AsOverlay_Slot, bool K2Node_DynamicCast_bSuccess, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, TextBlock* K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void SetSelected(bool bSelected);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_MainMenu_Button(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, bool K2Node_Event_IsDesignTime, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, enum K2Node_Select_Default, float K2Node_Select_Default);// 0x1d69c50
	void OnDoubleClicked__DelegateSignature();// 0x1d69c50
	void OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50

--------------------------------
Class: ButtonSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x38, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x48, Size: 1]
	byte VerticalAlignment;//[Offset: 0x49, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33e3b10
	void SetPadding(Margin InPadding);// 0x33e33a0
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33e2c60

--------------------------------
Class: ChallengeWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* AcceptButton;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* DenyButton;//[Offset: 0x270, Size: 1]
	TextBlock* Description;//[Offset: 0x278, Size: 1]
	Image* Line;//[Offset: 0x280, Size: 1]
	TextBlock* TitleTextBlock;//[Offset: 0x288, Size: 1]
	Image* TopLine;//[Offset: 0x290, Size: 1]
	FText TitleText;//[Offset: 0x298, Size: 1]
	FText DescriptionText;//[Offset: 0x2b0, Size: 1]
	FText LeftButtonText;//[Offset: 0x2c8, Size: 1]
	FText RightButtonText;//[Offset: 0x2e0, Size: 1]
	MulticastInlineDelegateProperty OnLeftButtonClicked;//[Size: 1]
	MulticastInlineDelegateProperty OnRightButtonClicked;//[Size: 1]
	void SetDescription(FText InDescription);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__AcceptButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__DenyButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_ChallengeWindow(int EntryPoint, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_Event_IsDesignTime, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void OnLeftButtonClicked__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_SquadSelect_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* SwitchView;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* ButtonDeploymentSizeToggle;//[Offset: 0x270, Size: 1]
	DeploymentList_C* DeploymentList;//[Offset: 0x278, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	Image* Image;//[Offset: 0x290, Size: 1]
	Image* ImageBar;//[Offset: 0x298, Size: 1]
	CanvasPanel* LoadoutCanvasPanel;//[Offset: 0x2a0, Size: 1]
	WidgetSwitcher* LoadoutMapSwitcher;//[Offset: 0x2a8, Size: 1]
	CanvasPanel* MapCanvasPanel;//[Offset: 0x2b0, Size: 1]
	W_SQMapCore_C* MapCore;//[Offset: 0x2b8, Size: 1]
	VerticalBox* RoleQuickSelectPanel;//[Offset: 0x2c0, Size: 1]
	SizeBox* SizeDeployList;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_Prompt;//[Offset: 0x2d0, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2d8, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2e0, Size: 1]
	W_ChatBox_C* W_ChatBox;//[Offset: 0x2e8, Size: 1]
	W_MapControls_C* W_MapControls;//[Offset: 0x2f0, Size: 1]
	W_MarkedPosition_C* W_MarkedPosition;//[Offset: 0x2f8, Size: 1]
	W_PlayerPosition_C* W_PlayerPosition;//[Offset: 0x300, Size: 1]
	W_RoleDetails_C* W_RoleDetails;//[Offset: 0x308, Size: 1]
	W_RolePreview_C* W_RolePreview;//[Offset: 0x310, Size: 1]
	W_RoleQuickList_C* W_RoleQuickSelect;//[Offset: 0x318, Size: 1]
	W_SquadList_C* W_SquadList;//[Offset: 0x320, Size: 1]
	SQPlayerController* Parent Controller;//[Offset: 0x328, Size: 1]
	void OnRoleSelected(SQRoleSettings* Role);// 0x1d69c50
	void OnRoleHovered(SQRoleSettings* Role, bool Hovered, W_RoleItem_C* Role Button Reference, bool bSubRole, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, W_SubRoleItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	FText BIND - Squad Name(bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	FText BIND - Map & Mode(SQGameState* CallFunc_GetSquadGameState_Return_Value, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	LinearColor BIND - Lock Button Color(bool CallFunc_IsValid_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	enum BIND - Lock Button Visibility(enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__ButtonDeploymentSizeToggle_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void OnTick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void BndEvt__W_RoleQuickSelect_K2Node_ComponentBoundEvent_1_OnMouseEntered__DelegateSignature();// 0x1d69c50
	void BndEvt__W_RoleQuickSelect_K2Node_ComponentBoundEvent_2_OnMouseLeft__DelegateSignature();// 0x1d69c50
	void BndEvt__W_RoleDetails_K2Node_ComponentBoundEvent_3_OnSubRoleSelected__DelegateSignature(SQRoleSettings* Role Reference);// 0x1d69c50
	void BndEvt__W_RoleQuickSelect_K2Node_ComponentBoundEvent_4_Roles Refreshed__DelegateSignature();// 0x1d69c50
	void BndEvt__W_RolePreview_K2Node_ComponentBoundEvent_5_OnRoleSet__DelegateSignature(SQRoleSettings* Role Reference);// 0x1d69c50
	void ExecuteUbergraph_W_SquadSelect(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, float Temp_float_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, float Temp_float_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, const SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, float K2Node_Select_Default, SQRoleSettings* K2Node_ComponentBoundEvent_Role_Reference, SQRoleSettings* K2Node_ComponentBoundEvent_Role_Reference, W_RoleGroup_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, W_RoleItem_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50

--------------------------------
Class: W_RoleItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Open;//[Offset: 0x268, Size: 1]
	Border* Border_Main;//[Offset: 0x270, Size: 1]
	Button* Button_Role;//[Offset: 0x278, Size: 1]
	Image* IconRole;//[Offset: 0x280, Size: 1]
	Image* SelectedLine;//[Offset: 0x288, Size: 1]
	TextBlock* TBAvailable;//[Offset: 0x290, Size: 1]
	TextBlock* TBName;//[Offset: 0x298, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Availability;//[Offset: 0x2a0, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a8, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x2b0, Size: 1]
	MulticastInlineDelegateProperty Role Selected;//[Size: 1]
	W_SubRoleItem_C*[] Sub Role Widgets;//[Offset: 0x2c8, Size: 1]
	W_SubRoleOptions_C* Sub Options UI;//[Offset: 0x2d8, Size: 1]
	class W_SubRoleItem_C* Sub Role Item Class;//[Offset: 0x2e0, Size: 1]
	SQRoleGroupingStrategy TagGroupingStrategy;//[Offset: 0x2e8, Size: 1]
	bool HasTagGrouping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x388, Size: 1]
	SQAvailabilityState_Role[] Role States;//[Offset: 0x390, Size: 1]
	MulticastInlineDelegateProperty Role Hovered;//[Size: 1]
	void GetCountText(out FText Out CountText, bool Temp_bool_Variable, FText CallFunc_GetDisplayName_OutDisplayName, FText CallFunc_GetDisplayName_OutDisplayName, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_GetCounts_Out_Used, int CallFunc_GetCounts_Out_Availability, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_EqualEqual_IntInt_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void GetRole(int In Index, out bool Out Success, out BP_SQRoleSettings_C* OutEntry, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Close Sub Roles(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void IsButtonHovered(out bool Is Hovered, bool CallFunc_IsHovered_ReturnValue);// 0x1d69c50
	void IsItemMatching(SQRoleSettings* In Setting, out bool Is Matching, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQAvailabilityState_Role CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void GetUnavailabilityReason(int InIndex, out FText OutReason, FText CallFunc_GetCountText_Out_CountText, Timespan CallFunc_GetAvailabilityDelay_ReturnValue, int CallFunc_GetSeconds_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetMinutes_ReturnValue, bool CallFunc_HasActiveTimer_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void UpdateExposition(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, int CallFunc_GetCounts_Out_Used, int CallFunc_GetCounts_Out_Availability, bool CallFunc_IsAvailable_Out_Is_Available, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_GetWidgetSwitcherIndex_Out_Widget_Switcher_Index, bool CallFunc_EqualEqual_IntInt_ReturnValue, LinearColor K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_IsSelectedRole_Out_Selected, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, enum K2Node_Select_Default, LinearColor CallFunc_Get_State_Color_Out_Color);// 0x1d69c50
	void IsSelectedRole(out bool Out Selected, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQAvailabilityState_Role CallFunc_Array_Get_Item, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void GetCounts(out int Out Used, out int Out Availability, int L_Available, int L_Used, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQAvailabilityState_Role CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Max_ReturnValue, int CallFunc_Max_ReturnValue);// 0x1d69c50
	void GetWidgetSwitcherIndex(int In Availability, out int Out Widget Switcher Index, bool Temp_bool_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Variable, int Temp_int_Variable, bool CallFunc_IsAvailable_Out_Is_Available, int K2Node_Select_Default);// 0x1d69c50
	void IsAvailable(out bool Out Is Available, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsSelectedRole_Out_Selected, SQAvailabilityState_Role CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsAvailable_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void UpdateSubOptions(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_SubRoleItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue);// 0x1d69c50
	void UpdateLocalStates(out SQAvailabilityState_Role[] In Player Role States, int Temp_int_Loop_Counter_Variable, int CallFunc_Array_Length_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQAvailabilityState_Role CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQAvailabilityState_Role CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_ShouldHideThisItem_Out_ShouldHide, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void SetRoleVisible(bool InVisible, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void ShouldHideThisItem(out bool Out ShouldHide, int Temp_int_Variable, bool CallFunc_GetRole_Out_success, BP_SQRoleSettings_C* CallFunc_GetRole_OutEntry, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_IsRecruit_Out_IsRecruit, bool CallFunc_IsSquadLeader_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void IsRoleAlreadySelected(SQRoleSettings* In Role Setting, out bool Out Not Selected Yet, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void TryGetFirstRole(out bool Out Success, out SQRoleSettings* Out Role Setting, bool CallFunc_GetRole_Out_success, BP_SQRoleSettings_C* CallFunc_GetRole_OutEntry);// 0x1d69c50
	void PlayerIsNotSpawned(out bool Out Is NOT Spawned, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void SetupExposition(bool CallFunc_ShouldHideThisItem_Out_ShouldHide, FText CallFunc_GetDisplayName_OutDisplayName, Texture2D* CallFunc_GetIcon_OutIcon);// 0x1d69c50
	void GetWeaponImage(int InIndex, out Texture2D* OutIcon, FSQRoleEntry CallFunc_GetRoleEntry_OutEntry);// 0x1d69c50
	void GetDisplayName(int InIndex, out FText OutDisplayName, FSQRoleEntry CallFunc_GetRoleEntry_OutEntry);// 0x1d69c50
	void GetIcon(int InIndex, out Texture2D* OutIcon, FSQRoleEntry CallFunc_GetRoleEntry_OutEntry);// 0x1d69c50
	void GetRoleEntry(int In Index, out FSQRoleEntry OutEntry, bool CallFunc_GetRole_Out_success, BP_SQRoleSettings_C* CallFunc_GetRole_OutEntry, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry);// 0x1d69c50
	void SetTagGrouping(SQRoleGroupingStrategy InTagGroupingStrategy);// 0x1d69c50
	void HasThisTagGrouping(SQRoleGroupingStrategy InTagGrouping, out bool OutHasMatchingTagGrouping, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, <byte> CallFunc_Set_Difference_Result, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void CreateSubRoleWidget(SQAvailabilityState_Role InState, W_SubRoleItem_C* CallFunc_Create_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void AddSubRoleItem(SQAvailabilityState_Role InTeamRoleAvailabilityState, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void Open Sub Roles(bool CallFunc_IsValid_ReturnValue, W_SubRoleOptions_C* CallFunc_Create_ReturnValue, bool CallFunc_IsInViewport_ReturnValue);// 0x1d69c50
	void Get State Color(bool In Selected, bool In Locked, out LinearColor Out Color, bool CallFunc_IsButtonHovered_Is_Hovered, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void BndEvt__Button_SquadMember_K2Node_ComponentBoundEvent_16_OnButtonPressedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_SquadMember_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_SquadMember_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Select Role(SQRoleSettings* In Selected Role);// 0x1d69c50
	void SubRole Selected(SQRoleSettings* Role);// 0x1d69c50
	void On Tick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void OnRoleChange(SQRoleSettings* In Current Role);// 0x1d69c50
	void On Button Pressed();// 0x1d69c50
	void ExecuteUbergraph_W_RoleItem(int EntryPoint, SQRoleSettings* K2Node_CustomEvent_Role, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet, bool CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned, bool CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned, SQRoleSettings* K2Node_CustomEvent_In_Selected_Role, bool CallFunc_RequestRole_ReturnValue, bool CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet, bool CallFunc_IsValid_ReturnValue, const SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, bool CallFunc_ShouldHideThisItem_Out_ShouldHide, bool CallFunc_TryGetFirstRole_Out_Success, SQRoleSettings* CallFunc_TryGetFirstRole_Out_Role_Setting, bool CallFunc_TryGetFirstRole_Out_Success, SQRoleSettings* CallFunc_TryGetFirstRole_Out_Role_Setting, SQRoleSettings* K2Node_CustomEvent_In_Current_Role, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAvailable_Out_Is_Available, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_TryGetFirstRole_Out_Success, SQRoleSettings* CallFunc_TryGetFirstRole_Out_Role_Setting, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Role Hovered__DelegateSignature(SQRoleSettings* Role, bool Hovered, W_RoleItem_C* Button Reference, bool bSubRole);// 0x1d69c50
	void Role Selected__DelegateSignature(SQRoleSettings* Role);// 0x1d69c50

--------------------------------
Class: W_SubRoleItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Open;//[Offset: 0x268, Size: 1]
	Border* Border_Main;//[Offset: 0x270, Size: 1]
	Button* Button_Role;//[Offset: 0x278, Size: 1]
	Image* Image_MainWeapon;//[Offset: 0x280, Size: 1]
	TextBlock* Name_Primary;//[Offset: 0x288, Size: 1]
	Image* SelectedLine;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Amount_Primary;//[Offset: 0x298, Size: 1]
	W_RoleItem_C* OuterRoleItem;//[Offset: 0x2a0, Size: 1]
	SQAvailabilityState_Role AvailabilityState;//[Offset: 0x2a8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x300, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x308, Size: 1]
	FText GetCountText(bool Temp_bool_Variable, FText CallFunc_GetDisplayName_Out_DisplayName, FText CallFunc_GetDisplayName_Out_DisplayName, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_GetCounts_Out_Used, int CallFunc_GetCounts_Out_Availability, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_EqualEqual_IntInt_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void GetRole(out bool Out Success, out SQRoleSettings* Out Role Setting, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Get Weapon Magazine Count(out const SQInventoryData SQInventoryData, out int Item Count, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Get Weapon Name(out FText Name, out SQInventoryData Inventory, FSQRoleEntry L_RoleEntry, SQInventoryData[] L_Weapons, SQInventoryWeaponGroupData[] L_Inventory, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, FSQRoleEntry CallFunc_GetRoleEntry_OutEntry, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, SQInventoryWeaponGroupData CallFunc_Array_Get_Item, SQInventoryData CallFunc_Array_Get_Item, Object* CallFunc_GetDefaultObjectFor_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQEquipableItem* K2Node_DynamicCast_AsSQEquipable_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void GetDisplayName(out FText Out DisplayName, FSQRoleEntry CallFunc_GetRoleEntry_OutEntry);// 0x1d69c50
	Widget* GetToolTip(bool Temp_bool_Variable, FText CallFunc_GetDisplayName_Out_DisplayName, FText CallFunc_GetCountText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_GetUnavailabilityReason_OutReason, bool CallFunc_IsAvailable_Out_Available, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, UMG_Tooltip_C* CallFunc_Create_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void GetUnavailabilityReason(out FText OutReason, FText CallFunc_GetCountText_ReturnValue, bool CallFunc_HasActiveTimer_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue, Timespan CallFunc_GetAvailabilityDelay_ReturnValue, int CallFunc_GetSeconds_ReturnValue, int CallFunc_GetMinutes_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void GetCounts(out int Out Used, out int Out Availability);// 0x1d69c50
	void IsAvailable(out bool Out Available, bool CallFunc_IsAvailable_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void GetRoleEntry(out FSQRoleEntry OutEntry, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry);// 0x1d69c50
	void IsRoleSelected(SQRoleSettings* In Role Setting, out bool Out Selected, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void PlayerNotSpawned(out bool Out Is NOT Spawned, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	LinearColor Get State Color(bool In Locked, bool In Selected, bool CallFunc_IsHovered_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void UpdateExposition(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting, bool CallFunc_IsAvailable_Out_Available, bool CallFunc_IsRoleSelected_Out_Selected, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default, LinearColor CallFunc_Get_State_Color_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void SetupExposition(bool Temp_bool_Variable, FText Temp_text_Variable, FSQRoleEntry CallFunc_GetRoleEntry_OutEntry, FText CallFunc_Get_Weapon_Name_Name, SQInventoryData CallFunc_Get_Weapon_Name_Inventory, int CallFunc_Get_Weapon_Magazine_Count_Item_Count, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void BndEvt__Button_SquadMember_K2Node_ComponentBoundEvent_16_OnButtonPressedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_SquadMember_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_SquadMember_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void On Refresh UI(SQAvailabilityState_Role In Role State);// 0x1d69c50
	void OnRoleChange(SQRoleSettings* In Current Role);// 0x1d69c50
	void ExecuteUbergraph_W_SubRoleItem(int EntryPoint, SQAvailabilityState_Role K2Node_CustomEvent_In_Role_State, SQRoleSettings* K2Node_CustomEvent_In_Current_Role, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting, bool CallFunc_GetRole_Out_success, SQRoleSettings* CallFunc_GetRole_Out_Role_Setting);// 0x1d69c50

--------------------------------
Class: SQUnavailabilityReason
	FText Reason_4_084050B84AA797358E4C838223F06D0E;//[Offset: 0x0, Size: 1]
	FText Reasonshort_10_5A7AF7364A3991631118BBBD0F156058;//[Offset: 0x18, Size: 1]
	Texture2D* Icon_5_31D37F254D4E16C6116578A6C4180D3C;//[Offset: 0x30, Size: 1]

--------------------------------
Class: W_SubRoleOptions_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* HoverCheckArea;//[Offset: 0x268, Size: 1]
	Image* Line;//[Offset: 0x270, Size: 1]
	VerticalBox* VerticalBox_Buttons;//[Offset: 0x278, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	W_SubRoleItem_C*[] SubRoleWidgets;//[Offset: 0x288, Size: 1]
	W_RoleItem_C* ParentRoleItem;//[Offset: 0x298, Size: 1]
	void MoveUnderMouse(bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Clear();// 0x1d69c50
	void OnRoleChange(SQRoleSettings* In Current Role);// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void ExecuteUbergraph_W_SubRoleOptions(int EntryPoint, const PointerEvent K2Node_Event_MouseEvent, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, W_SubRoleItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, bool K2Node_Event_IsDesignTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQRoleSettings* K2Node_CustomEvent_In_Current_Role, W_SubRoleItem_C* CallFunc_Array_Get_Item, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_Array_Length_ReturnValue, Geometry K2Node_Event_MyGeometry, const PointerEvent K2Node_Event_MouseEvent, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: DeploymentList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	GridPanel* SpawnBase;//[Offset: 0x268, Size: 1]
	GridPanel* SpawnHab;//[Offset: 0x270, Size: 1]
	GridPanel* SpawnRally;//[Offset: 0x278, Size: 1]
	W_DeployConfirmation_C* W_DeployConfirmation;//[Offset: 0x280, Size: 1]
	SQPlayerController* MyPC;//[Offset: 0x288, Size: 1]
	W_DeploymentMenu_C* REF Deploy Menu;//[Offset: 0x290, Size: 1]
	void Auto Select Spawn Point(out bool Success, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, GridPanel*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, GridPanel* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, BP_SpawnPointsListMemberWidget_C* K2Node_DynamicCast_AsBP_Spawn_Points_List_Member_Widget, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void Update Prompt();// 0x1d69c50
	void Set List Visibility(bool Hidden);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__DeployButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_DeploymentList(int EntryPoint, bool Temp_bool_Variable, SQGameSpawn* CallFunc_GetSelectedSpawn_ReturnValue, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, enum Temp_byte_Variable, bool K2Node_CustomEvent_Hidden, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: W_DeployConfirmation_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* CancelButton;//[Offset: 0x268, Size: 1]
	SizeBox* CancelSizeBox;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* ConfirmButton;//[Offset: 0x278, Size: 1]
	WidgetSwitcher* ConfirmSwitcher;//[Offset: 0x280, Size: 1]
	Overlay* Overlay_DeployButton;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Description;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Timer;//[Offset: 0x298, Size: 1]
	Image* TopLine;//[Offset: 0x2a0, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a8, Size: 1]
	SQGameSpawn* SelectedSpawnPoint;//[Offset: 0x2b0, Size: 1]
	bool Confirmed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	void BndEvt__DeployButton_K2Node_ComponentBoundEvent_52_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Refresh();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Cache Player();// 0x1d69c50
	void BndEvt__ConfirmButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void New Spawn Selected();// 0x1d69c50
	void Confirm Spawn();// 0x1d69c50
	void ExecuteUbergraph_W_DeployConfirmation(int EntryPoint, enum Temp_byte_Variable, bool CallFunc_Not_PreBool_ReturnValue, FText Temp_text_Variable, bool CallFunc_BooleanOR_ReturnValue, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, FText Temp_text_Variable, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, FText K2Node_Select_Default, FText K2Node_Select_Default, bool CallFunc_MatchWaitingToStart_ReturnValue, bool Temp_bool_Variable, FText K2Node_Select_Default, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_GetRemainingTime_ReturnValue, bool CallFunc_MatchWaitingToStart_ReturnValue, float CallFunc_TimeUntilCanSpawn_ReturnValue, int CallFunc_Round_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_SelectInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, Pawn* CallFunc_K2_GetPawn_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Format_ReturnValue, SQGameSpawn* CallFunc_GetSelectedSpawn_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsValid_ReturnValue, SQGameSpawn* CallFunc_GetSelectedSpawn_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_SpawnPointsListMemberWidget_C.SQCoreStateSpawnPointsListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2d8, Size: 1]
	Image* Image;//[Offset: 0x2e0, Size: 1]
	Overlay* Overlay;//[Offset: 0x2e8, Size: 1]
	MainMenu_Button_C* SpawnButton;//[Offset: 0x2f0, Size: 1]
	TextBlock* TB_Time;//[Offset: 0x2f8, Size: 1]
	SQGameSpawn* SpawnPoint;//[Offset: 0x300, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x308, Size: 1]
	LinearColor SelectedColor;//[Offset: 0x318, Size: 1]
	LinearColor NotSelectedColor;//[Offset: 0x328, Size: 1]
	FText LocationText;//[Offset: 0x338, Size: 1]
	FText TypeText;//[Offset: 0x350, Size: 1]
	BP_PlayerController_C* My PC;//[Offset: 0x368, Size: 1]
	TimerHandle UpdateTextTimer;//[Offset: 0x370, Size: 1]
	void GetRemainingActivatingTime(out float RemainingTime, GameStateBase* CallFunc_GetGameState_ReturnValue, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue);// 0x1d69c50
	void UpdateVisibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, GameStateBase* CallFunc_GetGameState_ReturnValue, GameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, bool CallFunc_isNearlyEqualOrLess_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void UpdateType(enum Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, Texture2D* CallFunc_GetSpawnIcon_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void UpdateLocation(Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, bool CallFunc_IsValid_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, const Vector2D CallFunc_GetNumGridLines_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, FString CallFunc_MapLocationToGridCoordinateString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void UpdateText(FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void OnIsSelectedChanged();// 0x1d69c50
	void OnSpawnPointLocationChanged();// 0x1d69c50
	void OnSpawnPointTypeChanged();// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__SpawnButton_K2Node_ComponentBoundEvent_1_OnDoubleClicked__DelegateSignature();// 0x1d69c50
	void OnSpawningEnabledChanged();// 0x1d69c50
	void OnSiegedChanged();// 0x1d69c50
	void OnActivatedTimeStampChanged();// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void UpdateTextLooping();// 0x1d69c50
	void ExecuteUbergraph_BP_SpawnPointsListMemberWidget(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, W_DeployConfirmation_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, bool CallFunc_IsValid_ReturnValue, W_DeployConfirmation_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, W_DeployConfirmation_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_DeployConfirmation_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_GetRemainingActivatingTime_RemainingTime, float CallFunc_Add_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_ChatBox_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_MainChat;//[Offset: 0x268, Size: 1]
	EditableTextBox* EditableTextBox;//[Offset: 0x270, Size: 1]
	VerticalBox* MessageList;//[Offset: 0x278, Size: 1]
	Button* ScrollButton;//[Offset: 0x280, Size: 1]
	ScrollBox* ScrollList;//[Offset: 0x288, Size: 1]
	Border* ServerMessage;//[Offset: 0x290, Size: 1]
	TextBlock* TBChannel;//[Offset: 0x298, Size: 1]
	Border* TextEntryBorder;//[Offset: 0x2a0, Size: 1]
	byte Current Channel;//[Offset: 0x2a8, Size: 1]
	BP_PlayerController_C* My PC;//[Offset: 0x2b0, Size: 1]
	bool Auto Scroll;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	Widget* Get_ScrollButton_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Refresh Scroll Button(ButtonStyle L Style, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void Refresh Visuals(byte Temp_byte_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_TextToUpper_ReturnValue, LinearColor K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Focus Menu(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming, UMG_MenuBase_C*[] K2Node_MakeArray_Array, UMG_MenuBase_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	EventReply OnPreviewKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, EventReply CallFunc_Unhandled_ReturnValue, Key CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void BndEvt__EditableTextBox_165_K2Node_ComponentBoundEvent_5_OnEditableTextBoxCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void Change Channel();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Add New Chat(const FString PlayerName, const FString Message, enum Channel, LinearColor Color, enum NotificationType);// 0x1d69c50
	void Focus and Change Channel(enum Channel);// 0x1d69c50
	void Set Chat Visibility(bool Visible);// 0x1d69c50
	void BndEvt__SelectButton_K2Node_ComponentBoundEvent_92_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void OnAddedToFocusPath(FocusEvent InFocusEvent);// 0x1d69c50
	void Bind To Menu Open Close(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Parent Closed();// 0x1d69c50
	void Parent Opened();// 0x1d69c50
	void ExecuteUbergraph_W_ChatBox(int EntryPoint, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, FString Temp_string_Variable, FString Temp_string_Variable, FString Temp_string_Variable, FString Temp_string_Variable, FString Temp_string_Variable, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_TextIsEmpty_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, byte CallFunc_Add_ByteByte_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, byte Temp_byte_Variable, FString K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, FString CallFunc_Concat_StrStr_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, const FString K2Node_CustomEvent_PlayerName, const FString K2Node_CustomEvent_Message, enum K2Node_CustomEvent_Channel, LinearColor K2Node_CustomEvent_Color, enum K2Node_CustomEvent_NotificationType, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, byte Temp_byte_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_ChatEntry_C* CallFunc_Create_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, bool CallFunc_IsDev_ReturnValue, bool CallFunc_IsAdmin_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, byte Temp_byte_Variable, bool CallFunc_BooleanAND_ReturnValue, byte Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, enum K2Node_CustomEvent_Channel, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsVisible_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_CustomEvent_Visible, enum K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetScrollOffset_ReturnValue, float CallFunc_GetScrollOffset_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, byte Temp_byte_Variable, PanelSlot* CallFunc_AddChild_ReturnValue, FocusEvent K2Node_Event_InFocusEvent, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, enum Temp_byte_Variable, UMG_MenuBase_C* K2Node_CustomEvent_Menu, byte K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: EditableTextBox.Widget.Visual.Object
	FText Text;//[Offset: 0x108, Size: 1]
	delegate TextDelegate;//[Offset: 0x120, Size: 1]
	EditableTextBoxStyle WidgetStyle;//[Offset: 0x130, Size: 1]
	SlateWidgetStyleAsset* Style;//[Offset: 0x928, Size: 1]
	FText HintText;//[Offset: 0x930, Size: 1]
	delegate HintTextDelegate;//[Offset: 0x948, Size: 1]
	SlateFontInfo Font;//[Offset: 0x958, Size: 1]
	LinearColor ForegroundColor;//[Offset: 0x9b0, Size: 1]
	LinearColor BackgroundColor;//[Offset: 0x9c0, Size: 1]
	LinearColor ReadOnlyForegroundColor;//[Offset: 0x9d0, Size: 1]
	bool IsReadOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9e0, Size: 1]
	bool IsPassword;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9e1, Size: 1]
	float MinimumDesiredWidth;//[Offset: 0x9e4, Size: 1]
	Margin Padding;//[Offset: 0x9e8, Size: 1]
	bool IsCaretMovedWhenGainFocus;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f8, Size: 1]
	bool SelectAllTextWhenFocused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f9, Size: 1]
	bool RevertTextOnEscape;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9fa, Size: 1]
	bool ClearKeyboardFocusOnCommit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9fb, Size: 1]
	bool SelectAllTextOnCommit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9fc, Size: 1]
	bool AllowContextMenu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9fd, Size: 1]
	byte KeyboardType;//[Offset: 0x9fe, Size: 1]
	VirtualKeyboardOptions VirtualKeyboardOptions;//[Offset: 0x9ff, Size: 1]
	enum VirtualKeyboardTrigger;//[Offset: 0xa00, Size: 1]
	enum VirtualKeyboardDismissAction;//[Offset: 0xa01, Size: 1]
	byte Justification;//[Offset: 0xa02, Size: 1]
	ShapedTextOptions ShapedTextOptions;//[Offset: 0xa03, Size: 1]
	MulticastInlineDelegateProperty OnTextChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnTextCommitted;//[Size: 1]
	void SetText(FText InText);// 0x33e75c0
	void SetJustification(byte InJustification);// 0x33e7150
	void SetIsReadOnly(bool bReadOnly);// 0x33e7040
	void SetIsPassword(bool bIsPassword);// 0x33e6f20
	void SetHintText(FText InText);// 0x33e6c90
	void SetError(FText InError);// 0x33e6ad0
	void OnEditableTextBoxCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void OnEditableTextBoxChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	bool HasError();// 0x33e6670
	FText GetText();// 0x33e65a0
	void ClearError();// 0x33e5d90

--------------------------------
Class: EditableTextBoxStyle.SlateWidgetStyle
	SlateBrush BackgroundImageNormal;//[Offset: 0x8, Size: 1]
	SlateBrush BackgroundImageHovered;//[Offset: 0x90, Size: 1]
	SlateBrush BackgroundImageFocused;//[Offset: 0x118, Size: 1]
	SlateBrush BackgroundImageReadOnly;//[Offset: 0x1a0, Size: 1]
	Margin Padding;//[Offset: 0x228, Size: 1]
	SlateFontInfo Font;//[Offset: 0x238, Size: 1]
	SlateColor ForegroundColor;//[Offset: 0x290, Size: 1]
	SlateColor BackgroundColor;//[Offset: 0x2b8, Size: 1]
	SlateColor ReadOnlyForegroundColor;//[Offset: 0x2e0, Size: 1]
	Margin HScrollBarPadding;//[Offset: 0x308, Size: 1]
	Margin VScrollBarPadding;//[Offset: 0x318, Size: 1]
	ScrollBarStyle ScrollBarStyle;//[Offset: 0x328, Size: 1]

--------------------------------
Class: VirtualKeyboardOptions
	bool bEnableAutocorrect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]

--------------------------------
Class: W_ChatEntry_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	TextBlock* TBText;//[Offset: 0x270, Size: 1]
	FString Name;//[Offset: 0x278, Size: 1]
	FString Text;//[Offset: 0x288, Size: 1]
	enum Channel;//[Offset: 0x298, Size: 1]
	LinearColor Color;//[Offset: 0x29c, Size: 1]
	float Duration;//[Offset: 0x2ac, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_ChatEntry(int EntryPoint, bool Temp_bool_Variable, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FText CallFunc_TextToUpper_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_BooleanOR_ReturnValue, FText CallFunc_Format_ReturnValue, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_TextIsEmpty_ReturnValue, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Len_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_TextToUpper_ReturnValue, FText K2Node_Select_Default, bool CallFunc_TextIsEmpty_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_BooleanAND_ReturnValue, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_MapControls_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* Button_ChatToggle;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_DirectorLines;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* Button_FobRadius;//[Offset: 0x278, Size: 1]
	MainMenu_Button_C* Button_GridOpacity;//[Offset: 0x280, Size: 1]
	MainMenu_Button_C* Button_Icon_Legend;//[Offset: 0x288, Size: 1]
	MainMenu_Button_C* Button_IconScale;//[Offset: 0x290, Size: 1]
	MainMenu_Button_C* Button_LatticeOpacity;//[Offset: 0x298, Size: 1]
	MainMenu_Button_C* Button_LayerInfo;//[Offset: 0x2a0, Size: 1]
	MainMenu_Button_C* Button_Role;//[Offset: 0x2a8, Size: 1]
	MainMenu_Button_C* Button_Spawns;//[Offset: 0x2b0, Size: 1]
	MainMenu_Button_C* Button_Supplies;//[Offset: 0x2b8, Size: 1]
	MainMenu_Button_C* Button_TCZones;//[Offset: 0x2c0, Size: 1]
	MainMenu_Button_C* Button_Tix_Legend;//[Offset: 0x2c8, Size: 1]
	MainMenu_Button_C* Button_Vehicles_Legend;//[Offset: 0x2d0, Size: 1]
	MainMenu_Button_C* Button_Waypoints;//[Offset: 0x2d8, Size: 1]
	MainMenu_Button_C* MainMenu_Button_C;//[Offset: 0x2e0, Size: 1]
	VerticalBox* Options;//[Offset: 0x2e8, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2f0, Size: 1]
	W_Slider_GridOpacity_C* W_GridOpacity;//[Offset: 0x2f8, Size: 1]
	W_Slider_LatticeOpacity_C* W_LatticeOpacity;//[Offset: 0x300, Size: 1]
	W_Slider_UIScale_C* W_UIScaleSlider;//[Offset: 0x308, Size: 1]
	SaveData_UI_C* Current Save Data;//[Offset: 0x310, Size: 1]
	W_PopupGeneric_C* Popup Legend Tickets;//[Offset: 0x318, Size: 1]
	W_PopupGeneric_C* Popup Legend Icons;//[Offset: 0x320, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x328, Size: 1]
	bool Cached SL Value;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x330, Size: 1]
	float Options Top Padding;//[Offset: 0x334, Size: 1]
	W_PopupGeneric_C* Popup Legend Vehicles;//[Offset: 0x338, Size: 1]
	MulticastInlineDelegateProperty ToggleFOBRadiusVisibility;//[Size: 1]
	MulticastInlineDelegateProperty ToggleDirectorLinesVisibility;//[Size: 1]
	W_PopupGeneric_C* PopupLegendtLayerInfo;//[Offset: 0x360, Size: 1]
	void Refresh Director Lines(int Temp_int_Array_Index_Variable, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_MapMarker_DirectorParent_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_MapMarker_DirectorParent_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	Widget* Get Tooltip Director Lines(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Refresh Chat Boxes(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_ChatBoxBaseHUD_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_ChatBoxBaseHUD_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Refresh TC Zone Visibility(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, BP_MarkerWidget_CaptureZoneTC_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BP_MarkerWidget_CaptureZoneTC_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	Widget* Get_Button_GridLines_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_FlagLines_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_IconScale_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Reset Waypoints();// 0x1d69c50
	enum Get_Button_Waypoints_Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsSquadLeader_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	Widget* Get_Button_Supplies_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_Spawns_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Refresh Spawns Visibility(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, BP_MapWidgetRallyPoint_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, BP_MapWidgetRallyPoint_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, BP_MapWidgetSpawnPoint_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BP_MapWidgetSpawnPoint_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Refresh FOB Supplies Visibility(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, BP_MapWidgetForwardBase_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BP_MapWidgetForwardBase_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	Widget* Get_Button_Ticket_Legend_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_Icon_Legend_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_Waypoints_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_FobRadius_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Button_Role_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Refresh Waypoint Visibility(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, BP_MapWidgetMapMarkerWaypoint_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BP_MapWidgetMapMarkerWaypoint_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Refresh FOB Radius Visibility(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, int Temp_int_Loop_Counter_Variable, BP_MapWidgetMapMarkerRequestFOB_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, BP_MapWidgetMapMarkerRequestFOB_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, BP_MapWidgetForwardBase_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BP_MapWidgetForwardBase_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Refresh Map Role Visibility(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, BP_MapWidgetSoldier_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BP_MapWidgetSoldier_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Refresh Toggles(SaveData_UI_C* L Save, bool CallFunc_Not_PreBool_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_3_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Role_K2Node_ComponentBoundEvent_107_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__Button_Supplies_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Spawns_K2Node_ComponentBoundEvent_165_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Icon_Legend_K2Node_ComponentBoundEvent_36_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void BndEvt__Button_Legend_K2Node_ComponentBoundEvent_119_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void BndEvt__Button_Tix_Legend_K2Node_ComponentBoundEvent_30_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Icon_Legend_K2Node_ComponentBoundEvent_31_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Removed Icons();// 0x1d69c50
	void Removed Tix();// 0x1d69c50
	void BndEvt__Button_LatticeOpacity_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_GridOpacity_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_IconScale_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_11_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_HexZones_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_0_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_0_K2Node_ComponentBoundEvent_3_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void Removed Vehicles();// 0x1d69c50
	void BndEvt__Button_ChatToggle_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_DirectorLines_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_LayerInfo_K2Node_ComponentBoundEvent_7_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void BndEvt__Button_LayerInfo_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Removed Layer Info();// 0x1d69c50
	void ExecuteUbergraph_W_MapControls(int EntryPoint, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, W_MapVehicleList_C* K2Node_DynamicCast_AsW_Map_Vehicle_List, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsVisible_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsAlive_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bHovered, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_ComponentBoundEvent_bHovered, W_PopupGeneric_C* CallFunc_Create_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, W_PopupGeneric_C* CallFunc_Create_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, enum Temp_byte_Variable, enum Temp_byte_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, enum K2Node_Select_Default, enum K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, enum K2Node_Select_Default, VerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, Margin K2Node_MakeStruct_Margin, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bHovered, bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_PopupGeneric_C* CallFunc_Create_ReturnValue, enum K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_Not_PreBool_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_TryGetGameModeEntry_Success, SQGameModeEntry CallFunc_TryGetGameModeEntry_GameModeEntry, enum K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bHovered, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_PopupGeneric_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void ToggleDirectorLinesVisibility__DelegateSignature();// 0x1d69c50
	void ToggleFOBRadiusVisibility__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_MapMarker_DirectorParent_C.SQMapWidgetMapMarkerSelectable.SQMapWidgetMapMarker.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x300, Size: 1]
	BP_MapMarker_DirectorMaster_C* MapMarker_Director;//[Offset: 0x308, Size: 1]
	bool Faded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x310, Size: 1]
	float Fade Time;//[Offset: 0x314, Size: 1]
	void Refresh Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	void Update Size();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Find Map Icon();// 0x1d69c50
	void Init Director Marker();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void OnRightClicked();// 0x1d69c50
	void ExecuteUbergraph_W_MapMarker_DirectorParent(int EntryPoint, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, float CallFunc_GetGameTimeSinceCreation_ReturnValue, float Temp_float_Variable, float Temp_float_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_MapMarker_DirectorMaster_C* K2Node_DynamicCast_AsBP_Map_Marker_Director_Master, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_FloatFloat_ReturnValue, float K2Node_Select_Default, bool CallFunc_NotEqual_BoolBool_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_MapMarker_DirectorMaster_C.BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	float distance;//[Offset: 0x288, Size: 1]
	void Bind To Destroy(Actor* Bind To);// 0x1d69c50
	void OnDestroyed_Event(Actor* DestroyedActor);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_MapMarker_DirectorMaster(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, Actor* K2Node_CustomEvent_Bind_To, Actor* K2Node_CustomEvent_DestroyedActor);// 0x1d69c50

--------------------------------
Class: W_ChatBoxBaseHUD_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* FadeIn;//[Offset: 0x268, Size: 1]
	Border* Border_MainChat;//[Offset: 0x270, Size: 1]
	VerticalBox* MessageList;//[Offset: 0x278, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x280, Size: 1]
	byte Current Channel;//[Offset: 0x288, Size: 1]
	bool Auto Scroll;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x289, Size: 1]
	bool Is Onscreen Chat;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28a, Size: 1]
	bool Fading;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28b, Size: 1]
	TimerHandle Close Chat Timer;//[Offset: 0x290, Size: 1]
	void Update Save Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	void Finished_8FB2F968497A05C82620F1A59FD40BE1();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Add New Chat(const FString PlayerName, const FString Message, enum Channel, LinearColor Color, enum NotificationType);// 0x1d69c50
	void Close Chat();// 0x1d69c50
	void Open Chat();// 0x1d69c50
	void ExecuteUbergraph_W_ChatBoxBaseHUD(int EntryPoint, bool CallFunc_IsAnimationPlaying_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, const FString K2Node_CustomEvent_PlayerName, const FString K2Node_CustomEvent_Message, enum K2Node_CustomEvent_Channel, LinearColor K2Node_CustomEvent_Color, enum K2Node_CustomEvent_NotificationType, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, FText CallFunc_Conv_StringToText_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_ChatEntry_C* CallFunc_Create_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, float CallFunc_GetScrollOffset_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, UMGSequencePlayer* CallFunc_CreatePlayAnimationProxyObject_Result, WidgetAnimationPlayCallbackProxy* CallFunc_CreatePlayAnimationProxyObject_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: WidgetAnimationPlayCallbackProxy.Object
	MulticastInlineDelegateProperty Finished;//[Size: 1]
	static WidgetAnimationPlayCallbackProxy* CreatePlayAnimationTimeRangeProxyObject(out UMGSequencePlayer* Result, UserWidget* Widget, WidgetAnimation* InAnimation, float StartAtTime, float EndAtTime, int NumLoopsToPlay, byte PlayMode, float PlaybackSpeed);// 0x3407070
	static WidgetAnimationPlayCallbackProxy* CreatePlayAnimationProxyObject(out UMGSequencePlayer* Result, UserWidget* Widget, WidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, byte PlayMode, float PlaybackSpeed);// 0x3406e50

--------------------------------
Class: BP_MarkerWidget_CaptureZoneTC_C.SQMapWidgetCaptureZone.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x358, Size: 1]
	WidgetAnimation* pulse;//[Offset: 0x360, Size: 1]
	Image* Anchor;//[Offset: 0x368, Size: 1]
	Border* AnchorBG;//[Offset: 0x370, Size: 1]
	ScaleBox* AnchorIcon;//[Offset: 0x378, Size: 1]
	Image* B;//[Offset: 0x380, Size: 1]
	Image* BL;//[Offset: 0x388, Size: 1]
	Image* BR;//[Offset: 0x390, Size: 1]
	CanvasPanel* CanvasPanel_Main;//[Offset: 0x398, Size: 1]
	ProgressBar* CaptureBar;//[Offset: 0x3a0, Size: 1]
	TextBlock* FlagNameText;//[Offset: 0x3a8, Size: 1]
	Image* HexFill;//[Offset: 0x3b0, Size: 1]
	Image* HexHashed;//[Offset: 0x3b8, Size: 1]
	Image* HexOutline;//[Offset: 0x3c0, Size: 1]
	Overlay* HexParent;//[Offset: 0x3c8, Size: 1]
	Image* Protected;//[Offset: 0x3d0, Size: 1]
	ScaleBox* ProtectIcon;//[Offset: 0x3d8, Size: 1]
	ScaleBox* ScaleBox_Info;//[Offset: 0x3e0, Size: 1]
	SizeBox* SizeBox_CaptureBar;//[Offset: 0x3e8, Size: 1]
	SizeBox* SizeBox_Main;//[Offset: 0x3f0, Size: 1]
	Image* T;//[Offset: 0x3f8, Size: 1]
	Image* TL;//[Offset: 0x400, Size: 1]
	Image* TR;//[Offset: 0x408, Size: 1]
	MulticastInlineDelegateProperty CloseTooltip;//[Size: 1]
	float UpdateStateTime;//[Offset: 0x420, Size: 1]
	TC_HexZone_C* This Hex Zone;//[Offset: 0x428, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x430, Size: 1]
	Image*[] Edge Lines;//[Offset: 0x438, Size: 1]
	float Flag Radius;//[Offset: 0x448, Size: 1]
	FString Grid Ref;//[Offset: 0x450, Size: 1]
	float MaxZoomFactor;//[Offset: 0x460, Size: 1]
	float Zoom Alpha;//[Offset: 0x464, Size: 1]
	float Show Large Text Threshold;//[Offset: 0x468, Size: 1]
	float Show Data Threshold;//[Offset: 0x46c, Size: 1]
	bool Can Animate Capture Fade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x470, Size: 1]
	TimerHandle Update Timer;//[Offset: 0x478, Size: 1]
	bool Is Point of Interest;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x480, Size: 1]
	int PlayerController Team ID;//[Offset: 0x484, Size: 1]
	void Update Protected Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, int Temp_int_Variable, bool Temp_bool_Variable, bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_Nearby_Zones_Team_1_Nearby, bool CallFunc_Nearby_Zones_Team_2_Nearby, bool K2Node_Select_Default, bool CallFunc_Get_Protected_By_Neighbours_Protected, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Update Touching Start(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, byte CallFunc_Get_Hex_Owning_Team_OwningTeam, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Array_Get_Item, enum K2Node_Select_Default);// 0x1d69c50
	void Bind BPHUD Events(delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Update Visibility from Save Data(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	bool Get POI(bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_Can_Cap_Can_Cap, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Can_Cap_Can_Cap, bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	FText Get Hex Text(bool Temp_bool_Variable, bool CallFunc_LessEqual_FloatFloat_ReturnValue, FString CallFunc_Left_ReturnValue, FString K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Get Hex Owning Team(out byte OwningTeam);// 0x1d69c50
	void Get Can Cap Team(TC_HexZone_C* Zone, out bool Friendly, out bool Enemy, out bool Neutral, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Get Captor(TC_HexZone_C* Zone, out bool Friendly, out bool Enemy, out bool Neutral, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Get Owner(TC_HexZone_C* Zone, out bool Friendly, out bool Enemy, out bool Neutral, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Update Frontline(TC_HexZone_C* Directional Hex Zone, int Edge Index, bool Temp_bool_Variable, float Temp_float_Variable, int Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_Get_Same_Team_Same, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, Image* CallFunc_Array_Get_Item, enum Temp_byte_Variable, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, Image* CallFunc_Array_Get_Item, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float K2Node_Select_Default, Vector CallFunc_GetActorForwardVector_ReturnValue, Vector CallFunc_RotateAngleAxis_ReturnValue, enum Temp_byte_Variable, Vector CallFunc_RotateAngleAxis_ReturnValue, bool Temp_bool_Variable, Image* CallFunc_Array_Get_Item, enum K2Node_Select_Default, bool CallFunc_EqualEqual_IntInt_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, int Temp_int_Loop_Counter_Variable, Vector CallFunc_GetDirectionUnitVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Nearby Zones(out bool Team 1 Nearby, out bool Team 2 Nearby, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50
	void Get Hex Zone(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, TC_HexZone_C*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_TextText_ReturnValue);// 0x1d69c50
	void Update Anchor Visual(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Can Cap(TC_HexZone_C* Zone, bool Self Team, out bool Can Cap, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, bool Temp_bool_Variable, int K2Node_Select_Default, int K2Node_Select_Default, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_GetCanTeamCapture_ReturnValue);// 0x1d69c50
	void Get Same Team(out bool Same, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void Update Capture Bar(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_Get_Captor_Friendly, bool CallFunc_Get_Captor_Enemy, bool CallFunc_Get_Captor_Neutral, LinearColor CallFunc_SelectColor_ReturnValue, bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_BooleanAND_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void Update Hex Color(LinearColor L Color, bool L Point of Interest, bool Temp_bool_Variable, int Temp_int_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool CallFunc_Nearby_Zones_Team_1_Nearby, bool CallFunc_Nearby_Zones_Team_2_Nearby, float K2Node_Select_Default, float K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor, float K2Node_Select_Default, float K2Node_Select_Default, bool K2Node_Select_Default, bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_Not_PreBool_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor K2Node_MakeStruct_LinearColor, LinearColor K2Node_MakeStruct_LinearColor, bool CallFunc_IsAdminCamera_ReturnValue, bool CallFunc_Get_Owner_Friendly, bool CallFunc_Get_Owner_Enemy, bool CallFunc_Get_Owner_Neutral, bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor K2Node_MakeStruct_LinearColor);// 0x1d69c50
	void Update Widget(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Get_POI_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnFlagNameChanged();// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void Set Name Via Grid Ref();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void Reset Hex Opacity();// 0x1d69c50
	void OnCapturePercentChanged();// 0x1d69c50
	void Play Capture Fade Animation();// 0x1d69c50
	void UpdateState();// 0x1d69c50
	void Start Timer Update Hex(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Stop Timer Update Hex(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float K2Node_Event_UniformScale, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, const Vector2D CallFunc_GetNumGridLines_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, FString CallFunc_MapLocationToGridCoordinateString_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, float CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, enum K2Node_Select_Default, bool CallFunc_Can_Cap_Can_Cap, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_GetActorBounds_Origin, Vector CallFunc_GetActorBounds_BoxExtent, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_Round_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Image*[] K2Node_MakeArray_Array, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, UMG_MenuBase_C* K2Node_CustomEvent_Menu, UMG_MenuBase_C* K2Node_CustomEvent_Menu);// 0x1d69c50
	void CloseTooltip__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQMapWidgetCaptureZone.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	FText FlagName;//[Offset: 0x2d8, Size: 1]
	Texture2D* FlagTexture;//[Offset: 0x2f0, Size: 1]
	Texture2D* DefaultFlag;//[Offset: 0x318, Size: 1]
	bool bUncappable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x340, Size: 1]
	enum ContestingState;//[Offset: 0x344, Size: 1]
	byte OwningTeam;//[Offset: 0x345, Size: 1]
	byte CapturingTeam;//[Offset: 0x346, Size: 1]
	float CapturePercent;//[Offset: 0x348, Size: 1]
	int CapturePercentDirection;//[Offset: 0x34c, Size: 1]
	byte TeamKnowledge;//[Offset: 0x350, Size: 1]
	void OnUncappableChanged();// 0x1d69c50
	void OnTeamKnowledgeChanged();// 0x1d69c50
	void OnOwningTeamChanged();// 0x1d69c50
	void OnFlagTextureChanged();// 0x1d69c50
	void OnFlagNameChanged();// 0x1d69c50
	void OnContestingChanged();// 0x1d69c50
	void OnCapturingTeamChanged();// 0x1d69c50
	void OnCapturePercentDirectionChanged();// 0x1d69c50
	void OnCapturePercentChanged();// 0x1d69c50

--------------------------------
Class: TC_HexZone_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	TextRenderComponent* TextRender;//[Offset: 0x230, Size: 1]
	SQCaptureZoneTCComponent* SQCaptureZoneTC;//[Offset: 0x238, Size: 1]
	ArrowComponent* Arrow;//[Offset: 0x240, Size: 1]
	StaticMeshComponent* Hex;//[Offset: 0x248, Size: 1]
	MaterialInstanceDynamic* MI Hex;//[Offset: 0x250, Size: 1]
	int Hex Num;//[Offset: 0x258, Size: 1]
	MulticastInlineDelegateProperty Flag Info Changed;//[Size: 1]
	TC_HexZone_C*[] Neighbour Hexes;//[Offset: 0x270, Size: 1]
	TC_HexGraph_C* TC Graph;//[Offset: 0x280, Size: 1]
	MaterialInterface* Material;//[Offset: 0x288, Size: 1]
	int[] Nearby Zone Team Counts;//[Offset: 0x290, Size: 1]
	int Nearby Hexes Required To Cap;//[Offset: 0x2a0, Size: 1]
	bool Locked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a4, Size: 1]
	bool[] Touching Anchor;//[Offset: 0x2a8, Size: 1]
	bool Is Anchor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	bool Protected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b9, Size: 1]
	Actor* Protecting Actor;//[Offset: 0x2c0, Size: 1]
	bool Can Protect Neighbours;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	void Refresh Protection(bool CallFunc_IsValid_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Variable, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, Actor*[] CallFunc_GetOverlappingActors_OverlappingActors, Actor* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetTeamId_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Capture_Zone_Modifier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Additional_Can_Capture_Can_Capture, bool CallFunc_DoesImplementInterface_ReturnValue);// 0x1d69c50
	void Get Protected By Neighbours(out bool Protected, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Set ID(int Hex Num, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Calculate Can Capture(int Nearby Zones, int Team, out bool Can Capture, bool CallFunc_Get_Protected_By_Neighbours_Protected, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Refresh Local Zones(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Add_IntInt_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Refresh Can Cap(bool L Changed state, int Temp_int_Array_Index_Variable, bool CallFunc_NotEqual_IntInt_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Get_Item, bool CallFunc_Calculate_Can_Capture_Can_Capture, bool CallFunc_SetTeamCanCapture_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Cache Local Hexes(TC_HexZone_C* L Zone, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_GetComponentBounds_Origin, Vector CallFunc_GetComponentBounds_BoxExtent, float CallFunc_GetComponentBounds_SphereRadius, bool CallFunc_NotEqual_ObjectObject_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Array_Length_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue);// 0x1d69c50
	void Init Data(byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte K2Node_Select_Default, byte Temp_byte_Variable, int CallFunc_GetNumberOfSplinePoints_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetSplineLength_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool Temp_bool_Variable, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, byte K2Node_Select_Default, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Refresh Zone Debug(LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, int CallFunc_Conv_ByteToInt_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_GetCanTeamCapture_ReturnValue, bool CallFunc_GetCanTeamCapture_ReturnValue, FString CallFunc_SelectString_ReturnValue, FString CallFunc_SelectString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, Vector CallFunc_GetActorForwardVector_ReturnValue, Vector CallFunc_RotateAngleAxis_ReturnValue, Rotator CallFunc_Conv_VectorToRotator_ReturnValue, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, HitResult CallFunc_K2_SetWorldRotation_SweepHitResult, int CallFunc_Array_Length_ReturnValue, enum Temp_byte_Variable, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, LinearColor K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void UserConstructionScript();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Debug();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void State Changed(SQCaptureZoneComponent* CaptureZone, byte Team);// 0x1d69c50
	void Make Team One();// 0x1d69c50
	void Make Team Two();// 0x1d69c50
	void Make Team Neutral();// 0x1d69c50
	void Protector Destroyed(Actor* Protector);// 0x1d69c50
	void State Changed Notify(byte Team);// 0x1d69c50
	void ExecuteUbergraph_TC_HexZone(int EntryPoint, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, float K2Node_Event_DeltaSeconds, int Temp_int_Variable, bool CallFunc_BooleanOR_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_GetCanTeamCapture_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQCaptureZoneComponent* K2Node_CustomEvent_CaptureZone, byte K2Node_CustomEvent_Team, bool CallFunc_IsValid_ReturnValue, Actor* K2Node_CustomEvent_Protector, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, byte K2Node_CustomEvent_Team, bool CallFunc_NotEqual_ByteByte_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, SQTeamState* CallFunc_TryGetTeamState_OutTeamState, bool CallFunc_TryGetTeamState_ReturnValue, FText CallFunc_TryGetFactionDisplayName_OutDisplayName, bool CallFunc_TryGetFactionDisplayName_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_MakeLiteralText_ReturnValue, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Conv_ByteToInt_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, int CallFunc_TryGetLocalPlayerTeamId_OutTeamId, bool CallFunc_TryGetLocalPlayerTeamId_ReturnValue, FText CallFunc_Format_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Flag Info Changed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQCaptureZoneTCComponent.SQCaptureZoneComponent.SQGraphNodeComponent.ActorComponent.Object

--------------------------------
Class: ArrowComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	Color ArrowColor;//[Offset: 0x450, Size: 1]
	float ArrowSize;//[Offset: 0x454, Size: 1]
	float ArrowLength;//[Offset: 0x458, Size: 1]
	float ScreenSize;//[Offset: 0x45c, Size: 1]
	bool bIsScreenSizeScaled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x460, Size: 1]
	bool bTreatAsASprite;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x460, Size: 1]
	void SetArrowColor(LinearColor NewColor);// 0x3ec3f20

--------------------------------
Class: TC_HexGraph_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	TCScalableBleedComponent_C* TCScalableBleedComponent;//[Offset: 0x230, Size: 1]
	BoxComponent* NoCollisionDebugExtent;//[Offset: 0x238, Size: 1]
	BillboardComponent* HexBillboard;//[Offset: 0x240, Size: 1]
	SplineComponent* Spline;//[Offset: 0x248, Size: 1]
	Vector Hex Extent;//[Offset: 0x250, Size: 1]
	TC_HexZone_C*[] TC Zones;//[Offset: 0x260, Size: 1]
	float[] Hex Max Distance From Spline;//[Offset: 0x270, Size: 1]
	float Hex XY Scale;//[Offset: 0x280, Size: 1]
	float Start Spline Ownership;//[Offset: 0x284, Size: 1]
	float End Spline Ownership;//[Offset: 0x288, Size: 1]
	bool Test Setup Once;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28c, Size: 1]
	bool Use Hex Control % as Win Condition;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28d, Size: 1]
	float Hex Control % Target to Win;//[Offset: 0x290, Size: 1]
	bool Test Constant;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x294, Size: 1]
	float Hex Z Scale;//[Offset: 0x298, Size: 1]
	bool Flip Teams;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29c, Size: 1]
	float Width Spacer;//[Offset: 0x2a0, Size: 1]
	float Height Spacer;//[Offset: 0x2a4, Size: 1]
	int Hex Widths;//[Offset: 0x2a8, Size: 1]
	int Hex Lengths;//[Offset: 0x2ac, Size: 1]
	Transform[] Hex Transform Array;//[Offset: 0x2b0, Size: 1]
	float Start Random Anchor Distance;//[Offset: 0x2c0, Size: 1]
	float End Random Anchor Distance;//[Offset: 0x2c4, Size: 1]
	TC_HexZone_C*[] Team 1 Anchors;//[Offset: 0x2c8, Size: 1]
	TC_HexZone_C*[] Team 2 Anchors;//[Offset: 0x2d8, Size: 1]
	TC_HexZone_C* Team 1 Anchor;//[Offset: 0x2e8, Size: 1]
	TC_HexZone_C* Team 2 Anchor;//[Offset: 0x2f0, Size: 1]
	TC_HexZone_C*[] Current Hexes in Round;//[Offset: 0x2f8, Size: 1]
	int[] Team Hex Ownership;//[Offset: 0x308, Size: 1]
	int Target Zones To Capture;//[Offset: 0x318, Size: 1]
	class TC_HexZone_C* Hex Class;//[Offset: 0x320, Size: 1]
	int Nearby Hexes Required To Cap;//[Offset: 0x328, Size: 1]
	void Get Valid Anchor Hexes(out TC_HexZone_C*[] Out Team 1 Hexes, out TC_HexZone_C*[] Out Team 2 Hexes, TC_HexZone_C*[] L T2, TC_HexZone_C* L Hex, TC_HexZone_C*[] L T1, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, float CallFunc_GetSplineLength_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetNumberOfSplinePoints_ReturnValue, float CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_FTrunc_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool Temp_bool_Variable, bool CallFunc_BooleanOR_ReturnValue, TC_HexZone_C*[] K2Node_Select_Default, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void Get Neighbour Chain(out TC_HexZone_C*[] Chain, int Team, TC_HexZone_C* Zone, out TC_HexZone_C*[] Out Chain, TC_HexZone_C* L Hex, TC_HexZone_C*[] L Chain, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, int Temp_int_Loop_Counter_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TC_HexZone_C*[] CallFunc_Get_Neighbour_Chain_Out_Chain, int CallFunc_Array_AddUnique_ReturnValue);// 0x1d69c50
	void Update Anchor Flags(const bool Temp_bool_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, const bool Temp_bool_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool[] K2Node_MakeArray_Array, int Temp_int_Loop_Counter_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, TC_HexZone_C*[] K2Node_MakeArray_Array, TC_HexZone_C*[] K2Node_MakeArray_Array, TC_HexZone_C*[] CallFunc_Get_Neighbour_Chain_Out_Chain, TC_HexZone_C*[] CallFunc_Get_Neighbour_Chain_Out_Chain, TC_HexZone_C* CallFunc_Array_Get_Item, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Check Win Condition(int Team B Num, int Team A Num, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, int CallFunc_Array_Length_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, SQGameMode* CallFunc_GetSquadGameMode_Return_Value, int Temp_int_Variable, SQGameState* CallFunc_GetSquadGameState_Return_Value, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int K2Node_Select_Default, SQTeamState* CallFunc_Array_Get_Item, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Construct Hex Data(out TC_HexZone_C*[] In Zones, TC_HexZone_C*[] L In Zones, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Refresh Zones(TC_HexZone_C*[] L Hex Zones, int Current Width Index, int Current Length Index, TC_HexZone_C*[] CallFunc_GetAllActorsOfClass_OutActors);// 0x1d69c50
	void Init Start Zones(TC_HexZone_C*[] L Neutral Team, TC_HexZone_C*[] L Team 2, TC_HexZone_C*[] L Team 1, TC_HexZone_C*[] CallFunc_Get_Valid_Anchor_Hexes_Out_Team_1_Hexes, TC_HexZone_C*[] CallFunc_Get_Valid_Anchor_Hexes_Out_Team_2_Hexes, TC_HexZone_C* CallFunc_Array_Get_Item, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_RandomInteger_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_RandomInteger_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue);// 0x1d69c50
	void Get Start Zones(out TC_HexZone_C* Start Team 1, out TC_HexZone_C* Start Team 2);// 0x1d69c50
	void Get Team Zone Capture(int Team, out int Num Zones Owned, out float Percentage Owned, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50
	void Clamp Ownership(float CallFunc_FMax_ReturnValue, float CallFunc_FMax_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);// 0x1d69c50
	void Init Play Hex Data(TC_HexZone_C*[] L In Zones, TC_HexZone_C*[] L Sorted Hexes, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, int CallFunc_Round_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, TC_HexZone_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, TC_HexZone_C*[] CallFunc_GetAllActorsOfClass_OutActors, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Destroy Hex Zones(Actor*[] L Children, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Actor*[] CallFunc_GetAttachedActors_OutActors, Actor* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Create Hex Zones(TC_HexZone_C*[] L Hex Zones, int Current Width Index, int Current Length Index, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, const TC_HexZone_C* Temp_object_Variable, Transform CallFunc_Array_Get_Item, Vector CallFunc_BreakTransform_Location, Rotator CallFunc_BreakTransform_Rotation, Vector CallFunc_BreakTransform_Scale, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, Vector CallFunc_TransformLocation_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, TC_HexZone_C* CallFunc_FinishSpawningActor_ReturnValue);// 0x1d69c50
	void Can Spawn Hex(out const Vector WorldLocation, out bool Can Spawn, Vector World Loc, int CallFunc_GetNumberOfSplinePoints_ReturnValue, float CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_TransformLocation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, Vector CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void UserConstructionScript(TC_HexZone_C*[] L TC Zones, ChildActorComponent*[] L Spawned Child Zones, float Hex Height, float Hex Width, Vector Hex Base Scale, int Current Length Index, int Current Width Index, int Temp_int_Variable, float Temp_float_Variable, const float Temp_float_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, int CallFunc_GetNumberOfSplinePoints_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_K2_SetActorRotation_ReturnValue, Transform CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, Vector CallFunc_BreakTransform_Location, Rotator CallFunc_BreakTransform_Rotation, Vector CallFunc_BreakTransform_Scale, bool CallFunc_Less_IntInt_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, ChildActorComponent* CallFunc_AddComponent_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, int CallFunc_Array_Add_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, Rotator CallFunc_MakeRotator_ReturnValue, ChildActorComponent* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TC_HexZone_C* K2Node_DynamicCast_AsTC_Hex_Zone, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, float CallFunc_Array_Get_Item, int CallFunc_Percent_IntInt_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, Vector CallFunc_Divide_VectorFloat_ReturnValue, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_MakeVector_ReturnValue, float CallFunc_FMax_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, HitResult CallFunc_K2_SetRelativeLocation_SweepHitResult, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Abs_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, int CallFunc_Round_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, int CallFunc_Round_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, bool CallFunc_Can_Spawn_Hex_Can_Spawn, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void State Changed(SQCaptureZoneComponent* CaptureZone, byte Team);// 0x1d69c50
	void Cache Team Hex Ownership();// 0x1d69c50
	void ExecuteUbergraph_TC_HexGraph(int EntryPoint, TC_HexZone_C*[] CallFunc_GetAllActorsOfClass_OutActors, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, SQCaptureZoneComponent* K2Node_CustomEvent_CaptureZone, byte K2Node_CustomEvent_Team, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: TCScalableBleedComponent_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	float[] BleedThresholds;//[Offset: 0xb8, Size: 1]
	bool bInterpolateBleedValues;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc8, Size: 1]
	<float,int> BleedScaleMap;//[Offset: 0xd0, Size: 1]
	int Minimum of Hexes Required for Bleed;//[Offset: 0x120, Size: 1]
	int[] Current Bleed;//[Offset: 0x128, Size: 1]
	TC_HexZone_C*[] All TC Zones;//[Offset: 0x138, Size: 1]
	CurveFloat* Ticket Bleed Curve;//[Offset: 0x148, Size: 1]
	void CalcBleedValue_Curve(int Zones captured, out int Bleed Value, float l_IntervalEnd, float l_IntervalStart, float l_CapPercentage, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, int CallFunc_FTrunc_ReturnValue);// 0x1d69c50
	void CalcBleedValue(int Zones captured, out int Bleed Value, float l_IntervalEnd, float l_IntervalStart, float l_CapPercentage, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, int CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int CallFunc_Round_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_MaxOfFloatArray_IndexOfMaxValue, float CallFunc_MaxOfFloatArray_MaxValue, float CallFunc_Divide_FloatFloat_ReturnValue, int CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_MaxOfFloatArray_IndexOfMaxValue, float CallFunc_MaxOfFloatArray_MaxValue, float CallFunc_Multiply_IntFloat_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Round_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void InitBleedThresholds(int _CachedArrayLength, float[] BleedThresholdsUnsorted, int CallFunc_Array_Length_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_MinOfFloatArray_IndexOfMinValue, float CallFunc_MinOfFloatArray_MinValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, float[] CallFunc_Map_Keys_Keys);// 0x1d69c50
	void Get Current Bleed(int Team ID, out int Bleed Per Min);// 0x1d69c50
	void Initialise TC Bleed Component(out TC_HexZone_C*[] All TC Zones, int CallFunc_Array_Length_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, int CallFunc_Round_ReturnValue);// 0x1d69c50
	void Update Bleed Count(int Team B Num, int Team A Num, int Temp_int_Array_Index_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Variable, int Temp_int_Variable, SQGameState* CallFunc_GetSquadGameState_Return_Value, SQTeamState* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TC_HexZone_C* CallFunc_Array_Get_Item, int K2Node_Select_Default, int CallFunc_CalcBleedValue_Curve_Bleed_Value, byte CallFunc_GetValidValue_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Apply Bleed Per Minute();// 0x1d69c50
	void ExecuteUbergraph_TCScalableBleedComponent(int EntryPoint, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQGameState* CallFunc_GetSquadGameState_Return_Value, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, int CallFunc_GetTickets_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_MapWidgetRallyPoint_C.SQMapWidgetRallyPoint.SQMapWidgetSpawnPoint.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x310, Size: 1]
	WidgetAnimation* CornerPulse;//[Offset: 0x318, Size: 1]
	Image* Corners;//[Offset: 0x320, Size: 1]
	Image* RallypointBrush;//[Offset: 0x328, Size: 1]
	ScaleBox* ScaleBox_SpawnRally;//[Offset: 0x330, Size: 1]
	Border* Selected;//[Offset: 0x338, Size: 1]
	TextBlock* SquadNumber;//[Offset: 0x340, Size: 1]
	W_ShareRally_C* W_ShareRally;//[Offset: 0x348, Size: 1]
	W_Tooltip_RallyPoint_C* Rally Tooltip;//[Offset: 0x350, Size: 1]
	float Last Click Time;//[Offset: 0x358, Size: 1]
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, EventReply CallFunc_Handled_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, W_DeployConfirmation_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, float CallFunc_Subtract_FloatFloat_ReturnValue, W_DeployConfirmation_C* CallFunc_Array_Get_Item, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Update Color(bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, Vector2D K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, Vector2D K2Node_Select_Default);// 0x1d69c50
	void Update Rally Spawns Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	Widget* Get_SpawnFront_IMG_ToolTipWidget(W_Tooltip_RallyPoint_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnIsSelectedChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnIsInSelfSquadChanged();// 0x1d69c50
	void OnTintValueChanged();// 0x1d69c50
	void OnNumberOfSpawnsChanged();// 0x1d69c50
	void Check Animation();// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void ExecuteUbergraph_BP_MapWidgetRallyPoint(int EntryPoint, W_DeployConfirmation_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, enum Temp_byte_Variable, int CallFunc_Array_Length_ReturnValue, enum Temp_byte_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, W_DeployConfirmation_C* CallFunc_Array_Get_Item, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FText K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool Temp_bool_Variable, float K2Node_Event_UniformScale, enum K2Node_Select_Default, LinearColor CallFunc_GetTintColor_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: SQMapWidgetRallyPoint.SQMapWidgetSpawnPoint.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	int NumberOfSpawns;//[Offset: 0x2f8, Size: 1]
	int SquadId;//[Offset: 0x2fc, Size: 1]
	bool bIsInSelfSquad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x300, Size: 1]
	SQSquadState* SquadState;//[Offset: 0x308, Size: 1]
	void OnSquadIdChanged();// 0x1d69c50
	void OnNumberOfSpawnsChanged();// 0x1d69c50
	void OnIsInSelfSquadChanged();// 0x1d69c50
	void OnEventSquadStateChanged(SQSquadState* NewSquad, SQSquadState* OldSquad, SQPlayerState* Player);// 0xdbd010

--------------------------------
Class: SQMapWidgetSpawnPoint.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	bool bSpawnOnSingleClick;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	bool bSpawnOnDoubleClick;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d9, Size: 1]
	bool bIsSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2dc, Size: 1]
	bool bSieged;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2dc, Size: 1]
	bool bSpawningEnabled;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2dc, Size: 1]
	float ActivatedTimeStamp;//[Offset: 0x2e0, Size: 1]
	enum SpawnPointType;//[Offset: 0x2e4, Size: 1]
	SQGameSpawn* OwningGameSpawn;//[Offset: 0x2e8, Size: 1]
	void OnSpawnPointTypeChanged();// 0x1d69c50
	void OnSpawningEnabledChanged();// 0x1d69c50
	void OnSiegedChanged();// 0x1d69c50
	void OnIsSelectedChanged();// 0x1d69c50
	void OnActivatedTimeStampChanged();// 0x1d69c50

--------------------------------
Class: W_Tooltip_RallyPoint_C.SQToolTipBaseWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	WidgetAnimation* OpenAnim;//[Offset: 0x278, Size: 1]
	Image* BackgroundImage;//[Offset: 0x280, Size: 1]
	TextBlock* RallyPointText;//[Offset: 0x288, Size: 1]
	int NumSpawns;//[Offset: 0x290, Size: 1]
	void Update Rally Tooltip Text(int NumSpawns, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_LessEqual_IntInt_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_Tooltip_RallyPoint(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_ShareRally_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x280, Size: 1]
	int Squad ID;//[Offset: 0x288, Size: 1]
	void Construct();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_ShareRally(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_MapWidgetSpawnPoint_C.SQMapWidgetSpawnPoint.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2f8, Size: 1]
	WidgetAnimation* CornerPulse;//[Offset: 0x300, Size: 1]
	Image* Corners;//[Offset: 0x308, Size: 1]
	ScaleBox* ScaleBox_Spawn;//[Offset: 0x310, Size: 1]
	Border* Selected;//[Offset: 0x318, Size: 1]
	Image* SiegedIcon;//[Offset: 0x320, Size: 1]
	W_FobBleedRadialTimer_C* SpawnRadialProgress;//[Offset: 0x328, Size: 1]
	Image* SpawnTypeIcon;//[Offset: 0x330, Size: 1]
	float Last Click Time;//[Offset: 0x338, Size: 1]
	void UpdateProgress(float RemainingTime, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetRemainingActivatingTime_RemainingTime, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void GetRemainingActivatingTime(out float RemainingTime, GameStateBase* CallFunc_GetGameState_ReturnValue, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, EventReply CallFunc_Handled_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, W_DeployConfirmation_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, float CallFunc_Subtract_FloatFloat_ReturnValue, W_DeployConfirmation_C* CallFunc_Array_Get_Item, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Update Spawns Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Update Color(enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, float CallFunc_GetRemainingActivatingTime_RemainingTime, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetRemainingActivatingTime_RemainingTime, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, Vector2D K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void OnIsSelectedChanged();// 0x1d69c50
	void OnSpawnPointTypeChanged();// 0x1d69c50
	void Check Animation();// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void OnSiegedChanged();// 0x1d69c50
	void OnSpawningEnabledChanged();// 0x1d69c50
	void OnActivatedTimeStampChanged();// 0x1d69c50
	void ExecuteUbergraph_BP_MapWidgetSpawnPoint(int EntryPoint, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, enum Temp_byte_Variable, bool CallFunc_IsAnimationPlaying_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, Texture2D* K2Node_Select_Default, float K2Node_Event_UniformScale, W_DeployConfirmation_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_DeployConfirmation_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_MapWidgetForwardBase_C.SQMapWidgetForwardBase.SQMapWidgetDeployable.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2f8, Size: 1]
	Image* FOBIcon;//[Offset: 0x300, Size: 1]
	HorizontalBox* H_Ammo;//[Offset: 0x308, Size: 1]
	HorizontalBox* H_Construction;//[Offset: 0x310, Size: 1]
	Image* Image;//[Offset: 0x318, Size: 1]
	Image* Image;//[Offset: 0x320, Size: 1]
	Button* MouseHoverZone;//[Offset: 0x328, Size: 1]
	Image* RadiusConstruction;//[Offset: 0x330, Size: 1]
	Image* RadiusExclusion;//[Offset: 0x338, Size: 1]
	ScaleBox* Scale2;//[Offset: 0x340, Size: 1]
	ScaleBox* ScaleBox_Supplies;//[Offset: 0x348, Size: 1]
	ScaleBox* ScaleBoxFob;//[Offset: 0x350, Size: 1]
	SizeBox* SizeBox_Construction;//[Offset: 0x358, Size: 1]
	SizeBox* SizeBox_Exclusion;//[Offset: 0x360, Size: 1]
	TextBlock* TB_AmmoAmount;//[Offset: 0x368, Size: 1]
	TextBlock* TB_ConstructionAmount;//[Offset: 0x370, Size: 1]
	W_Tooltip_FobSupplies_C* Supplies Widget;//[Offset: 0x378, Size: 1]
	Widget* Get_FOBIcon_ToolTipWidget(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_Tooltip_FobSupplies_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Update Supplies Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	void Update Radius Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	void Update Color(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue);// 0x1d69c50
	void Update Exclusion Radius(float L_ExclusionDiamater, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel, S_FOBRadius CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void Update Construction Radius(float L Construction, float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, S_FOBRadius CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnTintValueChanged();// 0x1d69c50
	void OnExclusionRadiusChanged();// 0x1d69c50
	void OnAmmoPointsChanged();// 0x1d69c50
	void OnConstructionRadiusChanged();// 0x1d69c50
	void OnConstructionPointsChanged();// 0x1d69c50
	void OnCanSpawnChanged();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void OnSiegedChanged();// 0x1d69c50
	void OnMinActivatedTimeStampChanged();// 0x1d69c50
	void BndEvt__MouseHoverZone_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__MouseHoverZone_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_BP_MapWidgetForwardBase(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, float K2Node_Event_UniformScale, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, W_CommandUI_C* K2Node_DynamicCast_AsW_Command_UI, bool K2Node_DynamicCast_bSuccess, W_DeploymentMenu_C* K2Node_DynamicCast_AsW_Deployment_Menu, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50

--------------------------------
Class: SQMapWidgetForwardBase.SQMapWidgetDeployable.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	bool bCanSpawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2e0, Size: 1]
	bool bSieged;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2e0, Size: 1]
	bool bIsBleeding;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2e0, Size: 1]
	float MinActivatedTimeStamp;//[Offset: 0x2e4, Size: 1]
	float ExclusionRadius;//[Offset: 0x2e8, Size: 1]
	float ConstructionRadius;//[Offset: 0x2ec, Size: 1]
	float AmmoPoints;//[Offset: 0x2f0, Size: 1]
	float ConstructionPoints;//[Offset: 0x2f4, Size: 1]
	void OnSiegedChanged();// 0x1d69c50
	void OnMinActivatedTimeStampChanged();// 0x1d69c50
	void OnIsBleedingChanged();// 0x1d69c50
	void OnExclusionRadiusChanged();// 0x1d69c50
	void OnConstructionRadiusChanged();// 0x1d69c50
	void OnConstructionPointsChanged();// 0x1d69c50
	void OnCanSpawnChanged();// 0x1d69c50
	void OnAmmoPointsChanged();// 0x1d69c50

--------------------------------
Class: SQMapWidgetDeployable.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	enum BuildState;//[Offset: 0x2d8, Size: 1]
	void OnBuildStateChanged();// 0x1d69c50

--------------------------------
Class: W_Tooltip_FobSupplies_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	HorizontalBox* H_Ammo;//[Offset: 0x268, Size: 1]
	HorizontalBox* H_Construction;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	ScaleBox* ScaleBox_Supplies;//[Offset: 0x288, Size: 1]
	TextBlock* TB_AmmoAmount;//[Offset: 0x290, Size: 1]
	TextBlock* TB_ConstructionAmount;//[Offset: 0x298, Size: 1]
	float Construction;//[Offset: 0x2a0, Size: 1]
	float Ammo;//[Offset: 0x2a4, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_Tooltip_FobSupplies(int EntryPoint, FText CallFunc_Conv_FloatToText_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50

--------------------------------
Class: S_FOBRadius
	float FOBExclusionRadius_4_DBB2C67F427F88E0A656F9895441FA5C;//[Offset: 0x0, Size: 1]
	float FOBConstructionRadius_6_A39C8AC44E62DCD8EC5ADBAA78B9C121;//[Offset: 0x4, Size: 1]

--------------------------------
Class: W_CommandUI_C.UMG_MenuBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e0, Size: 1]
	WidgetAnimation* CommandOpenCloseAnim;//[Offset: 0x2e8, Size: 1]
	BackgroundBlur* BackgroundBlur;//[Offset: 0x2f0, Size: 1]
	ChallengeWindow_C* ChallengeGiveUp;//[Offset: 0x2f8, Size: 1]
	W_SlideComponent_C* ChatSlide;//[Offset: 0x300, Size: 1]
	W_SlideComponent_C* CommandSlide;//[Offset: 0x308, Size: 1]
	SizeBox* GiveupPanel;//[Offset: 0x310, Size: 1]
	HorizontalBox* MainObject;//[Offset: 0x318, Size: 1]
	W_SQMapCore_C* MapCoreWidget;//[Offset: 0x320, Size: 1]
	MainMenu_Button_C* NAV_ROLES;//[Offset: 0x328, Size: 1]
	MainMenu_Button_C* NAV_SQUADS;//[Offset: 0x330, Size: 1]
	Image* slideimage;//[Offset: 0x338, Size: 1]
	SizeBox* SquadBox;//[Offset: 0x340, Size: 1]
	Button* SquadsSlideButton;//[Offset: 0x348, Size: 1]
	W_ControlledCameraList_C* W_ControlledCameraList;//[Offset: 0x350, Size: 1]
	W_GameTime_C* W_GameTime;//[Offset: 0x358, Size: 1]
	W_GiveUp_C* W_GiveUp;//[Offset: 0x360, Size: 1]
	W_MapControls_C* W_MapControls;//[Offset: 0x368, Size: 1]
	W_MarkedPosition_C* W_MarkedPosition;//[Offset: 0x370, Size: 1]
	W_PlayerPosition_C* W_PlayerPosition;//[Offset: 0x378, Size: 1]
	W_SquadList_C* W_SquadList;//[Offset: 0x380, Size: 1]
	W_TeamTickets_C* W_TeamTickets;//[Offset: 0x388, Size: 1]
	W_TerritoryControl_Bar_C* W_TerritoryControl_Bar;//[Offset: 0x390, Size: 1]
	W_VoipOwningPlayer_C* W_VoipOwningPlayer;//[Offset: 0x398, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x3a0, Size: 1]
	bool Always Allow Action;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a8, Size: 1]
	W_CommandActionList_C* Command List Widget;//[Offset: 0x3b0, Size: 1]
	void Set Command Slide Visibility(SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsCommander_ReturnValue);// 0x1d69c50
	void Get Voting Widget(out UserWidget* Voting Widget);// 0x1d69c50
	void Get Squad List Roots(out PanelWidget* Squad Panel, out PanelWidget* Unassigned Panel, out PanelWidget* Commander Panel);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__ChallengeGiveUp_K2Node_ComponentBoundEvent_183_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ChallengeGiveUp_K2Node_ComponentBoundEvent_202_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__W_GiveUp_K2Node_ComponentBoundEvent_313_GiveUpPressed__DelegateSignature();// 0x1d69c50
	void BndEvt__W_GiveUp_K2Node_ComponentBoundEvent_485_Hide Confirmation__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Open Chat Slide(enum Channel);// 0x1d69c50
	void Opened();// 0x1d69c50
	void Closed();// 0x1d69c50
	void Bind Commander Changed();// 0x1d69c50
	void Command Changed(SQPlayerState* OldCommander, SQPlayerState* NewCommander);// 0x1d69c50
	void BndEvt__SquadsSlideButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_CommandUI(int EntryPoint, bool CallFunc_IsAnimationPlayingForward_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool K2Node_Event_IsDesignTime, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, enum K2Node_CustomEvent_Channel, W_CommandActionList_C* K2Node_DynamicCast_AsW_Command_Action_List, bool K2Node_DynamicCast_bSuccess, W_ChatBox_C* K2Node_DynamicCast_AsW_Chat_Box, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_CustomEvent_OldCommander, SQPlayerState* K2Node_CustomEvent_NewCommander, bool CallFunc_IsVisible_ReturnValue, float K2Node_Select_Default, enum K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PanelWidget* CallFunc_Get_Squad_List_Roots_Squad_Panel, PanelWidget* CallFunc_Get_Squad_List_Roots_Unassigned_Panel, PanelWidget* CallFunc_Get_Squad_List_Roots_Commander_Panel, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Pawn* CallFunc_K2_GetPawn_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: BackgroundBlur.ContentWidget.PanelWidget.Widget.Visual.Object
	Margin Padding;//[Offset: 0x120, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x130, Size: 1]
	byte VerticalAlignment;//[Offset: 0x131, Size: 1]
	bool bApplyAlphaToBlur;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x132, Size: 1]
	float BlurStrength;//[Offset: 0x134, Size: 1]
	bool bOverrideAutoRadiusCalculation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x138, Size: 1]
	int BlurRadius;//[Offset: 0x13c, Size: 1]
	SlateBrush LowQualityFallbackBrush;//[Offset: 0x140, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33e3910
	void SetPadding(Margin InPadding);// 0x33e3160
	void SetLowQualityFallbackBrush(out const SlateBrush InBrush);// 0x33e2e30
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33e2a60
	void SetBlurStrength(float InStrength);// 0x33e2360
	void SetBlurRadius(int InBlurRadius);// 0x33e22d0
	void SetApplyAlphaToBlur(bool bInApplyAlphaToBlur);// 0x33e2120

--------------------------------
Class: W_CommandActionList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* BorderMain;//[Offset: 0x268, Size: 1]
	VerticalBox* CategoryBox;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Requirements;//[Offset: 0x280, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x288, Size: 1]
	MaterialInstanceDynamic* MI_TacticoolTimer;//[Offset: 0x290, Size: 1]
	MaterialInstanceDynamic* MI Strategic Timer;//[Offset: 0x298, Size: 1]
	float Tactical Time Remaining;//[Offset: 0x2a0, Size: 1]
	bool Tactical Locked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a4, Size: 1]
	float Strategic Time Remaining;//[Offset: 0x2a8, Size: 1]
	bool Strategic Locked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ac, Size: 1]
	W_CommandPrePlacement_C* Pre Placement Widget;//[Offset: 0x2b0, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2b8, Size: 1]
	SQPlayerState* Current Commander;//[Offset: 0x2c0, Size: 1]
	float Additional Distance;//[Offset: 0x2c8, Size: 1]
	float Turn Speed;//[Offset: 0x2cc, Size: 1]
	void Init Actions List(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* CallFunc_GetCurrentCommander_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_CommandActionCategory_C* CallFunc_Create_ReturnValue, CommanderCategory CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Get Player State();// 0x1d69c50
	void Team Changed(SQTeamState* OldTeam, SQTeamState* NewTeam);// 0x1d69c50
	void Bind To Menu Open Close(UMG_MenuBase_C* Menu);// 0x1d69c50
	void Parent Opened();// 0x1d69c50
	void Parent Closed();// 0x1d69c50
	void Bind Commander Changed();// 0x1d69c50
	void Command Changed(SQPlayerState* OldCommander, SQPlayerState* NewCommander);// 0x1d69c50
	void Update Requirements Text();// 0x1d69c50
	void ExecuteUbergraph_W_CommandActionList(int EntryPoint, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, delegate K2Node_CreateDelegate_OutputDelegate, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQTeamState* K2Node_CustomEvent_OldTeam, SQTeamState* K2Node_CustomEvent_NewTeam, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, UMG_MenuBase_C* K2Node_CustomEvent_Menu, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQPlayerState* K2Node_CustomEvent_OldCommander, SQPlayerState* K2Node_CustomEvent_NewCommander, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50

--------------------------------
Class: W_CommandPrePlacement_C.W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	Vector Zero Based World Location;//[Offset: 0x288, Size: 1]
	class SQGridData_CommandOption* SQAction;//[Offset: 0x298, Size: 1]
	MulticastInlineDelegateProperty Created Command Control Widget;//[Size: 1]
	void Cache Local World Location(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, Vector CallFunc_Mouse_Position_to_World_Location_ReturnValue);// 0x1d69c50
	void Get Traced Map Location(out Vector Zero, out Vector Local, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, const Actor*[] Temp_object_Variable, Vector CallFunc_Subtract_VectorVector_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult[] CallFunc_LineTraceMulti_OutHits, bool CallFunc_LineTraceMulti_ReturnValue, int CallFunc_Array_Length_ReturnValue, HitResult CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Landscape* K2Node_DynamicCast_AsLandscape, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue);// 0x1d69c50
	void Set Action(class SQGridData_CommandOption SQAction, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQGridData_BaseOption* K2Node_DynamicCast_AsSQGrid_Data_Base_Option, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void On Map Mouse Down(PointerEvent Mouse Event, Vector World Location);// 0x1d69c50
	void Reset Use();// 0x1d69c50
	void ExecuteUbergraph_W_CommandPrePlacement(int EntryPoint, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, Vector CallFunc_Get_Traced_Map_Location_Zero, Vector CallFunc_Get_Traced_Map_Location_Local, Vector2D CallFunc_MakeVector2D_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, class W_Command_ActionControl_C K2Node_ClassDynamicCast_AsW_Command_Action_Control, bool K2Node_ClassDynamicCast_bSuccess, SQGridData_BaseOption* K2Node_DynamicCast_AsSQGrid_Data_Base_Option, bool K2Node_DynamicCast_bSuccess, W_Command_ActionControl_C* CallFunc_Create_ReturnValue, PointerEvent K2Node_Event_Mouse_Event, Vector K2Node_Event_World_Location, bool CallFunc_Validate_Action_Valid);// 0x1d69c50
	void Created Command Control Widget__DelegateSignature(W_Command_ActionControl_C* Widget);// 0x1d69c50

--------------------------------
Class: Landscape.LandscapeProxy.Actor.Object

--------------------------------
Class: W_Command_ActionControl_C.W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x278, Size: 1]
	float Widget Angle Rotation Offset;//[Offset: 0x280, Size: 1]
	Vector Local World Location;//[Offset: 0x284, Size: 1]
	Vector2D Alignment;//[Offset: 0x290, Size: 1]
	W_Grid_AcceptDeny_C* Accept Deny;//[Offset: 0x298, Size: 1]
	class SQGridData_CommandOption* SQCommandAction;//[Offset: 0x2a0, Size: 1]
	MulticastInlineDelegateProperty Placement Complete;//[Size: 1]
	Vector2D Origin Map Position;//[Offset: 0x2b8, Size: 1]
	W_SQMapCore_C* Map Core;//[Offset: 0x2c0, Size: 1]
	void Create Accept Deny(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_Grid_AcceptDeny_C* CallFunc_Create_ReturnValue, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void Get Pixel Distance(out float distance, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_Pixel_Distance_from_Relative_Origin_Pixel_Distance);// 0x1d69c50
	void Get World Distance(out float World Distance, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_World_Distance_from_Relative_Origin_World_Distance);// 0x1d69c50
	void Get Angle(out float Widget Angle, out Rotator World Rotation, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_Angle_From_Mouse_Vector_Angle, Rotator CallFunc_Get_Angle_From_Mouse_Vector_World_Rotation);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Remove();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void On Map Mouse Down(PointerEvent Mouse Event, Vector World Location);// 0x1d69c50
	void Add Self to Canvas();// 0x1d69c50
	void ExecuteUbergraph_W_Command_ActionControl(int EntryPoint, bool Temp_bool_Has_Been_Initd_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQCommanderInputComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Get_Angle_Widget_Angle, Rotator CallFunc_Get_Angle_World_Rotation, float CallFunc_Get_World_Distance_World_Distance, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_IsClosed_Variable, PointerEvent K2Node_Event_Mouse_Event, Vector K2Node_Event_World_Location, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Validate_Action_Valid, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, bool CallFunc_IsValid_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, bool CallFunc_IsValid_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue);// 0x1d69c50
	void Placement Complete__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_Grid_AcceptDeny_C.W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_Grid_AcceptDeny(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_CommandActionCategory_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_Category;//[Offset: 0x268, Size: 1]
	Image* CategoryIcon;//[Offset: 0x270, Size: 1]
	Image* CategoryTimerImage;//[Offset: 0x278, Size: 1]
	Image* SpacerImage;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Category;//[Offset: 0x288, Size: 1]
	TextBlock* TB_CategoryTime;//[Offset: 0x290, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x298, Size: 1]
	VerticalBox* Vbox;//[Offset: 0x2a0, Size: 1]
	MaterialInstanceDynamic* MI Timer;//[Offset: 0x2a8, Size: 1]
	CommanderCategory Category;//[Offset: 0x2b0, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2d0, Size: 1]
	byte ID;//[Offset: 0x2d8, Size: 1]
	bool Force Allowed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d9, Size: 1]
	W_CommandActionItem_C*[] Actions;//[Offset: 0x2e0, Size: 1]
	bool Use Pre Placement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f0, Size: 1]
	class W_CommandActionItem_C* Command Action Item;//[Offset: 0x2f8, Size: 1]
	bool Category Enabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x300, Size: 1]
	void Check Interaction(out bool Locked, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_GetActionsEnabled_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Update Category(float Remaining Time, bool L Locked, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, float CallFunc_CalculateCategoryCurrentRemainingTime_ReturnValue, float K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor, SlateColor K2Node_MakeStruct_SlateColor, float K2Node_Select_Default, bool Temp_bool_Variable, LinearColor K2Node_MakeStruct_LinearColor, enum K2Node_Select_Default, Timespan CallFunc_FromSeconds_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_Greater_FloatFloat_ReturnValue, FText CallFunc_Format_ReturnValue, float CallFunc_CalculateCategoryPercentRemainingTime_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, FText K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Init();// 0x1d69c50
	void ExecuteUbergraph_W_CommandActionCategory(int EntryPoint, SQGameState* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue, int Temp_int_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, W_CommandActionItem_C* CallFunc_Create_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, class SQGridData_CommandOption[] CallFunc_GetCommandActionsById_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, class SQGridData_CommandOption CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, Texture2D* K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: W_CommandActionItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	Button* Button_Main;//[Offset: 0x270, Size: 1]
	Image* Icon;//[Offset: 0x278, Size: 1]
	TextBlock* Name;//[Offset: 0x280, Size: 1]
	TextBlock* TB_State;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Time;//[Offset: 0x290, Size: 1]
	Image* Timer;//[Offset: 0x298, Size: 1]
	class SQGridData_CommandOption* SQCommand Data;//[Offset: 0x2a0, Size: 1]
	MaterialInstanceDynamic* MI Timer;//[Offset: 0x2a8, Size: 1]
	LinearColor Current State Color;//[Offset: 0x2b0, Size: 1]
	LinearColor Active Color;//[Offset: 0x2c0, Size: 1]
	LinearColor Cooldown Color;//[Offset: 0x2d0, Size: 1]
	LinearColor Enroute Color;//[Offset: 0x2e0, Size: 1]
	LinearColor Ready Color;//[Offset: 0x2f0, Size: 1]
	int Interval Index;//[Offset: 0x300, Size: 1]
	float Time Remaining;//[Offset: 0x304, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x308, Size: 1]
	bool Can Execute Command;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x310, Size: 1]
	bool Use Pre Placement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x311, Size: 1]
	FString Description;//[Offset: 0x318, Size: 1]
	bool Force Allowed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x328, Size: 1]
	Vector Zero Based World Location;//[Offset: 0x32c, Size: 1]
	W_CommandPrePlacement_C* Pre Placement Widget;//[Offset: 0x338, Size: 1]
	MulticastInlineDelegateProperty Clicked;//[Size: 1]
	BP_CommanderActionCondition_C* Command Condition;//[Offset: 0x350, Size: 1]
	MulticastInlineDelegateProperty Created Control Widget;//[Size: 1]
	bool Category Enabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x368, Size: 1]
	bool Button Cooldown;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x369, Size: 1]
	void Remove Other Pending Actions(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_Command_ActionControl_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_Command_ActionControl_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Get Pre Placement Widget(out W_CommandPrePlacement_C* Widget, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_CommandPrePlacement_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_CommandPrePlacement_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsVisible_ReturnValue);// 0x1d69c50
	void Auto Spawn Action(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQCommanderInputComponent* CallFunc_GetComponentByClass_ReturnValue, Vector CallFunc_Get_Traced_Map_Location_Zero, Vector CallFunc_Get_Traced_Map_Location_Local, bool CallFunc_IsValid_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue);// 0x1d69c50
	void Get Traced Map Location(out Vector Zero, out Vector Local, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, const Actor*[] Temp_object_Variable, const byte[] K2Node_MakeArray_Array, int Temp_int_Array_Index_Variable, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, HitResult[] CallFunc_LineTraceMultiForObjects_OutHits, bool CallFunc_LineTraceMultiForObjects_ReturnValue, HitResult CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, bool CallFunc_Less_IntInt_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue);// 0x1d69c50
	Widget* Get Tooltip Widget(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, UMG_Tooltip_C* CallFunc_Create_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQGridData_CommandOption* K2Node_DynamicCast_AsSQGrid_Data_Command_Option, bool K2Node_DynamicCast_bSuccess, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Get Category Cooldown(out bool Locked, out float Remaining, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, float CallFunc_Array_Get_Item, bool CallFunc_NotEqual_FloatFloat_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Get State(out enum State, out float State Time, out float State Percent, out bool Locked, out float Category Time, out float Category Percent, byte L ID, float L Category Time, float L Category Percent, bool L Locked, float L State Percent, float L State Time, enum L State, float L Age, float CallFunc_CalculateStatePercentTimeRemaining_ReturnValue, float CallFunc_CalculateCategoryPercentRemainingTime_ReturnValue, enum CallFunc_CalculateState_ReturnValue, float CallFunc_CalculateCategoryCurrentRemainingTime_ReturnValue, float CallFunc_CalculateStateTimeRemaining_ReturnValue, bool CallFunc_CalculateCategoryLocked_ReturnValue);// 0x1d69c50
	void Update Color(bool Faded, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, float K2Node_Select_Default, LinearColor CallFunc_MakeColor_ReturnValue, float K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void Update State(float L Cat Percent, float L Cat Time, bool L Locked, float L State Percent, float L State Time, enum L State, bool Temp_bool_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, enum Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, enum Temp_byte_Variable, float CallFunc_FMax_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_Can_Use_Actions_Valid, FText CallFunc_Can_Use_Actions_Out_Reason, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, SQGameState* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue, class BP_CommanderActionCondition_C CallFunc_Get_Command_Action_Condition_Condition_Class, BP_CommanderActionCondition_C* CallFunc_SpawnObject_ReturnValue, FText K2Node_Select_Default, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, FText K2Node_Select_Default, float CallFunc_FMax_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, Timespan CallFunc_FromSeconds_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, enum CallFunc_Get_State_State, float CallFunc_Get_State_State_Time, float CallFunc_Get_State_State_Percent, bool CallFunc_Get_State_Locked, float CallFunc_Get_State_Category_Time, float CallFunc_Get_State_Category_Percent, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_Main_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Event Control Widget(W_Command_ActionControl_C* Widget);// 0x1d69c50
	void Start Button Cooldown();// 0x1d69c50
	void Fail Message();// 0x1d69c50
	void ExecuteUbergraph_W_CommandActionItem(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_CommandPrePlacement_C* CallFunc_Create_ReturnValue, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, enum CallFunc_Get_State_State, float CallFunc_Get_State_State_Time, float CallFunc_Get_State_State_Percent, bool CallFunc_Get_State_Locked, float CallFunc_Get_State_Category_Time, float CallFunc_Get_State_Category_Percent, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQGridData_BaseOption* K2Node_DynamicCast_AsSQGrid_Data_Base_Option, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsInViewport_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, W_CommandPrePlacement_C* CallFunc_Get_Pre_Placement_Widget_Widget, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Vector CallFunc_Get_Traced_Map_Location_Zero, Vector CallFunc_Get_Traced_Map_Location_Local, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, class W_Command_ActionControl_C K2Node_ClassDynamicCast_AsW_Command_Action_Control, bool K2Node_ClassDynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_Command_ActionControl_C* CallFunc_Create_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, W_Command_ActionControl_C* K2Node_CustomEvent_Widget, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Can_Use_Actions_Valid, FText CallFunc_Can_Use_Actions_Out_Reason);// 0x1d69c50
	void Created Control Widget__DelegateSignature(W_Command_ActionControl_C* Widget);// 0x1d69c50
	void Clicked__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_SlideComponent_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	BackgroundBlur* ContentBG;//[Offset: 0x270, Size: 1]
	Image* Icon;//[Offset: 0x278, Size: 1]
	Button* SlideButton;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Name;//[Offset: 0x288, Size: 1]
	BP_PlayerController_C* PC;//[Offset: 0x290, Size: 1]
	class UserWidget* Widget Class;//[Offset: 0x298, Size: 1]
	bool Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	UserWidget* Child Widget;//[Offset: 0x2a8, Size: 1]
	Texture2D* Thumbnail;//[Offset: 0x2b0, Size: 1]
	bool RotateThumbnail;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	MulticastInlineDelegateProperty Slide Opened;//[Size: 1]
	MulticastInlineDelegateProperty Slide Closed;//[Size: 1]
	FText Name;//[Offset: 0x2e0, Size: 1]
	byte Button Alignment;//[Offset: 0x2f8, Size: 1]
	bool Start Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f9, Size: 1]
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__SlideButton_K2Node_ComponentBoundEvent_101_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Toggle();// 0x1d69c50
	void ExecuteUbergraph_W_SlideComponent(int EntryPoint, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default, PlayerController* CallFunc_GetPlayerController_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, UserWidget* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, bool K2Node_Event_IsDesignTime, BorderSlot* K2Node_DynamicCast_AsBorder_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, float K2Node_Select_Default, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue);// 0x1d69c50
	void Slide Closed__DelegateSignature();// 0x1d69c50
	void Slide Opened__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_ControlledCameraList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WrapBox* CamControlWrapBox;//[Offset: 0x268, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x270, Size: 1]
	W_CamControlButton_C*[] Camera Widgets;//[Offset: 0x278, Size: 1]
	void Check Player Wounded(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_BooleanOR_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, W_CamControlButton_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Button Visibilities(int Temp_int_Variable, bool CallFunc_IsCommander_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, W_CamControlButton_C* K2Node_DynamicCast_AsW_Cam_Control_Button, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetAttachParentActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_CommandActor_C* K2Node_DynamicCast_AsBP_Command_Actor, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeam_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Add New Camera(W_CamControlButton_C* Cam Button);// 0x1d69c50
	void ExecuteUbergraph_W_ControlledCameraList(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, W_CamControlButton_C* K2Node_CustomEvent_Cam_Button, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_Array_Add_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, WrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: WrapBox.PanelWidget.Widget.Visual.Object
	Vector2D InnerSlotPadding;//[Offset: 0x120, Size: 1]
	float WrapWidth;//[Offset: 0x128, Size: 1]
	float WrapSize;//[Offset: 0x12c, Size: 1]
	bool bExplicitWrapWidth;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x130, Size: 1]
	bool bExplicitWrapSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x131, Size: 1]
	byte Orientation;//[Offset: 0x132, Size: 1]
	void SetInnerSlotPadding(Vector2D InPadding);// 0x340e4b0
	WrapBoxSlot* AddChildToWrapBox(Widget* Content);// 0x340cef0

--------------------------------
Class: WrapBoxSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x38, Size: 1]
	bool bFillEmptySpace;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48, Size: 1]
	float FillSpanWhenLessThan;//[Offset: 0x4c, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x50, Size: 1]
	byte VerticalAlignment;//[Offset: 0x51, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x340e860
	void SetPadding(Margin InPadding);// 0x340e650
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x340e430
	void SetFillSpanWhenLessThan(float InFillSpanWhenLessThan);// 0x340e1a0
	void SetFillEmptySpace(bool InbFillEmptySpace);// 0x340e110

--------------------------------
Class: W_CamControlButton_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button_Main;//[Offset: 0x268, Size: 1]
	Image* DroneImage;//[Offset: 0x270, Size: 1]
	Image* DroneTimer;//[Offset: 0x278, Size: 1]
	TextBlock* TB_DroneState;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Timer;//[Offset: 0x288, Size: 1]
	Texture2D* Drone Texture;//[Offset: 0x290, Size: 1]
	MulticastInlineDelegateProperty Cam State Changed;//[Size: 1]
	BP_ControlledCamera_C* Camera;//[Offset: 0x2a8, Size: 1]
	bool Cam Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	class SQGridData_CommandOption* Action;//[Offset: 0x2b8, Size: 1]
	SQPlayerController* SQ PC;//[Offset: 0x2c0, Size: 1]
	bool Force Allowed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	WorldSettings* WorldSettings;//[Offset: 0x2d0, Size: 1]
	BP_CommanderActionCondition_C* Command Condition;//[Offset: 0x2d8, Size: 1]
	bool Can Toggle Camera;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e0, Size: 1]
	void Validate Vehicle Action(out bool Allowed, bool CallFunc_IsInVehicle_ReturnValue);// 0x1d69c50
	Widget* Get Tooltip(UMG_Tooltip_C* CallFunc_Create_ReturnValue, bool CallFunc_Can_Use_Button_Valid, SQFaction* CallFunc_GetFaction_ReturnValue, BP_SQFaction_C* K2Node_DynamicCast_AsBP_SQFaction, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void Can Use Button(out bool Valid, SQGameState* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue, bool CallFunc_Can_Use_Actions_Valid, FText CallFunc_Can_Use_Actions_Out_Reason, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, class BP_CommanderActionCondition_C CallFunc_Get_Command_Action_Condition_Condition_Class, BP_CommanderActionCondition_C* CallFunc_SpawnObject_ReturnValue);// 0x1d69c50
	void Update Remote Camera Button(bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, FText Temp_text_Variable, enum Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool CallFunc_Can_Use_Button_Valid, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool CallFunc_CalculateCategoryLocked_ReturnValue, float CallFunc_CalculateCategoryCurrentRemainingTime_ReturnValue, enum CallFunc_CalculateState_ReturnValue, float CallFunc_CalculateStatePercentTimeRemaining_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, FText K2Node_Select_Default, float CallFunc_CalculateStateTimeRemaining_ReturnValue, float CallFunc_SelectFloat_ReturnValue, Timespan CallFunc_FromSeconds_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void BndEvt__Button_Main_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Remove Camera Button();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Fail Message();// 0x1d69c50
	void ExecuteUbergraph_W_CamControlButton(int EntryPoint, SQGameState* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_Event_IsDesignTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Can_Use_Actions_Valid, FText CallFunc_Can_Use_Actions_Out_Reason);// 0x1d69c50
	void Cam State Changed__DelegateSignature(bool Active, BP_ControlledCamera_C* Cam);// 0x1d69c50

--------------------------------
Class: BP_ControlledCamera_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	CameraComponent* Camera;//[Offset: 0x230, Size: 1]
	SceneComponent* Scene;//[Offset: 0x238, Size: 1]
	SceneComponent* Pitch;//[Offset: 0x240, Size: 1]
	SceneComponent* Yaw;//[Offset: 0x248, Size: 1]
	float Desired Zoom;//[Offset: 0x250, Size: 1]
	SQPlayerController* My SQPC;//[Offset: 0x258, Size: 1]
	Texture2D* Button Icon;//[Offset: 0x260, Size: 1]
	W_CamControlButton_C* Cam Control Button;//[Offset: 0x268, Size: 1]
	bool Is Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x270, Size: 1]
	MulticastInlineDelegateProperty Created Button;//[Size: 1]
	bool ExtraSpeed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	Actor* Follow Actor;//[Offset: 0x290, Size: 1]
	float Battery Percent;//[Offset: 0x298, Size: 1]
	class SQGridData_CommandOption* Action;//[Offset: 0x2a0, Size: 1]
	bool Can Possess;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	class W_CameraWidget_C* Camera Widget;//[Offset: 0x2b0, Size: 1]
	float Min Pitch;//[Offset: 0x2b8, Size: 1]
	float Max Pitch;//[Offset: 0x2bc, Size: 1]
	W_CameraWidget_C* W_CameraUI;//[Offset: 0x2c0, Size: 1]
	float Min Yaw;//[Offset: 0x2c8, Size: 1]
	float Max Yaw;//[Offset: 0x2cc, Size: 1]
	int Zoom Level;//[Offset: 0x2d0, Size: 1]
	float Cam Rotate Speed;//[Offset: 0x2d4, Size: 1]
	float[] Zoom Levels;//[Offset: 0x2d8, Size: 1]
	SoundBase* Open Sound;//[Offset: 0x2e8, Size: 1]
	SoundBase* Close Sound;//[Offset: 0x2f0, Size: 1]
	float NearClipPlaneDistance;//[Offset: 0x2f8, Size: 1]
	float LastNearClipPlaneDistance;//[Offset: 0x2fc, Size: 1]
	void Can Become View Target(out bool Can View);// 0x1d69c50
	void Init Camera(Actor* CallFunc_GetAttachParentActor_ReturnValue, Actor* CallFunc_GetAttachParentActor_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocalController_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classParticleModuleEventGenerator K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_CamControlButton_C* CallFunc_Create_ReturnValue, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Deployment, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Command, UMG_MenuBase_C* CallFunc_Get_Main_Menus_Roaming, W_CommandUI_C* K2Node_DynamicCast_AsW_Command_UI, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQGridData_CommandOption* K2Node_DynamicCast_AsSQGrid_Data_Command_Option, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Check Soldier Wound(Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Create Stabilisation Point(const Actor*[] Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, TargetPoint* K2Node_DynamicCast_AsTarget_Point, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Find_Vehicle_Found_Vehicle, Vector CallFunc_GetForwardVector_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Transform CallFunc_MakeTransform_ReturnValue, HitResult CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, TargetPoint* CallFunc_FinishSpawningActor_ReturnValue);// 0x1d69c50
	void Update Follow(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, Vector CallFunc_K2_GetActorLocation_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, Vector CallFunc_InverseTransformDirection_ReturnValue, Rotator CallFunc_MakeRotFromX_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_FClamp_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, Vector CallFunc_K2_GetActorLocation_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, Vector CallFunc_InverseTransformDirection_ReturnValue, Rotator CallFunc_MakeRotFromX_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_FClamp_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult);// 0x1d69c50
	void Find Vehicle(out bool Found Vehicle, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, bool CallFunc_IsValid_ReturnValue, Rotator CallFunc_Conv_VectorToRotator_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, TargetPoint* K2Node_DynamicCast_AsTarget_Point, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Actor* CallFunc_GetAttachParentActor_ReturnValue, const byte[] K2Node_MakeArray_Array, const Actor*[] K2Node_MakeArray_Array, HitResult[] CallFunc_BoxTraceMultiForObjects_OutHits, bool CallFunc_BoxTraceMultiForObjects_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, HitResult CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Update Zoom(float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_Constant_ReturnValue);// 0x1d69c50
	void Clamp Camera Rotation(Vector L Look at Vector);// 0x1d69c50
	void Add Camera Movement(float X Delta, float Y Delta, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, float CallFunc_FClamp_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult);// 0x1d69c50
	void Add Zoom Delta(bool Temp_bool_Variable, int Temp_int_Variable, int CallFunc_Array_Length_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int K2Node_Select_Default);// 0x1d69c50
	void InpActEvt_LeanLeft_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Sprint_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Sprint_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ToggleStabilization_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Interact_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Toggle View(bool Active);// 0x1d69c50
	void K2_OnBecomeViewTarget(PlayerController* PC);// 0x1d69c50
	void K2_OnEndViewTarget(PlayerController* PC);// 0x1d69c50
	void Disable Cam();// 0x1d69c50
	void ExecuteUbergraph_BP_ControlledCamera(int EntryPoint, bool Temp_bool_IsClosed_Variable, Anchors K2Node_MakeStruct_Anchors, bool CallFunc_IsValid_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsLocalController_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool Temp_bool_Variable, float K2Node_Event_DeltaSeconds, bool Temp_bool_Has_Been_Initd_Variable, Key Temp_struct_Variable, Key K2Node_InputActionEvent_Key, bool K2Node_CustomEvent_Active, PlayerController* K2Node_Event_PC, PlayerController* K2Node_Event_PC, bool CallFunc_Can_Become_View_Target_Can_View, Key K2Node_InputActionEvent_Key, W_CameraWidget_C* CallFunc_Create_ReturnValue, Key K2Node_InputActionEvent_Key, bool Temp_bool_Variable, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsInVehicle_ReturnValue, Actor* K2Node_Select_Default, bool CallFunc_IsAdminCamera_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQPlayerCameraManager* K2Node_DynamicCast_AsSQPlayer_Camera_Manager, bool K2Node_DynamicCast_bSuccess, SQPlayerCameraManager* K2Node_DynamicCast_AsSQPlayer_Camera_Manager, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetLastNearClipPlane_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_NotEqual_BoolBool_ReturnValue, float Temp_float_Variable, float Temp_float_Variable, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void Created Button__DelegateSignature(W_CamControlButton_C* Cam Button);// 0x1d69c50

--------------------------------
Class: W_CameraWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	BP_ControlledCamera_C* Camera BP;//[Offset: 0x268, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x270, Size: 1]
	bool Following Vehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x278, Size: 1]
	bool Stabilized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x279, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_CameraWidget(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: TargetPoint.Actor.Object

--------------------------------
Class: SQPlayerCameraManager.PlayerCameraManager.Actor.Object
	class CameraShakeBase[] IgnoredShakeClasses;//[Offset: 0x2820, Size: 1]
	bool bDrawStencils;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2830, Size: 1]
	bool bIgnoreInactiveEffects;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2831, Size: 1]
	MaterialInterface* StencilPostProcessMaterial;//[Offset: 0x2838, Size: 1]
	class SQLocalCameraEffectHandler[] CameraEffectTypes;//[Offset: 0x2840, Size: 1]
	SQLocalCameraEffectHandler*[] CameraEffects;//[Offset: 0x2850, Size: 1]
	class SQLocalAudioEffectHandler[] AudioEffectTypes;//[Offset: 0x2860, Size: 1]
	SQLocalAudioEffectHandler*[] AudioEffects;//[Offset: 0x2870, Size: 1]
	SQSoldier* CurrentSoldier;//[Offset: 0x2880, Size: 1]
	void ModifyNearClipPlane(float NearClipPlaneDistance);// 0xdd81d0
	float GetNearClipPlane();// 0xdd74c0
	float GetLastNearClipPlane();// 0xdd7470
	void CalcScreenCenterRay(float Range, out Vector OutStart, out Vector OutEnd);// 0xdd3f00

--------------------------------
Class: SQLocalCameraEffectHandler.Object
	PostProcessSettings Effect;//[Offset: 0x30, Size: 1]
	float BlendValue;//[Offset: 0x590, Size: 1]
	void BP_SoldierChanged(SQSoldier* NewSoldier);// 0x1d69c50
	void BP_InitCameraEffect(SQPlayerController* InPlayerController);// 0x1d69c50
	void BP_ApplyCameraEffect(float DeltaTime, SQSoldier* SoldierToApplyTo);// 0x1d69c50

--------------------------------
Class: SQLocalAudioEffectHandler.Object
	void BP_SoldierChanged(SQSoldier* NewSoldier);// 0x1d69c50

--------------------------------
Class: BP_CommandActor_C.SQCommandActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x248, Size: 1]
	ArrowComponent* Arrow;//[Offset: 0x250, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x258, Size: 1]
	bool Action Destroyed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	float Destroy Delay after Action Destroyed;//[Offset: 0x264, Size: 1]
	void Server Start Active Duration();// 0x1d69c50
	void Server End Active Duration();// 0x1d69c50
	void Try to Load and Play Sound(byte ID);// 0x1d69c50
	void Owner Load and Play Sound(byte ID);// 0x1d69c50
	void Server Destroy Action();// 0x1d69c50
	void Multi Death Cosmetics();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_CommandActor(int EntryPoint, Actor* CallFunc_GetOwner_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeam_ReturnValue, byte Temp_byte_Variable, bool Temp_bool_Has_Been_Initd_Variable, byte Temp_byte_Variable, bool Temp_bool_IsClosed_Variable, const Transform CallFunc_GetTransform_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, byte K2Node_CustomEvent_ID, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SoundCue* K2Node_Select_Default, bool CallFunc_IsValidSoftObjectReference_ReturnValue, byte K2Node_CustomEvent_ID, SoundCue* K2Node_Select_Default, Actor* CallFunc_GetOwner_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsServer_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, UI_Events_Component_C* CallFunc_GetComponentByClass_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_GameTime_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* IconTimer;//[Offset: 0x268, Size: 1]
	TextBlock* TB_Time;//[Offset: 0x270, Size: 1]
	SQTeamPrep* Team Prep;//[Offset: 0x278, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x280, Size: 1]
	void GetSeedingTextPrefix(BP_GameStateSquad_Seed_C* GameState, out FText Stage, out FText RemainingTime, bool Temp_bool_Variable, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, int CallFunc_GetPlayerCountOnServer_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_FTrunc_ReturnValue, Timespan CallFunc_MakeTimespan_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText Temp_text_Variable, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText Temp_text_Variable, bool Temp_bool_Variable, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Get Prep Zone(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeam_ReturnValue, SQTeamPrep*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, SQTeamPrep* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void Set Staging Text Prefix(SQGameState* L Game State, FText L Stage, FText L Remaining Time, bool CallFunc_IsValid_ReturnValue, BP_GameStateSquad_Seed_C* K2Node_DynamicCast_AsBP_Game_State_Squad_Seed, bool K2Node_DynamicCast_bSuccess, FText CallFunc_GetSeedingTextPrefix_Stage, FText CallFunc_GetSeedingTextPrefix_RemainingTime, int CallFunc_GetStagingTimeRemaining_ReturnValue, Timespan CallFunc_MakeTimespan_ReturnValue, int CallFunc_GetRemainingTime_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, Timespan CallFunc_MakeTimespan_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_MatchWaitingToStart_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, SQGameState* CallFunc_GetSquadGameState_Return_Value, FText CallFunc_Format_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnTeamStateChangedEvent_Event(SQTeamState* OldTeam, SQTeamState* NewTeam);// 0x1d69c50
	void Get Player State();// 0x1d69c50
	void ExecuteUbergraph_W_GameTime(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQTeamState* K2Node_CustomEvent_OldTeam, SQTeamState* K2Node_CustomEvent_NewTeam, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_GameStateSquad_Seed_C.BP_GameStateSquad_C.SQGameState.GameState.GameStateBase.Info.Actor.Object
	bool bGameIsLive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d8, Size: 1]
	MulticastInlineDelegateProperty OnGameIsLive;//[Size: 1]
	bool bCountdownActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5f0, Size: 1]
	float ServerTimeToFinishCountdown;//[Offset: 0x5f4, Size: 1]
	MulticastInlineDelegateProperty OnCountdownStateChanged;//[Size: 1]
	int PlayersThreshold;//[Offset: 0x608, Size: 1]
	MulticastInlineDelegateProperty OnPlayerThresholdUpdated;//[Size: 1]
	int GetPlayerCountOnServer(int CallFunc_Array_Length_ReturnValue);// 0x1d69c50
	void OnRep_PlayersThreshold();// 0x1d69c50
	void OnRep_ServerTimeToFinishCountdown(float TimeLeft, bool bOldCountdownActive, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, float Temp_float_Variable, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float K2Node_Select_Default, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void OnRep_bGameIsLive(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void OnPlayerThresholdUpdated__DelegateSignature();// 0x1d69c50
	void OnCountdownStateChanged__DelegateSignature(bool bIsActive, float TimeLeft);// 0x1d69c50
	void OnGameIsLive__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_GiveUp_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* GiveUpButton;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Bleed;//[Offset: 0x278, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x280, Size: 1]
	MulticastInlineDelegateProperty GiveUpPressed;//[Size: 1]
	MulticastInlineDelegateProperty Hide Confirmation;//[Size: 1]
	bool Collapse On Hide;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	void Update Visibility(out bool is visible, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, bool CallFunc_IsVisible_ReturnValue, enum K2Node_Select_Default, bool CallFunc_IsVisible_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh();// 0x1d69c50
	void Confirm GiveUp();// 0x1d69c50
	void BndEvt__GiveUpButton_K2Node_ComponentBoundEvent_121_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void UpdateVisibility();// 0x1d69c50
	void ExecuteUbergraph_W_GiveUp(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SQSoldier* CallFunc_GetSoldier_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, enum K2Node_Select_Default, FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, enum K2Node_Select_Default, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsVisible_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_Update_Visibility_is_visible, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void Hide Confirmation__DelegateSignature();// 0x1d69c50
	void GiveUpPressed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_MarkedPosition_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* PlayerPositionText;//[Offset: 0x268, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_MarkedPosition(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, FText CallFunc_MakeLiteralText_ReturnValue, int CallFunc_Len_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_PlayerPosition_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* PlayerPositionText;//[Offset: 0x268, Size: 1]
	BP_HUD_C* HUD;//[Offset: 0x270, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_PlayerPosition(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, FText CallFunc_MakeLiteralText_ReturnValue, int CallFunc_Len_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_SquadList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	VerticalBox* CommanderVoteContainer;//[Offset: 0x268, Size: 1]
	GridPanel* Grid_Squads;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	ScrollBox* ScrollBox_List;//[Offset: 0x280, Size: 1]
	W_SquadCreate_C* SquadCreate;//[Offset: 0x288, Size: 1]
	W_CommandVoteParent_C* W_CommandVoteParent;//[Offset: 0x290, Size: 1]
	W_UnassignedList_C* W_Unassigned;//[Offset: 0x298, Size: 1]
	W_SquadListItem_C*[] SquadListItems;//[Offset: 0x2a0, Size: 1]
	bool Show CMD Voting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	void Construct();// 0x1d69c50
	void Get Commander Active for Squad List();// 0x1d69c50
	void ExecuteUbergraph_W_SquadList(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: W_SquadCreate_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* ButtonLocked;//[Offset: 0x268, Size: 1]
	Button* Create;//[Offset: 0x270, Size: 1]
	EditableTextBox* CreateSquad_TextBox;//[Offset: 0x278, Size: 1]
	Button* Leave;//[Offset: 0x280, Size: 1]
	WidgetSwitcher* SwitchCreateLeave;//[Offset: 0x288, Size: 1]
	TextBlock* TBSquadName;//[Offset: 0x290, Size: 1]
	WidgetSwitcher* WidgetSwitcherName;//[Offset: 0x298, Size: 1]
	SQPlayerController* Parent Controller;//[Offset: 0x2a0, Size: 1]
	FString CustomName;//[Offset: 0x2a8, Size: 1]
	Widget* Get_ButtonLocked_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Refresh Widget(bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	FText BIND - Num Player(bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__CreateSquad_TextBox_K2Node_ComponentBoundEvent_60_OnEditableTextBoxChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void BndEvt__Create_K2Node_ComponentBoundEvent_37_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Leave_K2Node_ComponentBoundEvent_107_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__ButtonLocked_K2Node_ComponentBoundEvent_117_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Update Lock Icon();// 0x1d69c50
	void BndEvt__CreateSquad_TextBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void OnAddedToFocusPath(FocusEvent InFocusEvent);// 0x1d69c50
	void ExecuteUbergraph_W_SquadCreate(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, LinearColor Temp_struct_Variable, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, SlateColor K2Node_MakeStruct_SlateColor, LinearColor Temp_struct_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_ToUpper_ReturnValue, FString CallFunc_GetSubstring_ReturnValue, FString CallFunc_Trim_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FocusEvent K2Node_Event_InFocusEvent, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: W_CommandVoteParent_C.SQCommanderVotingWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	Border* Border;//[Offset: 0x288, Size: 1]
	MainMenu_Button_C* ButtonCommander;//[Offset: 0x290, Size: 1]
	ScrollBox* CommandVoteScrollBox;//[Offset: 0x298, Size: 1]
	GridPanel* Grid_Votee;//[Offset: 0x2a0, Size: 1]
	Image* Image;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_CommandVote;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_TimerText;//[Offset: 0x2c0, Size: 1]
	Border* TimerBorder;//[Offset: 0x2c8, Size: 1]
	VerticalBox* TopPanel;//[Offset: 0x2d0, Size: 1]
	TimerHandle Vote Handle;//[Offset: 0x2d8, Size: 1]
	float TimerDuration;//[Offset: 0x2e0, Size: 1]
	SQCommanderState* Cache Commander State;//[Offset: 0x2e8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2f0, Size: 1]
	bool Can Vote;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x300, Size: 1]
	FText Commander Name;//[Offset: 0x308, Size: 1]
	void Get Can Use Button(out bool Valid, out FText Reason, bool CallFunc_IsStandaloneOrListenServer_ReturnValue, bool CallFunc_MatchWaitingToStart_ReturnValue, bool CallFunc_IsCommander_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);// 0x1d69c50
	void Update Appearance(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SQPlayerState* CallFunc_GetCurrentCommander_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool Temp_bool_Variable, enum K2Node_Select_Default, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_MatchWaitingToStart_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, enum Temp_byte_Variable, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_GetRemainingTime_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool Temp_bool_Variable, GameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, enum Temp_byte_Variable, FText K2Node_Select_Default, bool Temp_bool_Variable, FText K2Node_Select_Default, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_Get_Can_Use_Button_Valid, FText CallFunc_Get_Can_Use_Button_Reason, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue, float K2Node_Select_Default, int CallFunc_FTrunc_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_BooleanAND_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void UpdateVisibilities(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	FText Get_TB_VoteActiveText_Text(bool Temp_bool_Variable, float CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void BPInit();// 0x1d69c50
	void BndEvt__ButtonCommander_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnIsVoteInProgressChanged();// 0x1d69c50
	void OnIsVotingAvailableChanged();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Cache Player State();// 0x1d69c50
	void ExecuteUbergraph_W_CommandVoteParent(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsStandaloneOrListenServer_ReturnValue, bool CallFunc_IsCommander_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQCommanderVotingWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bIsVotingAvailable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	bool bIsVotePending;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x261, Size: 1]
	bool bIsVoteInProgress;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x262, Size: 1]
	class SQCommanderVotingPlayerItem* VoteItemClass;//[Offset: 0x268, Size: 1]
	PanelWidget* VoteItemsParent;//[Offset: 0x270, Size: 1]
	void UpdateFromData();// 0xd6cd00
	void OnVotingTimeChanged(float Seconds);// 0x1d69c50
	void OnIsVotingAvailableChanged();// 0x1d69c50
	void OnIsVoteInProgressChanged();// 0x1d69c50
	void Init();// 0xd6c7b0

--------------------------------
Class: SQCommanderVotingPlayerItem.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bIsVotedByPlayer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	int VoteCount;//[Offset: 0x264, Size: 1]
	FString NomineeName;//[Offset: 0x268, Size: 1]
	SQPlayerState* NomineePlayerState;//[Offset: 0x278, Size: 1]
	void OnVoteCountChanged();// 0x1d69c50
	void OnNomineeNameChanged();// 0x1d69c50
	void OnIsVotedByPlayerChanged();// 0x1d69c50

--------------------------------
Class: W_UnassignedList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_List;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_InviteAll;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* Button_InviteSelected;//[Offset: 0x278, Size: 1]
	HorizontalBox* HorizontalBox_Invites;//[Offset: 0x280, Size: 1]
	MainMenu_Button_C* MainMenu_Button;//[Offset: 0x288, Size: 1]
	ScrollBox* Member_SelectorBox;//[Offset: 0x290, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x298, Size: 1]
	void Update List(bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, FText CallFunc_MakeLiteralText_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, FText K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh Invite List();// 0x1d69c50
	void Close List();// 0x1d69c50
	void Button Selection Changed(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_InviteAll_K2Node_ComponentBoundEvent_128_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_InviteSelected_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_W_UnassignedList(int EntryPoint, bool CallFunc_IsVisible_ReturnValue, float Temp_float_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, float Temp_float_Variable, bool K2Node_CustomEvent_bSelected, MainMenu_Button_C* K2Node_CustomEvent_Button, float K2Node_Select_Default, enum K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_LessEqual_IntInt_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: W_SquadMemberItem_C.SQCoreStateSquadMemberWidget.SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e8, Size: 1]
	Border* Border;//[Offset: 0x2f0, Size: 1]
	ScaleBox* Box_Weapon;//[Offset: 0x2f8, Size: 1]
	Button* Button_Mute;//[Offset: 0x300, Size: 1]
	Image* IconBadge;//[Offset: 0x308, Size: 1]
	Image* IconHealthState;//[Offset: 0x310, Size: 1]
	Image* IconMute;//[Offset: 0x318, Size: 1]
	Image* IconRole;//[Offset: 0x320, Size: 1]
	Image* IconVehicle;//[Offset: 0x328, Size: 1]
	Image* Image_tick;//[Offset: 0x330, Size: 1]
	Image* Image_Weapon;//[Offset: 0x338, Size: 1]
	Button* SelectButton;//[Offset: 0x340, Size: 1]
	TextBlock* TBName;//[Offset: 0x348, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x350, Size: 1]
	W_PopupOptionBox_C* Current Popup;//[Offset: 0x358, Size: 1]
	bool bIsInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x360, Size: 1]
	bool Selected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x361, Size: 1]
	void Set Player Name(bool Temp_bool_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue, FString CallFunc_Left_ReturnValue, int CallFunc_Len_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_TextTrimPrecedingAndTrailing_ReturnValue, FText K2Node_Select_Default, bool CallFunc_TextIsEmpty_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Self Squad(out bool Is SelfSquad, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue, EventReply CallFunc_DetectDragIfPressed_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, EventReply CallFunc_Handled_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Set Role(SQRoleSettings* L Role, bool CallFunc_IsValid_ReturnValue, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Unhandled_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue, bool CallFunc_IsDragDropping_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	EventReply OnPreviewMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Unhandled_ReturnValue);// 0x1d69c50
	void Update Weapon Visibility(enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Update Mute Icon(Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, int CallFunc_Max_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float K2Node_Select_Default, Texture2D* K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor, Texture2D* K2Node_Select_Default, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void OnDragDetected(Geometry MyGeometry, out const PointerEvent PointerEvent, out DragDropOperation* Operation, DragDropOperation* CallFunc_CreateDragDropOperation_ReturnValue, byte CallFunc_MakeLiteralByte_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_DragDropPlayerItem_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, const Vector2D Temp_struct_Variable, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Update Member Item(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	enum Get Selection State();// 0x1d69c50
	void Toggle Selection(enum Last State, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void Cache Popup(W_PopupOptionBox_C* New Popup, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Update Rank(bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, int CallFunc_Max_ReturnValue, bool CallFunc_Self_Squad_Is_SelfSquad, bool CallFunc_BooleanOR_ReturnValue, Texture2D* K2Node_Select_Default, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Update Border Color(SlateBrush L Hover Style, SlateBrush L Normal Style, bool CallFunc_IsHovered_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void OnIsSquadLeaderChanged();// 0x1d69c50
	void OnPlayerNameChanged();// 0x1d69c50
	void OnDeployRoleChanged();// 0x1d69c50
	void OnIsBleedingChanged();// 0x1d69c50
	void OnIsWoundedChanged();// 0x1d69c50
	void OnListLayoutChanged();// 0x1d69c50
	void Reset Selector();// 0x1d69c50
	void OnFireTeamIndexChanged();// 0x1d69c50
	void OnIsFireTeamLeaderChanged();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Create Assign Fireteam Options();// 0x1d69c50
	void Assign Return(int ID);// 0x1d69c50
	void Open Options();// 0x1d69c50
	void OnCurrentVehicleDataChanged();// 0x1d69c50
	void OnSelectionStateChanged();// 0x1d69c50
	void OnVoipChannelChanged();// 0x1d69c50
	void OnIsMutedChanged();// 0x1d69c50
	void BndEvt__Button_Mute_K2Node_ComponentBoundEvent_36_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void BndEvt__SelectButton_K2Node_ComponentBoundEvent_114_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void OnIsPossessingPawnChanged();// 0x1d69c50
	void Popup Option Return(int ID);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Create Promote Options();// 0x1d69c50
	void Promote Return(int ID);// 0x1d69c50
	void OnIsAliveChanged();// 0x1d69c50
	void ExecuteUbergraph_W_SquadMemberItem(int EntryPoint, Texture2D* Temp_object_Variable, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, Texture2D* Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, Texture2D* Temp_object_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int K2Node_CustomEvent_ID, W_PopupOptionBox_C* CallFunc_Create_ReturnValue, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, enum K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Texture2D* K2Node_Select_Default, LinearColor CallFunc_SelectColor_ReturnValue, bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int K2Node_CustomEvent_ID, W_PopupOptionBox_C* CallFunc_Create_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, bool K2Node_Event_IsDesignTime, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, LinearColor CallFunc_GetColor_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup[] K2Node_MakeArray_Array, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int K2Node_CustomEvent_ID, W_PopupOptionBox_C* CallFunc_Create_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, LinearColor CallFunc_GetColor_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup[] K2Node_MakeArray_Array, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, FText K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, bool CallFunc_BooleanOR_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup[] K2Node_MakeArray_Array, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Texture2D* K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_PopupOptionBox_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* HoverCheckArea;//[Offset: 0x268, Size: 1]
	Image* Line;//[Offset: 0x270, Size: 1]
	VerticalBox* VerticalBox_Buttons;//[Offset: 0x278, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	MulticastInlineDelegateProperty Option Clicked;//[Size: 1]
	float Lifetime;//[Offset: 0x298, Size: 1]
	S_PopupButtonSetup[] Options;//[Offset: 0x2a0, Size: 1]
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Selector Event(int ID);// 0x1d69c50
	void Refresh Position();// 0x1d69c50
	void Clear();// 0x1d69c50
	void ExecuteUbergraph_W_PopupOptionBox(int EntryPoint, W_PopupButton_C* CallFunc_Create_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, enum Temp_byte_Variable, enum Temp_byte_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, S_PopupButtonSetup CallFunc_Array_Get_Item, enum K2Node_Select_Default, bool K2Node_Event_IsDesignTime, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsHovered_ReturnValue, int K2Node_CustomEvent_ID, PanelSlot* CallFunc_AddChild_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue, W_PopupOptionBox_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_PopupOptionBox_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Option Clicked__DelegateSignature(int ID);// 0x1d69c50

--------------------------------
Class: S_PopupButtonSetup
	FText Text_2_199221A642E14F00952EB5941BF092B2;//[Offset: 0x0, Size: 1]
	LinearColor Color_5_5CD602C645760DC3C7061AA934F58C9C;//[Offset: 0x18, Size: 1]
	bool Hidden_8_DDBCE60D478A3E73D25FF18183AB3221;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]

--------------------------------
Class: W_PopupButton_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* MainMenu_Button_Development;//[Offset: 0x268, Size: 1]
	FText PopupButtonText;//[Offset: 0x270, Size: 1]
	MulticastInlineDelegateProperty Clicked;//[Size: 1]
	LinearColor Custom Color;//[Offset: 0x298, Size: 1]
	int ID;//[Offset: 0x2a8, Size: 1]
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__MainMenu_Button_Development_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_W_PopupButton(int EntryPoint, bool K2Node_Event_IsDesignTime, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void Clicked__DelegateSignature(int ID);// 0x1d69c50

--------------------------------
Class: W_DragDropPlayerItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* IconRole;//[Offset: 0x268, Size: 1]
	TextBlock* TBName;//[Offset: 0x270, Size: 1]
	FText Name;//[Offset: 0x278, Size: 1]
	Texture2D* Icon;//[Offset: 0x290, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x298, Size: 1]
	void Construct();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void ExecuteUbergraph_W_DragDropPlayerItem(int EntryPoint, W_TrashPlayer_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, W_TrashPlayer_C* CallFunc_Array_Get_Item, W_FireteamGroup_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_FireteamGroup_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, W_FireteamGroup_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_FireteamGroup_C* CallFunc_Array_Get_Item, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, W_TrashPlayer_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, bool CallFunc_BooleanOR_ReturnValue, W_TrashPlayer_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_TrashPlayer_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	TextBlock* TBName;//[Offset: 0x280, Size: 1]
	bool OnDrop(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void OnDragLeave(PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void OnDragEnter(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void ExecuteUbergraph_W_TrashPlayer(int EntryPoint, PointerEvent K2Node_Event_PointerEvent, DragDropOperation* K2Node_Event_Operation, Geometry K2Node_Event_MyGeometry, PointerEvent K2Node_Event_PointerEvent, DragDropOperation* K2Node_Event_Operation);// 0x1d69c50

--------------------------------
Class: W_FireteamGroup_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	W_DragDropFireteamSlot_C* AssignFireteam;//[Offset: 0x268, Size: 1]
	Border* Border;//[Offset: 0x270, Size: 1]
	VerticalBox* DragDropVerticalBox;//[Offset: 0x278, Size: 1]
	TextBlock* FT;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	GridPanel* MemberGrid;//[Offset: 0x290, Size: 1]
	W_DragDropFireteamSlot_C* PromoteLeader;//[Offset: 0x298, Size: 1]
	LinearColor Color;//[Offset: 0x2a0, Size: 1]
	int Fireteam ID;//[Offset: 0x2b0, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2b8, Size: 1]
	bool Options Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Unhandled_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Set Fireteam Option Visibility(enum InVisibility, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsVisible_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Is Member Highlighted(out bool Has Highlighted member, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, enum CallFunc_Get_Selection_State_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue);// 0x1d69c50
	void Highlight Fireteam(enum InSelectionState, int Temp_int_Variable, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Create Disband Option();// 0x1d69c50
	void Option Clicked_Event(int ID);// 0x1d69c50
	void Show / Hide Fireteam();// 0x1d69c50
	void ExecuteUbergraph_W_FireteamGroup(int EntryPoint, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, int Temp_int_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, int Temp_int_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, enum Temp_byte_Variable, enum Temp_byte_Variable, bool K2Node_Event_IsDesignTime, int CallFunc_Max_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, FText K2Node_Select_Default, FText K2Node_Select_Default, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int K2Node_CustomEvent_ID, FormatArgumentData[] K2Node_MakeArray_Array, bool K2Node_SwitchInteger_CmpSuccess, FText CallFunc_Format_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup[] K2Node_MakeArray_Array, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_HasAnyChildren_ReturnValue, W_PopupOptionBox_C* CallFunc_Create_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, int CallFunc_Max_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50

--------------------------------
Class: W_DragDropFireteamSlot_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	TextBlock* TBName;//[Offset: 0x270, Size: 1]
	int FireTeamId;//[Offset: 0x278, Size: 1]
	bool LeaderSlot;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27c, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x280, Size: 1]
	bool OnDrop(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnDragLeave(PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void OnDragEnter(Geometry MyGeometry, PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void Refresh Text();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_W_DragDropFireteamSlot(int EntryPoint, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, int Temp_int_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText K2Node_Select_Default, FText K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, PointerEvent K2Node_Event_PointerEvent, DragDropOperation* K2Node_Event_Operation, LinearColor CallFunc_SelectColor_ReturnValue, Geometry K2Node_Event_MyGeometry, PointerEvent K2Node_Event_PointerEvent, DragDropOperation* K2Node_Event_Operation, LinearColor CallFunc_SelectColor_ReturnValue, bool K2Node_Event_IsDesignTime);// 0x1d69c50

--------------------------------
Class: W_SquadListItem_C.SQCoreStateSquadItemWidget.SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e0, Size: 1]
	Border* Border;//[Offset: 0x2e8, Size: 1]
	Button* Button_Squad;//[Offset: 0x2f0, Size: 1]
	MainMenu_Button_C* ButtonCommander;//[Offset: 0x2f8, Size: 1]
	MainMenu_Button_C* ButtonFull;//[Offset: 0x300, Size: 1]
	MainMenu_Button_C* ButtonJoin;//[Offset: 0x308, Size: 1]
	MainMenu_Button_C* ButtonLocked;//[Offset: 0x310, Size: 1]
	W_FireteamGroup_C* FireteamA;//[Offset: 0x318, Size: 1]
	W_FireteamGroup_C* FireteamB;//[Offset: 0x320, Size: 1]
	W_FireteamGroup_C* FireteamC;//[Offset: 0x328, Size: 1]
	Image* IconCO;//[Offset: 0x330, Size: 1]
	Image* IconSquad;//[Offset: 0x338, Size: 1]
	WidgetSwitcher* IconSwitch;//[Offset: 0x340, Size: 1]
	Image* Image_Arrow;//[Offset: 0x348, Size: 1]
	GridPanel* MembersGrid;//[Offset: 0x350, Size: 1]
	SizeBox* SizeBox_Arrow;//[Offset: 0x358, Size: 1]
	Border* SquadColorBorder;//[Offset: 0x360, Size: 1]
	WidgetSwitcher* Switch_JoinContext;//[Offset: 0x368, Size: 1]
	WidgetSwitcher* Switch_SquadButton;//[Offset: 0x370, Size: 1]
	WidgetSwitcher* Switch_SquadDisplayState;//[Offset: 0x378, Size: 1]
	WidgetSwitcher* Switch_SquadType;//[Offset: 0x380, Size: 1]
	TextBlock* TB_Leader;//[Offset: 0x388, Size: 1]
	TextBlock* TB_MemberNum;//[Offset: 0x390, Size: 1]
	TextBlock* TB_SquadID;//[Offset: 0x398, Size: 1]
	TextBlock* TB_SquadName;//[Offset: 0x3a0, Size: 1]
	W_TrashPlayer_C* W_Dismiss;//[Offset: 0x3a8, Size: 1]
	bool Hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b0, Size: 1]
	bool Selected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b1, Size: 1]
	bool Is Header;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b2, Size: 1]
	bool Show Fireteams;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b3, Size: 1]
	bool bIsAllMuted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b4, Size: 1]
	bool bIsShowWeapons;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b5, Size: 1]
	bool bCommandSquad_TEMP;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b6, Size: 1]
	bool bCommandVoteActive_TEMP;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b7, Size: 1]
	bool bCanDemote_TEMP;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b8, Size: 1]
	float VoteTimerDuration;//[Offset: 0x3bc, Size: 1]
	TimerHandle Vote Handle;//[Offset: 0x3c0, Size: 1]
	void SetLeaderName(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	FText Get_TB_VoteActiveText_Text(FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, float CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Toggle Weapon Setting(SaveData_UI_C* Current UI Save, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, W_SquadMemberItem_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_SquadMemberItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void ToggleMuteAll(SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue);// 0x1d69c50
	void Check for Self(out bool found, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int Temp_int_Variable, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, SQCoreStateSquadMemberWidget* K2Node_DynamicCast_AsSQCore_State_Squad_Member_Widget, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, W_FireteamGroup_C*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, W_FireteamGroup_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, SQCoreStateSquadMemberWidget* K2Node_DynamicCast_AsSQCore_State_Squad_Member_Widget, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	enum Get Selection State(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Check_Member_Highlights_Has_Highlights, enum K2Node_Select_Default);// 0x1d69c50
	void Instigator Is In Squad(out bool Is In Squad, int Temp_int_Array_Index_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_FireteamGroup_C*[] K2Node_MakeArray_Array, Widget* CallFunc_GetChildAt_ReturnValue, W_FireteamGroup_C* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Check Member Highlights(out bool Has Highlights, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, W_FireteamGroup_C*[] K2Node_MakeArray_Array, W_FireteamGroup_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Is_Member_Highlighted_Has_Highlighted_member, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Update Color(SlateBrush L Hover Style, SlateBrush L Normal Style, enum CallFunc_Get_Selection_State_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, LinearColor CallFunc_SelectColor_ReturnValue, ButtonStyle K2Node_MakeStruct_ButtonStyle);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_IsHovered_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue);// 0x1d69c50
	void Toggle Selection State(GridPanel*[] L Memeber Grid Array, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum CallFunc_Get_Selection_State_ReturnValue, enum K2Node_Select_Default, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, W_SquadMemberItem_C* K2Node_DynamicCast_AsW_Squad_Member_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void Clear Selections(enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum CallFunc_Get_Selection_State_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Update Show Fireteams(bool Show Fireteams, bool Temp_bool_Variable, int Temp_int_Variable, int Temp_int_Variable, int K2Node_Select_Default);// 0x1d69c50
	PanelWidget* GetMemberRoot(int FireTeamIndex, int Temp_int_Variable, bool Temp_bool_Variable, GridPanel* K2Node_Select_Default, GridPanel* K2Node_Select_Default);// 0x1d69c50
	void Update List Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float CallFunc_SelectFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_229_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnSquadNameChanged();// 0x1d69c50
	void OnLeaderNameChanged();// 0x1d69c50
	void OnMemberNumChanged();// 0x1d69c50
	void OnMaxMembersChanged();// 0x1d69c50
	void OnIsSelfInSquadChanged();// 0x1d69c50
	void OnJoinButtonStateChanged();// 0x1d69c50
	void OnListLayoutChanged();// 0x1d69c50
	void OnSelectionStateChanged();// 0x1d69c50
	void Open Options();// 0x1d69c50
	void Create Disband Options();// 0x1d69c50
	void BndEvt__Button_Squad_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature();// 0x1d69c50
	void Disband Events(int ID);// 0x1d69c50
	void BndEvt__ButtonLocked_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Popup Option Return(int ID);// 0x1d69c50
	void BndEvt__Button_Squad_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Squad_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__ButtonDemote_K2Node_ComponentBoundEvent_595_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void OnIsCommandSquadChanged();// 0x1d69c50
	void On Can Demote Changed TEMP();// 0x1d69c50
	void ExecuteUbergraph_W_SquadListItem(int EntryPoint, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_Not_PreBool_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, enum Temp_byte_Variable, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool Temp_bool_Variable, bool K2Node_SwitchEnum_CmpSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int K2Node_CustomEvent_ID, W_PopupOptionBox_C* CallFunc_Create_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, bool CallFunc_Check_for_Self_found, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, Widget* K2Node_Select_Default, bool CallFunc_EqualEqual_ByteByte_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_PopupOptionBox_C* CallFunc_Create_ReturnValue, int K2Node_CustomEvent_ID, bool K2Node_SwitchInteger_CmpSuccess, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, LinearColor CallFunc_GetColor_ReturnValue, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup[] K2Node_MakeArray_Array, FText K2Node_Select_Default, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, FText K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, S_PopupButtonSetup K2Node_MakeStruct_S_PopupButtonSetup, S_PopupButtonSetup[] K2Node_MakeArray_Array, int CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_TeamTickets_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Bleeding;//[Offset: 0x268, Size: 1]
	Image* IconFlag;//[Offset: 0x270, Size: 1]
	Image* IconTickets;//[Offset: 0x278, Size: 1]
	Border* MainBorder;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Bleed;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Tickets;//[Offset: 0x290, Size: 1]
	SQPlayerState* PlayerState;//[Offset: 0x298, Size: 1]
	SQTeamState* Current Team State;//[Offset: 0x2a0, Size: 1]
	GraphNodeBasedBleedComponent_C* Bleed Component;//[Offset: 0x2a8, Size: 1]
	void UpdateFlag(BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void UpdateTickets(int CallFunc_GetTickets_ReturnValue, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue);// 0x1d69c50
	void UpdateCurrentTeam(out bool TeamChanged, bool CallFunc_IsValid_ReturnValue, SQTeamState* CallFunc_GetTeamState_ReturnValue, bool CallFunc_IsConfigured_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void GetBleedComponent(out bool IsValid, out GraphNodeBasedBleedComponent_C* BleedComponent, bool CallFunc_IsValid_ReturnValue, SQAASGraph*[] CallFunc_GetAllActorsOfClass_OutActors, bool CallFunc_Array_IsValidIndex_ReturnValue, SQAASGraph* CallFunc_Array_Get_Item, GraphNodeBasedBleedComponent_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh();// 0x1d69c50
	void ExecuteUbergraph_W_TeamTickets(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int CallFunc_Abs_Int_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, SQPlayerState* CallFunc_TryGetLocalPlayerState_OutPlayerState, bool CallFunc_TryGetLocalPlayerState_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_UpdateCurrentTeam_TeamChanged, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_GetBleedComponent_IsValid, GraphNodeBasedBleedComponent_C* CallFunc_GetBleedComponent_BleedComponent, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_TerritoryControl_Bar_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	HorizontalBox* EnemyTeamTickets;//[Offset: 0x268, Size: 1]
	ProgressBar* ProgressBar_WinPercent;//[Offset: 0x270, Size: 1]
	HorizontalBox* SelfTeamTickets;//[Offset: 0x278, Size: 1]
	Slider* Slider_WinPercent;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Hexes;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Tickets_EnemyTeam;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Tickets_SelfTeam;//[Offset: 0x298, Size: 1]
	TC_HexGraph_C* TC Graph;//[Offset: 0x2a0, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a8, Size: 1]
	void Set Flags();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Bind Team Change();// 0x1d69c50
	void Team Changed Event(SQTeamState* OldTeam, SQTeamState* NewTeam);// 0x1d69c50
	void ExecuteUbergraph_W_TerritoryControl_Bar(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_GetTeam_ReturnValue, int CallFunc_GetTeam_ReturnValue, int K2Node_Select_Default, enum Temp_byte_Variable, int CallFunc_Get_Current_Bleed_Bleed_Per_Min, int CallFunc_GetTeam_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Get_Team_Zone_Capture_Num_Zones_Owned, float CallFunc_Get_Team_Zone_Capture_Percentage_Owned, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Format_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, TC_HexGraph_C*[] CallFunc_GetAllActorsOfClass_OutActors, TC_HexGraph_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool Temp_bool_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, enum Temp_byte_Variable, enum K2Node_Select_Default, SQTeamState* K2Node_CustomEvent_OldTeam, SQTeamState* K2Node_CustomEvent_NewTeam, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_Get_Current_Bleed_Bleed_Per_Min, bool CallFunc_Greater_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, enum K2Node_Select_Default, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: Slider.Widget.Visual.Object
	float Value;//[Offset: 0x108, Size: 1]
	delegate ValueDelegate;//[Offset: 0x10c, Size: 1]
	float MinValue;//[Offset: 0x11c, Size: 1]
	float MaxValue;//[Offset: 0x120, Size: 1]
	SliderStyle WidgetStyle;//[Offset: 0x128, Size: 1]
	byte Orientation;//[Offset: 0x468, Size: 1]
	LinearColor SliderBarColor;//[Offset: 0x46c, Size: 1]
	LinearColor SliderHandleColor;//[Offset: 0x47c, Size: 1]
	bool IndentHandle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48c, Size: 1]
	bool Locked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48d, Size: 1]
	bool MouseUsesStep;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48e, Size: 1]
	bool RequiresControllerLock;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48f, Size: 1]
	float StepSize;//[Offset: 0x490, Size: 1]
	bool IsFocusable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x494, Size: 1]
	MulticastInlineDelegateProperty OnMouseCaptureBegin;//[Size: 1]
	MulticastInlineDelegateProperty OnMouseCaptureEnd;//[Size: 1]
	MulticastInlineDelegateProperty OnControllerCaptureBegin;//[Size: 1]
	MulticastInlineDelegateProperty OnControllerCaptureEnd;//[Size: 1]
	MulticastInlineDelegateProperty OnValueChanged;//[Size: 1]
	void SetValue(float InValue);// 0x33f9220
	void SetStepSize(float InValue);// 0x33f8f20
	void SetSliderHandleColor(LinearColor InValue);// 0x33f8e90
	void SetSliderBarColor(LinearColor InValue);// 0x33f8e00
	void SetMinValue(float InValue);// 0x33f8a60
	void SetMaxValue(float InValue);// 0x33f87d0
	void SetLocked(bool InValue);// 0x33f8630
	void SetIndentHandle(bool InValue);// 0x33f8520
	float GetValue();// 0x33f7d70
	float GetNormalizedValue();// 0x33f7bb0

--------------------------------
Class: SliderStyle.SlateWidgetStyle
	SlateBrush NormalBarImage;//[Offset: 0x8, Size: 1]
	SlateBrush HoveredBarImage;//[Offset: 0x90, Size: 1]
	SlateBrush DisabledBarImage;//[Offset: 0x118, Size: 1]
	SlateBrush NormalThumbImage;//[Offset: 0x1a0, Size: 1]
	SlateBrush HoveredThumbImage;//[Offset: 0x228, Size: 1]
	SlateBrush DisabledThumbImage;//[Offset: 0x2b0, Size: 1]
	float BarThickness;//[Offset: 0x338, Size: 1]

--------------------------------
Class: W_VoipOwningPlayer_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	Border* Border_command;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Channel;//[Offset: 0x278, Size: 1]
	Image* VoipIcon;//[Offset: 0x280, Size: 1]
	SQHUD* REF_HUD;//[Offset: 0x288, Size: 1]
	enum Voip Vis;//[Offset: 0x290, Size: 1]
	LinearColor Voip Colour;//[Offset: 0x294, Size: 1]
	LinearColor SquadToAllSquadsRadioColor;//[Offset: 0x2a4, Size: 1]
	LinearColor SquadToSquadRadioColor;//[Offset: 0x2b4, Size: 1]
	FText Voip Channel Text;//[Offset: 0x2c8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2e0, Size: 1]
	enum CurrentState;//[Offset: 0x2e8, Size: 1]
	FText Get Squad Leader Name(int CallFunc_Conv_ByteToInt_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, SQSquadState* CallFunc_Array_Get_Item, FString CallFunc_GetFullPlayerName_ReturnValue, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh Voip();// 0x1d69c50
	void ExecuteUbergraph_W_VoipOwningPlayer(int EntryPoint, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, enum Temp_byte_Variable, LinearColor Temp_struct_Variable, enum Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, int CallFunc_Max_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, enum Temp_byte_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, enum Temp_byte_Variable, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, bool CallFunc_NotEqual_ByteByte_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, FText CallFunc_Get_Squad_Leader_Name_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, LinearColor K2Node_Select_Default, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, enum K2Node_Select_Default, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_Greater_ByteByte_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, LinearColor CallFunc_SelectColor_ReturnValue, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_MapWidgetMapMarkerWaypoint_C.SQMapWidgetMapMarkerWaypoint.SQMapWidgetMapMarkerSelectable.SQMapWidgetMapMarker.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x300, Size: 1]
	WidgetAnimation* In;//[Offset: 0x308, Size: 1]
	Image* MarkerImage;//[Offset: 0x310, Size: 1]
	ScaleBox* ScaleBox;//[Offset: 0x318, Size: 1]
	TextBlock* TB_SquadID;//[Offset: 0x320, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x328, Size: 1]
	bool Show Team Markers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x330, Size: 1]
	void Get Is My Fireteam(out bool Same, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Get Same Squad ID(out bool Same, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void Set Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Get_Is_My_Fireteam_Same, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default, enum K2Node_Select_Default, bool CallFunc_Get_Same_Squad_ID_Same, bool CallFunc_Less_IntInt_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Update Visual(bool L Local Squad, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool CallFunc_Get_Same_Squad_ID_Same, bool CallFunc_Less_IntInt_ReturnValue, byte K2Node_Select_Default, byte K2Node_Select_Default, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, int CallFunc_Max_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void Update Waypoint Visibility(SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnTextureChanged();// 0x1d69c50
	void OnTintChanged();// 0x1d69c50
	void OnRightClicked();// 0x1d69c50
	void OnFireteamIdChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, float CallFunc_GetGameTimeSinceCreation_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, FText CallFunc_Conv_IntToText_ReturnValue, float K2Node_Event_UniformScale);// 0x1d69c50

--------------------------------
Class: SQMapWidgetMapMarkerWaypoint.SQMapWidgetMapMarkerSelectable.SQMapWidgetMapMarker.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object

--------------------------------
Class: BP_MapWidgetMapMarkerRequestFOB_C.SQMapWidgetMapMarkerSelectable.SQMapWidgetMapMarker.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x300, Size: 1]
	WidgetAnimation* In;//[Offset: 0x308, Size: 1]
	Border* Border_Content;//[Offset: 0x310, Size: 1]
	Image* MarkerImage;//[Offset: 0x318, Size: 1]
	Button* MouseHoverZone;//[Offset: 0x320, Size: 1]
	Image* RadiusConstruction;//[Offset: 0x328, Size: 1]
	Image* RadiusExclusion;//[Offset: 0x330, Size: 1]
	ScaleBox* ScaleBox;//[Offset: 0x338, Size: 1]
	SizeBox* SizeBox_Construction;//[Offset: 0x340, Size: 1]
	SizeBox* SizeBox_Exclusion;//[Offset: 0x348, Size: 1]
	TimerHandle Update Timer;//[Offset: 0x350, Size: 1]
	bool Faded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x358, Size: 1]
	void Update Size(float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel, float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel);// 0x1d69c50
	void Update Radius Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, enum K2Node_Select_Default);// 0x1d69c50
	void OnTextureChanged();// 0x1d69c50
	void OnTintChanged();// 0x1d69c50
	void OnRightClicked();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void BndEvt__MouseHoverZone_1_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__MouseHoverZone_1_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_BP_MapWidgetMapMarkerRequestFOB(int EntryPoint, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetGameTimeSinceCreation_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float K2Node_Event_UniformScale, LinearColor K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, float CallFunc_GetGameTimeSinceCreation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50

--------------------------------
Class: BP_MapWidgetSoldier_C.SQMapWidgetSoldier.SQMapWidgetPawn.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x350, Size: 1]
	WidgetAnimation* VoipPulseAnim;//[Offset: 0x358, Size: 1]
	WidgetAnimation* SelfPulseAnim;//[Offset: 0x360, Size: 1]
	WidgetAnimation* PlayerBleedingAnim;//[Offset: 0x368, Size: 1]
	WidgetAnimation* PlayerIncapAnim;//[Offset: 0x370, Size: 1]
	Image* Arrow;//[Offset: 0x378, Size: 1]
	Overlay* BleedingPanel;//[Offset: 0x380, Size: 1]
	Image* BleedingRing;//[Offset: 0x388, Size: 1]
	Image* DotImage;//[Offset: 0x390, Size: 1]
	Image* FireteamDiamondRoles;//[Offset: 0x398, Size: 1]
	Image* FireteamDot;//[Offset: 0x3a0, Size: 1]
	Image* FTL;//[Offset: 0x3a8, Size: 1]
	Border* IconParent;//[Offset: 0x3b0, Size: 1]
	Image* IncapIcon;//[Offset: 0x3b8, Size: 1]
	Overlay* IncapPanel;//[Offset: 0x3c0, Size: 1]
	Image* IncapRing;//[Offset: 0x3c8, Size: 1]
	Image* IsCommanderImage;//[Offset: 0x3d0, Size: 1]
	Image* IsCommanderImageOutline;//[Offset: 0x3d8, Size: 1]
	Image* IsMedicImage;//[Offset: 0x3e0, Size: 1]
	Image* Player_Cone_Image;//[Offset: 0x3e8, Size: 1]
	SizeBox* PlayerIconSizeBox;//[Offset: 0x3f0, Size: 1]
	WidgetSwitcher* PlayerIconSwitcher;//[Offset: 0x3f8, Size: 1]
	Border* PlayerImage;//[Offset: 0x400, Size: 1]
	Border* PlayerImageVoip;//[Offset: 0x408, Size: 1]
	Image* PulseImage;//[Offset: 0x410, Size: 1]
	Image* RoleImage;//[Offset: 0x418, Size: 1]
	Image* RoleImageVoip;//[Offset: 0x420, Size: 1]
	ScaleBox* ScaleBox;//[Offset: 0x428, Size: 1]
	Image* Selection;//[Offset: 0x430, Size: 1]
	TextBlock* TB_Identifier;//[Offset: 0x438, Size: 1]
	Image* TooltipHitBox;//[Offset: 0x440, Size: 1]
	CanvasPanel* ViewCone_Rotation;//[Offset: 0x448, Size: 1]
	Overlay* WidgetOverlay;//[Offset: 0x450, Size: 1]
	float DefaultScale;//[Offset: 0x458, Size: 1]
	float MedicScale;//[Offset: 0x45c, Size: 1]
	float SquadLeaderScale;//[Offset: 0x460, Size: 1]
	float SelfScale;//[Offset: 0x464, Size: 1]
	Texture2D* Dir_DefaultImage;//[Offset: 0x468, Size: 1]
	Texture2D* Dir_SquadLeaderImage;//[Offset: 0x470, Size: 1]
	Texture2D* Dir_SelfImage;//[Offset: 0x478, Size: 1]
	W_Tooltip_Soldier_C* REF Tooltip;//[Offset: 0x480, Size: 1]
	int Pulse Animation Loops;//[Offset: 0x488, Size: 1]
	bool Is Animating;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x48c, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x490, Size: 1]
	float Player Image Angle Offset;//[Offset: 0x498, Size: 1]
	bool Showing Roles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x49c, Size: 1]
	Texture2D* NonDir_DefaultImage;//[Offset: 0x4a0, Size: 1]
	Texture2D* NonDir_SquadLeaderImage;//[Offset: 0x4a8, Size: 1]
	Texture2D* NonDir_SelfImage;//[Offset: 0x4b0, Size: 1]
	bool Show Fireteam Letters;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b8, Size: 1]
	W_SQMapCore_C* MapCore;//[Offset: 0x4c0, Size: 1]
	void HandleMapZoom(bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void HandleMapCoreChanged(delegate K2Node_CreateDelegate_OutputDelegate, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core);// 0x1d69c50
	void UpdateVoipAnim(bool CallFunc_Not_PreBool_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Set View Cone Visibility(bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_GetViewTarget_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Refresh Element Visibility(byte CallFunc_MakeLiteralByte_ReturnValue, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, enum Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, enum K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Set Show Fireteam Letter(SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Update Tooltip Color(byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, int CallFunc_Max_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, byte K2Node_Select_Default, byte K2Node_Select_Default, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Update Color(bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, byte K2Node_Select_Default, byte K2Node_Select_Default, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, byte K2Node_Select_Default, int CallFunc_Max_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, int CallFunc_Max_ReturnValue, byte K2Node_Select_Default, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, byte K2Node_Select_Default, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue);// 0x1d69c50
	void Update Wounded Opacity(bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float K2Node_Select_Default, LinearColor CallFunc_MakeColor_ReturnValue);// 0x1d69c50
	void Update ID(byte CallFunc_MakeLiteralByte_ReturnValue, byte CallFunc_MakeLiteralByte_ReturnValue, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, byte CallFunc_MakeLiteralByte_ReturnValue, float K2Node_Select_Default, Margin K2Node_MakeStruct_Margin, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, byte K2Node_Select_Default, byte K2Node_Select_Default, OverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, int CallFunc_Max_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, int CallFunc_Max_ReturnValue, FString CallFunc_GetAlphabetLetterString_ReturnValue, FString CallFunc_ToUpper_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Update Is Medic Icon(byte CallFunc_MakeLiteralByte_ReturnValue, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, byte CallFunc_MakeLiteralByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, Texture2D* K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, Texture2D* K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Same Fireteam(out bool Same, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Update Role Icon(bool CallFunc_IsValid_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry);// 0x1d69c50
	void Update Role Info(float Zoom Amount, bool Temp_bool_Variable, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int Temp_int_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, float Temp_float_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, int K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float K2Node_Select_Default, int CallFunc_Conv_BoolToInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, int K2Node_Select_Default);// 0x1d69c50
	EventReply On_TooltipHitBox_MouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, enum Last State, enum Temp_byte_Variable, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, enum Temp_byte_Variable, bool CallFunc_EqualEqual_KeyKey_ReturnValue, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default, HUD* CallFunc_GetHUD_ReturnValue, EventReply CallFunc_Handled_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	Widget* Tooltip(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_Tooltip_Soldier_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Update Icon Size(Vector2D Temp_struct_Variable, byte CallFunc_MakeLiteralByte_ReturnValue, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, Vector2D K2Node_Select_Default, Vector2D K2Node_Select_Default, Vector2D K2Node_Select_Default, Vector2D K2Node_Select_Default, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y);// 0x1d69c50
	void Update Player Image(enum Temp_byte_Variable, bool Temp_bool_Variable, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default);// 0x1d69c50
	void OnTintValueChanged();// 0x1d69c50
	void OnShowBleedingChanged();// 0x1d69c50
	void OnShowIncapChanged();// 0x1d69c50
	void OnIsMedicChanged();// 0x1d69c50
	void OnIsOwnedBySelfChanged();// 0x1d69c50
	void OnIsInVehicleChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnCameraRotationYawChanged();// 0x1d69c50
	void OnSoldierInfoChanged();// 0x1d69c50
	void OnSelectionStateChanged();// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnCurrentRoleChanged();// 0x1d69c50
	void OnScaleChanged(float UniformScale);// 0x1d69c50
	void OnIsWoundedChanged();// 0x1d69c50
	void OnFireteamIdChanged();// 0x1d69c50
	void OnFireTeamIndexChanged();// 0x1d69c50
	void OnAngleChanged();// 0x1d69c50
	void OnIsInSelfSquad();// 0x1d69c50
	void OnIsInSelfTeam();// 0x1d69c50
	void OnCommanderChangedEvent_Event(SQPlayerState* OldCommander, SQPlayerState* NewCommander);// 0x1d69c50
	void OnLeaderStateChanged();// 0x1d69c50
	void OnIsAliveChanged();// 0x1d69c50
	void ExecuteUbergraph_BP_MapWidgetSoldier(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, float Temp_float_Variable, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_GetShowBleeding_ReturnValue, bool CallFunc_GetShowIncap_ReturnValue, enum K2Node_Select_Default, bool Temp_bool_Variable, enum K2Node_Select_Default, enum K2Node_Select_Default, bool CallFunc_GetShowBleeding_ReturnValue, bool CallFunc_GetShowIncap_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_GetEndTime_ReturnValue, float CallFunc_GetAnimationCurrentTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationTimeRange_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, LinearColor CallFunc_GetTintColor_ReturnValue, float K2Node_Event_UniformScale, int Temp_int_Loop_Counter_Variable, float CallFunc_Add_FloatFloat_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, float K2Node_Select_Default, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, SQPlayerState* K2Node_CustomEvent_OldCommander, SQPlayerState* K2Node_CustomEvent_NewCommander, SQTeamState* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQMapWidgetSoldier.SQMapWidgetPawn.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	bool bIsWounded;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2e8, Size: 1]
	bool bIsBleeding;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2e8, Size: 1]
	bool bIsAlive;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2e8, Size: 1]
	bool bIsInVehicle;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x2e8, Size: 1]
	bool bIsUsingFreeLook;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x2e8, Size: 1]
	enum LeaderState;//[Offset: 0x2ec, Size: 1]
	int SquadId;//[Offset: 0x2f0, Size: 1]
	int FireTeamId;//[Offset: 0x2f4, Size: 1]
	bool bIsMedic;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2f8, Size: 1]
	bool bIsWithinCanSelfSeeHealthSatusRange;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2f8, Size: 1]
	bool bCanSelfSeeHealthStatus;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2f8, Size: 1]
	float HealthStatusRange;//[Offset: 0x2fc, Size: 1]
	Vector SoldierLocation;//[Offset: 0x300, Size: 1]
	SQRoleSettings* CurrentRole;//[Offset: 0x310, Size: 1]
	SQSoldierInfo SoldierInfo;//[Offset: 0x318, Size: 1]
	float SquadLeaderZOrder;//[Offset: 0x340, Size: 1]
	float MedicZOrder;//[Offset: 0x344, Size: 1]
	float VehicleViewConeZOrder;//[Offset: 0x348, Size: 1]
	void OnSquadIdChanged();// 0x1d69c50
	void OnSoldierLocationChanged();// 0x1d69c50
	void OnSoldierInfoChanged();// 0x1d69c50
	void OnShowIncapChanged();// 0x1d69c50
	void OnShowBleedingChanged();// 0x1d69c50
	void OnPlayerChangedRole(SQRoleSettings* NewRole);// 0xdbd120
	void OnLeaderStateChanged();// 0x1d69c50
	void OnIsWoundedChanged();// 0x1d69c50
	void OnIsWithinCanSelfSeeHealthSatusRangeChanged();// 0x1d69c50
	void OnIsUsingFreeLookChanged();// 0x1d69c50
	void OnIsMedicChanged();// 0x1d69c50
	void OnIsInVehicleChanged();// 0x1d69c50
	void OnIsBleedingChanged();// 0x1d69c50
	void OnIsAliveChanged();// 0x1d69c50
	void OnHealthStatusRangeChanged();// 0x1d69c50
	void OnFireteamIdChanged();// 0x1d69c50
	void OnCurrentRoleChanged();// 0x1d69c50
	void OnCanSelfSeeHealthStatusChanged();// 0x1d69c50
	bool GetShowIncap();// 0xdbcf90
	bool GetShowBleeding();// 0xdbcf60

--------------------------------
Class: SQMapWidgetPawn.SQMapWidget.SQCoreStateMapWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	bool bIsOwned;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x2d8, Size: 1]
	bool bIsOwnedBySelf;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x2d8, Size: 1]
	bool bIsInSelfTeam;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x2d8, Size: 1]
	bool bIsInSelfSquad;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x2d8, Size: 1]
	int FireTeamIndex;//[Offset: 0x2dc, Size: 1]
	float CameraRotationYaw;//[Offset: 0x2e0, Size: 1]
	float IsSelfZOrder;//[Offset: 0x2e4, Size: 1]
	void OnIsOwnedChanged();// 0x1d69c50
	void OnIsOwnedBySelfChanged();// 0x1d69c50
	void OnIsInSelfTeam();// 0x1d69c50
	void OnIsInSelfSquad();// 0x1d69c50
	void OnFireTeamIndexChanged();// 0x1d69c50
	void OnCameraRotationYawChanged();// 0x1d69c50

--------------------------------
Class: SQSoldierInfo
	int SquadId;//[Offset: 0x0, Size: 1]
	int FireTeamId;//[Offset: 0x4, Size: 1]
	enum LeaderState;//[Offset: 0x8, Size: 1]
	SQRoleSettings* CurrentRole;//[Offset: 0x10, Size: 1]
	FString PlayerName;//[Offset: 0x18, Size: 1]

--------------------------------
Class: W_Tooltip_Soldier_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_Main;//[Offset: 0x268, Size: 1]
	Image* CommanderStar;//[Offset: 0x270, Size: 1]
	TextBlock* FT_Text;//[Offset: 0x278, Size: 1]
	Image* Kit_Image;//[Offset: 0x280, Size: 1]
	TextBlock* PlayerName_Text;//[Offset: 0x288, Size: 1]
	Image* Rank;//[Offset: 0x290, Size: 1]
	SizeBox* SquadID_SizeBox;//[Offset: 0x298, Size: 1]
	TextBlock* SquadID_Text;//[Offset: 0x2a0, Size: 1]
	Image* SquadLeaderBG;//[Offset: 0x2a8, Size: 1]
	SQSoldierInfo Soldier Info;//[Offset: 0x2b0, Size: 1]
	void ShowHideCommanderStar(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Update Fireteam(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Less_IntInt_ReturnValue, FString CallFunc_GetAlphabetLetterString_ReturnValue, FString CallFunc_ToUpper_ReturnValue, enum K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Update Rank(byte CallFunc_MakeLiteralByte_ReturnValue, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, byte CallFunc_MakeLiteralByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Update Tint Color(LinearColor Color);// 0x1d69c50
	void UpdateSquadVisuals(byte CallFunc_MakeLiteralByte_ReturnValue, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, byte CallFunc_MakeLiteralByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, bool CallFunc_GreaterEqual_ByteByte_ReturnValue, enum K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_NotEqual_IntInt_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, enum K2Node_Select_Default);// 0x1d69c50
	void UpdateKitVisuals(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Update Info(SQSoldierInfo Soldier Info);// 0x1d69c50
	void ExecuteUbergraph_W_Tooltip_Soldier(int EntryPoint, SQSoldierInfo K2Node_CustomEvent_Soldier_Info, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_Slider_GridOpacity_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsItem_Slider_C* SettingsItem_Slider;//[Offset: 0x268, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x270, Size: 1]
	SQTeamState* Current Team;//[Offset: 0x278, Size: 1]
	float Cached Scale;//[Offset: 0x280, Size: 1]
	SaveData_UI_C* Save;//[Offset: 0x288, Size: 1]
	bool Remove after interact;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	void BndEvt__SettingsItem_Slider_K2Node_ComponentBoundEvent_6_OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void Set Value(float Value);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_Slider_GridOpacity(int EntryPoint, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, float K2Node_ComponentBoundEvent_Value, W_SQMapGridLines_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, PanelWidget* CallFunc_GetParent_ReturnValue, W_SQMapGridLines_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_CustomEvent_Value, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50

--------------------------------
Class: SettingsItem_Slider_C.W_BaseSettingOption_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	Button* Button;//[Offset: 0x2a8, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x2b0, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2b8, Size: 1]
	Slider* Slider;//[Offset: 0x2c0, Size: 1]
	EditableText* SliderText;//[Offset: 0x2c8, Size: 1]
	Border* SliderTextBorder;//[Offset: 0x2d0, Size: 1]
	Image* SpacerImg;//[Offset: 0x2d8, Size: 1]
	Image* SpacerImg;//[Offset: 0x2e0, Size: 1]
	Image* SpacerImg;//[Offset: 0x2e8, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x2f0, Size: 1]
	TextBlock* WarningMessage;//[Offset: 0x2f8, Size: 1]
	FText SettingName;//[Offset: 0x300, Size: 1]
	float SliderMin;//[Offset: 0x318, Size: 1]
	float SliderMax;//[Offset: 0x31c, Size: 1]
	float MinValue;//[Offset: 0x320, Size: 1]
	float MaxValue;//[Offset: 0x324, Size: 1]
	float Value;//[Offset: 0x328, Size: 1]
	int MinFractionDigits;//[Offset: 0x32c, Size: 1]
	int MaxFractionDigits;//[Offset: 0x330, Size: 1]
	FText CachedSliderText;//[Offset: 0x338, Size: 1]
	MulticastInlineDelegateProperty OnValueChanged;//[Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x360, Size: 1]
	bool bIsPercentage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x361, Size: 1]
	LinearColor Regular Color;//[Offset: 0x364, Size: 1]
	LinearColor Hovered Color;//[Offset: 0x374, Size: 1]
	LinearColor Pressed Color;//[Offset: 0x384, Size: 1]
	MulticastInlineDelegateProperty OnCaptureEnd;//[Size: 1]
	float TextBoxSize;//[Offset: 0x3a8, Size: 1]
	float StepSize;//[Offset: 0x3ac, Size: 1]
	bool StepByPower;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b0, Size: 1]
	float Power;//[Offset: 0x3b4, Size: 1]
	bool CanEditTextField;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b8, Size: 1]
	<LinearColor,ColoredTextRangeStruct> ColorRange;//[Offset: 0x3c0, Size: 1]
	float RoundingToPower(float A, float CallFunc_Log_ReturnValue, int CallFunc_Round_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void UpdateTextStyle(float Value, LinearColor CallFunc_GetTextColor_TextColor, FText CallFunc_GetTextColor_WarningText, bool CallFunc_TextIsEmpty_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void GetTextColor(float Value, out LinearColor TextColor, out FText WarningText, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, LinearColor CallFunc_LinearColor_White_ReturnValue, LinearColor[] CallFunc_Map_Keys_Keys, int CallFunc_Array_Length_ReturnValue, LinearColor CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, ColoredTextRangeStruct CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void RemovePercentage(FText InText, out FText OutText, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	SlateBrush Get_SpacerImg_Brush(Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void UpdateSliderValue(float CallFunc_MapRangeUnclamped_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void UpdateSliderTextValue(FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void SetValue(float Value);// 0x1d69c50
	void BndEvt__SliderText_K2Node_ComponentBoundEvent_191_OnEditableTextChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void BndEvt__SliderText_K2Node_ComponentBoundEvent_275_OnEditableTextCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__Slider_K2Node_ComponentBoundEvent_15_OnMouseCaptureEndEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Slider_K2Node_ComponentBoundEvent_361_OnFloatValueChangedEvent__DelegateSignature(float Value);// 0x1d69c50
	void SetSettingValue(FName Setting Name, FString Value);// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_Slider(int EntryPoint, bool Temp_bool_Variable, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, FText CallFunc_RemovePercentage_OutText, FString CallFunc_Conv_TextToString_ReturnValue, float CallFunc_Conv_StringToFloat_ReturnValue, bool CallFunc_IsNumeric_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_RoundingToPower_ReturnValue, bool K2Node_Event_IsDesignTime, float CallFunc_GetValue_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, FText CallFunc_RemovePercentage_OutText, bool CallFunc_TextIsEmpty_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_IsNumeric_ReturnValue, int CallFunc_Len_ReturnValue, float K2Node_ComponentBoundEvent_Value, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_MapRangeUnclamped_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_RoundingToPower_ReturnValue, float CallFunc_GridSnap_Float_ReturnValue, bool Temp_bool_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, float CallFunc_MapRangeUnclamped_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FText Temp_text_Variable, FText K2Node_Select_Default, float K2Node_Select_Default, FString CallFunc_Conv_FloatToString_ReturnValue, FName K2Node_Event_Setting_Name, FString K2Node_Event_Value, float CallFunc_Conv_StringToFloat_ReturnValue);// 0x1d69c50
	void OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void OnValueChanged__DelegateSignature(float Value);// 0x1d69c50

--------------------------------
Class: W_BaseSettingOption_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MulticastInlineDelegateProperty OnRefresh;//[Size: 1]
	LinearColor ToolTipColor;//[Offset: 0x278, Size: 1]
	FName CVarName;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty OnSet;//[Size: 1]
	UMG_Tooltip_C* CreateWidget(Widget* WidgetIn, LinearColor Color, UMG_Tooltip_C* CallFunc_Create_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue);// 0x1d69c50
	void SetSettingValue(FName Setting Name, FString Value);// 0x1d69c50
	void RefreshSettings(FName SettingName, FString Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue);// 0x1d69c50
	Widget* GetToolTipWidget(UMG_Tooltip_C* CallFunc_CreateWidget_ReturnValue);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void ExecuteUbergraph_W_BaseSettingOption(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void OnSet__DelegateSignature(FName Setting Name, FString Value);// 0x1d69c50
	void OnRefresh__DelegateSignature(FName SettingName, FString Value);// 0x1d69c50

--------------------------------
Class: EditableText.Widget.Visual.Object
	FText Text;//[Offset: 0x108, Size: 1]
	delegate TextDelegate;//[Offset: 0x120, Size: 1]
	FText HintText;//[Offset: 0x130, Size: 1]
	delegate HintTextDelegate;//[Offset: 0x148, Size: 1]
	EditableTextStyle WidgetStyle;//[Offset: 0x158, Size: 1]
	SlateWidgetStyleAsset* Style;//[Offset: 0x378, Size: 1]
	SlateBrushAsset* BackgroundImageSelected;//[Offset: 0x380, Size: 1]
	SlateBrushAsset* BackgroundImageComposing;//[Offset: 0x388, Size: 1]
	SlateBrushAsset* CaretImage;//[Offset: 0x390, Size: 1]
	SlateFontInfo Font;//[Offset: 0x398, Size: 1]
	SlateColor ColorAndOpacity;//[Offset: 0x3f0, Size: 1]
	bool IsReadOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x418, Size: 1]
	bool IsPassword;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x419, Size: 1]
	float MinimumDesiredWidth;//[Offset: 0x41c, Size: 1]
	bool IsCaretMovedWhenGainFocus;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x420, Size: 1]
	bool SelectAllTextWhenFocused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x421, Size: 1]
	bool RevertTextOnEscape;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x422, Size: 1]
	bool ClearKeyboardFocusOnCommit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x423, Size: 1]
	bool SelectAllTextOnCommit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x424, Size: 1]
	bool AllowContextMenu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x425, Size: 1]
	byte KeyboardType;//[Offset: 0x426, Size: 1]
	VirtualKeyboardOptions VirtualKeyboardOptions;//[Offset: 0x427, Size: 1]
	enum VirtualKeyboardTrigger;//[Offset: 0x428, Size: 1]
	enum VirtualKeyboardDismissAction;//[Offset: 0x429, Size: 1]
	byte Justification;//[Offset: 0x42a, Size: 1]
	ShapedTextOptions ShapedTextOptions;//[Offset: 0x42b, Size: 1]
	MulticastInlineDelegateProperty OnTextChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnTextCommitted;//[Size: 1]
	void SetText(FText InText);// 0x33e74e0
	void SetJustification(byte InJustification);// 0x33e70d0
	void SetIsReadOnly(bool InbIsReadyOnly);// 0x33e6fb0
	void SetIsPassword(bool InbIsPassword);// 0x33e6e90
	void SetHintText(FText InHintText);// 0x33e6bb0
	void OnEditableTextCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void OnEditableTextChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	FText GetText();// 0x33e6500

--------------------------------
Class: EditableTextStyle.SlateWidgetStyle
	SlateFontInfo Font;//[Offset: 0x8, Size: 1]
	SlateColor ColorAndOpacity;//[Offset: 0x60, Size: 1]
	SlateBrush BackgroundImageSelected;//[Offset: 0x88, Size: 1]
	SlateBrush BackgroundImageComposing;//[Offset: 0x110, Size: 1]
	SlateBrush CaretImage;//[Offset: 0x198, Size: 1]

--------------------------------
Class: ColoredTextRangeStruct
	Vector2D Range_5_F555DC5A463FF33D8781ADA83D80C8D9;//[Offset: 0x0, Size: 1]
	FText Text_8_824C9FF5466DDEB59E2B98B8BD1C16D4;//[Offset: 0x8, Size: 1]

--------------------------------
Class: W_Slider_LatticeOpacity_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsItem_Slider_C* SettingsItem_Slider;//[Offset: 0x268, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x270, Size: 1]
	SQTeamState* Current Team;//[Offset: 0x278, Size: 1]
	float Cached Scale;//[Offset: 0x280, Size: 1]
	SaveData_UI_C* Save;//[Offset: 0x288, Size: 1]
	bool Remove after interact;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	void BndEvt__SettingsItem_Slider_K2Node_ComponentBoundEvent_6_OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void Set Value(float Value);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_Slider_LatticeOpacity(int EntryPoint, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, float K2Node_ComponentBoundEvent_Value, W_MapLattice_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, PanelWidget* CallFunc_GetParent_ReturnValue, W_MapLattice_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_CustomEvent_Value, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_Slider_UIScale_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsItem_Slider_C* SettingsItem_Slider;//[Offset: 0x268, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x270, Size: 1]
	SQTeamState* Current Team;//[Offset: 0x278, Size: 1]
	float Cached Scale;//[Offset: 0x280, Size: 1]
	SaveData_UI_C* Save;//[Offset: 0x288, Size: 1]
	bool Remove after interact;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	void BndEvt__SettingsItem_Slider_K2Node_ComponentBoundEvent_0_OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void Set Value(float Value);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_Slider_UIScale(int EntryPoint, PanelWidget* CallFunc_GetParent_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, float K2Node_ComponentBoundEvent_Value, float K2Node_CustomEvent_Value, FText CallFunc_Conv_FloatToText_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, GameStateBase* CallFunc_GetGameState_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SQGameState* K2Node_DynamicCast_AsSQGame_State, bool K2Node_DynamicCast_bSuccess, GameStateBase* CallFunc_GetGameState_ReturnValue, SQGameState* K2Node_DynamicCast_AsSQGame_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_MapMarkersEnabledDefined_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_PopupGeneric_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button_Close;//[Offset: 0x268, Size: 1]
	HorizontalBox* DragArea;//[Offset: 0x270, Size: 1]
	CanvasPanel* GenericWidgetCanvas;//[Offset: 0x278, Size: 1]
	Border* HoverCheckArea;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	class UserWidget* Popup Widget Class;//[Offset: 0x298, Size: 1]
	bool Ignore Hover;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	bool Can Drag;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a1, Size: 1]
	bool Dragging;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a2, Size: 1]
	Vector2D Drag Offset;//[Offset: 0x2a4, Size: 1]
	Vector2D Widget Screen Pos;//[Offset: 0x2ac, Size: 1]
	MulticastInlineDelegateProperty Removed;//[Size: 1]
	Vector2D Alignment;//[Offset: 0x2c8, Size: 1]
	float Offset Size;//[Offset: 0x2d0, Size: 1]
	UserWidget* Spawned Widget;//[Offset: 0x2d8, Size: 1]
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Unhandled_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Setup Dragging(bool Can Drag, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void OnDragDetected(Geometry MyGeometry, out const PointerEvent PointerEvent, out DragDropOperation* Operation, Vector2D CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetLocalSize_ReturnValue, Vector2D CallFunc_AbsoluteToLocal_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_DetectDragIfPressed_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnDragCancelled(out const PointerEvent PointerEvent, DragDropOperation* Operation);// 0x1d69c50
	void BndEvt__Button_Close_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Reset();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void Clear();// 0x1d69c50
	void ExecuteUbergraph_W_PopupGeneric(int EntryPoint, Vector2D CallFunc_GetViewportSize_ReturnValue, bool Temp_bool_Variable, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, bool Temp_bool_Variable, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_Event_IsDesignTime, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsHovered_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, UserWidget* CallFunc_Create_ReturnValue, enum K2Node_Select_Default, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, enum K2Node_Select_Default, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, const PointerEvent K2Node_Event_PointerEvent, DragDropOperation* K2Node_Event_Operation, enum K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, float CallFunc_Subtract_FloatFloat_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	void Removed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_MapVehicleList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SizeBox* Availability_NME;//[Offset: 0x268, Size: 1]
	VerticalBox* EnemyBox;//[Offset: 0x270, Size: 1]
	ScrollBox* ScrollBox_Ally;//[Offset: 0x278, Size: 1]
	ScrollBox* ScrollBox_Enemy;//[Offset: 0x280, Size: 1]
	Image* Separator;//[Offset: 0x288, Size: 1]
	SizeBox* Timer_NME;//[Offset: 0x290, Size: 1]
	SQPlayerState* SQ PS;//[Offset: 0x298, Size: 1]
	S_VehicleListData[] SortedAlliedVehicles;//[Offset: 0x2a0, Size: 1]
	S_VehicleListData[] SortedEnemyVehicles;//[Offset: 0x2b0, Size: 1]
	class BP_Ruleset_Vehicle_C* Kill Death Ruleset;//[Offset: 0x2c0, Size: 1]
	bool ShouldShowEnemyFullStatus;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	<FName,W_MapVehicleListItem_C*> AlliesItems;//[Offset: 0x2d0, Size: 1]
	<FName,W_MapVehicleListItem_C*> EnemiesItems;//[Offset: 0x320, Size: 1]
	int LocalPlayerTeamId;//[Offset: 0x370, Size: 1]
	byte[] CategorySortOrder;//[Offset: 0x378, Size: 1]
	<byte,S_VehicleListDataArray> CategoryToAlliedVehicles;//[Offset: 0x388, Size: 1]
	<byte,S_VehicleListDataArray> CategoryToEnemyVehicles;//[Offset: 0x3d8, Size: 1]
	void EnsureMappingsSet(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, S_VehicleListData[] K2Node_MakeArray_Array, S_VehicleListDataArray K2Node_MakeStruct_S_VehicleListDataArray, S_VehicleListDataArray K2Node_MakeStruct_S_VehicleListDataArray, byte CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Map_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Map_Contains_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Map_Length_ReturnValue, int CallFunc_Map_Length_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void SortColumn();// 0x1d69c50
	void ShouldShowEnemyDetails(byte Intel, out bool ShowDetails, BP_SQLayerTeamConfig_C* CallFunc_TryGetTeamLayerConfig_OutTeamConfig, bool CallFunc_TryGetTeamLayerConfig_ReturnValue, bool CallFunc_HasIntel_Out_Has_Intel);// 0x1d69c50
	void ConvertId(FName In Id, SQAvailability* Availability, out FName Out Key, FString CallFunc_Conv_NameToString_ReturnValue, FString CallFunc_GetObjectName_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue);// 0x1d69c50
	void GetTicketsForVehicleLoss(BP_SQVehicleSettings_C* In Vehicle Setting, out int Tickets, int L_OutTickets, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_Ruleset_Vehicle_C* K2Node_DynamicCast_AsBP_Ruleset_Vehicle, bool K2Node_DynamicCast_bSuccess, int[] CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetTicketsForVehicleKill_Out_Tickets, int CallFunc_Max_ReturnValue);// 0x1d69c50
	void GetTicketsForEnemyVehicleKill(int Team ID, BP_SQVehicleSettings_C* In Vehicle Setting, out int Tickets, int L_OutTickets, byte CallFunc_Conv_IntToByte_ReturnValue, int Temp_int_Array_Index_Variable, byte CallFunc_GetValidValue_ReturnValue, int Temp_int_Loop_Counter_Variable, int[] CallFunc_GetTeamsFromSingleRelationShipById_OutTeamIds, int CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_Ruleset_Vehicle_C* K2Node_DynamicCast_AsBP_Ruleset_Vehicle, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTicketsForVehicleKill_Out_Tickets, int CallFunc_Max_ReturnValue);// 0x1d69c50
	void AddVehicleToList(BP_SQAvailability_Vehicle_C* Vehicle, int TeamId, bool IsFriendly, bool LWasAdded, S_VehicleListData[] LArr, int InsertLocation, FName[] CategoryNames, int RangeEnd, int RangeStart, byte TargetCategory, S_VehicleListData LocalVehicleData, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, BP_SQVehicleSettings_C* K2Node_DynamicCast_AsBP_SQVehicle_Settings, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, FName CallFunc_GetId_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_GetTicketsForVehicleLoss_Tickets, int CallFunc_GetTicketsForEnemyVehicleKill_Tickets, bool CallFunc_GetVehicleEntry_Success, SQVehicleEntry CallFunc_GetVehicleEntry_VehicleEntry, bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Add_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, S_VehicleListDataArray CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, S_VehicleListDataArray CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, S_VehicleListData CallFunc_Array_Get_Item, S_VehicleListData CallFunc_Array_Get_Item, bool CallFunc_NameLexicalLess_ReturnValue, bool CallFunc_NameLexicalLess_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable, int K2Node_Select_Default, S_VehicleListDataArray K2Node_MakeStruct_S_VehicleListDataArray, S_VehicleListDataArray K2Node_MakeStruct_S_VehicleListDataArray, const byte Temp_byte_Variable, bool CallFunc_Set_Contains_ReturnValue, S_VehicleListData K2Node_MakeStruct_S_VehicleListData);// 0x1d69c50
	void Cache KillDeath Ruleset(class SQGameRuleSet[] Temp_class_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, class SQGameMode K2Node_ClassDynamicCast_AsSQGame_Mode, bool K2Node_ClassDynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, class SQGameRuleSet CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, class BP_Ruleset_Vehicle_C K2Node_ClassDynamicCast_AsBP_Ruleset_Vehicle, bool K2Node_ClassDynamicCast_bSuccess);// 0x1d69c50
	void Sort Vics by Cost(out S_VehicleListData[] To Sort, out S_VehicleListData[] Out Sorted, S_VehicleListData[] L Cost Sorted Vics, bool L Inserted, S_VehicleListData L Vic, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, S_VehicleListData CallFunc_Array_Get_Item, int CallFunc_Array_Add_ReturnValue, int Temp_int_Loop_Counter_Variable, S_VehicleListData CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Draw Sorted Vehicle Data(S_VehicleListData[] LArray, byte[] CategoryOrder, <byte,S_VehicleListDataArray> EnemyCategorySorted, <byte,S_VehicleListDataArray> AllyCategorySorted, FName[] SortedEnemiesNames, FName[] SortedAlliesNames, S_VehicleListData[] SortedEnemies, S_VehicleListData[] SortedAllies, bool L Draw Enemy, bool L Inserted, S_VehicleListData L Vic, S_VehicleListData[] L Cost Sorted Vics, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int Temp_int_Array_Index_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, byte[] K2Node_MakeArray_Array, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_MapVehicleListItem_C* CallFunc_Create_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, W_MapVehicleListItem_C* CallFunc_Create_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, byte CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, S_VehicleListDataArray CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, S_VehicleListData CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FName CallFunc_ConvertId_Out_Key, S_VehicleListDataArray CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, S_VehicleListData CallFunc_Array_Get_Item, FName CallFunc_ConvertId_Out_Key, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_ShouldShowEnemyDetails_ShowDetails, bool CallFunc_ShouldShowEnemyDetails_ShowDetails, bool CallFunc_ShouldShowEnemyDetails_ShowDetails, bool CallFunc_ShouldShowEnemyDetails_ShowDetails, bool CallFunc_ShouldShowEnemyDetails_ShowDetails);// 0x1d69c50
	void Collect Vehicle Data(int L LocalPlayerTeamId, FText L Name, int L Ticket Cost, bool L Same Team, int L Team, int Temp_int_Loop_Counter_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, BP_SQFactionSetup_C* CallFunc_TryGetCurrentFactionSetup_OutFactionSetup, bool CallFunc_TryGetCurrentFactionSetup_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQAvailability_Vehicle* CallFunc_Array_Get_Item, BP_SQAvailability_Vehicle_C* K2Node_DynamicCast_AsBP_SQAvailability_Vehicle, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeamId_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void UpdateVehicleStatus();// 0x1d69c50
	void ExecuteUbergraph_W_MapVehicleList(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Array_Index_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, SQTeamState* CallFunc_TryGetTeamState_OutTeamState, bool CallFunc_TryGetTeamState_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQAvailabilityState_Vehicle[] CallFunc_GetVehiclesForTeam_OutVehicles, SQAvailabilityState_Vehicle CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FName CallFunc_GetId_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, FName CallFunc_ConvertId_Out_Key, int CallFunc_Add_IntInt_ReturnValue, W_MapVehicleListItem_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, W_MapVehicleListItem_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);// 0x1d69c50

--------------------------------
Class: S_VehicleListData
	FName VehicleId_34_99786193404787969A36FAA94D813B89;//[Offset: 0x0, Size: 1]
	int TicketCost_9_6F4BD734407E64A37422898AE2AF03CB;//[Offset: 0x8, Size: 1]
	BP_SQAvailability_Vehicle_C* VehicleAvailability_26_DABF9C6B41D1A183C20776905B496AF0;//[Offset: 0x10, Size: 1]
	SQVehicleEntry VehicleEntry_23_252B99A74F8DA34F78893BBFFA9C2D0F;//[Offset: 0x18, Size: 1]
	int TeamId_29_C3B56FF040D391073D2B578B3C7D516E;//[Offset: 0x88, Size: 1]
	bool IsWatercraft_40_F68C80344C24CCB2C734C4A8DDBF3DE1;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8c, Size: 1]

--------------------------------
Class: S_VehicleListDataArray
	S_VehicleListData[] Array_3_16CC3F854DF8B435F14B4FB64BB938A8;//[Offset: 0x0, Size: 1]

--------------------------------
Class: BP_Ruleset_Vehicle_C.SQGameRuleSet.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x258, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x260, Size: 1]
	TeamVehicleRuleElement[] Rules;//[Offset: 0x268, Size: 1]
	void GetVictimTeamState(SQPlayerController* In Killer, SQPlayerController* In Victim, SQVehicle* In Vehicle, out bool Out Success, out SQTeamState* Out TeamState, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQTeamState* CallFunc_TryGetTeamState_OutTeamState, bool CallFunc_TryGetTeamState_ReturnValue, bool CallFunc_IsValid_ReturnValue, int Temp_int_Array_Index_Variable, SQLayer* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, bool CallFunc_HasTeamConfig_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void GetInstigatorTeamState(SQPlayerController* In Killer, SQPlayerController* In Victim, SQVehicle* In Vehicle, out bool Out Success, out SQTeamState* Out TeamState, bool CallFunc_IsValid_ReturnValue, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, SQTeamState* CallFunc_TryGetTeamState_OutTeamState, bool CallFunc_TryGetTeamState_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void GetTicketsForVehicleKill(int In TeamId, BP_SQVehicleSettings_C* In Vehicle Settings, out int Out Tickets, int L_Out_Tickets, bool CallFunc_FindRuleList_Out_Found, TeamVehicleRuleElement CallFunc_FindRuleList_Out_Rule, int Temp_int_Array_Index_Variable, VehicleRuleElement[] CallFunc_FindRules_Out_Rules, VehicleRuleElement CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void SelectRules(int In Kill Instigator Team ID, int In Victim Team ID, BP_SQVehicleSettings_C* In Vehicle Settings, out VehicleRuleElement[] Out Rules, enum CallFunc_GetRelationShipByIndex_ReturnValue, bool CallFunc_FindRuleList_Out_Found, TeamVehicleRuleElement CallFunc_FindRuleList_Out_Rule, VehicleRuleElement[] CallFunc_FindRules_Out_Rules);// 0x1d69c50
	void GetPointsForVehicleKill(int In TeamId, BP_SQVehicleSettings_C* In Vehicle Settings, out int Out Points, int L_Out_Points, bool CallFunc_FindRuleList_Out_Found, TeamVehicleRuleElement CallFunc_FindRuleList_Out_Rule, int Temp_int_Array_Index_Variable, VehicleRuleElement[] CallFunc_FindRules_Out_Rules, VehicleRuleElement CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void ApplyRules(out VehicleRuleElement[] In Vehicle Rule, BP_SQVehicleSettings_C* In Vehicle Settings, SQPlayerController* In Killer, SQTeamState* In Victim TeamState, SQTeamState* In Kill Instigator TeamState, FString L_Reason, enum L_VehicleTeam, bool CallFunc_GetRulesetEnabled_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetTickets_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, FText CallFunc_GetDisplayName_OutDisplayName, bool CallFunc_GetDisplayName_ReturnValue, int CallFunc_Array_Length_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, int Temp_int_Loop_Counter_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Less_IntInt_ReturnValue, VehicleRuleElement CallFunc_Array_Get_Item, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, FName CallFunc_Conv_StringToName_ReturnValue, FString Temp_string_Variable, FString K2Node_Select_Default, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50
	void FindRules(TeamVehicleRuleElement In Team Rule, BP_SQVehicleSettings_C* In Vehicle Setting, out VehicleRuleElement[] Out Rules, VehicleRuleElement[] L_Out Rules, FName[] L_RowNames, enum L_VehicleTeam, int Temp_int_Array_Index_Variable, FName[] CallFunc_GetDataTableRowNames_OutRowNames, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, VehicleRuleElement CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, byte[] CallFunc_Set_ToArray_Result, bool CallFunc_HasTags_Out_HasTag, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void FindRuleList(int In TeamId, enum In Relationship, out bool Out Found, out TeamVehicleRuleElement Out Rule, byte CallFunc_Conv_IntToByte_ReturnValue, int Temp_int_Array_Index_Variable, byte CallFunc_GetValidValue_ReturnValue, int Temp_int_Loop_Counter_Variable, TeamVehicleRuleElement CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Set_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void VehicleDestroyed(SQPlayerController* Killer, SQPlayerController* Victim, SQVehicle* DestroyedVehicle);// 0x1d69c50
	void ExecuteUbergraph_BP_Ruleset_Vehicle(int EntryPoint, SQPlayerController* K2Node_Event_Killer, SQPlayerController* K2Node_Event_Victim, SQVehicle* K2Node_Event_DestroyedVehicle, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetVictimTeamState_Out_Success, SQTeamState* CallFunc_GetVictimTeamState_Out_TeamState, BP_SQVehicleSettings_C* K2Node_DynamicCast_AsBP_SQVehicle_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetInstigatorTeamState_Out_Success, SQTeamState* CallFunc_GetInstigatorTeamState_Out_TeamState, VehicleRuleElement[] CallFunc_SelectRules_Out_Rules);// 0x1d69c50

--------------------------------
Class: TeamVehicleRuleElement
	enum[] TargetTeam_8_7282BF8141729CE9DD942BBF791D693B;//[Offset: 0x0, Size: 1]
	DataTable* RuleList_16_BB671C0E4A808C167AAA7DA6D65F53CF;//[Offset: 0x10, Size: 1]
	<enum> CoveredRelationships_21_41894C4F49767590846BDC9B2229F9D9;//[Offset: 0x18, Size: 1]

--------------------------------
Class: VehicleRuleElement
	byte VehicleType_20_F07FD2D244D204F45053118F2D79DA88;//[Offset: 0x0, Size: 1]
	<byte> VehicleTag_45_F070F0A14AB6C6AF878BDEB81EE7E82F;//[Offset: 0x8, Size: 1]
	int OwnerTicketLoss_42_249E6FF54EA350861AA14FBBFD54D68E;//[Offset: 0x58, Size: 1]
	int KillerPointReward_43_46C39AAA4AA5F0FD5EFB2DAE03F929D5;//[Offset: 0x5c, Size: 1]

--------------------------------
Class: W_MapVehicleListItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* AmphibiousIcon;//[Offset: 0x268, Size: 1]
	ScaleBox* AmphibiousScaleBox;//[Offset: 0x270, Size: 1]
	SizeBox* Area_Count;//[Offset: 0x278, Size: 1]
	SizeBox* Area_Tickets;//[Offset: 0x280, Size: 1]
	SizeBox* Area_Timer;//[Offset: 0x288, Size: 1]
	Image* Icon;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Available;//[Offset: 0x298, Size: 1]
	TextBlock* TB_Name;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_Slash;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_Specifics;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Tickets;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_Timer;//[Offset: 0x2c0, Size: 1]
	TextBlock* TB_Used;//[Offset: 0x2c8, Size: 1]
	S_VehicleListData Vehicle List Data;//[Offset: 0x2d0, Size: 1]
	bool Enemy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x360, Size: 1]
	int LocalPlayerTeamId;//[Offset: 0x364, Size: 1]
	int CachedUsed;//[Offset: 0x368, Size: 1]
	int CachedAvailable;//[Offset: 0x36c, Size: 1]
	DateTime Cached NextAvailable;//[Offset: 0x370, Size: 1]
	DataTableRowHandle CachedReason;//[Offset: 0x378, Size: 1]
	FText TimerText;//[Offset: 0x388, Size: 1]
	bool IsSingleUse;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a0, Size: 1]
	TimerHandle UpdateTimerHandle;//[Offset: 0x3a8, Size: 1]
	void UpdateDepletedSingleUse(SQAvailability* In Availability, out const SQAvailabilityState In State, out bool Out Not Depleted, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Finalize Layout(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Init Delay(out bool Out Should Update Timer, bool CallFunc_ShouldShowDetails_ShowDetails);// 0x1d69c50
	void ToHumanReadableTime(Timespan InTimespan, out FText Result, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void UpdateCollapsing(int In ModifierPct, out bool Out Collapsed, bool CallFunc_ShouldShowDetails_ShowDetails, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void HasTimer(out bool HasTimer, bool CallFunc_HasDelay_ReturnValue);// 0x1d69c50
	void GetNextAvailabilityTimer(out FText OutText, DateTime CallFunc_GetServerUtcTime_ReturnValue, Timespan CallFunc_Subtract_DateTimeDateTime_ReturnValue, bool CallFunc_Greater_DateTimeDateTime_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void ShouldShowDetails(byte Intel, out bool ShowDetails, BP_SQLayerTeamConfig_C* CallFunc_TryGetTeamLayerConfig_OutTeamConfig, bool CallFunc_TryGetTeamLayerConfig_ReturnValue, bool CallFunc_HasIntel_Out_Has_Intel);// 0x1d69c50
	void UpdateUnavailabilityReason(DataTableRowHandle Reason, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void UpdateDelay(DateTime NextAvailability, bool L_Show Default Respawn Delay, bool L_Show Next Respawn Delay, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, Timespan CallFunc_GetDefaultSpawnDelay_Delay, bool CallFunc_BooleanOR_ReturnValue, FText CallFunc_ToHumanReadableTime_Result, enum K2Node_Select_Default, bool CallFunc_ShouldShowDetails_ShowDetails, bool CallFunc_ShouldShowDetails_ShowDetails, bool CallFunc_NotEqual_DateTimeDateTime_ReturnValue);// 0x1d69c50
	void UpdateAvailable(int Available, SQAvailability* Target, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, enum Temp_byte_Variable, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, bool Temp_bool_Variable, bool CallFunc_ShouldShowDetails_ShowDetails, enum K2Node_Select_Default, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50
	void UpdateUsed(int Used, enum Temp_byte_Variable, enum Temp_byte_Variable, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_ShouldShowDetails_ShowDetails, bool Temp_bool_Variable, bool CallFunc_NotEqual_IntInt_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void GetDefaultSpawnDelay(out Timespan Delay, bool CallFunc_HasDelay_ReturnValue, Timespan CallFunc_GetDefaultDelay_OutDefaultDelay);// 0x1d69c50
	void UpdateTimer();// 0x1d69c50
	void UpdateStatus(SQAvailabilityState_Vehicle State);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_MapVehicleListItem(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, FText CallFunc_GetNextAvailabilityTimer_OutText, bool CallFunc_ShouldShowDetails_ShowDetails, bool CallFunc_Init_Delay_Out_Should_Update_Timer, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQAvailabilityState_Vehicle K2Node_CustomEvent_State, FText Temp_text_Variable, bool CallFunc_UpdateDepletedSingleUse_Out_Not_Depleted, bool CallFunc_UpdateCollapsing_Out_Collapsed, bool CallFunc_TextIsEmpty_ReturnValue, bool Temp_bool_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, enum K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: W_RoleDetails_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Bar;//[Offset: 0x268, Size: 1]
	Border* Border_Details;//[Offset: 0x270, Size: 1]
	Border* Border_Info;//[Offset: 0x278, Size: 1]
	Border* BorderPreviewMessage;//[Offset: 0x280, Size: 1]
	Button* Button_MainWeapon;//[Offset: 0x288, Size: 1]
	Button* Button_Secondary;//[Offset: 0x290, Size: 1]
	Button* Button_Special;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	Image* Image_MainWeapon;//[Offset: 0x2a8, Size: 1]
	Image* Image_Secondary;//[Offset: 0x2b0, Size: 1]
	Image* Image_Special;//[Offset: 0x2b8, Size: 1]
	TextBlock* Name_Description;//[Offset: 0x2c0, Size: 1]
	TextBlock* Name_Primary;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_Amount_Primary;//[Offset: 0x2d0, Size: 1]
	TextBlock* TB_Amount_Secondary;//[Offset: 0x2d8, Size: 1]
	TextBlock* TB_Amount_Special;//[Offset: 0x2e0, Size: 1]
	TextBlock* TB_Preview;//[Offset: 0x2e8, Size: 1]
	TextBlock* TextBlock_Description;//[Offset: 0x2f0, Size: 1]
	VerticalBox* V_SubRoles;//[Offset: 0x2f8, Size: 1]
	VerticalBox* VerticalBox_Backpack;//[Offset: 0x300, Size: 1]
	SQEquipableItem* Primary;//[Offset: 0x308, Size: 1]
	SQEquipableItem* Secondary;//[Offset: 0x310, Size: 1]
	SQEquipableItem* Special;//[Offset: 0x318, Size: 1]
	SQInventoryData Primary Data;//[Offset: 0x320, Size: 1]
	SQInventoryData Secondary Data;//[Offset: 0x338, Size: 1]
	SQInventoryData Special Data;//[Offset: 0x350, Size: 1]
	bool SubRoles Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x368, Size: 1]
	W_RoleSelect_C* Role Select;//[Offset: 0x370, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x378, Size: 1]
	bool Has Sub Roles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x380, Size: 1]
	SQRoleSettings* Latest Role;//[Offset: 0x388, Size: 1]
	MulticastInlineDelegateProperty OnSubRoleSelected;//[Size: 1]
	SlateBrush WidgetStyleNormal;//[Offset: 0x3a0, Size: 1]
	SlateBrush WidgetStyleHovered;//[Offset: 0x428, Size: 1]
	int CurrentHighlightedItemIndex;//[Offset: 0x4b0, Size: 1]
	SQEquipableItem*[] AvailableItems;//[Offset: 0x4b8, Size: 1]
	EventReply ReceiveMouseWheel(float MouseWheelAxis, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, SQEquipableItem* CallFunc_Array_Get_Item, SQEquipableItem* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Clamp_ReturnValue, int CallFunc_Array_Length_ReturnValue, EventReply CallFunc_Handled_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Clamp_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void HighlightButton(Button* Button, bool bHighlighted, bool CallFunc_IsValid_ReturnValue, ButtonStyle K2Node_MakeStruct_ButtonStyle, ButtonStyle K2Node_MakeStruct_ButtonStyle);// 0x1d69c50
	void SelectItem(SQEquipableItem* SQEquippableItem, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int Temp_int_Loop_Counter_Variable, Widget*[] CallFunc_GetAllChildren_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_Array_Get_Item, W_BackpackRow_C* K2Node_DynamicCast_AsW_Backpack_Row, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SQEquipableItem* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, W_BackpackItem_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, Widget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, W_BackpackRow_C* K2Node_DynamicCast_AsW_Backpack_Row, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, W_BackpackItem_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Init Main Weapon Button(bool L Has Sub Roles, SlateBrush L Pressed, SlateBrush L Hovered, SlateBrush L Normal, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor, LinearColor K2Node_MakeStruct_LinearColor, SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, LinearColor K2Node_MakeStruct_LinearColor, SlateColor K2Node_MakeStruct_SlateColor, ButtonStyle K2Node_MakeStruct_ButtonStyle);// 0x1d69c50
	void Set Preview Message(bool L_Available, bool L Group Locked, bool L Team Locked, bool L Locked, bool L Selected, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, LinearColor Temp_struct_Variable, FText CallFunc_MakeLiteralText_ReturnValue, BorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, float K2Node_Select_Default, Margin K2Node_MakeStruct_Margin, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQAvailabilityState_Role CallFunc_TryGetRoleAvailability_OutUpdatedRoleState, bool CallFunc_TryGetRoleAvailability_ReturnValue, bool CallFunc_HasActiveTimer_ReturnValue, bool CallFunc_IsAvailable_ReturnValue, Timespan CallFunc_GetAvailabilityDelay_ReturnValue, int CallFunc_GetSeconds_ReturnValue, SQUnavailabilityReason CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_GetMinutes_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Get Item Info(SQInventoryData Primary Data, out int Item Count, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_GetClassDisplayName_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50
	void Clear All();// 0x1d69c50
	void Refresh Main Icons(FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, int CallFunc_Get_Item_Info_Item_Count, int CallFunc_Get_Item_Info_Item_Count, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FText K2Node_Select_Default, int CallFunc_Get_Item_Info_Item_Count, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FText K2Node_Select_Default, bool Temp_bool_Variable, FText K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Refresh Description(SQEquipableItem* Target, bool CallFunc_IsValid_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Update Details(SQRoleSettings* RoleReference, SQInventoryData[] RowData, SQInventoryData[] Data Array, W_BackpackRow_C*[] L Rows, SQEquipableItem*[] Row Items, W_BackpackRow_C* Last Backpack Row, SQEquipableItem*[] Backpack Items, SQEquipableItem* L Item, SQInventoryData Current Data, bool Drawn Special, bool Drawn Secondary, bool Drawn Primary, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQEquipableItem* CallFunc_Array_Get_Item, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Add_ReturnValue, SQInventoryData CallFunc_Array_Get_Item, int CallFunc_Array_Add_ReturnValue, W_BackpackRow_C* CallFunc_Create_ReturnValue, SQInventoryWeaponGroupData CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQInventoryData CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Less_IntInt_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQEquipableItem* K2Node_DynamicCast_AsSQEquipable_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQEquipableItem* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void BndEvt__Button_MainWeapon_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Secondary_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Special_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Sub Role Selected(SQRoleSettings* RoleReference);// 0x1d69c50
	void Sub Role Hovered(SQRoleSettings* RoleReference);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnTick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void ExecuteUbergraph_W_RoleDetails(int EntryPoint, const SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, SQRoleSettings* K2Node_CustomEvent_RoleReference, SQRoleSettings* K2Node_CustomEvent_RoleReference, SQInventoryWeaponGroupData CallFunc_Array_Get_Item, SQInventoryData CallFunc_Array_Get_Item, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQEquipableItem* K2Node_DynamicCast_AsSQEquipable_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_RequestRole_ReturnValue, bool CallFunc_IsVisible_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void OnSubRoleSelected__DelegateSignature(SQRoleSettings* Role Reference);// 0x1d69c50

--------------------------------
Class: W_BackpackRow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	GridPanel* GridPanel;//[Offset: 0x268, Size: 1]
	SQEquipableItem*[] Item Array;//[Offset: 0x270, Size: 1]
	bool Show Bottom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	bool Show Top;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x281, Size: 1]
	W_RoleDetails_C* RoleDetails;//[Offset: 0x288, Size: 1]
	SQInventoryData[] Data Array;//[Offset: 0x290, Size: 1]
	<SQEquipableItem*,W_BackpackItem_C*> Item Button Map;//[Offset: 0x2a0, Size: 1]
	void Set Items(out const SQEquipableItem*[] In Array, out const SQInventoryData[] Data Array);// 0x1d69c50
	void Update Details(SQEquipableItem* Item);// 0x1d69c50
	void ExecuteUbergraph_W_BackpackRow(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQEquipableItem* CallFunc_Array_Get_Item, W_BackpackItem_C* CallFunc_Create_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, GridSlot* CallFunc_SlotAsGridSlot_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, const SQEquipableItem*[] K2Node_CustomEvent_In_Array, const SQInventoryData[] K2Node_CustomEvent_Data_Array, SQEquipableItem* K2Node_CustomEvent_Item, SQInventoryData CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_BackpackItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Bottom;//[Offset: 0x268, Size: 1]
	Button* Button;//[Offset: 0x270, Size: 1]
	Image* Icon;//[Offset: 0x278, Size: 1]
	Image* Left;//[Offset: 0x280, Size: 1]
	Image* Right;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Amount;//[Offset: 0x290, Size: 1]
	Image* Top;//[Offset: 0x298, Size: 1]
	SQEquipableItem* Item;//[Offset: 0x2a0, Size: 1]
	bool Show Top;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	int Column ID;//[Offset: 0x2ac, Size: 1]
	bool Show Bottom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	MulticastInlineDelegateProperty Hovered;//[Size: 1]
	SQInventoryData Data;//[Offset: 0x2c8, Size: 1]
	void Get Item Count(out const SQInventoryData SQInventoryData, out int Item Count, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_8_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_BackpackItem(int EntryPoint, enum Temp_byte_Variable, int CallFunc_Get_Item_Count_Item_Count, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText K2Node_Select_Default, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default, enum K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Hovered__DelegateSignature(SQEquipableItem* Item);// 0x1d69c50

--------------------------------
Class: W_RoleSelect_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Bar;//[Offset: 0x268, Size: 1]
	Border* Border_PreviewMessage;//[Offset: 0x270, Size: 1]
	Image* IconRole;//[Offset: 0x278, Size: 1]
	Image* Image_R2T;//[Offset: 0x280, Size: 1]
	TextBlock* RoleDetail;//[Offset: 0x288, Size: 1]
	TextBlock* RoleTitle;//[Offset: 0x290, Size: 1]
	W_SquadList_C* SquadList_FT;//[Offset: 0x298, Size: 1]
	TextBlock* TB_Preview;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_Prompt;//[Offset: 0x2a8, Size: 1]
	W_RoleDetails_C* W_RoleDetails;//[Offset: 0x2b0, Size: 1]
	W_RoleList_C* W_RoleListCenter;//[Offset: 0x2b8, Size: 1]
	SQRoleSettings* PreviewRole;//[Offset: 0x2c0, Size: 1]
	MaterialInstanceDynamic* MID_RendTex;//[Offset: 0x2c8, Size: 1]
	MulticastInlineDelegateProperty Role Selected;//[Size: 1]
	TimerHandle Role Info Timer;//[Offset: 0x2e0, Size: 1]
	W_RoleItem_C* Current Role Item;//[Offset: 0x2e8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2f0, Size: 1]
	SQRoleSettings* Temp Role;//[Offset: 0x2f8, Size: 1]
	BP_R2T_Soldier_C* R2T Soldier;//[Offset: 0x300, Size: 1]
	SQRoleSettings* Current Role;//[Offset: 0x308, Size: 1]
	bool Was Leader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x310, Size: 1]
	bool DeployRoleLocked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x311, Size: 1]
	bool DeployRoleSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x312, Size: 1]
	void Update Role Status(bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQAvailabilityState_Role CallFunc_TryGetRoleAvailability_OutUpdatedRoleState, bool CallFunc_TryGetRoleAvailability_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAvailable_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Create Render Target(Transform CallFunc_MakeTransform_ReturnValue, bool Temp_bool_Variable, Texture* Temp_object_Variable, Texture* Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, BP_R2T_Soldier_C* CallFunc_FinishSpawningActor_ReturnValue, SQAvailability_Role* CallFunc_Array_Get_Item, bool CallFunc_NotEqual_IntInt_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, Texture* K2Node_Select_Default);// 0x1d69c50
	void Show Deploy Role(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, W_RoleGroup_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_GetMatchingRoleItem_Out_Success, W_RoleItem_C* CallFunc_GetMatchingRoleItem_Out_Role_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsPartOfThisGroup_Out_Part_Of_this_Group);// 0x1d69c50
	void Update Preview State(bool L Team Locked, bool L Locked, bool L Selected, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, FText K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void Set Soldier Material(MaterialInterface* Material);// 0x1d69c50
	void Delay Display Role Info(SQRoleSettings* RoleReference);// 0x1d69c50
	void Draw Role Info();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Show Current Role();// 0x1d69c50
	void Set Role(SQRoleSettings* New Role);// 0x1d69c50
	void Destroy R2T();// 0x1d69c50
	void New Role Selected(SQRoleSettings* Role);// 0x1d69c50
	void New Role Hovered(SQRoleSettings* Role, bool Hovered, W_RoleItem_C* Button Reference, bool bSubRole);// 0x1d69c50
	void OnTick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void BndEvt__W_RoleListCenter_K2Node_ComponentBoundEvent_1_Roles Refreshed__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_RoleSelect(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* K2Node_CustomEvent_RoleReference, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* K2Node_CustomEvent_New_Role, bool CallFunc_NotEqual_ObjectObject_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQRoleSettings* K2Node_CustomEvent_Role, SQRoleSettings* K2Node_CustomEvent_Role, bool K2Node_CustomEvent_Hovered, W_RoleItem_C* K2Node_CustomEvent_Button_Reference, bool K2Node_CustomEvent_bSubRole, const SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, bool CallFunc_IsValid_ReturnValue, W_RoleGroup_C* CallFunc_Array_Get_Item, bool CallFunc_IsSquadLeader_ReturnValue, W_RoleItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);// 0x1d69c50
	void Role Selected__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_RoleList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Image;//[Offset: 0x268, Size: 1]
	ScrollBox* ScrollBox_Groups;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Prompt;//[Offset: 0x278, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x280, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x288, Size: 1]
	W_RoleSelect_C* Role Select;//[Offset: 0x290, Size: 1]
	W_RoleGroup_C*[] Role Groups;//[Offset: 0x298, Size: 1]
	SQRoleSettings* Last Role;//[Offset: 0x2a8, Size: 1]
	MulticastInlineDelegateProperty Roles Refreshed;//[Size: 1]
	TimerHandle InitTimerHandle;//[Offset: 0x2c0, Size: 1]
	bool ForceRefreshRoleList;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	void CollectReferences(out bool Out Success, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void ClearGroups(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_RoleGroup_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Is Deploy Role Unavailable(out bool Unavailable, SQTeamState* L TS, SQRoleSettings* L Current Role, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsDeployRoleAvailable_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void CreateGroupWidgets(out W_RoleGroup_C*[] Out RoleGroup, out bool Out Success, SQRoleGroupingStrategy[] L_Categories, W_RoleGroup_C*[] L_RoleGroups, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQRoleGroupingStrategy CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetRoleCategories_OutSuccess, SQRoleGroupingStrategy[] CallFunc_TryGetRoleCategories_OutRoleCategories, W_RoleGroup_C* CallFunc_Create_ReturnValue, int CallFunc_Array_Add_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue);// 0x1d69c50
	void Initialize Groups(out bool OutSuccess, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_RoleGroup_C*[] CallFunc_CreateGroupWidgets_Out_RoleGroup, bool CallFunc_CreateGroupWidgets_Out_Success, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, W_RoleGroup_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnTick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void On Setup UI();// 0x1d69c50
	void On Collect References();// 0x1d69c50
	void OnTeamChange();// 0x1d69c50
	void OnRoleChange(SQRoleSettings* CurrentRole);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void BindEventsToPlayerState();// 0x1d69c50
	void ExecuteUbergraph_W_RoleList(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Array_Index_Variable, const SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, bool CallFunc_IsVisible_ReturnValue, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Initialize_Groups_OutSuccess, bool CallFunc_CollectReferences_Out_Success, SQRoleSettings* K2Node_CustomEvent_CurrentRole, int Temp_int_Loop_Counter_Variable, W_RoleGroup_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int Temp_int_Array_Index_Variable, W_RoleGroup_C* CallFunc_Array_Get_Item);// 0x1d69c50
	void Roles Refreshed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_RoleGroup_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Image;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	VerticalBox* RoleBox;//[Offset: 0x280, Size: 1]
	TextBlock* TBGroupName;//[Offset: 0x288, Size: 1]
	W_RoleList_C* Role List Parent;//[Offset: 0x290, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x298, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a0, Size: 1]
	FText Group Name;//[Offset: 0x2a8, Size: 1]
	bool Has Roles;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	W_RoleItem_C*[] Role Widgets;//[Offset: 0x2c8, Size: 1]
	class W_RoleItem_C* Role Item Widget Class;//[Offset: 0x2d8, Size: 1]
	SQRoleGroupingStrategy RoleGroupingStrategy;//[Offset: 0x2e0, Size: 1]
	void SearchTagGroup(SQRoleGroupingStrategy In Group Strategy, out bool Out Success, out W_RoleItem_C* Out Item, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, W_RoleItem_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_HasThisTagGrouping_OutHasMatchingTagGrouping);// 0x1d69c50
	void SetupUI();// 0x1d69c50
	void GetMatchingRoleItem(SQRoleSettings* In Role Setting, out bool Out Success, out W_RoleItem_C* Out Role Item, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, W_RoleItem_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsItemMatching_Is_Matching);// 0x1d69c50
	void IsPartOfThisGroup(SQRoleSettings* InRoleSetting, out bool Out Part Of this Group, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsConcernedByStrategy_IsConcernedByStrategy);// 0x1d69c50
	void Get Role Panel(out PanelWidget* RoleBox);// 0x1d69c50
	void Populate List(bool L Has Roles, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, enum Temp_byte_Variable, int CallFunc_Add_IntInt_ReturnValue, enum Temp_byte_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PanelWidget* CallFunc_Get_Role_Panel_RoleBox, W_RoleItem_C* CallFunc_Create_ReturnValue, bool Temp_bool_Variable, enum K2Node_Select_Default, PanelSlot* CallFunc_AddChild_ReturnValue, int CallFunc_Array_Add_ReturnValue, SQAvailabilityState_Role[] CallFunc_GetRoles_OutRoles, PanelWidget* CallFunc_Get_Role_Panel_RoleBox, SQAvailabilityState_Role CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasTagGrouping_ShouldBeGrouped, SQRoleGroupingStrategy CallFunc_HasTagGrouping_OutTagGroupingStrategy, bool CallFunc_IsConcernedByStrategy_IsConcernedByStrategy, bool CallFunc_SearchTagGroup_Out_Success, W_RoleItem_C* CallFunc_SearchTagGroup_Out_Item);// 0x1d69c50
	void HasTagGrouping(BP_SQRoleSettings_C* InRoleSetting, out bool ShouldBeGrouped, out SQRoleGroupingStrategy OutTagGroupingStrategy, SQRoleGroupingStrategy[] L_GroupingTags, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQRoleGroupingStrategy CallFunc_Array_Get_Item, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetRoleGroupingTags_OutSuccess, SQRoleGroupingStrategy[] CallFunc_TryGetRoleGroupingTags_OutGroupTags, bool CallFunc_IsConcernedByStrategy_IsConcernedByStrategy, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Init Group Roles();// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnTick(out SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void OnRoleChange(SQRoleSettings* In Current Role);// 0x1d69c50
	void ExecuteUbergraph_W_RoleGroup(int EntryPoint, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, bool CallFunc_IsVisible_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SQRoleSettings* K2Node_CustomEvent_In_Current_Role, bool CallFunc_IsVisible_ReturnValue, W_RoleItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, W_RoleItem_C* CallFunc_Array_Get_Item);// 0x1d69c50

--------------------------------
Class: BP_R2T_Soldier_C.SceneCapture2D.SceneCapture.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x240, Size: 1]
	SpotLightComponent* SpotLight2;//[Offset: 0x248, Size: 1]
	SpotLightComponent* SpotLight1;//[Offset: 0x250, Size: 1]
	SpotLightComponent* SpotLight;//[Offset: 0x258, Size: 1]
	PointLightComponent* PointLight1;//[Offset: 0x260, Size: 1]
	PointLightComponent* PointLight;//[Offset: 0x268, Size: 1]
	StaticMeshComponent* TestMesh;//[Offset: 0x270, Size: 1]
	SkeletalMeshComponent* Preview Weapon;//[Offset: 0x278, Size: 1]
	SkeletalMeshComponent* Preview Soldier;//[Offset: 0x280, Size: 1]
	SceneComponent* SoldierParent;//[Offset: 0x288, Size: 1]
	bool Team 2;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	BP_SQRoleSettings_C* My Role;//[Offset: 0x298, Size: 1]
	bool R2T Soldier Rendering Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	StaticMeshComponent*[] AttachmentMeshes3P;//[Offset: 0x2a8, Size: 1]
	class SQEquipableItem* Cache Weapon;//[Offset: 0x2b8, Size: 1]
	AnimMontage*[] CiggyMontages;//[Offset: 0x2c0, Size: 1]
	void HasCiggy(bool bIsCiggy);// 0x1d69c50
	void Manage Attachments(bool Create, StaticMeshComponent* L Attach, StaticMesh* L Static Mesh, FName L Socket Name, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_K2_AttachToComponent_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue, int CallFunc_Array_Add_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, Transform CallFunc_MakeTransform_ReturnValue, StaticMeshComponent* CallFunc_AddComponent_ReturnValue, class SQWeaponAttachment CallFunc_Array_Get_Item, bool CallFunc_IsValidClass_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQWeaponAttachment* K2Node_DynamicCast_AsSQWeapon_Attachment, bool K2Node_DynamicCast_bSuccess, SQWeaponAttachment_Scope* K2Node_DynamicCast_AsSQWeapon_Attachment_Scope, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, SQInventoryWeaponGroupData CallFunc_Array_Get_Item, int Temp_int_Loop_Counter_Variable, SQInventoryData CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, StaticMeshComponent* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Get Role Info(out SkeletalMeshComponent* Soldier Mesh, out SkeletalMeshComponent* Weapon Mesh, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, class SQSoldier CallFunc_TryGetSoldierWithLayer_OutSoldier, bool CallFunc_TryGetSoldierWithLayer_ReturnValue, SQInventoryWeaponGroupData CallFunc_Array_Get_Item, class Object CallFunc_LoadClassAsset_Blocking_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQInventoryData CallFunc_Array_Get_Item, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, SkeletalMeshComponent* CallFunc_GetMesh_ReturnValue);// 0x1d69c50
	void Set Rendering(bool Active, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, MeshComponent*[] K2Node_MakeArray_Array, MeshComponent* CallFunc_Array_Get_Item, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, int CallFunc_Array_Length_ReturnValue, MaterialInterface* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Set Render Soldier Role(SQRoleSettings* NewRole, bool Force, MaterialInstanceDynamic* L MI Weap, MaterialInstanceDynamic* L MI Soldier, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue, SkeletalMeshComponent* CallFunc_Get_Role_Info_Soldier_Mesh, SkeletalMeshComponent* CallFunc_Get_Role_Info_Weapon_Mesh, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void UserConstructionScript(float Bias, Actor*[] K2Node_MakeArray_Array);// 0x1d69c50
	void Play Animations();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_R2T_Soldier(int EntryPoint, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue);// 0x1d69c50

--------------------------------
Class: SceneCapture2D.SceneCapture.Actor.Object
	SceneCaptureComponent2D* CaptureComponent2D;//[Offset: 0x238, Size: 1]
	void OnInterpToggle(bool bEnable);// 0x3fc6ee0

--------------------------------
Class: SceneCapture.Actor.Object
	StaticMeshComponent* MeshComp;//[Offset: 0x228, Size: 1]
	SceneComponent* SceneComponent;//[Offset: 0x230, Size: 1]

--------------------------------
Class: SceneCaptureComponent2D.SceneCaptureComponent.SceneComponent.ActorComponent.Object
	byte ProjectionType;//[Offset: 0x2b0, Size: 1]
	float FOVAngle;//[Offset: 0x2b4, Size: 1]
	float OrthoWidth;//[Offset: 0x2b8, Size: 1]
	TextureRenderTarget2D* TextureTarget;//[Offset: 0x2c0, Size: 1]
	byte CompositeMode;//[Offset: 0x2c8, Size: 1]
	PostProcessSettings PostProcessSettings;//[Offset: 0x2d0, Size: 1]
	float PostProcessBlendWeight;//[Offset: 0x830, Size: 1]
	bool bOverride_CustomNearClippingPlane;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x834, Size: 1]
	float CustomNearClippingPlane;//[Offset: 0x838, Size: 1]
	bool bUseCustomProjectionMatrix;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x83c, Size: 1]
	Matrix CustomProjectionMatrix;//[Offset: 0x840, Size: 1]
	bool bEnableClipPlane;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x880, Size: 1]
	Vector ClipPlaneBase;//[Offset: 0x884, Size: 1]
	Vector ClipPlaneNormal;//[Offset: 0x890, Size: 1]
	bool bCameraCutThisFrame;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x89c, Size: 1]
	bool bConsiderUnrenderedOpaquePixelAsFullyTranslucent;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x89c, Size: 1]
	bool bDisableFlipCopyGLES;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8a0, Size: 1]
	void RemoveBlendable(interface classNone InBlendableObject);// 0x3fef3b0
	void CaptureScene();// 0x3fec1c0
	void AddOrUpdateBlendable(interface classNone InBlendableObject, float InWeight);// 0x3febf70

--------------------------------
Class: SceneCaptureComponent.SceneComponent.ActorComponent.Object
	enum PrimitiveRenderMode;//[Offset: 0x1f8, Size: 1]
	byte CaptureSource;//[Offset: 0x1f9, Size: 1]
	bool bCaptureEveryFrame;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1fa, Size: 1]
	bool bCaptureOnMovement;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1fa, Size: 1]
	bool bAlwaysPersistRenderingState;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1fb, Size: 1]
	PrimitiveComponent*[] HiddenComponents;//[Offset: 0x200, Size: 1]
	Actor*[] HiddenActors;//[Offset: 0x210, Size: 1]
	PrimitiveComponent*[] ShowOnlyComponents;//[Offset: 0x220, Size: 1]
	Actor*[] ShowOnlyActors;//[Offset: 0x230, Size: 1]
	float LODDistanceFactor;//[Offset: 0x240, Size: 1]
	float MaxViewDistanceOverride;//[Offset: 0x244, Size: 1]
	int CaptureSortPriority;//[Offset: 0x248, Size: 1]
	bool bUseRayTracingIfEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x24c, Size: 1]
	EngineShowFlagsSetting[] ShowFlagSettings;//[Offset: 0x250, Size: 1]
	FString ProfilingEventName;//[Offset: 0x290, Size: 1]
	void ShowOnlyComponent(PrimitiveComponent* InComponent);// 0x3fefce0
	void ShowOnlyActorComponents(Actor* InActor, const bool bIncludeFromChildActors);// 0x3fefc10
	void SetCaptureSortPriority(int NewCaptureSortPriority);// 0x3fef7b0
	void RemoveShowOnlyComponent(PrimitiveComponent* InComponent);// 0x3fef5d0
	void RemoveShowOnlyActorComponents(Actor* InActor, const bool bIncludeFromChildActors);// 0x3fef500
	void HideComponent(PrimitiveComponent* InComponent);// 0x3fecc50
	void HideActorComponents(Actor* InActor, const bool bIncludeFromChildActors);// 0x3fecb80
	void ClearShowOnlyComponents();// 0x3fec200
	void ClearHiddenComponents();// 0x3fec1e0

--------------------------------
Class: EngineShowFlagsSetting
	FString ShowFlagName;//[Offset: 0x0, Size: 1]
	bool Enabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]

--------------------------------
Class: SQWeaponAttachment_Scope.SQWeaponAttachment.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	float MeshTransitionPercentage;//[Offset: 0x4f8, Size: 1]
	StaticMesh* ADSMesh;//[Offset: 0x500, Size: 1]
	Transform ADSMeshTransform;//[Offset: 0x510, Size: 1]
	StaticMesh* NonADSMesh;//[Offset: 0x540, Size: 1]
	Transform NonADSMeshTransform;//[Offset: 0x550, Size: 1]
	SQMeshTransitionSettings[] InToADSMeshTransitionSettings;//[Offset: 0x580, Size: 1]
	SQMeshTransitionSettings[] OutFromADSMeshTransitionSettings;//[Offset: 0x590, Size: 1]
	void ShowADSMesh();// 0xe48410
	void SetMeshTransitionSetting(out const SQMeshTransitionSettings MeshTransitionSetting);// 0xe48340
	void HideADSMesh();// 0xe48290

--------------------------------
Class: SQMeshTransitionSettings
	float TransitionValue;//[Offset: 0x0, Size: 1]
	StaticMesh* Mesh;//[Offset: 0x8, Size: 1]
	Transform MeshTransform;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SpotLightComponent.PointLightComponent.LocalLightComponent.LightComponent.LightComponentBase.SceneComponent.ActorComponent.Object
	float InnerConeAngle;//[Offset: 0x358, Size: 1]
	float OuterConeAngle;//[Offset: 0x35c, Size: 1]
	void SetOuterConeAngle(float NewOuterConeAngle);// 0x4015f30
	void SetInnerConeAngle(float NewInnerConeAngle);// 0x4015e30

--------------------------------
Class: W_RolePreview_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Bar;//[Offset: 0x268, Size: 1]
	Border* Border_PreviewMessage;//[Offset: 0x270, Size: 1]
	Image* IconRole;//[Offset: 0x278, Size: 1]
	Image* Image_R2T;//[Offset: 0x280, Size: 1]
	TextBlock* RoleDetail;//[Offset: 0x288, Size: 1]
	TextBlock* RoleTitle;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Preview;//[Offset: 0x298, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a0, Size: 1]
	BP_R2T_Soldier_C* R2T Soldier;//[Offset: 0x2a8, Size: 1]
	MaterialInstanceDynamic* MID_RendTex;//[Offset: 0x2b0, Size: 1]
	bool DeployRoleSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	bool DeployRoleLocked;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b9, Size: 1]
	SQRoleSettings* PreviewRole;//[Offset: 0x2c0, Size: 1]
	bool Was Leader;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	SQRoleSettings* Temp Role;//[Offset: 0x2d0, Size: 1]
	W_RoleDetails_C* W_RoleDetails;//[Offset: 0x2d8, Size: 1]
	MulticastInlineDelegateProperty OnRoleSet;//[Size: 1]
	void UpdateRoleStatus(bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQAvailabilityState_Role CallFunc_TryGetRoleAvailability_OutUpdatedRoleState, bool CallFunc_TryGetRoleAvailability_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAvailable_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void UpdatePreviewState(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, FText K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void CreateRenderTarget(bool Temp_bool_Variable, Texture* Temp_object_Variable, Texture* Temp_object_Variable, Transform CallFunc_MakeTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, BP_R2T_Soldier_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQAvailability_Role* CallFunc_Array_Get_Item, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_NotEqual_IntInt_ReturnValue, Texture* K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Destroy R2T();// 0x1d69c50
	void Show Current Role();// 0x1d69c50
	void Delay Display Role Info(SQRoleSettings* RoleReference);// 0x1d69c50
	void Draw Role Info();// 0x1d69c50
	void Set Role(SQRoleSettings* New Role);// 0x1d69c50
	void OnTick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void ExecuteUbergraph_W_RolePreview(int EntryPoint, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, SQRoleSettings* K2Node_CustomEvent_RoleReference, bool CallFunc_NotEqual_ObjectObject_ReturnValue, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, SQRoleSettings* K2Node_CustomEvent_New_Role, const SQAvailabilityState_Role[] K2Node_CustomEvent_In_Player_Role_States, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void OnRoleSet__DelegateSignature(SQRoleSettings* Role Reference);// 0x1d69c50

--------------------------------
Class: W_RoleQuickList_C.W_RoleList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2d0, Size: 1]
	Border* UnavailabilityHeader;//[Offset: 0x2d8, Size: 1]
	VerticalBox* VerticalBox_RoleGroups;//[Offset: 0x2e0, Size: 1]
	Image*[] SeparatorList;//[Offset: 0x2e8, Size: 1]
	MulticastInlineDelegateProperty OnMouseEntered;//[Size: 1]
	MulticastInlineDelegateProperty OnMouseLeft;//[Size: 1]
	bool bMouseEntered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x318, Size: 1]
	bool bSubrolesOpen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x319, Size: 1]
	TimerHandle MouseLeaveTimerHandle;//[Offset: 0x320, Size: 1]
	void AddSeparator(SlateChildSize K2Node_MakeStruct_SlateChildSize, Image* CallFunc_SpawnObject_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void CreateGroupWidgets(out W_RoleGroup_C*[] Out RoleGroup, out bool Out Success, SQRoleGroupingStrategy[] L_Categories, W_RoleGroup_C*[] L_Role_Groups, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, SQRoleGroupingStrategy CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetRoleCategories_OutSuccess, SQRoleGroupingStrategy[] CallFunc_TryGetRoleCategories_OutRoleCategories, W_RoleQuickGroup_C* CallFunc_Create_ReturnValue, int CallFunc_Array_Add_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);// 0x1d69c50
	void ClearGroups();// 0x1d69c50
	void OnTick(out const SQAvailabilityState_Role[] In Player Role States);// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void OnTimerMouseLeave();// 0x1d69c50
	void ExecuteUbergraph_W_RoleQuickList(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Array_Index_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Is_Deploy_Role_Unavailable_Unavailable, const SQAvailabilityState_Role[] K2Node_Event_In_Player_Role_States, Image* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Geometry K2Node_Event_MyGeometry, const PointerEvent K2Node_Event_MouseEvent, const PointerEvent K2Node_Event_MouseEvent, W_SubRoleOptions_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool Temp_bool_Variable, enum K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsHovered_ReturnValue);// 0x1d69c50
	void OnMouseLeft__DelegateSignature();// 0x1d69c50
	void OnMouseEntered__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_RoleQuickGroup_C.W_RoleGroup_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x380, Size: 1]
	Image* Image_Group;//[Offset: 0x388, Size: 1]
	WrapBox* WrapBox_Roles;//[Offset: 0x390, Size: 1]
	Texture2D* Group Icon;//[Offset: 0x398, Size: 1]
	void Get Role Panel(out PanelWidget* RoleBox);// 0x1d69c50
	void SetupUI();// 0x1d69c50
	void ExecuteUbergraph_W_RoleQuickGroup(int EntryPoint);// 0x1d69c50

--------------------------------
Class: W_TeamSelect_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* arrowleft;//[Offset: 0x268, Size: 1]
	Image* ArrowRight;//[Offset: 0x270, Size: 1]
	Border* Border_ArrowLeft;//[Offset: 0x278, Size: 1]
	Border* Border_ArrowRight;//[Offset: 0x280, Size: 1]
	Button* Centre;//[Offset: 0x288, Size: 1]
	Button* LeftHover;//[Offset: 0x290, Size: 1]
	Image* Line;//[Offset: 0x298, Size: 1]
	W_FlagMap_C* Map_C;//[Offset: 0x2a0, Size: 1]
	MainMenu_Button_C* Nav_Map;//[Offset: 0x2a8, Size: 1]
	MainMenu_Button_C* Nav_Server;//[Offset: 0x2b0, Size: 1]
	Button* RightHover;//[Offset: 0x2b8, Size: 1]
	SizeBox* SB_Left;//[Offset: 0x2c0, Size: 1]
	SizeBox* SB_Right;//[Offset: 0x2c8, Size: 1]
	SQRichTextBlock* SQRichTextBlock;//[Offset: 0x2d0, Size: 1]
	TextBlock* TB_MapLore;//[Offset: 0x2d8, Size: 1]
	W_TeamInfo_C* TeamInfo;//[Offset: 0x2e0, Size: 1]
	W_TeamInfo_C* TeamInfo;//[Offset: 0x2e8, Size: 1]
	HorizontalBox* TeamPanel;//[Offset: 0x2f0, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2f8, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x300, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Info;//[Offset: 0x308, Size: 1]
	WidgetSwitcher* WS_ModeInfo;//[Offset: 0x310, Size: 1]
	MulticastInlineDelegateProperty Team Button Pressed;//[Size: 1]
	SQHUD* SQ HUD REF;//[Offset: 0x328, Size: 1]
	FText Cached Server Message;//[Offset: 0x330, Size: 1]
	bool Selection Enabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x348, Size: 1]
	float Right Target;//[Offset: 0x34c, Size: 1]
	float Left Target;//[Offset: 0x350, Size: 1]
	void DisplayMessageOfTheDay(bool Temp_bool_Variable, FText Temp_text_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Set Arrow Visibility(bool Arrow left, bool Arrow Right, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum K2Node_Select_Default, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void DisplayMapInfos(bool SmallFlag2, bool SmallFlag1, bool IsDefault, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry, bool CallFunc_TryGetGameModeEntry_Success, SQGameModeEntry CallFunc_TryGetGameModeEntry_GameModeEntry, class Object CallFunc_LoadClassAsset_Blocking_ReturnValue, class UserWidget K2Node_ClassDynamicCast_AsUser_Widget, bool K2Node_ClassDynamicCast_bSuccess, UserWidget* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, WidgetSwitcherSlot* K2Node_DynamicCast_AsWidget_Switcher_Slot, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	FText BIND - Map and Mode(SQGameState* CallFunc_GetSquadGameState_Return_Value, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText BIND - Server Message();// 0x1d69c50
	void BndEvt__TeamInfo_1_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(SQTeamState* Team);// 0x1d69c50
	void BndEvt__TeamInfo_2_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(SQTeamState* Team);// 0x1d69c50
	void BndEvt__Nav_Map_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Nav_Server_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Set Navigation(Object* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh();// 0x1d69c50
	void BndEvt__LeftHover_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__RightHover_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Centre_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Set Box Widths(float Left, float Right);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Reset Hover();// 0x1d69c50
	void ExecuteUbergraph_W_TeamSelect(int EntryPoint, int Temp_int_Array_Index_Variable, SQTeamState* K2Node_ComponentBoundEvent_Team, SQTeamState* K2Node_ComponentBoundEvent_Team, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, Object* K2Node_CustomEvent_Button, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, MainMenu_Button_C*[] K2Node_MakeArray_Array, MainMenu_Button_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, float K2Node_CustomEvent_Left, float K2Node_CustomEvent_Right, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, SlateChildSize K2Node_MakeStruct_SlateChildSize, float CallFunc_FInterpTo_ReturnValue, SlateChildSize K2Node_MakeStruct_SlateChildSize, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Team Button Pressed__DelegateSignature(SQTeamState* New Team);// 0x1d69c50

--------------------------------
Class: WidgetSwitcherSlot.PanelSlot.Visual.Object
	Margin Padding;//[Offset: 0x40, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x50, Size: 1]
	byte VerticalAlignment;//[Offset: 0x51, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x340e6e0
	void SetPadding(Margin InPadding);// 0x33ef950
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x340e2b0

--------------------------------
Class: W_FlagMap_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Image;//[Offset: 0x268, Size: 1]
	RelativeCanvasPanel* RelativeCanvasPanel;//[Offset: 0x270, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x278, Size: 1]
	float Map Size;//[Offset: 0x280, Size: 1]
	SQMapWidgetBase* Map Base;//[Offset: 0x288, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_FlagMap(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess, BP_CaptureZoneMain_C*[] CallFunc_GetAllActorsOfClass_OutActors, BP_CaptureZoneMain_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_TeamSelectFlagMarker_C* CallFunc_Create_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_CaptureZoneMain_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	SphereComponent* Sphere;//[Offset: 0x230, Size: 1]
	SQCaptureZoneResourceComponent* SQCaptureZoneResource;//[Offset: 0x238, Size: 1]
	SQCaptureZoneComponent* SQCaptureZone;//[Offset: 0x240, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x248, Size: 1]
	int GetTeamId(int CallFunc_Conv_ByteToInt_ReturnValue);// 0x1d69c50
	void OnTeamChange(int PreviousTeam);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_CaptureZoneMain(int EntryPoint, int K2Node_Event_PreviousTeam);// 0x1d69c50

--------------------------------
Class: SQCaptureZoneResourceComponent.ActorComponent.Object

--------------------------------
Class: W_TeamSelectFlagMarker_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* FlagImage;//[Offset: 0x268, Size: 1]
	TextBlock* FlagName;//[Offset: 0x270, Size: 1]
	MulticastInlineDelegateProperty CloseTooltip;//[Size: 1]
	SQCaptureZoneComponent* CaptureZone;//[Offset: 0x288, Size: 1]
	void Update flag text();// 0x1d69c50
	void UpdateFlagImage(class SQTeamInfo L Info Class, int CallFunc_Conv_ByteToInt_ReturnValue, BP_SQFaction_C* CallFunc_TryGetCurrentFaction_OutFaction, bool CallFunc_TryGetCurrentFaction_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_TeamSelectFlagMarker(int EntryPoint);// 0x1d69c50
	void CloseTooltip__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQTeamInfo.Object
	FString ShortName;//[Offset: 0x28, Size: 1]
	FString Name;//[Offset: 0x38, Size: 1]
	FText Description;//[Offset: 0x48, Size: 1]
	FText CommanderRequirementsText;//[Offset: 0x60, Size: 1]
	bool bBuddyRallyPointEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x78, Size: 1]
	class SQSoldier* SoldierClass;//[Offset: 0x80, Size: 1]
	StaticMesh* RallyPointMesh;//[Offset: 0x88, Size: 1]
	SQRoleSettings*[] Roles;//[Offset: 0x90, Size: 1]
	SQRoleGroupLimit[] GroupLimits;//[Offset: 0xa0, Size: 1]
	SQDeployableLimit[] DeployableFOBLimits;//[Offset: 0xb0, Size: 1]
	SQRoleSettings* DefaultRole;//[Offset: 0xc0, Size: 1]
	SQRoleSettings* LeaveSquadRole;//[Offset: 0xc8, Size: 1]
	Texture2D* MapFlag;//[Offset: 0xd0, Size: 1]
	Texture2D* HudFlag;//[Offset: 0xd8, Size: 1]
	Texture2D* HudBadge;//[Offset: 0xe0, Size: 1]
	Texture2D* TeamImage;//[Offset: 0xe8, Size: 1]
	SQCommanderSounds CommanderSoundsList;//[Offset: 0xf0, Size: 1]
	SQTeamEventSounds TeamEventSoundsList;//[Offset: 0x230, Size: 1]
	SQMedicCalls MedicCall;//[Offset: 0x2f8, Size: 1]
	SQObjectiveSounds[] ObjectiveSoundsList;//[Offset: 0x370, Size: 1]

--------------------------------
Class: SQRoleGroupLimit
	enum RoleGroup;//[Offset: 0x0, Size: 1]
	int MinLimit;//[Offset: 0x4, Size: 1]
	int MaxLimit;//[Offset: 0x8, Size: 1]
	int SquadMembersPerSlotIncrease;//[Offset: 0xc, Size: 1]
	int SlotsPerIncrease;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQDeployableLimit
	class SQDeployable* DeployableClass;//[Offset: 0x0, Size: 1]
	byte MaxPerFob;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQRichTextBlock.Widget.Visual.Object
	MulticastInlineDelegateProperty OnHyperLinkClicked;//[Size: 1]
	FText Text;//[Offset: 0x118, Size: 1]
	delegate TextDelegate;//[Offset: 0x130, Size: 1]
	SlateFontInfo Font;//[Offset: 0x140, Size: 1]
	LinearColor Color;//[Offset: 0x198, Size: 1]
	SlateFontInfo HyperlinkFont;//[Offset: 0x1a8, Size: 1]
	LinearColor HyperlinkColor;//[Offset: 0x200, Size: 1]
	byte Justification;//[Offset: 0x210, Size: 1]
	bool AutoWrapText;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x211, Size: 1]
	float WrapTextAt;//[Offset: 0x214, Size: 1]
	Margin Margin;//[Offset: 0x218, Size: 1]
	float LineHeightPercentage;//[Offset: 0x228, Size: 1]
	FText TextWithMarkup;//[Offset: 0x230, Size: 1]

--------------------------------
Class: W_TeamInfo_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BounceArrow;//[Offset: 0x268, Size: 1]
	WidgetAnimation* Alpha;//[Offset: 0x270, Size: 1]
	Image* Badge;//[Offset: 0x278, Size: 1]
	Button* ButtonSelect;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	Border* Info;//[Offset: 0x290, Size: 1]
	Image* LargeFlag;//[Offset: 0x298, Size: 1]
	ScaleBox* ScaleBox_Arrow;//[Offset: 0x2a0, Size: 1]
	ScaleBox* ScaleBox_TeamImage;//[Offset: 0x2a8, Size: 1]
	Border* SelectedBorder;//[Offset: 0x2b0, Size: 1]
	SizeBox* Size_Blurb;//[Offset: 0x2b8, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2c0, Size: 1]
	SizeBox* SizeBox_SmallFlag;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_Division;//[Offset: 0x2d0, Size: 1]
	TextBlock* TB_Players;//[Offset: 0x2d8, Size: 1]
	TextBlock* TB_TeamName;//[Offset: 0x2e0, Size: 1]
	TextBlock* TB_Text;//[Offset: 0x2e8, Size: 1]
	TextBlock* TeamDescription;//[Offset: 0x2f0, Size: 1]
	Image* TeamImage;//[Offset: 0x2f8, Size: 1]
	int TeamIndex;//[Offset: 0x300, Size: 1]
	MulticastInlineDelegateProperty Clicked;//[Size: 1]
	bool Selected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x318, Size: 1]
	MaterialInstanceDynamic* MID_RendTex;//[Offset: 0x320, Size: 1]
	BP_R2T_Soldier_C* R2T Blueprint;//[Offset: 0x328, Size: 1]
	MaterialInstanceDynamic* MID_Flag;//[Offset: 0x330, Size: 1]
	Image* TeamIcon;//[Offset: 0x338, Size: 1]
	SQTeamState* Team;//[Offset: 0x340, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x348, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x350, Size: 1]
	BP_SQFactionSetup_C* Faction;//[Offset: 0x358, Size: 1]
	void GetAssociatedTeamState(out SQTeamState* Output, bool CallFunc_IsValid_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue, SQTeamState* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	bool Same Team(int CallFunc_TryGetLocalPlayerTeamId_OutTeamId, bool CallFunc_TryGetLocalPlayerTeamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Update Button Color(bool CallFunc_Same_Team_ReturnValue, bool CallFunc_IsHovered_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void Update Button(bool L Allow Switch, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_Same_Team_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool Temp_bool_Variable, float CallFunc_GetGameTimeInSeconds_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, int CallFunc_FFloor_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_LessEqual_IntInt_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_BooleanOR_ReturnValue, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_Are_Teams_Unbalanced_bUnbalanced, FText CallFunc_Format_ReturnValue, SQGameSession* CallFunc_GetSquadGameSession_ReturnValue, FText K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Are Teams Unbalanced(out bool bUnbalanced, bool L Prevent Switch, int L Num Diff, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, SQGameSession* CallFunc_GetSquadGameSession_ReturnValue, bool CallFunc_IsValid_ReturnValue, int K2Node_Select_Default, SQGameState* CallFunc_GetSquadGameState_Return_Value, SQTeamState* CallFunc_Array_Get_Item, SQTeamState* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	void Init Team(BP_SQFactionSetup_C* FactionSetup, SoftObjectPath Flag, byte current Faction, BP_SQLevel_C* CallFunc_TryGetCurrentLevel_OutLevel, bool CallFunc_TryGetCurrentLevel_ReturnValue, bool CallFunc_TryGetFactionSetupEntry_Success, SQFactionSetupEntry CallFunc_TryGetFactionSetupEntry_FactionSetupEntry, bool CallFunc_IsValid_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, Texture2D*[] CallFunc_Map_Values_Values, Texture2D* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, Texture2D* CallFunc_Array_Get_Item, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, Object* CallFunc_LoadAsset_Blocking_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__ButtonSelect_K2Node_ComponentBoundEvent_229_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Get Team Info();// 0x1d69c50
	void Set Minimised(bool Minimised);// 0x1d69c50
	void Update Widget();// 0x1d69c50
	void Timer Enable Button();// 0x1d69c50
	void Disable Button Temporarily();// 0x1d69c50
	void ExecuteUbergraph_W_TeamInfo(int EntryPoint, enum Temp_byte_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte K2Node_Select_Default, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte K2Node_Select_Default, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, byte K2Node_Select_Default, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool K2Node_Event_IsDesignTime, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, VerticalBoxSlot* CallFunc_SlotAsVerticalBoxSlot_ReturnValue, enum Temp_byte_Variable, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool Temp_bool_Variable, bool K2Node_CustomEvent_Minimised, BorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, enum K2Node_Select_Default, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Same_Team_ReturnValue, BP_SQFactionSetup_C* CallFunc_TryGetCurrentFactionSetup_OutFactionSetup, bool CallFunc_TryGetCurrentFactionSetup_ReturnValue, LinearColor K2Node_Select_Default, SQTeamState* CallFunc_GetAssociatedTeamState_Output, float K2Node_Select_Default, bool CallFunc_Same_Team_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, enum K2Node_Select_Default, FText K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, SQTeamState* CallFunc_GetAssociatedTeamState_Output, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQTeamState* CallFunc_GetAssociatedTeamState_Output, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Clicked__DelegateSignature(SQTeamState* Team);// 0x1d69c50

--------------------------------
Class: SQGameSession.GameSession.Info.Actor.Object
	int NumPlayersDiffForTeamChanges;//[Offset: 0x3c8, Size: 1]
	bool bAllowTeamChanges;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3cc, Size: 1]
	bool bPreventTeamChangeIfUnbalanced;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3cd, Size: 1]
	SQConfig* SquadConfig;//[Offset: 0x4a8, Size: 1]
	void SetServerPassword(FString ServerPassword);// 0xd9a310
	void SetPublicQueueLimit(int PublicQueueLimit);// 0xd9a170
	void SetNumReservedSlots(int NumReserved);// 0xd9a050
	void SetMaxNumPlayers(int NumPlayers, bool bIgnoreRestrictions);// 0xd99f00
	bool Logout();// 0xd994c0
	bool Login(FString LoginName, FString InPassword);// 0xd99320
	bool IsLoginBusy();// 0xd99070
	bool IsLoggedIn();// 0xd99160
	SQConfig* GetSquadConfig();// 0xd98d40
	FString GetLastLoginError();// 0xd98900

--------------------------------
Class: W_PlayerRankAndRole_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_Main;//[Offset: 0x268, Size: 1]
	SizeBox* FTCircle;//[Offset: 0x270, Size: 1]
	Image* IconRank;//[Offset: 0x278, Size: 1]
	Image* IconRole;//[Offset: 0x280, Size: 1]
	Image* IconSquad;//[Offset: 0x288, Size: 1]
	WidgetSwitcher* IconSwitch;//[Offset: 0x290, Size: 1]
	SizeBox* SQsquare;//[Offset: 0x298, Size: 1]
	Border* SquadColorBorder;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_FT;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_SquadID;//[Offset: 0x2b0, Size: 1]
	TextBlock* TBRoleName;//[Offset: 0x2b8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2c0, Size: 1]
	SQRoleSettings* Display Role;//[Offset: 0x2c8, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_PlayerRankAndRole(int EntryPoint, bool Temp_bool_Variable, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, Texture2D* Temp_object_Variable, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, Texture2D* Temp_object_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, Texture2D* K2Node_Select_Default, FString CallFunc_GetAlphabetLetterString_ReturnValue, int CallFunc_Clamp_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_IsAlive_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_DeploymentTutorial_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* FadeOut;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_TeamSelect1;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* ButtonRoleNext;//[Offset: 0x278, Size: 1]
	CanvasPanel* End;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	Image* Image;//[Offset: 0x290, Size: 1]
	Image* Image;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	Image* Image;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	Image* Image;//[Offset: 0x2c0, Size: 1]
	Image* Image;//[Offset: 0x2c8, Size: 1]
	Image* Image;//[Offset: 0x2d0, Size: 1]
	Image* Image;//[Offset: 0x2d8, Size: 1]
	Image* Image;//[Offset: 0x2e0, Size: 1]
	Image* Image;//[Offset: 0x2e8, Size: 1]
	Image* Image;//[Offset: 0x2f0, Size: 1]
	Image* Image;//[Offset: 0x2f8, Size: 1]
	Image* Image;//[Offset: 0x300, Size: 1]
	Image* Image;//[Offset: 0x308, Size: 1]
	Image* Image;//[Offset: 0x310, Size: 1]
	Image* Image;//[Offset: 0x318, Size: 1]
	Image* Image;//[Offset: 0x320, Size: 1]
	Image* Image;//[Offset: 0x328, Size: 1]
	Image* Image;//[Offset: 0x330, Size: 1]
	Image* Image;//[Offset: 0x338, Size: 1]
	Image* Image;//[Offset: 0x340, Size: 1]
	Image* Image;//[Offset: 0x348, Size: 1]
	Image* Image;//[Offset: 0x350, Size: 1]
	Image* Image;//[Offset: 0x358, Size: 1]
	CanvasPanel* MapScreen;//[Offset: 0x360, Size: 1]
	MainMenu_Button_C* Show;//[Offset: 0x368, Size: 1]
	MainMenu_Button_C* Skip;//[Offset: 0x370, Size: 1]
	Border* SkipBorder;//[Offset: 0x378, Size: 1]
	VerticalBox* SkipBox;//[Offset: 0x380, Size: 1]
	CanvasPanel* SquadSelect;//[Offset: 0x388, Size: 1]
	CanvasPanel* SquadSelect;//[Offset: 0x390, Size: 1]
	CanvasPanel* TeamSelect;//[Offset: 0x398, Size: 1]
	CanvasPanel* TeamSelect;//[Offset: 0x3a0, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x3a8, Size: 1]
	SaveData_UI_C* Current Save;//[Offset: 0x3b0, Size: 1]
	W_DeploymentMenu_C* Deployment Menu;//[Offset: 0x3b8, Size: 1]
	bool Check Squad;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3c0, Size: 1]
	bool Check Spawn Selected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3c1, Size: 1]
	void Construct();// 0x1d69c50
	void BndEvt__Show_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Skip_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_TeamSelect1_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Squad Select 1(SQTeamState* Team);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Squad Select 2();// 0x1d69c50
	void BndEvt__ButtonRoleNext_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void End of Tutorial 1();// 0x1d69c50
	void End Tutorial();// 0x1d69c50
	void ExecuteUbergraph_W_DeploymentTutorial(int EntryPoint, bool Temp_bool_IsClosed_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SQTeamState* K2Node_CustomEvent_Team, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool Temp_bool_Has_Been_Initd_Variable, delegate K2Node_CreateDelegate_OutputDelegate, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQEditorPlaySettings.DeveloperSettings.Object
	class Pawn* DefaultPawnClassOverride;//[Offset: 0x38, Size: 1]
	class SQEquipableItem* DefaultWeaponClassOverride;//[Offset: 0x60, Size: 1]
	SQLayer* LayerEditorOverride;//[Offset: 0x88, Size: 1]
	bool PreventDataLoading;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb0, Size: 1]
	SQServerSettings EditorServerSettings;//[Offset: 0xb8, Size: 1]
	bool EditorIgnoreStartupTime;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	int RaasDefaultSeed;//[Offset: 0x294, Size: 1]
	int StartTeamOverride;//[Offset: 0x298, Size: 1]
	bool ForceDirectSpawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29c, Size: 1]
	bool CleanNullFactionSetupInEditor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29d, Size: 1]
	bool CanDriverSwitchTo3rdPerson;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29e, Size: 1]
	bool DeployablePlacementAlwaysValid;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29f, Size: 1]
	bool ForceOutOfBoundsKillDisabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a0, Size: 1]
	bool ForcePlayerNotAdminInEditor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a1, Size: 1]
	bool ForcePlayerNotDevInEditor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a2, Size: 1]
	bool ForcePlayerNotQAInEditor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a3, Size: 1]
	bool ForcePlayerNotMemberInEditor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a4, Size: 1]
	SQLayer* EditorActiveLayer;//[Offset: 0x2a8, Size: 1]
	SQLevel* EditorActiveLevel;//[Offset: 0x2b0, Size: 1]
	<FName,SQLevel*> AvailableLevels;//[Offset: 0x2b8, Size: 1]
	<FName,SQLayer*> AvailableLayers;//[Offset: 0x308, Size: 1]
	<FName,SQFaction*> AvailableFactions;//[Offset: 0x358, Size: 1]
	<FName,SQFactionSetup*> AvailableFactionSetups;//[Offset: 0x3a8, Size: 1]
	bool TryGetEditorSQLevel(out SQLevel* OutEditorLevel);// 0xd834c0
	bool TryGetEditorSQLayer(out SQLayer* OutEditorLayer);// 0xd834c0
	bool TryGetEditorFactionSetup(const enum InTeam, out SQFactionSetup* OutFactionSetup);// 0xd833e0
	static SQEditorPlaySettings* GetEditorPlaySettings();// 0xd821f0

--------------------------------
Class: MainMenuScreen_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* AudioApply;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* AudioDefaults;//[Offset: 0x270, Size: 1]
	AudioWindow_C* AudioSettings;//[Offset: 0x278, Size: 1]
	Image* BlockInput;//[Offset: 0x280, Size: 1]
	Button* Button_BackToMain;//[Offset: 0x288, Size: 1]
	Button* Button_HideHUD;//[Offset: 0x290, Size: 1]
	MainMenu_Button_C* Button_ModsRefresh;//[Offset: 0x298, Size: 1]
	MainMenu_Button_C* ButtonControlsPresets;//[Offset: 0x2a0, Size: 1]
	MainMenu_Button_C* ButtonCREDITS;//[Offset: 0x2a8, Size: 1]
	MainMenu_Button_C* ButtonCUSTOMIZE;//[Offset: 0x2b0, Size: 1]
	MainMenu_Button_C* ButtonCUSTOMSERVERS;//[Offset: 0x2b8, Size: 1]
	MainMenu_Button_C* ButtonEXIT;//[Offset: 0x2c0, Size: 1]
	MainMenu_Button_C* ButtonFRIENDS;//[Offset: 0x2c8, Size: 1]
	MainMenu_Button_C* ButtonRefreshAllServers;//[Offset: 0x2d0, Size: 1]
	MainMenu_Button_C* ButtonRefreshFriends;//[Offset: 0x2d8, Size: 1]
	MainMenu_Button_C* ButtonResetFilters;//[Offset: 0x2e0, Size: 1]
	MainMenu_Button_C* ButtonRestoreDefaultControls;//[Offset: 0x2e8, Size: 1]
	MainMenu_Button_C* ButtonSERVERBROWSER;//[Offset: 0x2f0, Size: 1]
	MainMenu_Button_C* ButtonSETTINGS;//[Offset: 0x2f8, Size: 1]
	MainMenu_Button_C* ButtonSettingsAUDIO;//[Offset: 0x300, Size: 1]
	MainMenu_Button_C* ButtonSettingsCONTROLS;//[Offset: 0x308, Size: 1]
	MainMenu_Button_C* ButtonSettingsGAME;//[Offset: 0x310, Size: 1]
	MainMenu_Button_C* ButtonSettingsGRAPHICS;//[Offset: 0x318, Size: 1]
	MainMenu_Button_C* ButtonSettingsREPLAYS;//[Offset: 0x320, Size: 1]
	MainMenu_Button_C* ButtonSettingsSTEAM;//[Offset: 0x328, Size: 1]
	MainMenu_Button_C* ButtonSettingsUI;//[Offset: 0x330, Size: 1]
	MainMenu_Button_C* ButtonSTORE;//[Offset: 0x338, Size: 1]
	MainMenu_Button_C* ButtonTRAIN;//[Offset: 0x340, Size: 1]
	CanvasPanel* CanvasPanel;//[Offset: 0x348, Size: 1]
	HorizontalBox* Context_Audio;//[Offset: 0x350, Size: 1]
	HorizontalBox* Context_Controls;//[Offset: 0x358, Size: 1]
	HorizontalBox* Context_FriendsList;//[Offset: 0x360, Size: 1]
	HorizontalBox* Context_GameSettings;//[Offset: 0x368, Size: 1]
	HorizontalBox* Context_Graphics;//[Offset: 0x370, Size: 1]
	HorizontalBox* Context_Mods;//[Offset: 0x378, Size: 1]
	HorizontalBox* Context_Server;//[Offset: 0x380, Size: 1]
	HorizontalBox* Context_SteamItems;//[Offset: 0x388, Size: 1]
	ControlsWindow_C* ControlsSettings;//[Offset: 0x390, Size: 1]
	CreditsWindow_C* CreditsWindow;//[Offset: 0x398, Size: 1]
	ServerBrowserWindow_C* CustomBrowser;//[Offset: 0x3a0, Size: 1]
	W_CustomizeScreen_C* CustomizeScreen;//[Offset: 0x3a8, Size: 1]
	ServerBrowserWindow_C* DedicatedBrowser;//[Offset: 0x3b0, Size: 1]
	SizeBox* DisconnectWindow;//[Offset: 0x3b8, Size: 1]
	SizeBox* ExitWindow;//[Offset: 0x3c0, Size: 1]
	Image* Eye;//[Offset: 0x3c8, Size: 1]
	FriendsBrowserWindow_C* FriendsBrowserWindow;//[Offset: 0x3d0, Size: 1]
	MainMenu_Button_C* GameApply;//[Offset: 0x3d8, Size: 1]
	MainMenu_Button_C* GameDebug;//[Offset: 0x3e0, Size: 1]
	MainMenu_Button_C* GameDefaults;//[Offset: 0x3e8, Size: 1]
	MainMenu_Button_C* GameReset;//[Offset: 0x3f0, Size: 1]
	GameSettingsWindow_C* GameSettings;//[Offset: 0x3f8, Size: 1]
	MainMenu_Button_C* GraphicsApply;//[Offset: 0x400, Size: 1]
	MainMenu_Button_C* GraphicsDefaults;//[Offset: 0x408, Size: 1]
	GraphicsWindow_C* GraphicsSettings;//[Offset: 0x410, Size: 1]
	Image* HideHUDBar;//[Offset: 0x418, Size: 1]
	Image* Image;//[Offset: 0x420, Size: 1]
	Image* Image;//[Offset: 0x428, Size: 1]
	Image* Image;//[Offset: 0x430, Size: 1]
	Image* Image;//[Offset: 0x438, Size: 1]
	Image* Image_SteamOnline;//[Offset: 0x440, Size: 1]
	Border* InGameBlackoutBG;//[Offset: 0x448, Size: 1]
	InputCapture_C* InputCaptureWidget;//[Offset: 0x450, Size: 1]
	InvalidPasswordWidget_C* InvalidPassword;//[Offset: 0x458, Size: 1]
	Throbber* JoinThrobber;//[Offset: 0x460, Size: 1]
	CanvasPanel* LandingCanvas;//[Offset: 0x468, Size: 1]
	ChallengeWindow_C* LeaveQueueConfirm;//[Offset: 0x470, Size: 1]
	Image* LineBottom;//[Offset: 0x478, Size: 1]
	Image* LineTop;//[Offset: 0x480, Size: 1]
	MenuAnchor* MenuAnchor;//[Offset: 0x488, Size: 1]
	ModBrowser_C* ModBrowser;//[Offset: 0x490, Size: 1]
	ModBrowser_C* ModBrowser;//[Offset: 0x498, Size: 1]
	MusicPlayer_C* MusicPlayer;//[Offset: 0x4a0, Size: 1]
	VerticalBox* NavigationHorizontalBox;//[Offset: 0x4a8, Size: 1]
	TextBlock* PendingServerText;//[Offset: 0x4b0, Size: 1]
	ChallengeWindow_C* PopupDisconnect;//[Offset: 0x4b8, Size: 1]
	ChallengeWindow_C* PopupExit;//[Offset: 0x4c0, Size: 1]
	ChallengeWindow_C* PopupLocalGame;//[Offset: 0x4c8, Size: 1]
	W_PromoNewsWidget_C* PromoNewsWidget;//[Offset: 0x4d0, Size: 1]
	ChallengeWindow_C* ResetDataConfirm;//[Offset: 0x4d8, Size: 1]
	WidgetSwitcher* SecondaryNavSectionSwitcher;//[Offset: 0x4e0, Size: 1]
	ChallengeWindow_C* ServerConfirm;//[Offset: 0x4e8, Size: 1]
	Border* ServerFriendsWindow;//[Offset: 0x4f0, Size: 1]
	Overlay* ServerOverlay;//[Offset: 0x4f8, Size: 1]
	WidgetSwitcher* ServerSwitch;//[Offset: 0x500, Size: 1]
	HorizontalBox* SettingsNav;//[Offset: 0x508, Size: 1]
	Border* SettingsPanel;//[Offset: 0x510, Size: 1]
	WidgetSwitcher* SettingsSwitcher;//[Offset: 0x518, Size: 1]
	Spacer* Spacer_BottomContext;//[Offset: 0x520, Size: 1]
	Spacer* Spacer_SecNav;//[Offset: 0x528, Size: 1]
	SQNetInfoWidgetSlot_C* SQNetInfoWidgetSlot;//[Offset: 0x530, Size: 1]
	SizeBox* StartLocalWindow;//[Offset: 0x538, Size: 1]
	MainMenu_Button_C* SteamInventoryApply;//[Offset: 0x540, Size: 1]
	MainMenu_Button_C* SteamInventoryDefaults;//[Offset: 0x548, Size: 1]
	SteamInventorySettings_C* SteamInventorySettings;//[Offset: 0x550, Size: 1]
	W_StoreScreen_C* StoreScreen;//[Offset: 0x558, Size: 1]
	WidgetSwitcher* Switcher_BottomContext;//[Offset: 0x560, Size: 1]
	WidgetSwitcher* SwitcherMain;//[Offset: 0x568, Size: 1]
	WidgetSwitcher* SwitcherTitle;//[Offset: 0x570, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x578, Size: 1]
	SizeBox* TrainingWindow;//[Offset: 0x580, Size: 1]
	TravelQueueWidget_C* TravelQueueWidget;//[Offset: 0x588, Size: 1]
	LevelSelector_C* Tutorial_LevelSelector;//[Offset: 0x590, Size: 1]
	UISettingsWindow_C* UISettings;//[Offset: 0x598, Size: 1]
	VersionWidget_C* VersionWidget;//[Offset: 0x5a0, Size: 1]
	W_Filters_C* W_Filters;//[Offset: 0x5a8, Size: 1]
	W_Training_LevelList_C* W_LevelList;//[Offset: 0x5b0, Size: 1]
	W_ReplayBrowser_C* W_ReplayBrowser;//[Offset: 0x5b8, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Pending;//[Offset: 0x5c0, Size: 1]
	WidgetSwitcher* WidgetSwitcher_SteamStatus;//[Offset: 0x5c8, Size: 1]
	float FadeProgress;//[Offset: 0x5d0, Size: 1]
	bool bFading;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d4, Size: 1]
	bool bWantsToBeVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d5, Size: 1]
	bool bCheckUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d6, Size: 1]
	bool bShowServerConfirmation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5d7, Size: 1]
	ServerBrowserWindow_C* Current Browser;//[Offset: 0x5d8, Size: 1]
	MainMenu_ExitButtons_C* ExitButtons;//[Offset: 0x5e0, Size: 1]
	bool Is Browsing Dedicated;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5e8, Size: 1]
	MenuCamPawn_C* My Menu Cam Pawn;//[Offset: 0x5f0, Size: 1]
	bool Show Leave Queue Challenge;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5f8, Size: 1]
	BlueprintSessionResult Cached Session;//[Offset: 0x600, Size: 1]
	bool Session Cached;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x708, Size: 1]
	bool Block Input Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x709, Size: 1]
	bool Is In Queue;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x70a, Size: 1]
	bool bHideHud;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x70b, Size: 1]
	MainMenu_Button_C* ButtonPresets;//[Offset: 0x710, Size: 1]
	W_InputBackup_PopUp_C* KeybindsPresets;//[Offset: 0x718, Size: 1]
	void UpdateCustomizeListings(bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, Widget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQEmoteItemWidget* K2Node_DynamicCast_AsSQEmote_Item_Widget, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQEmotesData* CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void UpdateStoreListings(bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, ODKBazaarBundle* CallFunc_Array_Get_Item, ODKBazaarBundle* CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void RefreshPresetName(bool Temp_bool_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FString CallFunc_Split_LeftS, FString CallFunc_Split_RightS, bool CallFunc_Split_ReturnValue, FString K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void HideServerMessageConfirmation(SQGameInstance* SQGameInstance);// 0x1d69c50
	void Setup Pending Queue Screen(SQGameInstance* instance, FString CallFunc_GetMapName_ReturnValue, FString CallFunc_GetGameMode_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FString CallFunc_GetServerName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, EventReply CallFunc_Handled_ReturnValue, Key CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue);// 0x1d69c50
	void Get Main Menu(out bool Success, out BP_MainMenu_PC_C* Menu PC, PlayerController* CallFunc_GetPlayerController_ReturnValue, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Hide Back Button(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, enum K2Node_Select_Default);// 0x1d69c50
	Widget* Get_Button_HideHUD_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Toggle Game HUD(bool L Is Visible, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, LinearColor K2Node_Select_Default, bool CallFunc_IsVisible_ReturnValue, LinearColor K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	Widget* Get_GameDebug_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_GameReset_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Close Menu(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Check Server Issues(bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Leave Queue Challenge(bool Cached Session?, BlueprintSessionResult Cached Session);// 0x1d69c50
	void Enable Refresh Servers(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Get Menu Cam(Pawn* CallFunc_GetPlayerPawn_ReturnValue, MenuCamPawn_C* K2Node_DynamicCast_AsMenu_Cam_Pawn, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void On Join Queue();// 0x1d69c50
	void Hide Queue Info();// 0x1d69c50
	void Start Training();// 0x1d69c50
	enum Get_StopInputImage_Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void On Leave Queue(bool New Server, BlueprintSessionResult Sesh, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	enum Get_LeaveQueueConfirm_Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void Remove Exit Buttons(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Set Context Widgets(Widget* Context Widget, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, Widget* K2Node_Select_Default);// 0x1d69c50
	void Set Visible Widgets(Widget* Main Widget, Widget* Nav Widget, Widget* Bottom context widget, bool Selected, bool Temp_bool_Variable, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, Widget* K2Node_Select_Default, Widget* K2Node_Select_Default);// 0x1d69c50
	void Clear Menu(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	enum Get_ServerMessageConfirmation_Visibility(GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);// 0x1d69c50
	enum CustomGamesButtonVisibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_ServerLicensingNoticeNeeded_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	enum InfoWidgetVisibility(bool bShouldHide, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, enum K2Node_Select_Default);// 0x1d69c50
	enum Get_DISCONNECT_Visiblity(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, enum K2Node_Select_Default);// 0x1d69c50
	enum Get_Background_Image_Visiblity(bool bVisible, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, enum K2Node_Select_Default);// 0x1d69c50
	void Close(MainMenu_ExitButtons_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, MainMenu_ExitButtons_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);// 0x1d69c50
	void Open(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, enum K2Node_Select_Default, PlayerController* CallFunc_GetOwningPlayer_ReturnValue);// 0x1d69c50
	void UnselectNavButtons(Widget* Except, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, FText Temp_text_Variable, FText Temp_text_Variable, int Temp_int_Variable, FText K2Node_Select_Default, MainMenu_Button_C*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, MainMenu_Button_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void UnselectSettingsButtons(bool Selected, Widget* Except, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, MainMenu_Button_C*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, MainMenu_Button_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	SlateBrush GetBrush(float CallFunc_GetViewportScale_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OpenResetBox();// 0x1d69c50
	void HideServerMessageConfirmationEvent();// 0x1d69c50
	void BndEvt__ButtonSERVERBROWSER_K2Node_ComponentBoundEvent_3227_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonCUSTOMSERVERS_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonCREDITS_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSETTINGS_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSettingsAUDIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSettingsCONTROLS_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSettingsGAME_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSettingsGRAPHICS_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonTRAIN_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__ButtonRefreshAllServers_K2Node_ComponentBoundEvent_2471_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonRestoreDefaultControls_K2Node_ComponentBoundEvent_2565_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSettingsSTEAM_K2Node_ComponentBoundEvent_970_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Open Exit Window();// 0x1d69c50
	void Open Disconnect Window();// 0x1d69c50
	void BndEvt__GraphicsApply_K2Node_ComponentBoundEvent_2908_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__GraphicsDefaults_K2Node_ComponentBoundEvent_2952_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__GameReset_K2Node_ComponentBoundEvent_3003_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__GameApply_K2Node_ComponentBoundEvent_3049_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__GameDefaults_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__GameDebug_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__PopupExit_K2Node_ComponentBoundEvent_3_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__PopupDisconnect_K2Node_ComponentBoundEvent_4_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__PopupLocalGame_K2Node_ComponentBoundEvent_5_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__PopupExit_K2Node_ComponentBoundEvent_6_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__PopupLocalGame_K2Node_ComponentBoundEvent_7_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__PopupDisconnect_K2Node_ComponentBoundEvent_9_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ResetDataConfirm_K2Node_ComponentBoundEvent_11_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ResetDataConfirm_K2Node_ComponentBoundEvent_12_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void Reset Settings Active Widget();// 0x1d69c50
	void BndEvt__LeaveQueueConfirm_K2Node_ComponentBoundEvent_723_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__LeaveQueueConfirm_K2Node_ComponentBoundEvent_727_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__AudioApply_K2Node_ComponentBoundEvent_430_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__AudioDefaults_K2Node_ComponentBoundEvent_756_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Refresh Steam Status();// 0x1d69c50
	void BndEvt__ServerConfirm_K2Node_ComponentBoundEvent_306_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ServerConfirm_K2Node_ComponentBoundEvent_310_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void Return To Browser(bool Dedicated?);// 0x1d69c50
	void BndEvt__Button_BackToMain_K2Node_ComponentBoundEvent_445_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_HideHUD_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__SteamInventoryApply_K2Node_ComponentBoundEvent_543_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__SteamInventoryDefaults_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_4_K2Node_ComponentBoundEvent_983_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonFRIENDS_K2Node_ComponentBoundEvent_353_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Finished Search_Event();// 0x1d69c50
	void BndEvt__ButtonResetFilters_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_0_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Listen For Menu Cam();// 0x1d69c50
	void Possessed Menu Cam(MenuCamPawn_C* NewMenuCam);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void BndEvt__ButtonSERVERBROWSER_1_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonShit_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void HideServerMessageAndReconnectToSession();// 0x1d69c50
	void BndEvt__ButtonControlsPresets_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonCREDITS_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void OnExitbuttonsUnHovered();// 0x1d69c50
	void BndEvt__ButtonSTORE_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonCUSTOMIZE_K2Node_ComponentBoundEvent_16_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__StoreScreen_K2Node_ComponentBoundEvent_17_NewBundleDelegate__DelegateSignature();// 0x1d69c50
	void BndEvt__CustomizeScreen_K2Node_ComponentBoundEvent_18_LeaveCustomize__DelegateSignature();// 0x1d69c50
	void BndEvt__StoreScreen_K2Node_ComponentBoundEvent_20_LeaveStore__DelegateSignature();// 0x1d69c50
	void BndEvt__StoreScreen_K2Node_ComponentBoundEvent_19_OnGotoEquip__DelegateSignature();// 0x1d69c50
	void BndEvt__CustomizeScreen_K2Node_ComponentBoundEvent_21_OnCloseCustomize__DelegateSignature();// 0x1d69c50
	void BndEvt__CustomizeScreen_K2Node_ComponentBoundEvent_22_NewEquippableDelegate__DelegateSignature();// 0x1d69c50
	void CloseCustomizeScreen();// 0x1d69c50
	void ExecuteUbergraph_MainMenuScreen(int EntryPoint, LinearColor K2Node_MakeStruct_LinearColor, int CallFunc_Round_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, GameInstance* CallFunc_GetGameInstance_ReturnValue, GameInstance* CallFunc_GetGameInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, LocalPlayer* CallFunc_GetOwningLocalPlayer_ReturnValue, bool CallFunc_HostGame_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, MainMenu_ExitButtons_C* CallFunc_Create_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, bool CallFunc_IsSteamConnected_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, bool K2Node_CustomEvent_Dedicated_, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_GetActiveWidgetIndex_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, Widget* CallFunc_GetWidgetAtIndex_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_Get_Main_Menu_Success, BP_MainMenu_PC_C* CallFunc_Get_Main_Menu_Menu_PC, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, MenuCamPawn_C* K2Node_CustomEvent_NewMenuCam, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, ServerListItem_C* K2Node_DynamicCast_AsServer_List_Item, bool K2Node_DynamicCast_bSuccess, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_InputBackup_PopUp_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess, Widget* CallFunc_GetActiveWidget_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, Widget* CallFunc_GetActiveWidget_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_GetActiveWidgetIndex_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQEmoteItemWidget.UserWidget.Widget.Visual.Object
	MulticastInlineDelegateProperty OnSelected;//[Size: 1]
	MulticastInlineDelegateProperty OnHovered;//[Size: 1]
	bool bIsEquipped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	SQEmotesData* EmotesData;//[Offset: 0x290, Size: 1]
	Image* ItemIcon;//[Offset: 0x298, Size: 1]
	Button* ItemButton;//[Offset: 0x2a0, Size: 1]
	void OnHover();// 0xd82d80
	bool IsOwned();// 0xd828b0
	bool IsNew();// 0xd82880

--------------------------------
Class: AudioWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsComboboxItem_C* AudioInputDevice;//[Offset: 0x268, Size: 1]
	SettingsComboboxItem_C* AUDIOOUTPUTDEVICE;//[Offset: 0x270, Size: 1]
	SettingsItem_GraphicsToggle_C* AUDIOQUALITY;//[Offset: 0x278, Size: 1]
	SettingsItem_Slider_LR_C* COMMANDVOICEBALANCE;//[Offset: 0x280, Size: 1]
	SettingsItem_Slider_C* COMMANDVOICEVOLUME;//[Offset: 0x288, Size: 1]
	SettingsItem_Slider_C* EffectsVolume;//[Offset: 0x290, Size: 1]
	SettingsItem_Slider_C* LOCALVOICEVOLUME;//[Offset: 0x298, Size: 1]
	SettingsItem_Slider_C* MasterVolume;//[Offset: 0x2a0, Size: 1]
	SettingsItem_Slider_C* MusicVolume;//[Offset: 0x2a8, Size: 1]
	SettingsItem_Slider_C* OUTOFGAMEVOLUME;//[Offset: 0x2b0, Size: 1]
	SettingsItem_Slider_C* PrioritySpeakerDucking;//[Offset: 0x2b8, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x2c0, Size: 1]
	Image* Separator0;//[Offset: 0x2c8, Size: 1]
	Image* Separator1;//[Offset: 0x2d0, Size: 1]
	SettingsItem_Slider_LR_C* SQUADVOICEBALANCE;//[Offset: 0x2d8, Size: 1]
	SettingsItem_Slider_C* SquadVoiceVolume;//[Offset: 0x2e0, Size: 1]
	SettingsItem_TickBox_C* ToggleCOMMANDBEEP;//[Offset: 0x2e8, Size: 1]
	SettingsItem_TickBox_C* ToggleLeaderOnlyBias;//[Offset: 0x2f0, Size: 1]
	SettingsItem_TickBox_C* ToggleRADIOFILTER;//[Offset: 0x2f8, Size: 1]
	SettingsItem_TickBox_C* ToggleSQUADBEEP;//[Offset: 0x300, Size: 1]
	SettingsItem_Slider_C* UIVolume;//[Offset: 0x308, Size: 1]
	ScreenResolutionStruct[] ScreenResolutions;//[Offset: 0x310, Size: 1]
	ScreenResolutionStruct[] ValidResolutions;//[Offset: 0x320, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x330, Size: 1]
	Widget* Get_ToggleLeaderOnlyBias_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleRADIOFILTER_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_PrioritySpeakerDucking_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_LOCALVOICEVOLUME_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_SQUADVOICEBALANCE_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_SQUADVOICEVOLUME_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_COMMANDVOICEBALANCE_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_COMMANDVOICEVOLUME_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_AUDIOINPUTDEVICE_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_AUDIOOUTPUTDEVICE_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_AUDIOQUALITY_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void UpdateSoundDevices(FString CurrentAudio, int L Selected Input Device, int L Selected Output Device, int Temp_int_Loop_Counter_Variable, int Temp_int_Array_Index_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, MediaCaptureDevice[] CallFunc_EnumerateAudioCaptureDevices_OutDevices, FString CallFunc_GetActiveAudioInputDevice_OutCurrentDevice, MediaCaptureDevice CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, const SettingsComboboxItem_C*[] K2Node_MakeArray_Array, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int CallFunc_Array_Add_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString[] CallFunc_GetAvailableAudioOutputDevice_OutAvailableDevice, FString CallFunc_GetAvailableAudioOutputDevice_OutCurrentDevice);// 0x1d69c50
	Widget* Get_ToggleSQUADBEEP_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleCOMMANDBEEP_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_OUTOFGAMENEW_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void UpdateButtons(int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, Object*[] K2Node_MakeArray_Array, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, Object* CallFunc_Array_Get_Item, int CallFunc_GetAudioQualityLevel_ReturnValue, SettingsItem_Slider_LR_C* K2Node_DynamicCast_AsSettings_Item_Slider_LR, bool K2Node_DynamicCast_bSuccess, SettingsItem_Slider_C* K2Node_DynamicCast_AsSettings_Item_Slider, bool K2Node_DynamicCast_bSuccess, int K2Node_Select_Default, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, const float[] K2Node_MakeArray_Array, float CallFunc_Array_Get_Item, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__AUDIONEW_K2Node_ComponentBoundEvent_51_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__ToggleCOMMANDBEEP_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleSQUADBEEP_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleRADIO_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__MASTERNEW_K2Node_ComponentBoundEvent_33_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__EFFECTSNEW_K2Node_ComponentBoundEvent_49_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__UINEW_K2Node_ComponentBoundEvent_82_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__OUTOFGAMENEW_K2Node_ComponentBoundEvent_150_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__COMMANDVOICENEW_K2Node_ComponentBoundEvent_27_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__VOICENEW_K2Node_ComponentBoundEvent_30_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__LOCALVOICENEW_K2Node_ComponentBoundEvent_45_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void APPLY();// 0x1d69c50
	void Revert();// 0x1d69c50
	void Default();// 0x1d69c50
	void BndEvt__MUSICNEW_K2Node_ComponentBoundEvent_27_OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__CommandVoiceBias_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SquadVoiceBias_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__PrioritySpeakerDucking_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__ToggleLeaderOnlyBias_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__AUDIOOUTPUTDEVICE_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void BndEvt__AUDIOINPUTDEVICE_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void ExecuteUbergraph_AudioWindow(int EntryPoint, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, int K2Node_Select_Default, bool CallFunc_NotEqual_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float K2Node_ComponentBoundEvent_Value, float CallFunc_Divide_FloatFloat_ReturnValue, MusicPlayer_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, MusicPlayer_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, float CallFunc_Divide_FloatFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_Not_PreBool_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue);// 0x1d69c50

--------------------------------
Class: SettingsComboboxItem_C.W_BaseSettingOption_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	Button* Button;//[Offset: 0x2a8, Size: 1]
	ComboBoxString* ComboBoxString;//[Offset: 0x2b0, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x2b8, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2c0, Size: 1]
	Image* SpacerImg;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x2d0, Size: 1]
	FText SettingName;//[Offset: 0x2d8, Size: 1]
	FString[] DefaultOptions;//[Offset: 0x2f0, Size: 1]
	MulticastInlineDelegateProperty OnValueChanged;//[Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x310, Size: 1]
	float SizeBoxWidthMax;//[Offset: 0x314, Size: 1]
	float SizeBoxWidthMin;//[Offset: 0x318, Size: 1]
	<int,int> SelectionRemap;//[Offset: 0x320, Size: 1]
	void GetSelectedIndex(out int SelectedIndex, int[] CallFunc_Map_Values_Values, int[] CallFunc_Map_Keys_Keys, int CallFunc_GetSelectedIndex_ReturnValue, int CallFunc_Array_Find_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Array_Get_Item, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void GetSelected(out FString Selected, FString CallFunc_GetSelectedOption_ReturnValue);// 0x1d69c50
	void SetSelectedIndex(int Index, bool Temp_bool_Variable, int CallFunc_GetKeyFromValue_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int K2Node_Select_Default, FString CallFunc_GetOptionAtIndex_ReturnValue);// 0x1d69c50
	void SetSelected(FString Option);// 0x1d69c50
	void SetOptions(out FString[] NewOptions, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, FString CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	SlateBrush Get_SpacerImg_Brush(Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__ComboBoxString_K2Node_ComponentBoundEvent_289_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, byte SelectionType);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void SetSettingValue(FName Setting Name, FString Value);// 0x1d69c50
	void ExecuteUbergraph_SettingsComboboxItem(int EntryPoint, FString K2Node_ComponentBoundEvent_SelectedItem, byte K2Node_ComponentBoundEvent_SelectionType, bool K2Node_Event_IsDesignTime, int CallFunc_GetSelectedIndex_SelectedIndex, FString CallFunc_GetSelected_Selected, FName K2Node_Event_Setting_Name, FString K2Node_Event_Value);// 0x1d69c50
	void OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50

--------------------------------
Class: ComboBoxString.Widget.Visual.Object
	FString[] DefaultOptions;//[Offset: 0x108, Size: 1]
	FString SelectedOption;//[Offset: 0x118, Size: 1]
	ComboBoxStyle WidgetStyle;//[Offset: 0x128, Size: 1]
	TableRowStyle ItemStyle;//[Offset: 0x518, Size: 1]
	Margin ContentPadding;//[Offset: 0xce0, Size: 1]
	float MaxListHeight;//[Offset: 0xcf0, Size: 1]
	bool HasDownArrow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcf4, Size: 1]
	bool EnableGamepadNavigationMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcf5, Size: 1]
	SlateFontInfo Font;//[Offset: 0xcf8, Size: 1]
	SlateColor ForegroundColor;//[Offset: 0xd50, Size: 1]
	bool bIsFocusable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd78, Size: 1]
	delegate OnGenerateWidgetEvent;//[Offset: 0xd7c, Size: 1]
	MulticastInlineDelegateProperty OnSelectionChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnOpening;//[Size: 1]
	void SetSelectedOption(FString Option);// 0x33e73e0
	void SetSelectedIndex(const int Index);// 0x33e7350
	bool RemoveOption(FString Option);// 0x33e6780
	void RefreshOptions();// 0x33e66d0
	void OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, byte SelectionType);// 0x1d69c50
	void OnOpeningEvent__DelegateSignature();// 0x1d69c50
	bool IsOpen();// 0x33e66a0
	FString GetSelectedOption();// 0x33e64b0
	int GetSelectedIndex();// 0x33e6480
	int GetOptionCount();// 0x33e6450
	FString GetOptionAtIndex(int Index);// 0x33e6390
	int FindOptionIndex(FString Option);// 0x33e6180
	void ClearSelection();// 0x33e5dd0
	void ClearOptions();// 0x33e5db0
	void AddOption(FString Option);// 0x33e5c10

--------------------------------
Class: ComboBoxStyle.SlateWidgetStyle
	ComboButtonStyle ComboButtonStyle;//[Offset: 0x8, Size: 1]
	SlateSound PressedSlateSound;//[Offset: 0x3c0, Size: 1]
	SlateSound SelectionChangeSlateSound;//[Offset: 0x3d8, Size: 1]

--------------------------------
Class: ComboButtonStyle.SlateWidgetStyle
	ButtonStyle ButtonStyle;//[Offset: 0x8, Size: 1]
	SlateBrush DownArrowImage;//[Offset: 0x280, Size: 1]
	Vector2D ShadowOffset;//[Offset: 0x308, Size: 1]
	LinearColor ShadowColorAndOpacity;//[Offset: 0x310, Size: 1]
	SlateBrush MenuBorderBrush;//[Offset: 0x320, Size: 1]
	Margin MenuBorderPadding;//[Offset: 0x3a8, Size: 1]

--------------------------------
Class: TableRowStyle.SlateWidgetStyle
	SlateBrush SelectorFocusedBrush;//[Offset: 0x8, Size: 1]
	SlateBrush ActiveHoveredBrush;//[Offset: 0x90, Size: 1]
	SlateBrush ActiveBrush;//[Offset: 0x118, Size: 1]
	SlateBrush InactiveHoveredBrush;//[Offset: 0x1a0, Size: 1]
	SlateBrush InactiveBrush;//[Offset: 0x228, Size: 1]
	SlateBrush EvenRowBackgroundHoveredBrush;//[Offset: 0x2b0, Size: 1]
	SlateBrush EvenRowBackgroundBrush;//[Offset: 0x338, Size: 1]
	SlateBrush OddRowBackgroundHoveredBrush;//[Offset: 0x3c0, Size: 1]
	SlateBrush OddRowBackgroundBrush;//[Offset: 0x448, Size: 1]
	SlateColor TextColor;//[Offset: 0x4d0, Size: 1]
	SlateColor SelectedTextColor;//[Offset: 0x4f8, Size: 1]
	SlateBrush DropIndicator_Above;//[Offset: 0x520, Size: 1]
	SlateBrush DropIndicator_Onto;//[Offset: 0x5a8, Size: 1]
	SlateBrush DropIndicator_Below;//[Offset: 0x630, Size: 1]
	SlateBrush ActiveHighlightedBrush;//[Offset: 0x6b8, Size: 1]
	SlateBrush InactiveHighlightedBrush;//[Offset: 0x740, Size: 1]

--------------------------------
Class: SettingsItem_GraphicsToggle_C.W_BaseSettingOption_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	Button* GlobalButton;//[Offset: 0x2a8, Size: 1]
	HorizontalBox* HorizontalButtonBox;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x2b8, Size: 1]
	FText SettingName;//[Offset: 0x2c0, Size: 1]
	FText[] ButtonNames;//[Offset: 0x2d8, Size: 1]
	int SelectedButton;//[Offset: 0x2e8, Size: 1]
	bool bHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ec, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ed, Size: 1]
	int Tag;//[Offset: 0x2f0, Size: 1]
	MulticastInlineDelegateProperty OnButtonClick;//[Size: 1]
	Setting_Button_C*[] My Buttons;//[Offset: 0x308, Size: 1]
	ColoredTextStruct[] ToolTipTexts;//[Offset: 0x318, Size: 1]
	Setting_Button_C* Setup Button(FText ButtonText, ColoredTextStruct Inherit Text, Margin K2Node_MakeStruct_Margin, bool CallFunc_TextIsEmpty_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Setting_Button_C* CallFunc_Create_ReturnValue, UMG_Tooltip_C* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	SlateBrush GetBrush(Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void SetSelected(int Index, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, Setting_Button_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Create Buttons();// 0x1d69c50
	void On Button Clicked(bool bSelected, Setting_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_GraphicsToggle(int EntryPoint, ColoredTextStruct K2Node_MakeStruct_ColoredTextStruct, int Temp_int_Array_Index_Variable, FText CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, Setting_Button_C* CallFunc_Setup_Button_ReturnValue, bool K2Node_Event_IsDesignTime, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool K2Node_CustomEvent_bSelected, Setting_Button_C* K2Node_CustomEvent_Button, int CallFunc_Array_Find_ReturnValue, ColoredTextStruct CallFunc_Array_Get_Item, Setting_Button_C* CallFunc_Setup_Button_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50

--------------------------------
Class: ColoredTextStruct
	FText Text_5_3F79B0C140003AFAF70099A3E766D11D;//[Offset: 0x0, Size: 1]
	LinearColor Color_6_ED4DA8074C9A5A2F645B3AB6CD30B20C;//[Offset: 0x18, Size: 1]

--------------------------------
Class: Setting_Button_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Press;//[Offset: 0x268, Size: 1]
	Image* BottomLine;//[Offset: 0x270, Size: 1]
	Button* Button;//[Offset: 0x278, Size: 1]
	HorizontalBox* HorizontalBoxMain;//[Offset: 0x280, Size: 1]
	ScaleBox* IconScaleBox;//[Offset: 0x288, Size: 1]
	Image* LeftLine;//[Offset: 0x290, Size: 1]
	Overlay* LineParent;//[Offset: 0x298, Size: 1]
	Image* MyIcon;//[Offset: 0x2a0, Size: 1]
	Image* RightLine;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_Bold;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Main;//[Offset: 0x2b8, Size: 1]
	Image* TopLine;//[Offset: 0x2c0, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Bold;//[Offset: 0x2c8, Size: 1]
	byte BoxAlignment;//[Offset: 0x2d0, Size: 1]
	byte Line Position;//[Offset: 0x2d1, Size: 1]
	bool Use Line;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d2, Size: 1]
	LinearColor RegularColor;//[Offset: 0x2d4, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x2f8, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x308, Size: 1]
	LinearColor SelectedHoveredColor;//[Offset: 0x318, Size: 1]
	bool bHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x328, Size: 1]
	bool bSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x329, Size: 1]
	bool bIsToggle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x32a, Size: 1]
	MulticastInlineDelegateProperty OnHover;//[Size: 1]
	bool Use Icon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	bool Bold Text;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x341, Size: 1]
	Texture2D* Icon Image;//[Offset: 0x348, Size: 1]
	float Icon Size;//[Offset: 0x350, Size: 1]
	SlateColor Icon Color;//[Offset: 0x358, Size: 1]
	FText Display Text;//[Offset: 0x380, Size: 1]
	int Text Size;//[Offset: 0x398, Size: 1]
	Margin Text Padding Amount;//[Offset: 0x39c, Size: 1]
	Margin Button Padding;//[Offset: 0x3ac, Size: 1]
	LinearColor Text Normal;//[Offset: 0x3bc, Size: 1]
	LinearColor Text Toggle Normal;//[Offset: 0x3cc, Size: 1]
	LinearColor Text Selected;//[Offset: 0x3dc, Size: 1]
	LinearColor Text Hovered;//[Offset: 0x3ec, Size: 1]
	LinearColor Text Selected Hovered;//[Offset: 0x3fc, Size: 1]
	LinearColor Line Color;//[Offset: 0x40c, Size: 1]
	LinearColor Line Hover Color;//[Offset: 0x41c, Size: 1]
	LinearColor Line Unhover Color;//[Offset: 0x42c, Size: 1]
	MulticastInlineDelegateProperty OnDoubleClicked;//[Size: 1]
	float Last Click Time;//[Offset: 0x450, Size: 1]
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, EventReply CallFunc_Unhandled_ReturnValue, Key CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void Refresh Line(byte Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, Widget* K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Setup Button(bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, TextBlock* K2Node_Select_Default, SlateFontInfo K2Node_MakeStruct_SlateFontInfo, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default, Margin K2Node_MakeStruct_Margin, enum K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void Update Button(bool Temp_bool_Variable, TextBlock* K2Node_Select_Default);// 0x1d69c50
	SlateColor Bind_TextColor(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	LinearColor Bind_LineColor(LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void SetText(FText Text, bool Temp_bool_Variable, TextBlock* K2Node_Select_Default, SlateFontInfo K2Node_MakeStruct_SlateFontInfo);// 0x1d69c50
	void UpdateColors(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, TextBlock* K2Node_Select_Default, OverlaySlot* K2Node_DynamicCast_AsOverlay_Slot, bool K2Node_DynamicCast_bSuccess, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, TextBlock* K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void SetSelected(bool bSelected);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_Setting_Button(int EntryPoint, bool CallFunc_Not_PreBool_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_Event_IsDesignTime, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void OnDoubleClicked__DelegateSignature();// 0x1d69c50
	void OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void OnClicked__DelegateSignature(bool bSelected, Setting_Button_C* Button);// 0x1d69c50

--------------------------------
Class: SettingsItem_Slider_LR_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button;//[Offset: 0x268, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x270, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x278, Size: 1]
	Slider* Slider;//[Offset: 0x280, Size: 1]
	EditableText* SliderText;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x290, Size: 1]
	FText SettingName;//[Offset: 0x298, Size: 1]
	float SliderMin;//[Offset: 0x2b0, Size: 1]
	float SliderMax;//[Offset: 0x2b4, Size: 1]
	float MinValue;//[Offset: 0x2b8, Size: 1]
	float MaxValue;//[Offset: 0x2bc, Size: 1]
	float Value;//[Offset: 0x2c0, Size: 1]
	int MinFractionDigits;//[Offset: 0x2c4, Size: 1]
	int MaxFractionDigits;//[Offset: 0x2c8, Size: 1]
	FText CachedSliderText;//[Offset: 0x2d0, Size: 1]
	MulticastInlineDelegateProperty OnValueChanged;//[Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	bool bIsPercentage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f9, Size: 1]
	LinearColor Regular Color;//[Offset: 0x2fc, Size: 1]
	LinearColor Hovered Color;//[Offset: 0x30c, Size: 1]
	LinearColor Pressed Color;//[Offset: 0x31c, Size: 1]
	MulticastInlineDelegateProperty OnCaptureEnd;//[Size: 1]
	float TextBoxSize;//[Offset: 0x340, Size: 1]
	void RemovePercentage(FText InText, out FText OutText, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	SlateBrush Get_SpacerImg_Brush(Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void UpdateSliderValue(float CallFunc_MapRangeUnclamped_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void UpdateSliderTextValue(FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void SetValue(float Value);// 0x1d69c50
	void BndEvt__Slider_K2Node_ComponentBoundEvent_361_OnFloatValueChangedEvent__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SliderText_K2Node_ComponentBoundEvent_191_OnEditableTextChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void BndEvt__SliderText_K2Node_ComponentBoundEvent_275_OnEditableTextCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__Slider_K2Node_ComponentBoundEvent_15_OnMouseCaptureEndEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_Slider_LR(int EntryPoint, bool Temp_bool_Variable, FText Temp_text_Variable, float K2Node_ComponentBoundEvent_Value, const FText K2Node_ComponentBoundEvent_Text, float CallFunc_MapRangeUnclamped_ReturnValue, FText CallFunc_RemovePercentage_OutText, bool CallFunc_TextIsEmpty_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_IsNumeric_ReturnValue, int CallFunc_Len_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, FText K2Node_Select_Default, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, FText CallFunc_RemovePercentage_OutText, FString CallFunc_Conv_TextToString_ReturnValue, float CallFunc_Conv_StringToFloat_ReturnValue, bool CallFunc_IsNumeric_ReturnValue, float CallFunc_FClamp_ReturnValue, bool K2Node_Event_IsDesignTime, float CallFunc_GetValue_ReturnValue, float CallFunc_MapRangeUnclamped_ReturnValue);// 0x1d69c50
	void OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void OnValueChanged__DelegateSignature(float Value);// 0x1d69c50

--------------------------------
Class: MediaCaptureDevice
	FText DisplayName;//[Offset: 0x0, Size: 1]
	FString URL;//[Offset: 0x18, Size: 1]

--------------------------------
Class: SettingsItem_TickBox_C.W_BaseSettingOption_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	Button* Button;//[Offset: 0x2a8, Size: 1]
	HorizontalBox* HorizontalBoxMain;//[Offset: 0x2b0, Size: 1]
	ScaleBox* IconScaleBox;//[Offset: 0x2b8, Size: 1]
	Image* MyIcon;//[Offset: 0x2c0, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_Main;//[Offset: 0x2d0, Size: 1]
	FText ButtonText;//[Offset: 0x2d8, Size: 1]
	LinearColor RegularColor;//[Offset: 0x2f0, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x310, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x320, Size: 1]
	LinearColor SelectedHoveredColor;//[Offset: 0x330, Size: 1]
	bool bHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	bool bSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x341, Size: 1]
	MulticastInlineDelegateProperty OnHover;//[Size: 1]
	int Text Size;//[Offset: 0x358, Size: 1]
	float Icon Size;//[Offset: 0x35c, Size: 1]
	Texture2D* Icon Image;//[Offset: 0x360, Size: 1]
	SlateColor Icon Color;//[Offset: 0x368, Size: 1]
	bool Use Icon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x390, Size: 1]
	bool Use Underline;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x391, Size: 1]
	byte BoxAlignment;//[Offset: 0x392, Size: 1]
	Margin Text Padding Amount;//[Offset: 0x394, Size: 1]
	Margin Button Padding;//[Offset: 0x3a4, Size: 1]
	int SteamTagID;//[Offset: 0x3b4, Size: 1]
	float TextBoxWidth;//[Offset: 0x3b8, Size: 1]
	IntPoint SelectionValues;//[Offset: 0x3bc, Size: 1]
	FString GetValue(bool Temp_bool_Variable, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString K2Node_Select_Default);// 0x1d69c50
	void Update Tick Box(bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, Texture2D* K2Node_Select_Default);// 0x1d69c50
	SlateColor Bind_TextColor(bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	LinearColor Bind_LineColor(LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void SetText(FText Text, SlateFontInfo K2Node_MakeStruct_SlateFontInfo);// 0x1d69c50
	void UpdateColors(HorizontalBoxSlot* K2Node_DynamicCast_AsHorizontal_Box_Slot, bool K2Node_DynamicCast_bSuccess, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void SetSelected(bool bSelected);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void SetSettingValue(FName Setting Name, FString Value);// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_TickBox(int EntryPoint, FString CallFunc_GetValue_ReturnValue, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool K2Node_Event_IsDesignTime, bool CallFunc_Not_PreBool_ReturnValue, SlateFontInfo K2Node_MakeStruct_SlateFontInfo, Vector2D CallFunc_MakeVector2D_ReturnValue, Margin K2Node_MakeStruct_Margin, SlateBrush K2Node_MakeStruct_SlateBrush, enum K2Node_Select_Default, enum K2Node_Select_Default, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, enum K2Node_Select_Default, FName K2Node_Event_Setting_Name, FString K2Node_Event_Value, int CallFunc_Conv_StringToInt_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue);// 0x1d69c50
	void OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50

--------------------------------
Class: ScreenResolutionStruct
	int Width_4_C561351141FBE5318B5BB8B01F9FA073;//[Offset: 0x0, Size: 1]
	int Height_5_61FF2BBC4EB41EA01C79389217A87FD9;//[Offset: 0x4, Size: 1]

--------------------------------
Class: MusicPlayer_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Slide;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* ButtonPlayStop;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* ButtonSkipBack;//[Offset: 0x278, Size: 1]
	MainMenu_Button_C* ButtonSkipForward;//[Offset: 0x280, Size: 1]
	MainMenu_Button_C* HideButton;//[Offset: 0x288, Size: 1]
	Image* Image;//[Offset: 0x290, Size: 1]
	Image* Image;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	ProgressBar* ProgressBar_Time;//[Offset: 0x2a8, Size: 1]
	Slider* Slider_Time;//[Offset: 0x2b0, Size: 1]
	Slider* Slider_Volume;//[Offset: 0x2b8, Size: 1]
	TextBlock* TBSongName;//[Offset: 0x2c0, Size: 1]
	SoundBase*[] Tracks;//[Offset: 0x2c8, Size: 1]
	SoundBase*[] LoadedTracks;//[Offset: 0x2d8, Size: 1]
	int CurrentTrack;//[Offset: 0x2e8, Size: 1]
	SQPlayerController* PC;//[Offset: 0x2f0, Size: 1]
	bool Muted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	float Song Elapsed Percent;//[Offset: 0x2fc, Size: 1]
	bool Scrub Time;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x300, Size: 1]
	void Play Music(bool CallFunc_Not_PreBool_ReturnValue, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsPlaying_ReturnValue);// 0x1d69c50
	void Get Music AC(out AudioComponent* MusicAC, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	float Get Song Progress(AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetValue_ReturnValue);// 0x1d69c50
	void GetPercent();// 0x1d69c50
	FText Get_TBSongName_Text(AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetDisplayName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Update Menu Settings(AudioWindow_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, bool CallFunc_Array_IsValidIndex_ReturnValue, AudioWindow_C* CallFunc_Array_Get_Item);// 0x1d69c50
	void Mute Audio(bool Mute, AudioComponent* CallFunc_Get_Music_AC_MusicAC, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_SelectFloat_ReturnValue);// 0x1d69c50
	void Refresh Audio(bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, AudioComponent* CallFunc_Get_Music_AC_MusicAC, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, Texture2D* Temp_object_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FMax_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default, float CallFunc_MapRangeClamped_ReturnValue);// 0x1d69c50
	void Skip Track(bool Forward, bool Temp_bool_Variable, int Temp_int_Variable, AudioComponent* CallFunc_Get_Music_AC_MusicAC, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SoundBase* CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, bool Temp_bool_Variable, int CallFunc_Array_Find_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int K2Node_Select_Default, int K2Node_Select_Default);// 0x1d69c50
	void OnLoaded_64894CBD4CB9747691437E9B69432F5B(Object* Loaded);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Slider_0_K2Node_ComponentBoundEvent_45_OnMouseCaptureEndEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Slider_Time_K2Node_ComponentBoundEvent_146_OnMouseCaptureEndEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Slider_Time_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature();// 0x1d69c50
	void Play Time(const SoundWave* PlayingSoundWave, const float PlaybackPercent);// 0x1d69c50
	void Next Track();// 0x1d69c50
	void Load Sound(int Index);// 0x1d69c50
	void Play Sound(SoundBase* NewSound);// 0x1d69c50
	void ExecuteUbergraph_MusicPlayer(int EntryPoint, Object* Temp_object_Variable, SoundBase* K2Node_DynamicCast_AsSound_Base, bool K2Node_DynamicCast_bSuccess, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, float CallFunc_GetValue_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, float CallFunc_GetValue_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, const SoundWave* K2Node_CustomEvent_PlayingSoundWave, const float K2Node_CustomEvent_PlaybackPercent, FString CallFunc_GetCurrentMapName_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_Contains_ReturnValue, AudioComponent* CallFunc_Get_Music_AC_MusicAC, Object* K2Node_CustomEvent_Loaded, bool CallFunc_IsValid_ReturnValue, AudioComponent* CallFunc_Get_Music_AC_MusicAC, delegate K2Node_CreateDelegate_OutputDelegate, float CallFunc_MapRangeClamped_ReturnValue, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, AudioComponent* CallFunc_Get_Music_AC_MusicAC, AudioComponent* CallFunc_Get_Music_AC_MusicAC, bool CallFunc_IsValid_ReturnValue, int K2Node_CustomEvent_Index, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SoundBase* CallFunc_Array_Get_Item, bool CallFunc_IsValidSoftObjectReference_ReturnValue, AudioComponent* CallFunc_Get_Music_AC_MusicAC, SoundBase* K2Node_CustomEvent_NewSound, SoundBase* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50

--------------------------------
Class: ControlsWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	VerticalBox* AircraftList;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_Aircraft;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* Button_Command;//[Offset: 0x278, Size: 1]
	MainMenu_Button_C* Button_General;//[Offset: 0x280, Size: 1]
	MainMenu_Button_C* Button_Infantry;//[Offset: 0x288, Size: 1]
	MainMenu_Button_C* Button_Joysticks;//[Offset: 0x290, Size: 1]
	MainMenu_Button_C* Button_Vehicle;//[Offset: 0x298, Size: 1]
	CanvasPanel* CanvasPanel;//[Offset: 0x2a0, Size: 1]
	VerticalBox* CommandList;//[Offset: 0x2a8, Size: 1]
	VerticalBox* GeneralList;//[Offset: 0x2b0, Size: 1]
	HorizontalBox* HorizontalBox_JoyCurve;//[Offset: 0x2b8, Size: 1]
	VerticalBox* InfantryList;//[Offset: 0x2c0, Size: 1]
	VerticalBox* JoySticksList;//[Offset: 0x2c8, Size: 1]
	TextBlock* JoystickWarningTxt;//[Offset: 0x2d0, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x2d8, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x2e0, Size: 1]
	Image* Spacer;//[Offset: 0x2e8, Size: 1]
	Button* Spacer_;//[Offset: 0x2f0, Size: 1]
	TextBlock* TextAction;//[Offset: 0x2f8, Size: 1]
	VerticalBox* VehicleList;//[Offset: 0x300, Size: 1]
	WBP_JoyCurve_C* WBP_JoyCurve_Collective;//[Offset: 0x308, Size: 1]
	WBP_JoyCurve_C* WBP_JoyCurve_Pitch;//[Offset: 0x310, Size: 1]
	WBP_JoyCurve_C* WBP_JoyCurve_Roll;//[Offset: 0x318, Size: 1]
	WBP_JoyCurve_C* WBP_JoyCurve_Yaw;//[Offset: 0x320, Size: 1]
	WBP_SetHeliLockFreeLook_C* WBP_SetHeliLockFreeLook;//[Offset: 0x328, Size: 1]
	WidgetSwitcher* WidgetSwitcher_ControlsTab;//[Offset: 0x330, Size: 1]
	Widget*[] ControlsListItems;//[Offset: 0x338, Size: 1]
	InputCapture_C* InputCaptureWidget;//[Offset: 0x348, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x350, Size: 1]
	KeybindAxisStruct[] AxisKeybinds;//[Offset: 0x358, Size: 1]
	KeybindActionStruct[] KeybindsList;//[Offset: 0x368, Size: 1]
	bool bIsJoyControl;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x378, Size: 1]
	EventReply OnAnalogValueChanged(Geometry MyGeometry, AnalogInputEvent InAnalogInputEvent, float CallFunc_GetAnalogValue_ReturnValue, KeyEvent CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue, int Temp_int_Loop_Counter_Variable, Key CallFunc_GetKey_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, EventReply CallFunc_Unhandled_ReturnValue, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, WBP_JoyCurve_C* K2Node_Select_Default, int CallFunc_Add_IntInt_ReturnValue, FName[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, FName CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, InputAxisKeyMapping CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue);// 0x1d69c50
	void ShowHideJoyGraphs(bool Show);// 0x1d69c50
	void Unselect Mode Button(MainMenu_Button_C* Except, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, Widget* K2Node_Select_Default, MainMenu_Button_C*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, MainMenu_Button_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void PopulateAxisMappings(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, KeybindAxisStruct CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, VerticalBox* CallFunc_GetCategory_Category, bool CallFunc_EqualEqual_NameName_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SettingsItem_ControlList_C* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue);// 0x1d69c50
	void PopulateActionMappings(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, KeybindActionStruct CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, VerticalBox* CallFunc_GetCategory_Category, bool CallFunc_EqualEqual_NameName_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SettingsItem_ControlList_C* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue);// 0x1d69c50
	void GetCategory(FName CategoryName, out VerticalBox* Category, FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, int Temp_int_Variable, bool CallFunc_EqualEqual_NameName_ReturnValue, int CallFunc_SelectInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, VerticalBox* K2Node_Select_Default);// 0x1d69c50
	void PopulateControlsList(PanelSlot* CallFunc_AddChild_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Control Defaults();// 0x1d69c50
	void BndEvt__MainMenu_Button_Development_K2Node_ComponentBoundEvent_68_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Aircraft_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Infantry_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Vehicle_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_C_0_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Joysticks_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void RefreshControls();// 0x1d69c50
	void ExecuteUbergraph_ControlsWindow(int EntryPoint, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, VerticalBox* K2Node_DynamicCast_AsVertical_Box, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, SettingsItem_ControlList_C* K2Node_DynamicCast_AsSettings_Item_Control_List, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetChildrenCount_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50

--------------------------------
Class: WBP_JoyCurve_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* AxisText;//[Offset: 0x268, Size: 1]
	W_Slider_C* CurveFactorControl;//[Offset: 0x270, Size: 1]
	Image* CurvePreviewMat;//[Offset: 0x278, Size: 1]
	ComboBoxString* CurveTypeComboBox;//[Offset: 0x280, Size: 1]
	W_Slider_C* DeadzoneControl;//[Offset: 0x288, Size: 1]
	Image* FinalJoyPreview;//[Offset: 0x290, Size: 1]
	CheckBox* InvertAxisCheckbox;//[Offset: 0x298, Size: 1]
	float CurJoyVal;//[Offset: 0x2a0, Size: 1]
	Key JoyInput;//[Offset: 0x2a8, Size: 1]
	MaterialInstanceDynamic* Curve_MID;//[Offset: 0x2c0, Size: 1]
	float DeadJoy;//[Offset: 0x2c8, Size: 1]
	MaterialInstanceDynamic* FinalOut_MID;//[Offset: 0x2d0, Size: 1]
	bool InvertAxis;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	float JoyFactor;//[Offset: 0x2dc, Size: 1]
	enum Axis;//[Offset: 0x2e0, Size: 1]
	enum CurveType;//[Offset: 0x2e1, Size: 1]
	bool LockModifiers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e2, Size: 1]
	float Get Axis Deadzone();// 0x1d69c50
	FText Get_AxisText_Text(FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_TextToUpper_ReturnValue);// 0x1d69c50
	void SaveSettings(SQJoyStickConfig K2Node_MakeStruct_SQJoyStickConfig, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue);// 0x1d69c50
	void PopulateDefaults(out const SQJoyStickConfig SQJoyStickConfig);// 0x1d69c50
	void SensitivityPreview(out float Out, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQJoyStickConfig CallFunc_GetJoyConfig_ReturnValue, float CallFunc_CurveType_Out);// 0x1d69c50
	FText GetSensitivityText(float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50
	FText GetDeadZoneValText(float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue);// 0x1d69c50
	FText GetCurveText(FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Update_MID(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, enum Temp_byte_Variable, bool K2Node_Select_Default, float K2Node_Select_Default, float CallFunc_Conv_BoolToFloat_ReturnValue, float CallFunc_SensitivityPreview_Out, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Create_MID(MaterialInterface* Temp_object_Variable, MaterialInterface* Temp_object_Variable, enum Temp_byte_Variable, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, MaterialInterface* K2Node_Select_Default, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue);// 0x1d69c50
	void RefreshMat();// 0x1d69c50
	void BndEvt__CheckBox_356_K2Node_ComponentBoundEvent_4_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);// 0x1d69c50
	void BndEvt__ComboBoxString_1105_K2Node_ComponentBoundEvent_3_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, byte SelectionType);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__W_Slider_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(float NewParam);// 0x1d69c50
	void BndEvt__DeadzoneControl_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float NewParam);// 0x1d69c50
	void ForceUpdate();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_WBP_JoyCurve(int EntryPoint, FText CallFunc_MakeLiteralText_ReturnValue, int Temp_int_Variable, int Temp_int_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, FString CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, byte CallFunc_GetEnumeratorValueFromIndex_ReturnValue, FString CallFunc_ToUpper_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool K2Node_ComponentBoundEvent_bIsChecked, PlayerController* CallFunc_GetPlayerController_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQJoyStickConfig CallFunc_GetJoyConfig_ReturnValue, int CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FString K2Node_ComponentBoundEvent_SelectedItem, byte K2Node_ComponentBoundEvent_SelectionType, bool CallFunc_Contains_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, int CallFunc_Conv_ByteToInt_ReturnValue, float K2Node_ComponentBoundEvent_NewParam, float K2Node_ComponentBoundEvent_NewParam, bool K2Node_Event_IsDesignTime);// 0x1d69c50

--------------------------------
Class: W_Slider_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Slider* BaseSlider;//[Offset: 0x268, Size: 1]
	Border* Border;//[Offset: 0x270, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x278, Size: 1]
	EditableText* SliderValue;//[Offset: 0x280, Size: 1]
	SizeBox* Spacer;//[Offset: 0x288, Size: 1]
	float SliderMin;//[Offset: 0x290, Size: 1]
	float SliderMax;//[Offset: 0x294, Size: 1]
	float MinValue;//[Offset: 0x298, Size: 1]
	float MaxValue;//[Offset: 0x29c, Size: 1]
	float Value;//[Offset: 0x2a0, Size: 1]
	int MinFractionDigits;//[Offset: 0x2a4, Size: 1]
	int MaxFractionDigits;//[Offset: 0x2a8, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ac, Size: 1]
	bool bIsPercentage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ad, Size: 1]
	float StepSize;//[Offset: 0x2b0, Size: 1]
	bool bStepByPower;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b4, Size: 1]
	float Power;//[Offset: 0x2b8, Size: 1]
	<LinearColor,ColoredTextRangeStruct> ColorRange;//[Offset: 0x2c0, Size: 1]
	LinearColor TextColor;//[Offset: 0x310, Size: 1]
	FText CachedSliderText;//[Offset: 0x320, Size: 1]
	float TextBoxSize;//[Offset: 0x338, Size: 1]
	bool CanEditTextField;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x33c, Size: 1]
	MulticastInlineDelegateProperty OnValueChanged;//[Size: 1]
	MulticastInlineDelegateProperty OnCaptureEnd;//[Size: 1]
	float Spacing;//[Offset: 0x360, Size: 1]
	LinearColor SliderColor;//[Offset: 0x364, Size: 1]
	LinearColor SliderHandleColor;//[Offset: 0x374, Size: 1]
	Vector2D HandleSize;//[Offset: 0x384, Size: 1]
	float SliderThickness;//[Offset: 0x38c, Size: 1]
	void UpdateSliderStyle(SliderStyle WidgetStyle, out SliderStyle NewParam, SliderStyle K2Node_MakeStruct_SliderStyle);// 0x1d69c50
	float RoundingToPower(float InputPin, float CallFunc_Log_ReturnValue, int CallFunc_Round_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_MultiplyMultiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void UpdateStyle(SliderStyle CallFunc_UpdateSliderStyle_NewParam);// 0x1d69c50
	void GetTextColor(float Value, out LinearColor TextColor, out FText WarningText, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, LinearColor CallFunc_LinearColor_White_ReturnValue, LinearColor[] CallFunc_Map_Keys_Keys, int CallFunc_Array_Length_ReturnValue, LinearColor CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, ColoredTextRangeStruct CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void RemovePercentage(out const FText InText, out FText OutText, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void UpdateSliderValue(float CallFunc_MapRangeUnclamped_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void UpdateSliderTextValue(FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void SetValue(float Value);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__BaseSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SliderValue_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void BndEvt__SliderValue_K2Node_ComponentBoundEvent_2_OnEditableTextCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void BndEvt__BaseSlider_K2Node_ComponentBoundEvent_3_OnMouseCaptureEndEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_Slider(int EntryPoint, bool K2Node_Event_IsDesignTime, float K2Node_ComponentBoundEvent_Value, FText Temp_text_Variable, float CallFunc_MapRangeUnclamped_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, float CallFunc_RoundingToPower_ReturnValue, FText CallFunc_RemovePercentage_OutText, float CallFunc_GridSnap_Float_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_IsNumeric_ReturnValue, int CallFunc_Len_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, bool CallFunc_Less_IntInt_ReturnValue, FText CallFunc_RemovePercentage_OutText, bool CallFunc_BooleanAND_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, float CallFunc_Conv_StringToFloat_ReturnValue, bool CallFunc_IsNumeric_ReturnValue, bool Temp_bool_Variable, float CallFunc_GetValue_ReturnValue, float CallFunc_MapRangeUnclamped_ReturnValue, bool Temp_bool_Variable, float CallFunc_FClamp_ReturnValue, bool Temp_bool_Variable, float CallFunc_RoundingToPower_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, FText K2Node_Select_Default, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void OnCaptureEnd__DelegateSignature(float Value);// 0x1d69c50
	void OnValueChanged__DelegateSignature(float NewParam);// 0x1d69c50

--------------------------------
Class: CheckBox.ContentWidget.PanelWidget.Widget.Visual.Object
	enum CheckedState;//[Offset: 0x120, Size: 1]
	delegate CheckedStateDelegate;//[Offset: 0x124, Size: 1]
	CheckBoxStyle WidgetStyle;//[Offset: 0x138, Size: 1]
	SlateWidgetStyleAsset* Style;//[Offset: 0x6b8, Size: 1]
	SlateBrushAsset* UncheckedImage;//[Offset: 0x6c0, Size: 1]
	SlateBrushAsset* UncheckedHoveredImage;//[Offset: 0x6c8, Size: 1]
	SlateBrushAsset* UncheckedPressedImage;//[Offset: 0x6d0, Size: 1]
	SlateBrushAsset* CheckedImage;//[Offset: 0x6d8, Size: 1]
	SlateBrushAsset* CheckedHoveredImage;//[Offset: 0x6e0, Size: 1]
	SlateBrushAsset* CheckedPressedImage;//[Offset: 0x6e8, Size: 1]
	SlateBrushAsset* UndeterminedImage;//[Offset: 0x6f0, Size: 1]
	SlateBrushAsset* UndeterminedHoveredImage;//[Offset: 0x6f8, Size: 1]
	SlateBrushAsset* UndeterminedPressedImage;//[Offset: 0x700, Size: 1]
	byte HorizontalAlignment;//[Offset: 0x708, Size: 1]
	Margin Padding;//[Offset: 0x70c, Size: 1]
	SlateColor BorderBackgroundColor;//[Offset: 0x720, Size: 1]
	byte ClickMethod;//[Offset: 0x748, Size: 1]
	byte TouchMethod;//[Offset: 0x749, Size: 1]
	byte PressMethod;//[Offset: 0x74a, Size: 1]
	bool IsFocusable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x74b, Size: 1]
	MulticastInlineDelegateProperty OnCheckStateChanged;//[Size: 1]
	void SetTouchMethod(byte InTouchMethod);// 0x33e3890
	void SetPressMethod(byte InPressMethod);// 0x33e35b0
	void SetIsChecked(bool InIsChecked);// 0x33e2ce0
	void SetClickMethod(byte InClickMethod);// 0x33e2840
	void SetCheckedState(enum InCheckedState);// 0x33e2740
	bool IsPressed();// 0x33e1fe0
	bool IsChecked();// 0x33e1f80
	enum GetCheckedState();// 0x33e1b30

--------------------------------
Class: CheckBoxStyle.SlateWidgetStyle
	byte CheckBoxType;//[Offset: 0x8, Size: 1]
	SlateBrush UncheckedImage;//[Offset: 0x10, Size: 1]
	SlateBrush UncheckedHoveredImage;//[Offset: 0x98, Size: 1]
	SlateBrush UncheckedPressedImage;//[Offset: 0x120, Size: 1]
	SlateBrush CheckedImage;//[Offset: 0x1a8, Size: 1]
	SlateBrush CheckedHoveredImage;//[Offset: 0x230, Size: 1]
	SlateBrush CheckedPressedImage;//[Offset: 0x2b8, Size: 1]
	SlateBrush UndeterminedImage;//[Offset: 0x340, Size: 1]
	SlateBrush UndeterminedHoveredImage;//[Offset: 0x3c8, Size: 1]
	SlateBrush UndeterminedPressedImage;//[Offset: 0x450, Size: 1]
	Margin Padding;//[Offset: 0x4d8, Size: 1]
	SlateColor ForegroundColor;//[Offset: 0x4e8, Size: 1]
	SlateColor BorderBackgroundColor;//[Offset: 0x510, Size: 1]
	SlateSound CheckedSlateSound;//[Offset: 0x538, Size: 1]
	SlateSound UncheckedSlateSound;//[Offset: 0x550, Size: 1]
	SlateSound HoveredSlateSound;//[Offset: 0x568, Size: 1]

--------------------------------
Class: InputAxisKeyMapping
	FName AxisName;//[Offset: 0x0, Size: 1]
	float Scale;//[Offset: 0x8, Size: 1]
	Key Key;//[Offset: 0x10, Size: 1]

--------------------------------
Class: WBP_SetHeliLockFreeLook_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	CheckBox* AlwaysFreeLookBox;//[Offset: 0x268, Size: 1]
	void Construct();// 0x1d69c50
	void BndEvt__AlwaysFreeLookBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);// 0x1d69c50
	void ExecuteUbergraph_WBP_SetHeliLockFreeLook(int EntryPoint, bool K2Node_ComponentBoundEvent_bIsChecked, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue);// 0x1d69c50

--------------------------------
Class: InputCapture_C.UserWidget.Widget.Visual.Object
	Image* Image;//[Offset: 0x260, Size: 1]
	MulticastInlineDelegateProperty OnInput;//[Size: 1]
	bool bCapturingInput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x278, Size: 1]
	Vector2D Mouse Delta;//[Offset: 0x27c, Size: 1]
	EventReply OnAnalogValueChanged(Geometry MyGeometry, AnalogInputEvent InAnalogInputEvent, bool Temp_bool_Variable, KeyEvent CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue, float CallFunc_GetAnalogValue_ReturnValue, Key CallFunc_GetKey_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_Key_IsAxis1D_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply K2Node_Select_Default);// 0x1d69c50
	EventReply OnMouseMove(Geometry MyGeometry, out const PointerEvent MouseEvent, bool Temp_bool_Variable, Vector2D CallFunc_PointerEvent_GetCursorDelta_ReturnValue, Key Temp_struct_Variable, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Abs_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_VSize2D_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Key Temp_struct_Variable, bool Temp_bool_Variable, Key K2Node_Select_Default, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply K2Node_Select_Default);// 0x1d69c50
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, bool Temp_bool_Variable, Key CallFunc_GetKey_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply K2Node_Select_Default);// 0x1d69c50
	EventReply OnMouseWheel(Geometry MyGeometry, out const PointerEvent MouseEvent, bool Temp_bool_Variable, float CallFunc_PointerEvent_GetWheelDelta_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply K2Node_Select_Default);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, bool Temp_bool_Variable, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue, EventReply CallFunc_Handled_ReturnValue, EventReply K2Node_Select_Default);// 0x1d69c50
	void EndInputCapture();// 0x1d69c50
	void BeginInputCapture();// 0x1d69c50
	void OnInput__DelegateSignature(Key InputKey);// 0x1d69c50

--------------------------------
Class: KeybindAxisStruct
	FName AxisName_13_686D07634065815755D92EB24378D293;//[Offset: 0x0, Size: 1]
	FText FriendlyName_17_3FEA8FEA41EF6733158DE0A3F66FB65F;//[Offset: 0x8, Size: 1]
	bool Negative_16_5D8560A044DC9B43AF31D9855FDA7811;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x20, Size: 1]
	FName Category_12_CE9B3A9A43EC454D9B3ECF89CD474765;//[Offset: 0x24, Size: 1]

--------------------------------
Class: KeybindActionStruct
	FName ActionName_2_CA7DBD4242AA136E1102F3BA6647B028;//[Offset: 0x0, Size: 1]
	FText FriendlyName_6_9DA0219B43DAF6229FB1AD9278A926EC;//[Offset: 0x8, Size: 1]
	FName Category_10_AD245E2244D217ED2648CF9F1ECC96ED;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SettingsItem_ControlList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	Button* Button;//[Offset: 0x270, Size: 1]
	GlowingButton_12_C* NewKey_Alternative;//[Offset: 0x278, Size: 1]
	GlowingButton_12_C* NewKey_JoystickGamepad;//[Offset: 0x280, Size: 1]
	GlowingButton_12_C* NewKey_Primary;//[Offset: 0x288, Size: 1]
	TextBlock* TB_ActionName;//[Offset: 0x290, Size: 1]
	FName ActionName;//[Offset: 0x298, Size: 1]
	ControlsWindow_C* ControlsWindow;//[Offset: 0x2a0, Size: 1]
	int CapturingKey;//[Offset: 0x2a8, Size: 1]
	bool Axis;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ac, Size: 1]
	bool NegativeAxis;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2ad, Size: 1]
	FText FriendlyName;//[Offset: 0x2b0, Size: 1]
	void Is Action Key Valid(out bool Key Is Valid, Key[] CallFunc_GetMappedActionKeys_Keys, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValidKey_ReturnValue);// 0x1d69c50
	void Get Axis Map to Edit(out InputAxisKeyMapping Map, out bool Valid, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, int CallFunc_Array_Length_ReturnValue, InputAxisKeyMapping CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void RebindAxisKey(Key Key, bool L Clear Axis, Key NoneKey, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, bool CallFunc_Array_IsValidIndex_ReturnValue, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, bool CallFunc_IsValidKey_ReturnValue, InputSettings* CallFunc_GetInputSettings_ReturnValue, bool Temp_bool_Variable, Key K2Node_Select_Default, float K2Node_Select_Default, InputAxisKeyMapping K2Node_MakeStruct_InputAxisKeyMapping, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValidKey_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, Key K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void RebindActionKey(Key Key, Key NoneKey, FText CallFunc_MakeLiteralText_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool Temp_bool_Variable, bool CallFunc_NotEqual_IgnoreCase_TextText_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_SaveBackupKeyBinds_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, const Key K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValidKey_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void GetMappedKeys(out Key[] Keys, Key[] CallFunc_GetMappedAxisKeys_Keys, Key[] CallFunc_GetMappedActionKeys_Keys);// 0x1d69c50
	void TranslateKey(Key Key, out FString Text, FText CallFunc_GetKeyDisplayName_OutDisplayName, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_ToUpper_ReturnValue, bool K2Node_SwitchString_CmpSuccess);// 0x1d69c50
	void GetMappedAxisKeys(out Key[] Keys, Key[] RKeys, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, InputAxisKeyMapping CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue);// 0x1d69c50
	void GetMappedActionKeys(out Key[] Keys, Key[] RKeys, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, InputActionKeyMapping[] CallFunc_GetAllKeyMappings_KeyMappings, InputActionKeyMapping CallFunc_Array_Get_Item, FName CallFunc_BreakInputActionKeyMapping_ActionName, Key CallFunc_BreakInputActionKeyMapping_Key, bool CallFunc_BreakInputActionKeyMapping_bShift, bool CallFunc_BreakInputActionKeyMapping_bCtrl, bool CallFunc_BreakInputActionKeyMapping_bAlt, bool CallFunc_BreakInputActionKeyMapping_bCmd, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue, Key CallFunc_PointerEvent_GetEffectingButton_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue);// 0x1d69c50
	void OnInput(Key InputKey);// 0x1d69c50
	void FinishInputCapture(Key newKey);// 0x1d69c50
	void StartInputCapture(int KeyId, int Temp_int_Variable, GlowingButton_12_C* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void UpdateKeys(Key[] MappedKeysCache, FText UnboundText, FText[] FoundKeys, Key CallFunc_Array_Get_Item, Key CallFunc_Array_Get_Item, FString CallFunc_TranslateKey_Text, FString CallFunc_TranslateKey_Text, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, Key[] CallFunc_GetMappedKeys_Keys);// 0x1d69c50
	void Init(const ControlsWindow_C* ControlsWindow, FName ActionName, FText FriendlyName, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_NameToString_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, bool CallFunc_EqualEqual_TextText_ReturnValue, FString CallFunc_SelectString_ReturnValue, FString CallFunc_ToUpper_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void BndEvt__NewKey1_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void BndEvt__NewKey2_K2Node_ComponentBoundEvent_1_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void BindInputCaptureEvents();// 0x1d69c50
	void OnInput_Event(Key InputKey);// 0x1d69c50
	void BndEvt__NewKey1_K2Node_ComponentBoundEvent_355_OnClicked__DelegateSignature(bool bSelected, GlowingButton_12_C* Button);// 0x1d69c50
	void BndEvt__NewKey2_K2Node_ComponentBoundEvent_364_OnClicked__DelegateSignature(bool bSelected, GlowingButton_12_C* Button);// 0x1d69c50
	void BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void BndEvt__NewKey_JoystickGamepad_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, GlowingButton_12_C* Button);// 0x1d69c50
	void BndEvt__Button_4_K2Node_ComponentBoundEvent_223_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_4_K2Node_ComponentBoundEvent_244_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_ControlList(int EntryPoint, bool Temp_bool_Variable, SlateColor K2Node_MakeStruct_SlateColor, SlateColor K2Node_MakeStruct_SlateColor, bool K2Node_ComponentBoundEvent_bHovered, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_ComponentBoundEvent_bHovered, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Key K2Node_CustomEvent_InputKey, bool K2Node_ComponentBoundEvent_bSelected, GlowingButton_12_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, GlowingButton_12_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bHovered, bool K2Node_ComponentBoundEvent_bSelected, GlowingButton_12_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SlateColor K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: GlowingButton_12_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button;//[Offset: 0x268, Size: 1]
	GlowingText_12_C* GlowingText_12_C;//[Offset: 0x270, Size: 1]
	FText ButtonText;//[Offset: 0x278, Size: 1]
	LinearColor RegularColor;//[Offset: 0x290, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x2b0, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x2c0, Size: 1]
	LinearColor SelectedHoveredColor;//[Offset: 0x2d0, Size: 1]
	bool bHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e0, Size: 1]
	bool bSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e1, Size: 1]
	bool bIsToggle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e2, Size: 1]
	MulticastInlineDelegateProperty OnHover;//[Size: 1]
	bool bShowShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	void SetText(FText Text);// 0x1d69c50
	void UpdateButtonColor(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void SetSelected(bool bSelected);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_GlowingButton(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_Event_IsDesignTime);// 0x1d69c50
	void OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void OnClicked__DelegateSignature(bool bSelected, GlowingButton_12_C* Button);// 0x1d69c50

--------------------------------
Class: GlowingText_12_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* CenterTextBlock;//[Offset: 0x268, Size: 1]
	Overlay* Glow;//[Offset: 0x270, Size: 1]
	Overlay* TextOverlay;//[Offset: 0x278, Size: 1]
	FText ButtonText;//[Offset: 0x280, Size: 1]
	bool bShowShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	bool bAutoInit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x299, Size: 1]
	void SetText(FText Text);// 0x1d69c50
	void Update(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, TextBlock* K2Node_DynamicCast_AsText, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Init(FText Text, bool bShowShadow);// 0x1d69c50
	void SetGlowing(bool bGlowing, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool CallFunc_BooleanAND_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_GlowingText(int EntryPoint, bool K2Node_Event_IsDesignTime);// 0x1d69c50

--------------------------------
Class: InputSettings.Object
	InputAxisConfigEntry[] AxisConfig;//[Offset: 0x28, Size: 1]
	bool bAltEnterTogglesFullscreen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x38, Size: 1]
	bool bF11TogglesFullscreen;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x38, Size: 1]
	bool bUseMouseForTouch;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x38, Size: 1]
	bool bEnableMouseSmoothing;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x38, Size: 1]
	bool bEnableFOVScaling;//(ByteOffset: 0, ByteMask: 16, FieldMask: 16)[Offset: 0x38, Size: 1]
	bool bCaptureMouseOnLaunch;//(ByteOffset: 0, ByteMask: 32, FieldMask: 32)[Offset: 0x38, Size: 1]
	bool bDefaultViewportMouseLock;//(ByteOffset: 0, ByteMask: 64, FieldMask: 64)[Offset: 0x38, Size: 1]
	bool bAlwaysShowTouchInterface;//(ByteOffset: 0, ByteMask: 128, FieldMask: 128)[Offset: 0x38, Size: 1]
	bool bShowConsoleOnFourFingerTap;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x39, Size: 1]
	bool bEnableGestureRecognizer;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x39, Size: 1]
	bool bUseAutocorrect;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a, Size: 1]
	FString[] ExcludedAutocorrectOS;//[Offset: 0x40, Size: 1]
	FString[] ExcludedAutocorrectCultures;//[Offset: 0x50, Size: 1]
	FString[] ExcludedAutocorrectDeviceModels;//[Offset: 0x60, Size: 1]
	enum DefaultViewportMouseCaptureMode;//[Offset: 0x70, Size: 1]
	enum DefaultViewportMouseLockMode;//[Offset: 0x71, Size: 1]
	float FOVScale;//[Offset: 0x74, Size: 1]
	float DoubleClickTime;//[Offset: 0x78, Size: 1]
	InputActionKeyMapping[] ActionMappings;//[Offset: 0x80, Size: 1]
	InputAxisKeyMapping[] AxisMappings;//[Offset: 0x90, Size: 1]
	InputActionSpeechMapping[] SpeechMappings;//[Offset: 0xa0, Size: 1]
	class PlayerInput* DefaultPlayerInputClass;//[Offset: 0xb0, Size: 1]
	class InputComponent* DefaultInputComponentClass;//[Offset: 0xd8, Size: 1]
	SoftObjectPath DefaultTouchInterface;//[Offset: 0x100, Size: 1]
	Key ConsoleKey;//[Offset: 0x118, Size: 1]
	Key[] ConsoleKeys;//[Offset: 0x130, Size: 1]
	void SaveKeyMappings();// 0x3f264b0
	void RemoveAxisMapping(out const InputAxisKeyMapping KeyMapping, bool bForceRebuildKeymaps);// 0x3f26260
	void RemoveActionMapping(out const InputActionKeyMapping KeyMapping, bool bForceRebuildKeymaps);// 0x3f260b0
	static InputSettings* GetInputSettings();// 0x3f25a20
	void GetAxisNames(out FName[] AxisNames);// 0x3f25550
	void GetAxisMappingByName(const FName InAxisName, out InputAxisKeyMapping[] OutMappings);// 0x3f25410
	void GetActionNames(out FName[] ActionNames);// 0x3f25360
	void GetActionMappingByName(const FName InActionName, out InputActionKeyMapping[] OutMappings);// 0x3f25220
	void ForceRebuildKeymaps();// 0x3f25200
	void AddAxisMapping(out const InputAxisKeyMapping KeyMapping, bool bForceRebuildKeymaps);// 0x3f248f0
	void AddActionMapping(out const InputActionKeyMapping KeyMapping, bool bForceRebuildKeymaps);// 0x3f24740

--------------------------------
Class: InputAxisConfigEntry
	FName AxisKeyName;//[Offset: 0x0, Size: 1]
	InputAxisProperties AxisProperties;//[Offset: 0x8, Size: 1]

--------------------------------
Class: InputAxisProperties
	float DeadZone;//[Offset: 0x0, Size: 1]
	float Sensitivity;//[Offset: 0x4, Size: 1]
	float Exponent;//[Offset: 0x8, Size: 1]
	bool bInvert;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xc, Size: 1]

--------------------------------
Class: InputActionKeyMapping
	FName ActionName;//[Offset: 0x0, Size: 1]
	bool bShift;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x8, Size: 1]
	bool bCtrl;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x8, Size: 1]
	bool bAlt;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x8, Size: 1]
	bool bCmd;//(ByteOffset: 0, ByteMask: 8, FieldMask: 8)[Offset: 0x8, Size: 1]
	Key Key;//[Offset: 0x10, Size: 1]

--------------------------------
Class: InputActionSpeechMapping
	FName ActionName;//[Offset: 0x0, Size: 1]
	FName SpeechKeyword;//[Offset: 0x8, Size: 1]

--------------------------------
Class: CreditsWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	VerticalBox* CreditList;//[Offset: 0x268, Size: 1]
	ScrollBox* CreditsScrollBox;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	bool bIsHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	float ScrollSpeed;//[Offset: 0x28c, Size: 1]
	void CheckScrollToTop(ScrollBox* ScrollBox, float NewScrollOffset, float CallFunc_GetScrollOffset_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void LoadCredits(FString[] New Strings, CreditListItem_Header_C* Last Header, SQCreditsList Current Credit, int String ID, bool Do 4 Columns, CreditListItem_C* Last Text Item, FString[] Local Strings, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, FText CallFunc_GetText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_EqualEqual_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FString[] K2Node_MakeArray_Array, FString CallFunc_Array_Get_Item, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, CreditListItem_4Columns_C* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, int Temp_int_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_GetText_ReturnValue, FText CallFunc_Format_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_GetText_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Format_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, CreditListItem_C* CallFunc_Create_ReturnValue, FText CallFunc_Format_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, CreditListItem_Header_C* CallFunc_Create_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, SQCreditsList[] CallFunc_LoadCredits_OutCreditsList, int CallFunc_Array_Length_ReturnValue, SQCreditsList CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void ExecuteUbergraph_CreditsWindow(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetScrollOffset_ReturnValue, const PointerEvent K2Node_Event_MouseEvent, float CallFunc_Add_FloatFloat_ReturnValue, Geometry K2Node_Event_MyGeometry, const PointerEvent K2Node_Event_MouseEvent);// 0x1d69c50

--------------------------------
Class: CreditListItem_Header_C.UserWidget.Widget.Visual.Object
	TextBlock* Title;//[Offset: 0x260, Size: 1]
	CreditsWindow_C* CreditsWindow;//[Offset: 0x268, Size: 1]
	FText Header Text;//[Offset: 0x270, Size: 1]
	FText Title Text();// 0x1d69c50

--------------------------------
Class: SQCreditsList
	enum LineType;//[Offset: 0x0, Size: 1]
	FString Name;//[Offset: 0x8, Size: 1]
	FString[] Columns;//[Offset: 0x18, Size: 1]

--------------------------------
Class: CreditListItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Spacer* Spacer_Centre;//[Offset: 0x268, Size: 1]
	TextBlock* TB_Left;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Right;//[Offset: 0x278, Size: 1]
	FString[] Columns;//[Offset: 0x280, Size: 1]
	void Refresh(out FString[] New Columns, SlateChildSize K2Node_MakeStruct_SlateChildSize, bool Temp_bool_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, FString CallFunc_Array_Get_Item, FText CallFunc_Conv_StringToText_ReturnValue, FString CallFunc_Array_Get_Item, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_Array_Length_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FText CallFunc_GetText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, HorizontalBoxSlot* CallFunc_SlotAsHorizontalBoxSlot_ReturnValue, FText CallFunc_Format_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, SlateChildSize K2Node_MakeStruct_SlateChildSize, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int Temp_int_Loop_Counter_Variable, TextBlock* K2Node_Select_Default, FText CallFunc_GetText_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_CreditListItem(int EntryPoint);// 0x1d69c50

--------------------------------
Class: CreditListItem_4Columns_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* TB;//[Offset: 0x268, Size: 1]
	TextBlock* TB;//[Offset: 0x270, Size: 1]
	TextBlock* TB;//[Offset: 0x278, Size: 1]
	TextBlock* TB;//[Offset: 0x280, Size: 1]
	FString[] ColumnText;//[Offset: 0x288, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_CreditListItem_4Columns(int EntryPoint, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, FString CallFunc_Array_Get_Item, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, TextBlock*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, TextBlock* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: ServerBrowserWindow_C.SQServerBrowserWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x298, Size: 1]
	Button* Button_ClearSearch;//[Offset: 0x2a0, Size: 1]
	Border* CurrentServerParent;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	UniformGridPanel* PromotedGrid;//[Offset: 0x2c0, Size: 1]
	VerticalBox* PromotedVerticalBox;//[Offset: 0x2c8, Size: 1]
	EditableTextBox* SearchBox;//[Offset: 0x2d0, Size: 1]
	ServerDetails_C* ServerDetails_C;//[Offset: 0x2d8, Size: 1]
	UniformGridPanel* ServerListGrid;//[Offset: 0x2e0, Size: 1]
	SortableColumnButton_C* SortGameMode;//[Offset: 0x2e8, Size: 1]
	SortableColumnButton_C* SORTHealth;//[Offset: 0x2f0, Size: 1]
	SortableColumnButton_C* SORTMaps;//[Offset: 0x2f8, Size: 1]
	SortableColumnButton_C* SortNumPlayers;//[Offset: 0x300, Size: 1]
	SortableColumnButton_C* SortPing;//[Offset: 0x308, Size: 1]
	SortableColumnButton_C* SortServerName;//[Offset: 0x310, Size: 1]
	WidgetSwitcher* SwitcherDetails;//[Offset: 0x318, Size: 1]
	CircularThrobber* Throbber;//[Offset: 0x320, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Loading;//[Offset: 0x328, Size: 1]
	ServerListItem_C* SelectedServerItem;//[Offset: 0x330, Size: 1]
	int WrongVersionServerCount;//[Offset: 0x338, Size: 1]
	int SameVersionServerCount;//[Offset: 0x33c, Size: 1]
	bool Show Licensed Servers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	bool Show Unlicensed Servers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x341, Size: 1]
	FText Browser Header;//[Offset: 0x348, Size: 1]
	int CurrentServerIndex;//[Offset: 0x360, Size: 1]
	ServerListItem_C* JoiningServer;//[Offset: 0x368, Size: 1]
	bool Show Queue Window;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x370, Size: 1]
	BlueprintSessionResult[] Results;//[Offset: 0x378, Size: 1]
	bool Is Sorted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x388, Size: 1]
	MainMenuScreen_C* REF_MainMenu;//[Offset: 0x390, Size: 1]
	MulticastInlineDelegateProperty Found Sessions;//[Size: 1]
	BlueprintSessionResult[] Composited Sessions;//[Offset: 0x3a8, Size: 1]
	bool Search Complete;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3b8, Size: 1]
	FString Current Search;//[Offset: 0x3c0, Size: 1]
	bool UseUniqueWhitelistBox;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3d0, Size: 1]
	bool Has Promoted Servers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3d1, Size: 1]
	BP_ServerPassword_C* ServerPasswordWidget;//[Offset: 0x3d8, Size: 1]
	BP_ModdedServerWarning_C* ModdedServerWarning;//[Offset: 0x3e0, Size: 1]
	enum Set Promoted Box Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void Should filter server(out const BlueprintSessionResult Session, out bool Hide, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FString CallFunc_GetServerUniqueId_OutUniqueId, bool CallFunc_GetServerUniqueId_ReturnValue, FString CallFunc_GetGameVersion_ReturnValue, FString CallFunc_GetMajorMinorVersion_ReturnValue, bool CallFunc_IsServerModded_bIsWhitelisted, bool CallFunc_IsServerModded_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_GetLicensedServer_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_GetCurrentPlayers_ReturnValue, int CallFunc_GetMaxPlayers_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FString CallFunc_GetMapName_ReturnValue, FString CallFunc_GetGameMode_ReturnValue, FString CallFunc_GetServerName_ReturnValue, int Temp_int_Array_Index_Variable, int CallFunc_GetCurrentPlayers_ReturnValue, SQServerListItemWidget* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_IsSameServer_ReturnValue, FString CallFunc_GetGameVersion_ReturnValue, FString CallFunc_GetMajorMinorVersion_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool CallFunc_NotEqual_StrStr_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_Len_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Contains_ReturnValue, bool CallFunc_Contains_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Contains_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Save Last Sort Type(byte Type, bool LastAscendingSortType, SaveData_UI_C* Save, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Organise List Rows(int L Promoted Index, int L Normal Index, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQLicensedServerManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool Temp_bool_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQServerListItemWidget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsServerPromoted_ReturnValue, UniformGridSlot* K2Node_DynamicCast_AsUniform_Grid_Slot, bool K2Node_DynamicCast_bSuccess, int K2Node_Select_Default);// 0x1d69c50
	void Add unique sessions(out BlueprintSessionResult[] Results, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, BlueprintSessionResult CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue);// 0x1d69c50
	void Reset Search();// 0x1d69c50
	void Remove Current Server();// 0x1d69c50
	void Check Mods(out const ServerListItem_C* ServerListItem, out bool In Sync, SQModLoadProgress[] CallFunc_CheckMissingMods_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_ModDownloadWindow_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Set Details Widget Switcher(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Sort List by Health Status(bool Ascending, SQServerListItemWidget*[] No Health, SQServerListItemWidget*[] High Health List, SQServerListItemWidget*[] Mid Health List, SQServerListItemWidget*[] Low Health List, int Temp_int_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQServerListItemWidget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, SQServerListItemWidget*[] K2Node_Select_Default, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void Sort List(bool Is Ascending, byte Sort Type, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, byte Temp_byte_Variable, bool K2Node_SwitchEnum_CmpSuccess, Object* K2Node_Select_Default, SortableColumnButton_C*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, SortableColumnButton_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	enum GetCheckedShowReservedSlots(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	enum GetCheckedShowQueuesSeparately(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	enum GetQueueServerButtonVisibility(bool CallFunc_IsQueueEnabled_ReturnValue);// 0x1d69c50
	bool GetQueueServerButtonIsEnabled(bool CallFunc_IsQueueEnabled_ReturnValue);// 0x1d69c50
	void StartQueue(GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanQueueForServer_ReturnValue);// 0x1d69c50
	enum GetCheckedShowEmptyServers(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	enum GetCheckedShowDiffServers(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void GetServerIndex(int PingMs, out int Index, bool FoundIndex, int ReturnIndex, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, UserWidget* CallFunc_Array_Get_Item, ServerListItem_C* K2Node_DynamicCast_AsServer_List_Item, bool K2Node_DynamicCast_bSuccess, UniformGridSlot* CallFunc_SlotAsUniformGridSlot_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void UpdateSession(BlueprintSessionResult Result, SQServerListItemWidget*[] L Update List, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQServerListItemWidget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsSameServer_ReturnValue);// 0x1d69c50
	void AddNewServerWidget(out const BlueprintSessionResult Result, out ServerListItem_C* Item, UniformGridSlot* L List Item Row, ServerListItem_C* L List Item, bool ServerAlreadyOnTheList, bool CallFunc_Should_filter_server_Hide, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_Array_Add_ReturnValue, SQLicensedServerManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, SQLicensedServerManager* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsServerPromoted_ReturnValue, bool CallFunc_IsServerPromoted_ReturnValue, int Temp_int_Variable, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable, UniformGridPanel* K2Node_Select_Default, UniformGridSlot* CallFunc_AddChildToUniformGrid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, ServerListItem_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void ResetServerIndex();// 0x1d69c50
	void ResetSortButtons();// 0x1d69c50
	void StopUpdatingThrobber();// 0x1d69c50
	enum GetLicensingNoticeVisibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_ServerLicensingNoticeNeeded_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void UpdateServerList();// 0x1d69c50
	void RequestJoinServer(BlueprintSessionResult Session);// 0x1d69c50
	void Construct();// 0x1d69c50
	void passwordEnteredForced(FString Password, BP_ServerPassword_C* Sender);// 0x1d69c50
	void Request Join Press(ServerListItem_C* Button);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_ClearSearch_K2Node_ComponentBoundEvent_314_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void Refresh Last Sorting();// 0x1d69c50
	void JoiningCancelled();// 0x1d69c50
	void WarningAcknowledgedHandler();// 0x1d69c50
	void OnSuccess(out const BlueprintSessionResult[] Results);// 0x1d69c50
	void OnUpdateSession(out const BlueprintSessionResult[] Results);// 0x1d69c50
	void OnFailure();// 0x1d69c50
	void ExecuteUbergraph_ServerBrowserWindow(int EntryPoint, BlueprintSessionResult K2Node_CustomEvent_Session, FText CallFunc_MakeLiteralText_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_GetPasswordProtected_ReturnValue, BP_ServerPassword_C* CallFunc_Create_ReturnValue, BP_ModdedServerWarning_C* CallFunc_Create_ReturnValue, FString K2Node_CustomEvent_Password, BP_ServerPassword_C* K2Node_CustomEvent_Sender, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, ServerListItem_C* K2Node_CustomEvent_Button, BlueprintSessionResult CallFunc_Array_Get_Item, ServerListItem_C* CallFunc_AddNewServerWidget_Item, bool CallFunc_IsValid_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Check_Mods_In_Sync, bool CallFunc_NotEqual_ObjectObject_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_VerifyPassword_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_ShouldSkipPassword_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsServerModded_bIsWhitelisted, bool CallFunc_IsServerModded_ReturnValue, bool CallFunc_IsValid_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, const BlueprintSessionResult[] K2Node_Event_Results, const BlueprintSessionResult[] K2Node_Event_Results, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void Found Sessions__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQServerBrowserWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	enum ServerNameSortedState;//[Offset: 0x260, Size: 1]
	enum MapNameSortedState;//[Offset: 0x261, Size: 1]
	enum GameModeSortedState;//[Offset: 0x262, Size: 1]
	enum NumPlayersSortedState;//[Offset: 0x263, Size: 1]
	enum PingSortedState;//[Offset: 0x264, Size: 1]
	SQServerListItemWidget*[] SessionList;//[Offset: 0x268, Size: 1]
	UserWidget*[] SessionSortList;//[Offset: 0x278, Size: 1]
	bool bCanStartNewFindSessions;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	SQFindSessionsCallbackProxy* CurrentCallback;//[Offset: 0x290, Size: 1]
	void UpdateSortedState(enum SortLevel);// 0xdfc790
	void UpdateIndexes();// 0xd3d1a0
	void StartFindSessions();// 0xdfb570
	void SortServerName(bool bIsAscending);// 0xdfb4c0
	void SortPing(bool bIsAscending);// 0xdfb430
	void SortNumPlayers(bool bIsAscending);// 0xdfb3a0
	void SortMapName(bool bIsAscending);// 0xdfb310
	void SortGameMode(bool bIsAscending);// 0xdfb280
	void SortByName(enum SortByColumn, bool bIsAscending);// 0xdfb1a0
	void ResetSortedState();// 0xdefb20
	void OnUpdateSession(out const BlueprintSessionResult[] Results);// 0x1d69c50
	void OnSuccess(out const BlueprintSessionResult[] Results);// 0x1d69c50
	void OnFindSessionsNewSessionUpdate(out const BlueprintSessionResult SessionResult);// 0xdfae40
	void OnFindSessionsCompleted(out const BlueprintSessionResult[] Results, bool bSuccess);// 0xdfad20
	void OnFindSessionsCancelled();// 0xdfad00
	void OnFailure();// 0x1d69c50

--------------------------------
Class: SQLicensedServerManager.GameInstanceSubsystem.Subsystem.Object
	bool IsServerPromoted(out const BlueprintSessionResult Result);// 0xdab1e0

--------------------------------
Class: GameInstanceSubsystem.Subsystem.Object

--------------------------------
Class: UniformGridSlot.PanelSlot.Visual.Object
	byte HorizontalAlignment;//[Offset: 0x38, Size: 1]
	byte VerticalAlignment;//[Offset: 0x39, Size: 1]
	int Row;//[Offset: 0x3c, Size: 1]
	int Column;//[Offset: 0x40, Size: 1]
	void SetVerticalAlignment(byte InVerticalAlignment);// 0x33fffd0
	void SetRow(int InRow);// 0x33ffe20
	void SetHorizontalAlignment(byte InHorizontalAlignment);// 0x33ff720
	void SetColumn(int InColumn);// 0x33ff520

--------------------------------
Class: UniformGridPanel.PanelWidget.Widget.Visual.Object
	Margin SlotPadding;//[Offset: 0x120, Size: 1]
	float MinDesiredSlotWidth;//[Offset: 0x130, Size: 1]
	float MinDesiredSlotHeight;//[Offset: 0x134, Size: 1]
	void SetSlotPadding(Margin InSlotPadding);// 0x33ffeb0
	void SetMinDesiredSlotWidth(float InMinDesiredSlotWidth);// 0x33ffa10
	void SetMinDesiredSlotHeight(float InMinDesiredSlotHeight);// 0x33ff990
	UniformGridSlot* AddChildToUniformGrid(Widget* Content, int InRow, int InColumn);// 0x33fddc0

--------------------------------
Class: ServerDetails_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* Button_Favourite;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_Join;//[Offset: 0x270, Size: 1]
	Image* Flag_TeamOne;//[Offset: 0x278, Size: 1]
	Image* Flag_TeamTwo;//[Offset: 0x280, Size: 1]
	Image* ServerImage;//[Offset: 0x288, Size: 1]
	TextBlock* TB_GameMode;//[Offset: 0x290, Size: 1]
	TextBlock* TB_LayerName;//[Offset: 0x298, Size: 1]
	TextBlock* TB_LevelName;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_PlayTime;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_ServerName;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Version;//[Offset: 0x2b8, Size: 1]
	W_ModList_C* W_ModList;//[Offset: 0x2c0, Size: 1]
	MulticastInlineDelegateProperty Details Join Button;//[Size: 1]
	ServerBrowserWindow_C* BrowserWindow;//[Offset: 0x2d8, Size: 1]
	bool FlagOneSet;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e0, Size: 1]
	bool FlagTwoSet;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e1, Size: 1]
	TimerHandle Timer;//[Offset: 0x2e8, Size: 1]
	void UpdateFlags(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void Update Favourite(bool IsLicensed, FString ServerId, ServerListItem_C* ItemRow, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidFavourite_Valid, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetServerUniqueId_OutUniqueId, bool CallFunc_GetServerUniqueId_ReturnValue);// 0x1d69c50
	void Toggle Favourite(bool Is Fave, bool Added, FString L UniqueId, SaveData_UI_C* L Save, bool CallFunc_Toggle_Favourite_Valid, bool CallFunc_Toggle_Favourite_Favourite);// 0x1d69c50
	void Refresh(FString ModListString, bool CallFunc_IsValid_ReturnValue, BP_SQLayer_C* K2Node_DynamicCast_AsBP_SQLayer, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetGameModeEntry_Success, SQGameModeEntry CallFunc_TryGetGameModeEntry_GameModeEntry, bool CallFunc_TryGetLayerEntry_Success, SQLayerEntry CallFunc_TryGetLayerEntry_LayerEntry, bool CallFunc_TryGetLevelEntry_Success, SQLevelEntry CallFunc_TryGetLevelEntry_LevelEntry, FText CallFunc_GetPlayTime_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void BndEvt__MainMenu_Button_Development_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Favourite_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Looping Update();// 0x1d69c50
	void ExecuteUbergraph_ServerDetails(int EntryPoint, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_NotEqual_ObjectObject_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50
	void Details Join Button__DelegateSignature();// 0x1d69c50

--------------------------------
Class: ServerListItem_C.SQServerListItemWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x450, Size: 1]
	Border* Border;//[Offset: 0x458, Size: 1]
	Button* Button_Fave;//[Offset: 0x460, Size: 1]
	Image* Favourite;//[Offset: 0x468, Size: 1]
	Image* Flag_TeamOne;//[Offset: 0x470, Size: 1]
	Image* Flag_TeamTwo;//[Offset: 0x478, Size: 1]
	Image* ImageHealth;//[Offset: 0x480, Size: 1]
	Image* Locked;//[Offset: 0x488, Size: 1]
	Image* ModIcon;//[Offset: 0x490, Size: 1]
	TextBlock* TB_GameModeName;//[Offset: 0x498, Size: 1]
	TextBlock* TB_MapName;//[Offset: 0x4a0, Size: 1]
	TextBlock* TB_Ping;//[Offset: 0x4a8, Size: 1]
	TextBlock* TB_Players;//[Offset: 0x4b0, Size: 1]
	TextBlock* TB_PlayTime;//[Offset: 0x4b8, Size: 1]
	TextBlock* TB_ServerName;//[Offset: 0x4c0, Size: 1]
	Image* VAC;//[Offset: 0x4c8, Size: 1]
	ServerBrowserWindow_C* BrowserWindow;//[Offset: 0x4d0, Size: 1]
	Texture2D* PasswordedImage;//[Offset: 0x4d8, Size: 1]
	Texture2D* UnpasswordedImage;//[Offset: 0x4e0, Size: 1]
	MulticastInlineDelegateProperty RequestJoin;//[Size: 1]
	Texture2D* VacOn;//[Offset: 0x4f8, Size: 1]
	Texture2D* VACOff;//[Offset: 0x500, Size: 1]
	Texture2D* FavoritesOn;//[Offset: 0x508, Size: 1]
	Texture2D* FavoritesOff;//[Offset: 0x510, Size: 1]
	LinearColor SelectedColor;//[Offset: 0x518, Size: 1]
	LinearColor UnselectedColor;//[Offset: 0x528, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x538, Size: 1]
	bool Licensed?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x548, Size: 1]
	LinearColor JoiningColor;//[Offset: 0x54c, Size: 1]
	FString Marquee String;//[Offset: 0x560, Size: 1]
	FriendsBrowserWindow_C* Friend List;//[Offset: 0x570, Size: 1]
	BlueprintSessionResult In Session;//[Offset: 0x578, Size: 1]
	bool Enabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x680, Size: 1]
	TimerHandle FlagTimerHandle;//[Offset: 0x688, Size: 1]
	bool FlagOneSet;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x690, Size: 1]
	bool FlagTwoSet;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x691, Size: 1]
	void IsValidFavourite(out FString[] Favourites, out FString UniqueID, bool Licensed, out bool Valid, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Contains_ReturnValue, int CallFunc_Len_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void UpdateFlags(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, BP_SQFactionSetup_C* K2Node_DynamicCast_AsBP_SQFaction_Setup, bool K2Node_DynamicCast_bSuccess, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Toggle Favourite(out bool Valid, out bool Favourite, bool Added, FString L UniqueId, SaveData_UI_C* L Save, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, int CallFunc_Len_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FString CallFunc_GetServerUniqueId_OutUniqueId, bool CallFunc_GetServerUniqueId_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_Array_Contains_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool CallFunc_Array_RemoveItem_ReturnValue);// 0x1d69c50
	FText GetPlayTime(int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	LinearColor GetFavouriteColor(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, FString CallFunc_GetServerUniqueId_OutUniqueId, bool CallFunc_GetServerUniqueId_ReturnValue, bool CallFunc_IsValidFavourite_Valid, LinearColor K2Node_Select_Default);// 0x1d69c50
	Widget* TooltipFavourite(const FText Temp_text_Variable, UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* TooltipVAC(const FText Temp_text_Variable, UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* TooltipLocked(const FText Temp_text_Variable, UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* TooltipModIcon(W_ModTooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDoubleClick(Geometry InMyGeometry, out const PointerEvent InMouseEvent, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	LinearColor Get_Modded_Icon_Color(bool CallFunc_Is_Whitelisted_Is_Whitelisted, bool CallFunc_Is_Modded_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	bool Is Modded();// 0x1d69c50
	void Is Whitelisted(out bool Is Whitelisted);// 0x1d69c50
	void Set Friend Count();// 0x1d69c50
	Widget* Get_ImageHealth_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void IsJoinServer(out bool Selected, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Get Queue Object(out bool In Queue, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void UpdatePlayerCounts(FText Temp_text_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Format_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool Temp_bool_Variable, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText CallFunc_Format_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FString CallFunc_SelectString_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_SelectString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void IsSelected(out bool Selected, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	LinearColor Get Main Color(bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool CallFunc_IsJoinServer_Selected, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_IsSelected_Selected, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Init(bool IsLicensed, bool L Favourite, FText ReservedText, FText ReservedText, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, int Temp_int_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, int Temp_int_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, LinearColor K2Node_Select_Default, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, FString CallFunc_GetServerUniqueId_OutUniqueId, bool CallFunc_GetServerUniqueId_ReturnValue, bool CallFunc_IsValidFavourite_Valid, FString CallFunc_GetGameVersion_ReturnValue, FString CallFunc_GetGameVersion_ReturnValue, FString CallFunc_GetMajorMinorVersion_ReturnValue, FString CallFunc_GetMajorMinorVersion_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, FString CallFunc_GetGameVersion_ReturnValue, FString CallFunc_GetMajorMinorVersion_ReturnValue, LinearColor K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, LinearColor K2Node_Select_Default, float K2Node_Select_Default, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, FString CallFunc_GetGameVersion_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FString CallFunc_GetMajorMinorVersion_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, LinearColor K2Node_Select_Default, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void ClientJoinAccepted();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Marquee();// 0x1d69c50
	void Finished Refresh_Event();// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void Start Marquee();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_Fave_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void UpdateTeam Flags();// 0x1d69c50
	void ExecuteUbergraph_ServerListItem(int EntryPoint, bool CallFunc_Toggle_Favourite_Valid, bool CallFunc_Toggle_Favourite_Favourite, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, TimerHandle CallFunc_K2_SetTimer_ReturnValue, FString CallFunc_RightChop_ReturnValue, bool CallFunc_IsHovered_ReturnValue, int CallFunc_Len_ReturnValue, FString CallFunc_Left_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FriendsBrowserWindow_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, FText CallFunc_Format_ReturnValue, FriendsBrowserWindow_C* CallFunc_Array_Get_Item, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Len_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, Geometry K2Node_Event_MyGeometry, const PointerEvent K2Node_Event_MouseEvent, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime);// 0x1d69c50
	void RequestJoin__DelegateSignature(ServerListItem_C* Button);// 0x1d69c50

--------------------------------
Class: FriendsBrowserWindow_C.SQFriendsBrowserWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	Button* Button_ClearSearch;//[Offset: 0x278, Size: 1]
	UniformGridPanel* FriendListGrid;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	EditableTextBox* SearchBox;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Name;//[Offset: 0x298, Size: 1]
	TextBlock* TB_Status;//[Offset: 0x2a0, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2a8, Size: 1]
	Throbber* Throbber;//[Offset: 0x2b0, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Loading;//[Offset: 0x2b8, Size: 1]
	SQBlueprintFriend[] Current Friends;//[Offset: 0x2c0, Size: 1]
	MulticastInlineDelegateProperty Finished Search;//[Size: 1]
	FriendListItem_C*[] Friend List Items;//[Offset: 0x2e0, Size: 1]
	MulticastInlineDelegateProperty Finished Refresh;//[Size: 1]
	MulticastInlineDelegateProperty Start Search;//[Size: 1]
	MulticastInlineDelegateProperty Set Composited Sessions;//[Size: 1]
	BlueprintSessionResult[] Current Sessions;//[Offset: 0x320, Size: 1]
	void Parse Friends and Sessions(BlueprintSessionResult L session, int Temp_int_Array_Index_Variable, bool CallFunc_Array_IsValidIndex_ReturnValue, int Temp_int_Loop_Counter_Variable, FriendListItem_C* CallFunc_Array_Get_Item, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_GetUsersSessionIndex_ReturnValue, BlueprintSessionResult CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Clear Search(int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void Search Friends(FString Substring, int Visible Items);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnSuccess(out const SQBlueprintFriend[] Results);// 0x1d69c50
	void OnFailure();// 0x1d69c50
	void Refresh Friends();// 0x1d69c50
	void BndEvt__Button_ClearSearch_K2Node_ComponentBoundEvent_314_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__SearchBox_K2Node_ComponentBoundEvent_462_OnEditableTextBoxChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void Set Composited Sessions_Event(out BlueprintSessionResult[] Sessions);// 0x1d69c50
	void ExecuteUbergraph_FriendsBrowserWindow(int EntryPoint, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, const SQBlueprintFriend[] K2Node_Event_Results, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FriendListItem_C* CallFunc_Create_ReturnValue, UniformGridSlot* CallFunc_AddChildToUniformGrid_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, bool CallFunc_TextIsEmpty_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, SQBlueprintFriend CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, BlueprintSessionResult[] K2Node_CustomEvent_Sessions);// 0x1d69c50
	void Set Composited Sessions__DelegateSignature(out BlueprintSessionResult[] Sessions);// 0x1d69c50
	void Start Search__DelegateSignature();// 0x1d69c50
	void Finished Refresh__DelegateSignature();// 0x1d69c50
	void Finished Search__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQFriendsBrowserWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	bool bCanStartNewFindFriends;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x260, Size: 1]
	SQFindFriendsCallbackProxy* CurrentCallback;//[Offset: 0x268, Size: 1]
	void StartFindFriends();// 0xd3d1a0
	void OnSuccess(out const SQBlueprintFriend[] Results);// 0x1d69c50
	void OnFindFriendsCompleted(out const SQBlueprintFriend[] Results, bool bSuccess);// 0xd8ccd0
	void OnFailure();// 0x1d69c50

--------------------------------
Class: SQBlueprintFriend
	FString DisplayName;//[Offset: 0x0, Size: 1]
	FString RealName;//[Offset: 0x10, Size: 1]
	FString StatusString;//[Offset: 0x20, Size: 1]
	bool bIsOnline;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x30, Size: 1]
	bool bIsPlaying;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x31, Size: 1]
	bool bIsPlayingThisGame;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x32, Size: 1]
	bool bIsJoinable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x33, Size: 1]

--------------------------------
Class: FriendListItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button_Main;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* ButtonJoin;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Name;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Session;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Status;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty RequestJoin;//[Size: 1]
	FString Marquee String;//[Offset: 0x2a0, Size: 1]
	SQBlueprintFriend Friend Struct;//[Offset: 0x2b0, Size: 1]
	BlueprintSessionResult Friends Session;//[Offset: 0x310, Size: 1]
	void Init Data(FText CallFunc_Conv_StringToText_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Marquee();// 0x1d69c50
	void BndEvt__Button_64_K2Node_ComponentBoundEvent_18_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__ButtonJoin_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Set Session(BlueprintSessionResult Friends Session);// 0x1d69c50
	void Clear Session();// 0x1d69c50
	void ExecuteUbergraph_FriendListItem(int EntryPoint, int CallFunc_Len_ReturnValue, FString CallFunc_GetServerName_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FString CallFunc_GetGameMode_ReturnValue, FString CallFunc_GetMapName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, TimerHandle CallFunc_K2_SetTimer_ReturnValue, FText CallFunc_Format_ReturnValue, bool CallFunc_IsHovered_ReturnValue, FString CallFunc_RightChop_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, FString CallFunc_Left_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Len_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FText CallFunc_Format_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, BlueprintSessionResult K2Node_CustomEvent_Friends_Session);// 0x1d69c50
	void RequestJoin__DelegateSignature(BlueprintSessionResult Button);// 0x1d69c50

--------------------------------
Class: Throbber.Widget.Visual.Object
	int NumberOfPieces;//[Offset: 0x108, Size: 1]
	bool bAnimateHorizontally;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10c, Size: 1]
	bool bAnimateVertically;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10d, Size: 1]
	bool bAnimateOpacity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10e, Size: 1]
	SlateBrushAsset* PieceImage;//[Offset: 0x110, Size: 1]
	SlateBrush Image;//[Offset: 0x118, Size: 1]
	void SetNumberOfPieces(int InNumberOfPieces);// 0x33f8b60
	void SetAnimateVertically(bool bInAnimateVertically);// 0x33f7f80
	void SetAnimateOpacity(bool bInAnimateOpacity);// 0x33f7ef0
	void SetAnimateHorizontally(bool bInAnimateHorizontally);// 0x33f7e60

--------------------------------
Class: W_ModTooltip_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SizeBox* HoverTest;//[Offset: 0x268, Size: 1]
	Image* Line;//[Offset: 0x270, Size: 1]
	TextBlock* TB_ServerName;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Whitelist;//[Offset: 0x280, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem;//[Offset: 0x288, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x290, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x298, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2a0, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2a8, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2b0, Size: 1]
	WrapBox* WrapBox;//[Offset: 0x2b8, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	MulticastInlineDelegateProperty Removed;//[Size: 1]
	float Mouse Offset Y;//[Offset: 0x2d8, Size: 1]
	SQServerListItemWidget* ServerListItem;//[Offset: 0x2e0, Size: 1]
	void Set Position(bool L Mouse Bottom Screen, bool L Mouse Right screen, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, float CallFunc_GetViewportScale_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float K2Node_Select_Default, float K2Node_Select_Default, Vector2D CallFunc_GetViewportSize_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Add_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50
	bool Is Modded();// 0x1d69c50
	void Is Whitelisted(out bool Is Whitelisted);// 0x1d69c50
	FText Get_TB_Whitelist_Text(bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool CallFunc_Is_Modded_ReturnValue, bool CallFunc_Is_Whitelisted_Is_Whitelisted, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Display Mods(W_ModTooltipItem_C* CallFunc_Create_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, WrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void ExecuteUbergraph_W_ModTooltip(int EntryPoint, FString CallFunc_GetServerName_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsHovered_ReturnValue);// 0x1d69c50
	void Removed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_ModTooltipItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BounceAnim;//[Offset: 0x268, Size: 1]
	Button* Button_Mod;//[Offset: 0x270, Size: 1]
	CircularThrobber* CircularThrobber;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	Border* InfoBG;//[Offset: 0x288, Size: 1]
	Image* ModIcon;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Loaded;//[Offset: 0x298, Size: 1]
	TextBlock* TB_ModName;//[Offset: 0x2a0, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x2a8, Size: 1]
	Texture2DDynamic* Texture;//[Offset: 0x2b0, Size: 1]
	SQServerListItemWidget* Server Item;//[Offset: 0x2b8, Size: 1]
	int Mod Index;//[Offset: 0x2c0, Size: 1]
	LinearColor Get_ModIcon_ColorAndOpacity(bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Refresh Mod(bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText CallFunc_Conv_StringToText_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void OnFail_53C93FC34FB69A151AC7438FB4F1B0DC(Texture2DDynamic* Texture);// 0x1d69c50
	void OnSuccess_53C93FC34FB69A151AC7438FB4F1B0DC(Texture2DDynamic* Texture);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Wait for Mod Loading();// 0x1d69c50
	void BndEvt__Button_1_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_226_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_236_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_ModTooltipItem(int EntryPoint, Texture2DDynamic* K2Node_CustomEvent_Texture, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* K2Node_CustomEvent_Texture, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* Temp_object_Variable, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, AsyncTaskDownloadImage* CallFunc_DownloadImage_ReturnValue, FString CallFunc_ToIDString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: AsyncTaskDownloadImage.BlueprintAsyncActionBase.Object
	MulticastInlineDelegateProperty OnSuccess;//[Size: 1]
	MulticastInlineDelegateProperty OnFail;//[Size: 1]
	static AsyncTaskDownloadImage* DownloadImage(FString URL);// 0x33e1980

--------------------------------
Class: CircularThrobber.Widget.Visual.Object
	int NumberOfPieces;//[Offset: 0x108, Size: 1]
	float Period;//[Offset: 0x10c, Size: 1]
	float Radius;//[Offset: 0x110, Size: 1]
	SlateBrushAsset* PieceImage;//[Offset: 0x118, Size: 1]
	SlateBrush Image;//[Offset: 0x120, Size: 1]
	bool bEnableRadius;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1a8, Size: 1]
	void SetRadius(float InRadius);// 0x33e3630
	void SetPeriod(float InPeriod);// 0x33e3430
	void SetNumberOfPieces(int InNumberOfPieces);// 0x33e3040

--------------------------------
Class: W_ModList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* HoverCheckArea;//[Offset: 0x268, Size: 1]
	Border* MainBorder;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Whitelist;//[Offset: 0x278, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem;//[Offset: 0x280, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x288, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x290, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x298, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2a0, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2a8, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2b0, Size: 1]
	W_ModTooltipItem_C* W_ModTooltipItem_C;//[Offset: 0x2b8, Size: 1]
	WrapBox* WrapBox;//[Offset: 0x2c0, Size: 1]
	SQServerListItemWidget* ServerListItem;//[Offset: 0x2c8, Size: 1]
	bool Is Modded(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Is Whitelisted(out bool Is Whitelisted, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	FText Get_TB_Whitelist_Text(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_Is_Modded_ReturnValue, bool CallFunc_Is_Whitelisted_Is_Whitelisted, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Display Mods(W_ModTooltipItem_C* CallFunc_Create_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, WrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	void Init(out const SQServerListItemWidget* ServerListItem);// 0x1d69c50
	void ExecuteUbergraph_W_ModList(int EntryPoint, const SQServerListItemWidget* K2Node_CustomEvent_ServerListItem);// 0x1d69c50

--------------------------------
Class: SortableColumnButton_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button;//[Offset: 0x268, Size: 1]
	Image* Icon;//[Offset: 0x270, Size: 1]
	ScaleBox* IconScaleBox;//[Offset: 0x278, Size: 1]
	Image* SortingArrow;//[Offset: 0x280, Size: 1]
	TextBlock* TB_Main;//[Offset: 0x288, Size: 1]
	VerticalBox* VerticalBox_Main;//[Offset: 0x290, Size: 1]
	FText ButtonText;//[Offset: 0x298, Size: 1]
	LinearColor RegularColor;//[Offset: 0x2b0, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x2d0, Size: 1]
	LinearColor HoveredColor;//[Offset: 0x2e0, Size: 1]
	LinearColor SelectedHoveredColor;//[Offset: 0x2f0, Size: 1]
	bool bHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x300, Size: 1]
	bool bSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x301, Size: 1]
	bool bIsToggle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x302, Size: 1]
	bool bScaleGlowByResolution;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x303, Size: 1]
	class UserWidget* TextSampleClass;//[Offset: 0x308, Size: 1]
	MulticastInlineDelegateProperty OnHover;//[Size: 1]
	bool bShowShadow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x320, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x321, Size: 1]
	enum SortState;//[Offset: 0x322, Size: 1]
	int Text Size;//[Offset: 0x324, Size: 1]
	bool Use Sort Arrow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x328, Size: 1]
	Margin Text Padding Amount;//[Offset: 0x32c, Size: 1]
	bool Use Icon;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x33c, Size: 1]
	SlateColor Icon Color;//[Offset: 0x340, Size: 1]
	float Icon Size;//[Offset: 0x368, Size: 1]
	Texture2D* Icon Image;//[Offset: 0x370, Size: 1]
	byte Fill Style;//[Offset: 0x378, Size: 1]
	Margin Button Padding;//[Offset: 0x37c, Size: 1]
	float ArrowSize;//[Offset: 0x38c, Size: 1]
	enum First Click Unsorted;//[Offset: 0x390, Size: 1]
	byte Sort Type;//[Offset: 0x391, Size: 1]
	void Set Sort State(enum SortState, bool bSelected);// 0x1d69c50
	enum Set Arrow(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void Set Text(FText Text, SlateFontInfo K2Node_MakeStruct_SlateFontInfo);// 0x1d69c50
	void Update Widget(enum Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, OverlaySlot* K2Node_DynamicCast_AsOverlay_Slot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Set Selected(bool bSelected);// 0x1d69c50
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_SortableColumnButton(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool K2Node_Event_IsDesignTime, bool K2Node_Select_Default, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, SlateFontInfo K2Node_MakeStruct_SlateFontInfo, Vector2D CallFunc_MakeVector2D_ReturnValue, Margin K2Node_MakeStruct_Margin, SlateBrush K2Node_MakeStruct_SlateBrush, enum K2Node_Select_Default, bool CallFunc_IsHovered_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, enum K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, enum K2Node_Select_Default, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush, ButtonSlot* K2Node_DynamicCast_AsButton_Slot, bool K2Node_DynamicCast_bSuccess, enum K2Node_Select_Default);// 0x1d69c50
	void OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void OnClicked__DelegateSignature(bool bIsAscending, byte Sort Type);// 0x1d69c50

--------------------------------
Class: BP_ServerPassword_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* AcceptButton;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* DenyButton;//[Offset: 0x270, Size: 1]
	EditableText* EditableText;//[Offset: 0x278, Size: 1]
	Image* Line;//[Offset: 0x280, Size: 1]
	Image* TopLine;//[Offset: 0x288, Size: 1]
	BlueprintSessionResult Session;//[Offset: 0x290, Size: 1]
	MulticastInlineDelegateProperty Password Entered;//[Size: 1]
	FString ServerURL;//[Offset: 0x3a8, Size: 1]
	MulticastInlineDelegateProperty Password Cancelled;//[Size: 1]
	void BndEvt__AcceptButton_K2Node_ComponentBoundEvent_136_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__DenyButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__EditableText_0_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void ExecuteUbergraph_BP_ServerPassword(int EntryPoint, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FText CallFunc_GetText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue);// 0x1d69c50
	void Password Cancelled__DelegateSignature();// 0x1d69c50
	void Password Entered__DelegateSignature(FString Password, BP_ServerPassword_C* Sender);// 0x1d69c50

--------------------------------
Class: BP_ModdedServerWarning_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* AcceptButton;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* DenyButton;//[Offset: 0x270, Size: 1]
	Image* Line;//[Offset: 0x278, Size: 1]
	Image* TopLine;//[Offset: 0x280, Size: 1]
	BlueprintSessionResult Session;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty WarningAcknowledged;//[Size: 1]
	FString ServerURL;//[Offset: 0x3a0, Size: 1]
	MulticastInlineDelegateProperty WarningCancelled;//[Size: 1]
	void BndEvt__AcceptButton_K2Node_ComponentBoundEvent_136_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__DenyButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_BP_ModdedServerWarning(int EntryPoint, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void WarningCancelled__DelegateSignature();// 0x1d69c50
	void WarningAcknowledged__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_ModDownloadWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* Button_Download;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_Exit;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Whitelist;//[Offset: 0x280, Size: 1]
	W_ModDownloadItem_C* W_ModDownloadItem;//[Offset: 0x288, Size: 1]
	W_ModDownloadItem_C* W_ModDownloadItem;//[Offset: 0x290, Size: 1]
	W_ModDownloadItem_C* W_ModDownloadItem;//[Offset: 0x298, Size: 1]
	W_ModDownloadItem_C* W_ModDownloadItem;//[Offset: 0x2a0, Size: 1]
	W_ModDownloadItem_C* W_ModDownloadItem;//[Offset: 0x2a8, Size: 1]
	WrapBox* WrapBox;//[Offset: 0x2b0, Size: 1]
	bool Is Downloading;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	ServerListItem_C* Server List Item;//[Offset: 0x2c0, Size: 1]
	void Init Mod Window(W_ModDownloadItem_C* CallFunc_Create_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, WrapBoxSlot* CallFunc_AddChildToWrapBox_ReturnValue);// 0x1d69c50
	void Update Mod Download Window(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_Is_Download_Successful_Result, FText K2Node_Select_Default, bool CallFunc_Is_Finished_Loading_Result, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Is_Download_Successful_Result, bool CallFunc_Is_Finished_Loading_Result, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Is Download Successful(out bool Result, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQModLoadProgress CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Is Finished Loading(out bool Result, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQModLoadProgress CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_Download_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Cancel_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_ModDownloadWindow(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_Is_Download_Successful_Result, bool CallFunc_Is_Finished_Loading_Result, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_ModDownloadItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BounceAnim;//[Offset: 0x268, Size: 1]
	Button* Button_Mod;//[Offset: 0x270, Size: 1]
	CircularThrobber* CircularThrobber;//[Offset: 0x278, Size: 1]
	ProgressBar* DownloadProgressBar;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	Image* ModIcon;//[Offset: 0x290, Size: 1]
	Border* Prog_BG;//[Offset: 0x298, Size: 1]
	TextBlock* TB_DownloadState;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_ModName;//[Offset: 0x2a8, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x2b0, Size: 1]
	SQModInfo ModInfo;//[Offset: 0x2b8, Size: 1]
	SQServerListItemWidget* Server Item;//[Offset: 0x308, Size: 1]
	Texture2DDynamic* Texture;//[Offset: 0x310, Size: 1]
	bool NewVar;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x318, Size: 1]
	W_ModDownloadWindow_C* ModDownloadWindow;//[Offset: 0x320, Size: 1]
	int Mod Download Index;//[Offset: 0x328, Size: 1]
	void Update Download Status(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, LinearColor K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_VerifyModIntegrity_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	LinearColor Get_ModIcon_ColorAndOpacity(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Refresh Mod(bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, Mod_DescriptionTooltip_C* CallFunc_Create_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void OnFail_9FEB735B449DA3B1D8BC1A99168DFA92(Texture2DDynamic* Texture);// 0x1d69c50
	void OnSuccess_9FEB735B449DA3B1D8BC1A99168DFA92(Texture2DDynamic* Texture);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_226_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_236_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void Wait for Mod Loading();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_ModDownloadItem(int EntryPoint, Texture2DDynamic* K2Node_CustomEvent_Texture, Texture2DDynamic* K2Node_CustomEvent_Texture, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* Temp_object_Variable, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, LinearColor Temp_struct_Variable, SQModInfo CallFunc_GetModInfo_OutModInfo, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default, AsyncTaskDownloadImage* CallFunc_DownloadImage_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_BooleanOR_ReturnValue, FString CallFunc_ToIDString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50

--------------------------------
Class: Mod_DescriptionTooltip_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Line;//[Offset: 0x268, Size: 1]
	TextBlock* TB_Info;//[Offset: 0x270, Size: 1]
	FText Info;//[Offset: 0x278, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_Mod_DescriptionTooltip(int EntryPoint);// 0x1d69c50

--------------------------------
Class: UIZOrderStruct
	int ZOrder_5_1C9F02D2451185CC3EAFD69102F13624;//[Offset: 0x0, Size: 1]

--------------------------------
Class: W_CustomizeScreen_C.SQCustomizationScreen.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a8, Size: 1]
	WidgetAnimation* OnEquipped;//[Offset: 0x2b0, Size: 1]
	ComboBoxString* CB_Faction;//[Offset: 0x2b8, Size: 1]
	ComboBoxString* CB_Role;//[Offset: 0x2c0, Size: 1]
	Image* CustomizeBG;//[Offset: 0x2c8, Size: 1]
	Image* CustomizeBGOverlay;//[Offset: 0x2d0, Size: 1]
	Image* CustomizeBGOverlay;//[Offset: 0x2d8, Size: 1]
	Image* DarkenPanel;//[Offset: 0x2e0, Size: 1]
	TextBlock* EmoteDescription;//[Offset: 0x2e8, Size: 1]
	TextBlock* EmoteName;//[Offset: 0x2f0, Size: 1]
	TextBlock* EmoteNotify;//[Offset: 0x2f8, Size: 1]
	Border* EquippedNotify;//[Offset: 0x300, Size: 1]
	TextBlock* HintTextBox;//[Offset: 0x308, Size: 1]
	Image* Hovered_Underline;//[Offset: 0x310, Size: 1]
	TextBlock* InputHintTextBox;//[Offset: 0x318, Size: 1]
	HorizontalBox* ItemCategoryBar;//[Offset: 0x320, Size: 1]
	Image* PreviewOverlayColourGradient;//[Offset: 0x328, Size: 1]
	Button* PurchaseButton;//[Offset: 0x330, Size: 1]
	Button* PurchaseButton;//[Offset: 0x338, Size: 1]
	Image* StoreBGOverlay;//[Offset: 0x340, Size: 1]
	ScrollBox* StoreScrollBox;//[Offset: 0x348, Size: 1]
	TextBlock* TB_EmoteTag;//[Offset: 0x350, Size: 1]
	W_Input_ToolTipButton_C* W_Input_ToolTipButton_C;//[Offset: 0x358, Size: 1]
	W_SoldierPreview_C* W_SoldierPreview;//[Offset: 0x360, Size: 1]
	SQEmotesDataTable* DLCTable;//[Offset: 0x368, Size: 1]
	SQEmotesData* LastClicked;//[Offset: 0x370, Size: 1]
	MainMenuScreen_C* MainMenu;//[Offset: 0x378, Size: 1]
	bool EmoteWheelVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x380, Size: 1]
	MulticastInlineDelegateProperty OnCloseCustomize;//[Size: 1]
	BaseRadialMenu_C* EmoteWheel;//[Offset: 0x398, Size: 1]
	void OnItemHovered(SQEmotesData* EmoteData, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, enum Temp_byte_Variable, FString[] CallFunc_GetRestrictionsText_ReturnValue, FText CallFunc_Conv_NameToText_ReturnValue, FString CallFunc_JoinStringArray_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, AnimMontage* K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, FText K2Node_Select_Default, Widget*[] CallFunc_GetAllChildren_ReturnValue, Widget* CallFunc_Array_Get_Item, W_EmotesItem_C* K2Node_DynamicCast_AsW_Emotes_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void OnRadialClicked(int OptionIndex, BaseRadialMenu_C* Context, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_NameToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FString CallFunc_Conv_NameToString_ReturnValue, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void AddParallax(bool bInvert, float Percent, float StartX, float StartY, out float EndX, out float EndY, float MouseX, float MouseY, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, PlayerController* CallFunc_GetPlayerController_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void CheckFactionRestriction(SQEmotesData* EmoteData, SQFaction* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQFactionSetup* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQAvailability_Role* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	void UpdateEquippedEmotesItems(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, int CallFunc_Array_Length_ReturnValue, Widget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, W_EmotesItem_C* K2Node_DynamicCast_AsW_Emotes_Item, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void RemoveEmoteWheel();// 0x1d69c50
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, Key CallFunc_GetKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, EventReply CallFunc_Handled_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, BP_HUDMenu_C* K2Node_DynamicCast_AsBP_HUDMenu, bool K2Node_DynamicCast_bSuccess, EventReply CallFunc_Unhandled_ReturnValue, enum CallFunc_GetVisibility_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void CreateAndDisplayEmoteWheel(delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUDMenu_C* K2Node_DynamicCast_AsBP_HUDMenu, bool K2Node_DynamicCast_bSuccess, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* CallFunc_CreateEmoteMenu_OutputPin, BaseRadialMenu_C* CallFunc_CreateEmoteMenu_OutputPin);// 0x1d69c50
	void SetupFactionList(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, FString CallFunc_GetSelectedOption_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQFactionSetup* CallFunc_TryGetFactionSetup_OutFactionSetup, bool CallFunc_TryGetFactionSetup_ReturnValue, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, SQFaction*[] CallFunc_Map_Values_Values, int CallFunc_Array_Length_ReturnValue, SQFaction* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, SQFactionSetup* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FName CallFunc_GetId_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FString CallFunc_Conv_NameToString_ReturnValue);// 0x1d69c50
	void SetupRoleList(SQFactionSetup* Faction, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, SQAvailability_Role* CallFunc_Array_Get_Item, int Temp_int_Loop_Counter_Variable, FString CallFunc_GetRoleDisplayName_CurrentRoleDisplayName, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void PopulateEmoteGrid(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, Widget* CallFunc_Array_Get_Item, Widget* CallFunc_Array_Get_Item, W_EmotesItem_C* K2Node_DynamicCast_AsW_Emotes_Item, bool K2Node_DynamicCast_bSuccess, W_EmotesItem_C* K2Node_DynamicCast_AsW_Emotes_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void CreateRenderTarget();// 0x1d69c50
	void OnScreenOpen();// 0x1d69c50
	void OnScreenClosed();// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__CB_Faction_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, byte SelectionType);// 0x1d69c50
	void BndEvt__CB_Role_K2Node_ComponentBoundEvent_1_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, byte SelectionType);// 0x1d69c50
	void OnItemSelected(SQEmotesData* EmoteData);// 0x1d69c50
	void BndEvt__W_Input_ToolTipButton_C_0_K2Node_ComponentBoundEvent_3_OnToolTipPressed__DelegateSignature();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void UpdateHintText();// 0x1d69c50
	void OnPurchaseCompleted(out const ODKBazaarPurchaseCompletedData PurchaseCompletedData);// 0x1d69c50
	void ExecuteUbergraph_W_CustomizeScreen(int EntryPoint, bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, FString K2Node_ComponentBoundEvent_SelectedItem, byte K2Node_ComponentBoundEvent_SelectionType, FName CallFunc_Conv_StringToName_ReturnValue, FString K2Node_ComponentBoundEvent_SelectedItem, byte K2Node_ComponentBoundEvent_SelectionType, SQFactionSetup* CallFunc_TryGetFactionSetup_OutFactionSetup, bool CallFunc_TryGetFactionSetup_ReturnValue, FString CallFunc_GetSelectedOption_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, SQFactionSetup* CallFunc_TryGetFactionSetup_OutFactionSetup, bool CallFunc_TryGetFactionSetup_ReturnValue, SQAvailability_Role* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FString CallFunc_GetRoleDisplayName_CurrentRoleDisplayName, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, SQEmotesData* K2Node_Event_EmoteData, bool CallFunc_Not_PreBool_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_AddParallax_EndX, float CallFunc_AddParallax_EndY, float CallFunc_GetWorldDeltaSeconds_ReturnValue, bool CallFunc_IsVisible_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_FInterpTo_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, FText CallFunc_ParseKeybind_Short_Name, WidgetTransform K2Node_MakeStruct_WidgetTransform, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Replace_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, const ODKBazaarPurchaseCompletedData K2Node_Event_PurchaseCompletedData, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void OnCloseCustomize__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQCustomizationScreen.UserWidget.Widget.Visual.Object
	delegate OnPurchase;//[Offset: 0x260, Size: 1]
	SQEmoteItemWidget*[] EmoteItemWidgets;//[Offset: 0x270, Size: 1]
	class SQEmoteItemWidget* WidgetItemClass;//[Offset: 0x280, Size: 1]
	SQEmotesDataTable* EmotesDataTable;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty OnNewEquippableDelegate;//[Size: 1]
	UniformGridPanel* StoreGrid;//[Offset: 0x2a0, Size: 1]
	void OnPurchaseCompleted(out const ODKBazaarPurchaseCompletedData PurchaseCompletedData);// 0xd75190
	void OnItemSelected(SQEmotesData* EmoteData);// 0x1d69c50
	void OnItemHovered(SQEmotesData* EmoteData);// 0x1d69c50
	SQEmoteItemWidget*[] GetOwnedEmotesAsWidget();// 0xd75030
	void CreateEmotesList(ListView* ListParent);// 0xd74f30
	void CreateEmotesGridFromBundle(UniformGridPanel* GridParent, int UniformSize, ODKBazaarBundle* Bundle);// 0xd74e20
	void CreateEmotesGrid(UniformGridPanel* GridParent, int UniformSize);// 0xd74d50

--------------------------------
Class: ODKBazaarPurchaseCompletedData
	ODKBazaarBundle*[] NewBundles;//[Offset: 0x0, Size: 1]

--------------------------------
Class: ListView.ListViewBase.Widget.Visual.Object
	byte Orientation;//[Offset: 0x2d8, Size: 1]
	byte SelectionMode;//[Offset: 0x2d9, Size: 1]
	enum ConsumeMouseWheel;//[Offset: 0x2da, Size: 1]
	bool bClearSelectionOnClick;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2db, Size: 1]
	bool bIsFocusable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2dc, Size: 1]
	float EntrySpacing;//[Offset: 0x2e0, Size: 1]
	bool bReturnFocusToSelection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e4, Size: 1]
	Object*[] ListItems;//[Offset: 0x2e8, Size: 1]
	MulticastInlineDelegateProperty BP_OnEntryInitialized;//[Size: 1]
	MulticastInlineDelegateProperty BP_OnItemClicked;//[Size: 1]
	MulticastInlineDelegateProperty BP_OnItemDoubleClicked;//[Size: 1]
	MulticastInlineDelegateProperty BP_OnItemIsHoveredChanged;//[Size: 1]
	MulticastInlineDelegateProperty BP_OnItemSelectionChanged;//[Size: 1]
	MulticastInlineDelegateProperty BP_OnItemScrolledIntoView;//[Size: 1]
	void SetSelectionMode(byte SelectionMode);// 0x33ebe90
	void SetSelectedIndex(int Index);// 0x33ebd10
	void ScrollIndexIntoView(int Index);// 0x33ea710
	void RemoveItem(Object* Item);// 0x33ea660
	void NavigateToIndex(int Index);// 0x33ea5b0
	bool IsRefreshPending();// 0x33ea580
	int GetNumItems();// 0x33ea340
	Object*[] GetListItems();// 0x33ea310
	Object* GetItemAt(int Index);// 0x33ea1d0
	int GetIndexForItem(Object* Item);// 0x33ea100
	void ClearListItems();// 0x33e9ff0
	void BP_SetSelectedItem(Object* Item);// 0x33e9f60
	void BP_SetListItems(out const Object*[] InListItems);// 0x33e9eb0
	void BP_SetItemSelection(Object* Item, bool bSelected);// 0x33e9de0
	void BP_ScrollItemIntoView(Object* Item);// 0x33e9d50
	void BP_NavigateToItem(Object* Item);// 0x33e9cc0
	bool BP_IsItemVisible(Object* Item);// 0x33e9c20
	bool BP_GetSelectedItems(out Object*[] Items);// 0x33e9b60
	Object* BP_GetSelectedItem();// 0x33e9b30
	int BP_GetNumItemsSelected();// 0x33e9b00
	void BP_ClearSelection();// 0x33e9ae0
	void BP_CancelScrollIntoView();// 0x33e9ac0
	void AddItem(Object* Item);// 0x33e9a30

--------------------------------
Class: ListViewBase.Widget.Visual.Object
	class UserWidget* EntryWidgetClass;//[Offset: 0x108, Size: 1]
	float WheelScrollMultiplier;//[Offset: 0x110, Size: 1]
	bool bEnableScrollAnimation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x114, Size: 1]
	bool bEnableFixedLineOffset;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x115, Size: 1]
	float FixedLineScrollOffset;//[Offset: 0x118, Size: 1]
	MulticastInlineDelegateProperty BP_OnEntryGenerated;//[Size: 1]
	MulticastInlineDelegateProperty BP_OnEntryReleased;//[Size: 1]
	UserWidgetPool EntryWidgetPool;//[Offset: 0x140, Size: 1]
	void SetWheelScrollMultiplier(float NewWheelScrollMultiplier);// 0x33ec120
	void SetScrollOffset(const float InScrollOffset);// 0x33ebc10
	void SetScrollbarVisibility(enum InVisibility);// 0x33ebc90
	void ScrollToTop();// 0x33ea7c0
	void ScrollToBottom();// 0x33ea7a0
	void RequestRefresh();// 0x33ea6f0
	void RegenerateAllEntries();// 0x33ea640
	UserWidget*[] GetDisplayedEntryWidgets();// 0x33ea040

--------------------------------
Class: UserWidgetPool
	UserWidget*[] ActiveWidgets;//[Offset: 0x0, Size: 1]
	UserWidget*[] InactiveWidgets;//[Offset: 0x10, Size: 1]

--------------------------------
Class: W_EmotesItem_C.SQEmoteItemWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a8, Size: 1]
	WidgetAnimation* Hover;//[Offset: 0x2b0, Size: 1]
	Image* EquippedBadge;//[Offset: 0x2b8, Size: 1]
	Overlay* EquippedOverlay;//[Offset: 0x2c0, Size: 1]
	Image* EquippedRim;//[Offset: 0x2c8, Size: 1]
	Image* ItemBackground;//[Offset: 0x2d0, Size: 1]
	bool IsEquipped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	bool IsPreview;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d9, Size: 1]
	bool bShowEquipped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2da, Size: 1]
	bool bIsHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2db, Size: 1]
	void DisplayEquippedStatus(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void UpdateEquippedStatus();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__ItemButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ForceOnHovered();// 0x1d69c50
	void ForceUnHovered();// 0x1d69c50
	void ExecuteUbergraph_W_EmotesItem(int EntryPoint, bool CallFunc_Not_PreBool_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQEmotesData* CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQEmotesData* CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_Input_ToolTipButton_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* OnHovered;//[Offset: 0x268, Size: 1]
	Border* BorderColour;//[Offset: 0x270, Size: 1]
	Button* Button;//[Offset: 0x278, Size: 1]
	TextBlock* ContextText;//[Offset: 0x280, Size: 1]
	TextBlock* KeybindText;//[Offset: 0x288, Size: 1]
	Overlay* TextOverlay;//[Offset: 0x290, Size: 1]
	FText KeyBind;//[Offset: 0x298, Size: 1]
	FText Action;//[Offset: 0x2b0, Size: 1]
	MulticastInlineDelegateProperty OnToolTipPressed;//[Size: 1]
	bool bDisplayIconOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	bool bIsHUD;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d9, Size: 1]
	FText IngameKeybind;//[Offset: 0x2e0, Size: 1]
	void GetShortName(FName InputPin, out FText Short Name, FText CallFunc_Conv_NameToText_ReturnValue, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);// 0x1d69c50
	void ParseKeybind(FString inString, out FText Short Name, FText L Axis, FName[] L Axis List, bool Temp_bool_Variable, FName CallFunc_Conv_StringToName_ReturnValue, int Temp_int_Loop_Counter_Variable, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, FName CallFunc_GetActionKeyName_Name, int CallFunc_Array_Length_ReturnValue, FText CallFunc_GetShortName_Short_Name, FString CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_Contains_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, InputAxisKeyMapping CallFunc_Array_Get_Item, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, FName CallFunc_GetKeyName_OutName, bool CallFunc_Key_IsKeyboardKey_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, InputAxisKeyMapping CallFunc_Array_Get_Item, int CallFunc_Array_AddUnique_ReturnValue, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, FName CallFunc_GetKeyName_OutName, bool CallFunc_Key_IsKeyboardKey_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_TextIsEmpty_ReturnValue, FName CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FText CallFunc_GetShortName_Short_Name, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Array_AddUnique_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, int Temp_int_Loop_Counter_Variable, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void UpdateKeybind();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void UpdateStyle();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_Input_ToolTipButton(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool K2Node_Event_IsDesignTime, FText CallFunc_TextToUpper_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, enum K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, TimerHandle CallFunc_K2_SetTimer_ReturnValue, FText CallFunc_ParseKeybind_Short_Name);// 0x1d69c50
	void OnToolTipPressed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_SoldierPreview_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Image_R2T;//[Offset: 0x268, Size: 1]
	BP_R2T_Soldier_C* R2T Soldier;//[Offset: 0x270, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x278, Size: 1]
	MaterialInstanceDynamic* MID_RendTex;//[Offset: 0x280, Size: 1]
	SQRoleSettings* PreviewRole;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty OnRoleSet;//[Size: 1]
	CanvasRenderTarget2D* SoldierRT;//[Offset: 0x2a0, Size: 1]
	float DelayBetweenAnimations;//[Offset: 0x2a8, Size: 1]
	AnimMontage* AnimMontage;//[Offset: 0x2b0, Size: 1]
	TimerHandle TimerHandle;//[Offset: 0x2b8, Size: 1]
	void SetupSoldierMesh(SQInventoryWeaponGroupData CallFunc_Array_Get_Item, SQInventoryData CallFunc_Array_Get_Item, Object* CallFunc_GetDefaultObjectFor_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, SkeletalMeshComponent* CallFunc_GetMesh_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, SQRoleVersion CallFunc_Array_Get_Item, class Object CallFunc_LoadClassAsset_Blocking_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void CreateSoldierPreview(Object* Role, BP_SQRoleSettings_C* RoleSettings, Transform CallFunc_MakeTransform_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, BP_R2T_Soldier_CustomizeScreen_C* CallFunc_FinishSpawningActor_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Set Role(SQRoleSettings* New Role);// 0x1d69c50
	void Destroy R2T();// 0x1d69c50
	void SetEmoteAnimation(AnimMontage* NewAnimToPlay);// 0x1d69c50
	void Close();// 0x1d69c50
	void SetZRotation(float New Rotation Z (Yaw));// 0x1d69c50
	void ExecuteUbergraph_W_SoldierPreview(int EntryPoint, SQRoleSettings* K2Node_CustomEvent_New_Role, bool CallFunc_IsValid_ReturnValue, AnimMontage* K2Node_CustomEvent_NewAnimToPlay, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, float K2Node_CustomEvent_New_Rotation_Z__Yaw_, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult);// 0x1d69c50
	void OnRoleSet__DelegateSignature(SQRoleSettings* RoleReference);// 0x1d69c50

--------------------------------
Class: BP_R2T_Soldier_CustomizeScreen_C.BP_R2T_Soldier_C.SceneCapture2D.SceneCapture.Actor.Object
	PointLightComponent* PointLight6;//[Offset: 0x2d0, Size: 1]
	PointLightComponent* PointLight5;//[Offset: 0x2d8, Size: 1]
	PointLightComponent* PointLight4;//[Offset: 0x2e0, Size: 1]

--------------------------------
Class: CanvasRenderTarget2D.TextureRenderTarget2D.TextureRenderTarget.Texture.StreamableRenderAsset.Object
	MulticastInlineDelegateProperty OnCanvasRenderTargetUpdate;//[Size: 1]
	World* World;//[Offset: 0x1b8, Size: 1]
	bool bShouldClearRenderTargetOnReceiveUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c0, Size: 1]
	void UpdateResource();// 0x33eea40
	void ReceiveUpdate(Canvas* Canvas, int Width, int Height);// 0x1d69c50
	void GetSize(out int Width, out int Height);// 0x3ee45f0
	static CanvasRenderTarget2D* CreateCanvasRenderTarget2D(Object* WorldContextObject, class CanvasRenderTarget2D CanvasRenderTarget2DClass, int Width, int Height);// 0x3ee4010

--------------------------------
Class: BP_HUDMenu_C.SQHUD.HUD.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x940, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x948, Size: 1]
	MainMenuScreen_C* MainMenu_Widget;//[Offset: 0x950, Size: 1]
	bool bShowingMainMenu;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x958, Size: 1]
	BaseRadialMenu_C* RadialMenu;//[Offset: 0x960, Size: 1]
	void Get Radial Menu(out BaseRadialMenu_C* Radial Menu);// 0x1d69c50
	void Get Main Menus(out UMG_MenuBase_C* Deployment, out UMG_MenuBase_C* Command, out UMG_MenuBase_C* Roaming);// 0x1d69c50
	void Get Is Showing Settings Menu(out bool Showing Main Menu);// 0x1d69c50
	void Get Map Core(out W_SQMapCore_C* Map Core);// 0x1d69c50
	void Get Map Component(out SQCoreStateMapComponent* Map Component);// 0x1d69c50
	void Get Scoreboard(out SQScoreboard* ScoreBoard);// 0x1d69c50
	void Get UI Input Stacks(out SQInputState[] Input Stacks);// 0x1d69c50
	void Get Interactable Widget(out SQInteractableWidgetList* Interact Widget);// 0x1d69c50
	void Get Showing Main Menu(out bool Showing);// 0x1d69c50
	void DestroyEmoteMenu(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void CreateRadialMenu(class BP_RadialMenuModel_C InputPin, FName InputPin1, Object* InputPin2, bool bCenterMouse, out BaseRadialMenu_C* OutputPin, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, BaseRadialMenu_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void CreateEmoteMenu(out BaseRadialMenu_C* OutputPin, class BP_RadialMenuModel_C L Model To Draw, BP_MainMenu_PC_C* L PC, BaseRadialMenu_C* CallFunc_CreateRadialMenu_OutputPin, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsVisible_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void CreateMainMenu(int Temp_int_Array_Index_Variable, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, MainMenuScreen_C* CallFunc_Create_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, MainMenuScreen_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, UserWidget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Check Cursor();// 0x1d69c50
	void ExecuteUbergraph_BP_HUDMenu(int EntryPoint, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_MainMenu_PC_C.SQPlayerController_Menu.SQPlayerController.PlayerController.Controller.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xaa0, Size: 1]
	MulticastInlineDelegateProperty PossessedMenuCam;//[Size: 1]
	void Possess A Menu Cam(MenuCamPawn_C* pawn to possess, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, bool CallFunc_IsValid_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, MenuCamPawn_C* CallFunc_FinishSpawningActor_ReturnValue, MenuCamPawn_C*[] CallFunc_GetAllActorsOfClass_OutActors, MenuCamPawn_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsControlled_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Possess Menu Cam(MenuCamPawn_C* NewParam);// 0x1d69c50
	void ExecuteUbergraph_BP_MainMenu_PC(int EntryPoint, MenuCamPawn_C* K2Node_CustomEvent_NewParam, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value);// 0x1d69c50
	void PossessedMenuCam__DelegateSignature(MenuCamPawn_C* NewMenuCam);// 0x1d69c50

--------------------------------
Class: SQPlayerController_Menu.SQPlayerController.PlayerController.Controller.Actor.Object

--------------------------------
Class: MenuCamPawn_C.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x288, Size: 1]
	CameraComponent* Camera;//[Offset: 0x290, Size: 1]
	bool Menu Cam Moving;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	float Cam Lerp;//[Offset: 0x29c, Size: 1]
	float Cam Lerp Duration;//[Offset: 0x2a0, Size: 1]
	MenuCamera_C* Move To Cam;//[Offset: 0x2a8, Size: 1]
	Transform Last Camera Transform;//[Offset: 0x2b0, Size: 1]
	float Last FOV;//[Offset: 0x2e0, Size: 1]
	MenuCamera_C*[] Menu Cameras;//[Offset: 0x2e8, Size: 1]
	byte Current Camera;//[Offset: 0x2f8, Size: 1]
	int GetTeamId();// 0x1d69c50
	void Move Camera(byte New Camera, bool Force, bool CallFunc_NotEqual_ByteByte_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, Pawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, MenuCamera_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);// 0x1d69c50
	void Find Menu Cameras(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, MenuCamera_C*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, MenuCamera_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue);// 0x1d69c50
	void Stop Menu Camera Movement();// 0x1d69c50
	void Animate Move(bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Ease_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Transform CallFunc_K2_GetComponentToWorld_ReturnValue, Transform CallFunc_TEase_ReturnValue, HitResult CallFunc_K2_SetActorTransform_SweepHitResult, bool CallFunc_K2_SetActorTransform_ReturnValue);// 0x1d69c50
	void OnTeamChange(int PreviousTeam);// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_MenuCamPawn(int EntryPoint, int K2Node_Event_PreviousTeam, float K2Node_Event_DeltaSeconds);// 0x1d69c50

--------------------------------
Class: MenuCamera_C.Actor.Object
	CameraComponent* Camera;//[Offset: 0x228, Size: 1]
	byte Camera Name;//[Offset: 0x230, Size: 1]

--------------------------------
Class: GameSettingsWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsComboboxItem_C* ADSMode;//[Offset: 0x268, Size: 1]
	SettingsComboboxItem_C* CrouchMode;//[Offset: 0x270, Size: 1]
	SettingsItem_Slider_C* DOUBLETAPTIMESLIDER;//[Offset: 0x278, Size: 1]
	SettingsItem_Slider_C* FOV;//[Offset: 0x280, Size: 1]
	SettingsComboboxItem_C* FreelookMode;//[Offset: 0x288, Size: 1]
	SettingsItem_Slider_C* FreelookSensitivity;//[Offset: 0x290, Size: 1]
	SettingsItem_Slider_C* GlobalSensitivity;//[Offset: 0x298, Size: 1]
	SettingsItem_Slider_C* HelicopterPitchSensitivity;//[Offset: 0x2a0, Size: 1]
	SettingsItem_Slider_C* HelicopterRollSensitivity;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	Image* Image;//[Offset: 0x2c0, Size: 1]
	Image* Image;//[Offset: 0x2c8, Size: 1]
	SettingsItem_TickBox_C* KeyboardHighlight;//[Offset: 0x2d0, Size: 1]
	SettingsComboboxItem_C* LeanMode;//[Offset: 0x2d8, Size: 1]
	SettingsItem_TextBox_C* PLAYERPREFIX;//[Offset: 0x2e0, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x2e8, Size: 1]
	SettingsItem_Slider_C* SoldierLongSensitivity;//[Offset: 0x2f0, Size: 1]
	SettingsItem_Slider_C* SoldierMediumSensitivity;//[Offset: 0x2f8, Size: 1]
	SettingsItem_Slider_C* SoldierNonAdsSensitivity;//[Offset: 0x300, Size: 1]
	SettingsItem_Slider_C* SoldierShortSensitivity;//[Offset: 0x308, Size: 1]
	SettingsComboboxItem_C* SprintMode;//[Offset: 0x310, Size: 1]
	TextBlock* TextSOLDIERSENSITIVITYMULTIPLIERS;//[Offset: 0x318, Size: 1]
	SettingsItem_TickBox_C* ToggleDouble-TapWalk;//[Offset: 0x320, Size: 1]
	SettingsItem_TickBox_C* ToggleFreelookRecenter;//[Offset: 0x328, Size: 1]
	SettingsItem_TickBox_C* ToggleHelicopterInvertMousePitch;//[Offset: 0x330, Size: 1]
	SettingsItem_TickBox_C* ToggleInvertY;//[Offset: 0x338, Size: 1]
	SettingsItem_TickBox_C* ToggleJumpUncrouch;//[Offset: 0x340, Size: 1]
	SettingsItem_TickBox_C* ToggleJumpUnprone;//[Offset: 0x348, Size: 1]
	SettingsItem_TickBox_C* ToggleMouseSmooth;//[Offset: 0x350, Size: 1]
	SettingsItem_TickBox_C* UseSensitivityScaling;//[Offset: 0x358, Size: 1]
	SettingsItem_Slider_C* VehicleLongSensitivity;//[Offset: 0x360, Size: 1]
	SettingsItem_Slider_C* VehicleSensitivity;//[Offset: 0x368, Size: 1]
	SettingsItem_Slider_C* VehicleShortSensitivity;//[Offset: 0x370, Size: 1]
	ScreenResolutionStruct[] ScreenResolutions;//[Offset: 0x378, Size: 1]
	ScreenResolutionStruct[] ValidResolutions;//[Offset: 0x388, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x398, Size: 1]
	MulticastInlineDelegateProperty Reset Appdata OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x3b0, Size: 1]
	LinearColor UnselectedColor];//[Offset: 0x3c0, Size: 1]
	SaveData_UI_C* Current UI Save;//[Offset: 0x3d0, Size: 1]
	Widget* Get_KeyboardHighlight_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void UpdateStreamerLevel(enum Enum, bool NewState, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleHelicopterInvertMousePitch_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_HelicopterRollSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_HelicopterPitchSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_UseSensitivityScaling_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_SoldierNonAdsSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_GlobalSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_VehicleLongSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_VehicleShortSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_SoldierLongSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_SoldierMediumSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_SoldierShortSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	LinearColor Get_IndividualMultipliers_Color(LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void UpdateZoomSensitivitySliders(int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, bool K2Node_SwitchInteger_CmpSuccess, bool K2Node_SwitchInteger_CmpSuccess, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float[] CallFunc_Map_Keys_Keys, float[] CallFunc_Map_Keys_Keys, float CallFunc_Array_Get_Item, float CallFunc_Array_Get_Item, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	Widget* Get_DOUBLETAPTIMESLIDER_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleDoubleTapWalk_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleJumpUnprone_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleJumpUncrouch_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_PLAYERPREFIX_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleFreelookRecenter_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_FreelookSensitivity_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void UpdateButtons(SaveData_UI_C* L UI Save, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue);// 0x1d69c50
	void BndEvt__FOV_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void APPLY();// 0x1d69c50
	void Revert();// 0x1d69c50
	void Restore Defaults();// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__PLAYERPREFIX_K2Node_ComponentBoundEvent_31_OnValueChanged__DelegateSignature(FText NewText);// 0x1d69c50
	void Show Debugs();// 0x1d69c50
	void BndEvt__DOUBLETAPTIMESLIDER_K2Node_ComponentBoundEvent_46_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__ToggleDoubleTapWalk_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleInvertY_K2Node_ComponentBoundEvent_15_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleJumpUncrouch_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleJumpUnprone_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleMouseSmooth_K2Node_ComponentBoundEvent_21_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleFreelookRecenter_K2Node_ComponentBoundEvent_143_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__FreelookSensitivity_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SoldierShortSensitivity_K2Node_ComponentBoundEvent_703_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SoldierMediumSensitivity_K2Node_ComponentBoundEvent_708_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SoldierLongSensitivity_K2Node_ComponentBoundEvent_746_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__VehicleShortSensitivity_K2Node_ComponentBoundEvent_786_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__VehicleMediumSensitivity_K2Node_ComponentBoundEvent_828_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__UseSensitivityScaling_K2Node_ComponentBoundEvent_651_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SoldierSensitivity_K2Node_ComponentBoundEvent_406_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__VehicleSensitivity_K2Node_ComponentBoundEvent_411_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__GlobalSensitivity_K2Node_ComponentBoundEvent_190_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__Keyboardhilite_K2Node_ComponentBoundEvent_1305_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_Slider_C_0_K2Node_ComponentBoundEvent_164_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__HelicopterPitchSensitivity_K2Node_ComponentBoundEvent_2_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__HelicopterRollSensitivity_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__ToggleHelicopterInvertMousePitch_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__CrouchMode_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void BndEvt__ADSMode_K2Node_ComponentBoundEvent_9_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void BndEvt__FreelookMode_K2Node_ComponentBoundEvent_11_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void BndEvt__LeanMode_K2Node_ComponentBoundEvent_12_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void BndEvt__SprintMode_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void ExecuteUbergraph_GameSettingsWindow(int EntryPoint, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, const float Temp_float_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, const float Temp_float_Variable, const float Temp_float_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, float CallFunc_FClamp_ReturnValue, FText K2Node_ComponentBoundEvent_NewText, FString CallFunc_Conv_TextToString_ReturnValue, float K2Node_ComponentBoundEvent_Value, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, float CallFunc_FClamp_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float CallFunc_FClamp_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FClamp_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, float CallFunc_FClamp_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FClamp_ReturnValue, float K2Node_ComponentBoundEvent_Value, float CallFunc_FClamp_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FClamp_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, float CallFunc_FClamp_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, float CallFunc_FClamp_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const float Temp_float_Variable, const float Temp_float_Variable, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, byte CallFunc_Conv_IntToByte_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, byte CallFunc_GetValidValue_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, byte CallFunc_Conv_IntToByte_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, byte CallFunc_GetValidValue_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue);// 0x1d69c50
	void Reset Appdata OnClicked__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SettingsItem_TextBox_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Button* Button;//[Offset: 0x268, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x270, Size: 1]
	Image* SpacerImg;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x280, Size: 1]
	EditableTextBox* TextBox;//[Offset: 0x288, Size: 1]
	FText SettingName;//[Offset: 0x290, Size: 1]
	FText DefaultText;//[Offset: 0x2a8, Size: 1]
	MulticastInlineDelegateProperty OnValueChanged;//[Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	int MaxLength;//[Offset: 0x2d4, Size: 1]
	void SetTextBoxText(FText NewTextBoxString);// 0x1d69c50
	SlateBrush Get_SpacerImg_Brush(Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__TextBox_K2Node_ComponentBoundEvent_27_OnEditableTextBoxCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void BndEvt__TextBox_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_TextBox(int EntryPoint, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, const FText K2Node_ComponentBoundEvent_Text, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_GetSubstring_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool K2Node_Event_IsDesignTime);// 0x1d69c50
	void OnValueChanged__DelegateSignature(FText NewText);// 0x1d69c50

--------------------------------
Class: GraphicsWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsItem_TickBox_C* AA_TOGGLE;//[Offset: 0x268, Size: 1]
	SettingsComboboxItem_C* AASamples;//[Offset: 0x270, Size: 1]
	SettingsItem_GraphicsToggle_C* AmbientOcclusion;//[Offset: 0x278, Size: 1]
	SettingsItem_Slider_C* ANISOTROPIC;//[Offset: 0x280, Size: 1]
	SettingsItem_GraphicsToggle_C* ANTIALIASING;//[Offset: 0x288, Size: 1]
	SettingsItem_Slider_C* Brightness;//[Offset: 0x290, Size: 1]
	SettingsItem_TickBox_C* ContactShadows;//[Offset: 0x298, Size: 1]
	SettingsItem_Slider_C* Contrast;//[Offset: 0x2a0, Size: 1]
	SettingsItem_GraphicsToggle_C* DYNAMICMESHQUALITY;//[Offset: 0x2a8, Size: 1]
	SettingsItem_GraphicsToggle_C* Effects;//[Offset: 0x2b0, Size: 1]
	SettingsItem_TickBox_C* FarShadows;//[Offset: 0x2b8, Size: 1]
	SettingsComboboxItem_C* FSR2Quality;//[Offset: 0x2c0, Size: 1]
	SettingsItem_Slider_C* FSR2Sharpness;//[Offset: 0x2c8, Size: 1]
	SettingsItem_TickBox_C* FSR2TOGGLE;//[Offset: 0x2d0, Size: 1]
	SettingsItem_GraphicsToggle_C* GraphicsQuality;//[Offset: 0x2d8, Size: 1]
	SettingsItem_TickBox_C* HZBOcclusion;//[Offset: 0x2e0, Size: 1]
	Image* Image;//[Offset: 0x2e8, Size: 1]
	Image* Image;//[Offset: 0x2f0, Size: 1]
	Image* Image;//[Offset: 0x2f8, Size: 1]
	Image* Image;//[Offset: 0x300, Size: 1]
	Image* Image;//[Offset: 0x308, Size: 1]
	Image* Image;//[Offset: 0x310, Size: 1]
	Image* Image;//[Offset: 0x318, Size: 1]
	Image* Image;//[Offset: 0x320, Size: 1]
	Image* Image;//[Offset: 0x328, Size: 1]
	Image* Image;//[Offset: 0x330, Size: 1]
	Image* Image;//[Offset: 0x338, Size: 1]
	Image* Image;//[Offset: 0x340, Size: 1]
	Image* Image;//[Offset: 0x348, Size: 1]
	SettingsItem_TickBox_C* LensFlare;//[Offset: 0x350, Size: 1]
	SettingsItem_TickBox_C* LOWQUALITYFOLIAGE;//[Offset: 0x358, Size: 1]
	SettingsItem_GraphicsToggle_C* MaterialQuality;//[Offset: 0x360, Size: 1]
	SettingsItem_GraphicsToggle_C* MODEWINDOW;//[Offset: 0x368, Size: 1]
	SettingsComboboxItem_C* MONITORS;//[Offset: 0x370, Size: 1]
	SettingsItem_Slider_C* MotionBlur;//[Offset: 0x378, Size: 1]
	SettingsItem_GraphicsToggle_C* Ocean;//[Offset: 0x380, Size: 1]
	SettingsItem_GraphicsToggle_C* PostProcess;//[Offset: 0x388, Size: 1]
	TextBlock* RENDERERMSG;//[Offset: 0x390, Size: 1]
	SettingsComboboxItem_C* RendererSetting;//[Offset: 0x398, Size: 1]
	SettingsComboboxItem_C* RESCOMBO;//[Offset: 0x3a0, Size: 1]
	SettingsItem_Slider_C* Saturation;//[Offset: 0x3a8, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x3b0, Size: 1]
	VerticalBox* SettingsLIst;//[Offset: 0x3b8, Size: 1]
	SettingsItem_GraphicsToggle_C* Shadow;//[Offset: 0x3c0, Size: 1]
	SettingsItem_Slider_C* Sharpening;//[Offset: 0x3c8, Size: 1]
	SettingsItem_Slider_C* Slider_MaxGameFPS;//[Offset: 0x3d0, Size: 1]
	SettingsItem_Slider_C* Slider_MaxMenuFPS;//[Offset: 0x3d8, Size: 1]
	SettingsItem_TickBox_C* SSAO;//[Offset: 0x3e0, Size: 1]
	SettingsItem_Slider_C* SUPERSAMPLING;//[Offset: 0x3e8, Size: 1]
	SettingsItem_TickBox_C* Tessellation_Toggle;//[Offset: 0x3f0, Size: 1]
	SettingsItem_GraphicsToggle_C* Textures;//[Offset: 0x3f8, Size: 1]
	SettingsItem_ProgressBar_C* TEXTUREVRAMUSAGE;//[Offset: 0x400, Size: 1]
	SettingsItem_TickBox_C* ToggleVSYNC;//[Offset: 0x408, Size: 1]
	SettingsItem_TickBox_C* UNCAPTEXTUREPOOLSIZE;//[Offset: 0x410, Size: 1]
	SettingsItem_TickBox_C* WakeSim;//[Offset: 0x418, Size: 1]
	ScreenResolutionStruct[] ValidResolutions;//[Offset: 0x420, Size: 1]
	void InitRefreshEvents(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, Widget*[] CallFunc_GetAllChildren_ReturnValue, int CallFunc_Array_Length_ReturnValue, Widget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, W_BaseSettingOption_C* K2Node_DynamicCast_AsW_Base_Setting_Option, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	bool Get_CONTACTSHADOWS_bIsEnabled(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_GetShadowQuality_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	void UpdateTextureMemoryUsage(SlateColor K2Node_MakeStruct_SlateColor, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, LinearColor Temp_struct_Variable, int CallFunc_GetTotalVRAMCapacity_ReturnValue, int CallFunc_GetTexturePoolSize_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, float CallFunc_Conv_IntToFloat_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FText CallFunc_Format_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, LinearColor Temp_struct_Variable, float CallFunc_Divide_FloatFloat_ReturnValue, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	void SetCVarSettings(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, int CallFunc_Array_Length_ReturnValue, Widget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, W_BaseSettingOption_C* K2Node_DynamicCast_AsW_Base_Setting_Option, bool K2Node_DynamicCast_bSuccess, const FString CallFunc_ReadCVarSetting_ReturnValue);// 0x1d69c50
	bool Get_ANTIALIASING_IsEnabled(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_ReadIntSetting_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50
	void Refresh Res(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, byte CallFunc_GetFullscreenMode_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, IntPoint CallFunc_BlueprintGetScreenResolution_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50
	void UpdateResolutions(FString[] ValidResolutionsString, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, IntPoint[] CallFunc_GetSupportedFullscreenResolutions_Resolutions, bool CallFunc_GetSupportedFullscreenResolutions_ReturnValue, IntPoint CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, ScreenResolutionStruct K2Node_MakeStruct_ScreenResolutionStruct, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, int CallFunc_Array_Add_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void Refresh Settings(FName CVarSettingName, FString Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetIsUsingDX12_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_ReadIntSetting_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const FString CallFunc_ReadCVarSetting_ReturnValue, int CallFunc_Conv_StringToInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const FString CallFunc_ReadCVarSetting_ReturnValue, int CallFunc_Conv_StringToInt_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetIsUsingDX12_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const FString CallFunc_ReadCVarSetting_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_Conv_StringToInt_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue, float CallFunc_ReadFloatSetting_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_FClamp_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_GetViewDistanceQuality_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_ReadIntSetting_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_FClamp_ReturnValue, int CallFunc_BlueprintGetFullscreenMode_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_BlueprintGetVSync_ReturnValue, int Temp_int_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool Temp_bool_Variable, int K2Node_Select_Default, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SettingsItem_GraphicsToggle_C*[] K2Node_MakeArray_Array, float CallFunc_GetFrameRateLimit_ReturnValue, SettingsItem_GraphicsToggle_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, float CallFunc_GetMenuFrameRateLimit_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const int[] CallFunc_BlueprintGetBasicGraphicsSettings_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void BndEvt__RESCOMBO_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BENCHMARK();// 0x1d69c50
	void APPLY SETTINGS();// 0x1d69c50
	void Restore Defaults();// 0x1d69c50
	void BndEvt__GRAPHICSSETTING_K2Node_ComponentBoundEvent_7_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__MODEWINDOW_K2Node_ComponentBoundEvent_9_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__SHADOWSETTINGS_K2Node_ComponentBoundEvent_11_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__EFFECTSSETTINGS_K2Node_ComponentBoundEvent_17_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__ToggleVSYNC_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__TEXTURES_K2Node_ComponentBoundEvent_962_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__SettingsItem_Slider_C_0_K2Node_ComponentBoundEvent_164_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__BRIGHTNESS_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__CONTRAST_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__SATURATION_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__AMBIENTOCCLUSION_K2Node_ComponentBoundEvent_19_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__POSTPROCESS_K2Node_ComponentBoundEvent_20_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__ANTIALIASING_K2Node_ComponentBoundEvent_21_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__Slider_MaxMenuFPS_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__UNCAPTEXTUREPOOLSIZE_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__MATERIALQUALITY_K2Node_ComponentBoundEvent_28_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__DYNAMICMESHQUALITY_K2Node_ComponentBoundEvent_15_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__GraphicsWindow_Merge_FSR2_TOGGLE_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__GraphicsWindow_Merge_FSR2MODE_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void BndEvt__GraphicsWindow_AA_TOGGLE_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void OnBenchmarkDone();// 0x1d69c50
	void BndEvt__GraphicsWindow_OCEAN_K2Node_ComponentBoundEvent_12_OnButtonClick__DelegateSignature(int ButtonNumber, SettingsItem_GraphicsToggle_C* ToggleItem);// 0x1d69c50
	void BndEvt__GraphicsWindow_D3DSetting_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(FString Option, int Index);// 0x1d69c50
	void ExecuteUbergraph_GraphicsWindow(int EntryPoint, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, ScreenResolutionStruct CallFunc_Array_Get_Item, IntPoint K2Node_MakeStruct_IntPoint, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int CallFunc_GetTextureQuality_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool Temp_bool_Variable, bool Temp_bool_Variable, int Temp_int_Variable, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, int CallFunc_Add_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, FName CallFunc_MakeLiteralName_ReturnValue, int CallFunc_SelectInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int K2Node_ComponentBoundEvent_ButtonNumber, SettingsItem_GraphicsToggle_C* K2Node_ComponentBoundEvent_ToggleItem, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, FString K2Node_ComponentBoundEvent_Option, int K2Node_ComponentBoundEvent_Index, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_Select_Default, bool CallFunc_GetIsUsingDX12_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50

--------------------------------
Class: SettingsItem_ProgressBar_C.W_BaseSettingOption_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	Button* Button;//[Offset: 0x2a8, Size: 1]
	HorizontalBox* HorizontalBoxMain;//[Offset: 0x2b0, Size: 1]
	ProgressBar* ProgressBar_main;//[Offset: 0x2b8, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2c0, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_Main;//[Offset: 0x2d0, Size: 1]
	TextBlock* TB_MaxPoolSize;//[Offset: 0x2d8, Size: 1]
	FText ButtonText;//[Offset: 0x2e0, Size: 1]
	MulticastInlineDelegateProperty OnClicked;//[Size: 1]
	MulticastInlineDelegateProperty OnHover;//[Size: 1]
	int Text Size;//[Offset: 0x318, Size: 1]
	bool Use Underline;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x31c, Size: 1]
	byte BoxAlignment;//[Offset: 0x31d, Size: 1]
	Margin Text Padding Amount;//[Offset: 0x320, Size: 1]
	Margin Button Padding;//[Offset: 0x330, Size: 1]
	int SteamTagID;//[Offset: 0x340, Size: 1]
	float TextBoxWidth;//[Offset: 0x344, Size: 1]
	SlateColor Bind_TextColor(bool CallFunc_BooleanOR_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor);// 0x1d69c50
	LinearColor Bind_LineColor(LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void SetText(FText Text, SlateFontInfo K2Node_MakeStruct_SlateFontInfo);// 0x1d69c50
	void SetPercentage(bool bSelected);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_SettingsItem_ProgressBar(int EntryPoint, bool K2Node_Event_IsDesignTime);// 0x1d69c50
	void OnHover__DelegateSignature(bool bHovered);// 0x1d69c50
	void OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50

--------------------------------
Class: InvalidPasswordWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* AcceptButton;//[Offset: 0x268, Size: 1]
	TextBlock* Description;//[Offset: 0x270, Size: 1]
	Image* Line;//[Offset: 0x278, Size: 1]
	TextBlock* TitleTextBlock;//[Offset: 0x280, Size: 1]
	Image* TopLine;//[Offset: 0x288, Size: 1]
	MulticastInlineDelegateProperty InvalidPasswordConfirm;//[Size: 1]
	void BndEvt__AcceptButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_InvalidPasswordWidget(int EntryPoint, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void InvalidPasswordConfirm__DelegateSignature();// 0x1d69c50

--------------------------------
Class: MenuAnchor.ContentWidget.PanelWidget.Widget.Visual.Object
	class UserWidget* MenuClass;//[Offset: 0x120, Size: 1]
	delegate OnGetMenuContentEvent;//[Offset: 0x128, Size: 1]
	delegate OnGetUserMenuContentEvent;//[Offset: 0x138, Size: 1]
	byte Placement;//[Offset: 0x148, Size: 1]
	bool bFitInWindow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x149, Size: 1]
	bool ShouldDeferPaintingAfterWindowContent;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x14a, Size: 1]
	bool UseApplicationMenuStack;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x14b, Size: 1]
	MulticastInlineDelegateProperty OnMenuOpenChanged;//[Size: 1]
	void ToggleOpen(bool bFocusOnOpen);// 0x33f00a0
	bool ShouldOpenDueToClick();// 0x33f0070
	void SetPlacement(byte InPlacement);// 0x33efa60
	void Open(bool bFocusMenu);// 0x33ef170
	bool IsOpen();// 0x33ef140
	bool HasOpenSubMenus();// 0x33ef110
	UserWidget* GetUserWidget__DelegateSignature();// 0x1d69c50
	Vector2D GetMenuPosition();// 0x33eee90
	void FitInWindow(bool bFit);// 0x33eea80
	void Close();// 0x33eea60

--------------------------------
Class: ModBrowser_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	ModDetails_C* ModDetails;//[Offset: 0x268, Size: 1]
	WrapBox* ModList;//[Offset: 0x270, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x278, Size: 1]
	enum GetVisibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, bool CallFunc_IsSteamConnected_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Selected Mod(ModdingRuntimeModInfoDetails ModInfo);// 0x1d69c50
	void Init();// 0x1d69c50
	void ExecuteUbergraph_ModBrowser(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, ModItem_C* CallFunc_Create_ReturnValue, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, ModdingRuntimeModInfoDetails CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, ModdingRuntimeModInfoDetails K2Node_CustomEvent_ModInfo, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: ModItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BounceAnim;//[Offset: 0x268, Size: 1]
	Button* Button_Mod;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* ButtonLINK;//[Offset: 0x278, Size: 1]
	CircularThrobber* CircularThrobber;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	Border* InfoBG;//[Offset: 0x290, Size: 1]
	Image* Star1;//[Offset: 0x298, Size: 1]
	Image* Star2;//[Offset: 0x2a0, Size: 1]
	Image* Star3;//[Offset: 0x2a8, Size: 1]
	Image* Star4;//[Offset: 0x2b0, Size: 1]
	Image* Star5;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_ModName;//[Offset: 0x2c0, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x2c8, Size: 1]
	ModdingRuntimeModInfoDetails ModInfo;//[Offset: 0x2d0, Size: 1]
	float Rate;//[Offset: 0x370, Size: 1]
	MulticastInlineDelegateProperty Mod Selected;//[Size: 1]
	Texture2DDynamic* Texture;//[Offset: 0x388, Size: 1]
	void Refresh Mod(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Mod_DescriptionTooltip_C* CallFunc_Create_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_FTrunc_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, Image*[] K2Node_MakeArray_Array, int CallFunc_Array_Length_ReturnValue, Image* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void OnFail_8A86417A45928AEC81E697912B573E34(Texture2DDynamic* Texture);// 0x1d69c50
	void OnSuccess_8A86417A45928AEC81E697912B573E34(Texture2DDynamic* Texture);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_30_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__ButtonLINK_K2Node_ComponentBoundEvent_119_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_226_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_236_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_ModItem(int EntryPoint, bool Temp_bool_Variable, bool CallFunc_IsAnimationPlaying_ReturnValue, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* K2Node_CustomEvent_Texture, Texture2DDynamic* K2Node_CustomEvent_Texture, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* Temp_object_Variable, bool K2Node_Event_IsDesignTime, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, AsyncTaskDownloadImage* CallFunc_DownloadImage_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void Mod Selected__DelegateSignature(ModdingRuntimeModInfoDetails ModInfo);// 0x1d69c50

--------------------------------
Class: ModDetails_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* ButtonDISLIKE;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* ButtonLIKE;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* ButtonToggleInfo;//[Offset: 0x278, Size: 1]
	CircularThrobber* CircularThrobber;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	Image* Image;//[Offset: 0x290, Size: 1]
	Image* Image;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	ScrollBox* ScrollBoxInfo;//[Offset: 0x2a8, Size: 1]
	Image* ServerImage;//[Offset: 0x2b0, Size: 1]
	Image* Star1;//[Offset: 0x2b8, Size: 1]
	Image* Star2;//[Offset: 0x2c0, Size: 1]
	Image* Star3;//[Offset: 0x2c8, Size: 1]
	Image* Star4;//[Offset: 0x2d0, Size: 1]
	Image* Star5;//[Offset: 0x2d8, Size: 1]
	TextBlock* TB_CreatorName;//[Offset: 0x2e0, Size: 1]
	TextBlock* TB_ModDescription;//[Offset: 0x2e8, Size: 1]
	TextBlock* TB_ModName;//[Offset: 0x2f0, Size: 1]
	TextBlock* TB_NumRatings;//[Offset: 0x2f8, Size: 1]
	TextBlock* TB_NumSubscriptions;//[Offset: 0x300, Size: 1]
	TextBlock* TB_NumUniqueVisitors;//[Offset: 0x308, Size: 1]
	TextBlock* TB_PostDate;//[Offset: 0x310, Size: 1]
	TextBlock* TB_Type;//[Offset: 0x318, Size: 1]
	TextBlock* TB_UpdateDate;//[Offset: 0x320, Size: 1]
	VerticalBox* VerticalBox_Info;//[Offset: 0x328, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Image;//[Offset: 0x330, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Main;//[Offset: 0x338, Size: 1]
	bool Is Info Hidden;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	ModImageDownloads[] ModImages;//[Offset: 0x348, Size: 1]
	ModdingRuntimeModInfoDetails ModInfo;//[Offset: 0x358, Size: 1]
	void Refresh(ModdingRuntimeModInfoDetails New Info, float CallFunc_MapRangeClamped_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_FTrunc_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Format_ReturnValue, Image*[] K2Node_MakeArray_Array, Image* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void OnFail_D99CC5A5414F1A0E142CABB84BB5A40B(Texture2DDynamic* Texture);// 0x1d69c50
	void OnSuccess_D99CC5A5414F1A0E142CABB84BB5A40B(Texture2DDynamic* Texture);// 0x1d69c50
	void BndEvt__ButtonLIKE_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonDISLIKE_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Get Image();// 0x1d69c50
	void BndEvt__MainMenu_Button_Development_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_ModDetails(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, Margin K2Node_MakeStruct_Margin, Margin K2Node_MakeStruct_Margin, Texture2DDynamic* K2Node_CustomEvent_Texture, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* K2Node_CustomEvent_Texture, delegate K2Node_CreateDelegate_OutputDelegate, Texture2DDynamic* Temp_object_Variable, bool CallFunc_Not_PreBool_ReturnValue, enum K2Node_Select_Default, float K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, Margin K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, AsyncTaskDownloadImage* CallFunc_DownloadImage_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: ModImageDownloads
	FString URL_2_C309587F41E1BB64C3AC0BA8C4953D8B;//[Offset: 0x0, Size: 1]
	Texture2DDynamic* Image_5_A09AF30345C008981F2F19A0197BA8A4;//[Offset: 0x10, Size: 1]

--------------------------------
Class: W_PromoNewsWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* HoverAnim;//[Offset: 0x268, Size: 1]
	SQRichTextBlock* Hyperlink1;//[Offset: 0x270, Size: 1]
	SQRichTextBlock* Hyperlink2;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	SQRichTextBlock* SQRichTextBody;//[Offset: 0x288, Size: 1]
	TextBlock* TitleText;//[Offset: 0x290, Size: 1]
	CrossPromotionData Promo;//[Offset: 0x298, Size: 1]
	void OnCloudImageReady(const SQCdnFile* CdnFile, Texture2D* CallFunc_GetAsTexture_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void OnCrossPromoDataReady(out const CrossPromotionData PromotionData, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Format_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void BndEvt__Hyperlink1_K2Node_ComponentBoundEvent_0_Delegate_OnHyperLinkClicked__DelegateSignature(FString URL);// 0x1d69c50
	void BndEvt__Hyperlink2_K2Node_ComponentBoundEvent_1_Delegate_OnHyperLinkClicked__DelegateSignature(FString URL);// 0x1d69c50
	void ExecuteUbergraph_W_PromoNewsWidget(int EntryPoint, SQCloudServicesSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, const PointerEvent K2Node_Event_MouseEvent, delegate K2Node_CreateDelegate_OutputDelegate, Geometry K2Node_Event_MyGeometry, const PointerEvent K2Node_Event_MouseEvent, FString K2Node_ComponentBoundEvent_Url, FString K2Node_ComponentBoundEvent_Url, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQCdnFile.Object
	byte[] Data;//[Offset: 0x28, Size: 1]
	Texture2D* GetAsTexture();// 0xd59dd0

--------------------------------
Class: CrossPromotionData
	bool bInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	FString Title;//[Offset: 0x8, Size: 1]
	FString Body;//[Offset: 0x18, Size: 1]
	FString CdnImageName;//[Offset: 0x28, Size: 1]
	FString URL;//[Offset: 0x38, Size: 1]
	FString UrlText;//[Offset: 0x48, Size: 1]
	FString Url2;//[Offset: 0x58, Size: 1]
	FString UrlText2;//[Offset: 0x68, Size: 1]

--------------------------------
Class: SQCloudServicesSubsystem.GameInstanceSubsystem.Subsystem.Object
	MulticastInlineDelegateProperty OnNewsDataReady;//[Size: 1]
	MulticastInlineDelegateProperty OnCrossPromoDataReady;//[Size: 1]
	MulticastInlineDelegateProperty OnTitleDataReady;//[Size: 1]
	SQCloudProvider*[] ProviderList;//[Offset: 0xb8, Size: 1]
	byte NewsProvider;//[Offset: 0x140, Size: 1]
	byte TitleDataProvider;//[Offset: 0x141, Size: 1]
	byte ImageProvider;//[Offset: 0x142, Size: 1]
	byte AnalyticsProvider;//[Offset: 0x143, Size: 1]
	static void SendAnalyticEventArray(FString EventName, AnalyticKeyValue[] EventData);// 0xd60000
	static void SendAnalyticEvent(FString EventName, FString EventDataKey, FString EventData);// 0xd5fdd0
	static void RequestTitleData(bool bForceRefresh);// 0xd5fd50
	static void RequestNewsData(bool bForceRefresh);// 0xd5fc20
	static void RequestFile(FString Filename, delegate OnReadyDelegate);// 0xd5fae0
	static TitleData GetTitleData();// 0xd5f6d0
	static NewsData GetNewsData();// 0xd5f650
	static CrossPromotionData GetCrossPromotionData();// 0xd5f610

--------------------------------
Class: SQCloudProvider.Object

--------------------------------
Class: AnalyticKeyValue
	FString Key;//[Offset: 0x0, Size: 1]
	FString Value;//[Offset: 0x10, Size: 1]

--------------------------------
Class: TitleData
	bool bInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	CrossPromotionData CrossPromotionData;//[Offset: 0x8, Size: 1]
	StoreSettingsData StoreSettings;//[Offset: 0x80, Size: 1]

--------------------------------
Class: StoreSettingsData
	bool bInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	FString[] Bundles;//[Offset: 0x8, Size: 1]

--------------------------------
Class: NewsData
	bool bInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	FString Title;//[Offset: 0x8, Size: 1]
	FString Body;//[Offset: 0x18, Size: 1]
	FString CdnImageName;//[Offset: 0x28, Size: 1]
	FString URL;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SQNetInfoWidgetSlot_C.SQAnnouncementNotifier.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Image;//[Offset: 0x268, Size: 1]
	SQRichTextBlock* SQRichBodyText;//[Offset: 0x270, Size: 1]
	TextBlock* TitleText;//[Offset: 0x278, Size: 1]
	NewsData News;//[Offset: 0x280, Size: 1]
	void OnNewsDataReady(out const NewsData NewsData, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void OnCloudImageReady(const SQCdnFile* CdnFile, Texture2D* CallFunc_GetAsTexture_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void ExecuteUbergraph_SQNetInfoWidgetSlot(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, SQCloudServicesSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQAnnouncementNotifier.UserWidget.Widget.Visual.Object

--------------------------------
Class: SteamInventorySettings_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* MainPatchesTab;//[Offset: 0x268, Size: 1]
	ModelRenderPanel_C* ModelRenderPanel;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* PatchesTab;//[Offset: 0x278, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x280, Size: 1]
	TextBlock* SelectedItemDesc;//[Offset: 0x288, Size: 1]
	TextBlock* SelectedItemName;//[Offset: 0x290, Size: 1]
	ListView* SteamItemsList;//[Offset: 0x298, Size: 1]
	MainMenu_Button_C* WeaponSkinsTab;//[Offset: 0x2a0, Size: 1]
	int Mode;//[Offset: 0x2a8, Size: 1]
	void GetMesh(SQWeaponSkinData* InSkinData, out SkeletalMeshComponent* Mesh1P, class Object[] CallFunc_Map_Values_Values, class Object CallFunc_Array_Get_Item, Object* CallFunc_GetDefaultObjectFor_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQEquipableItem* K2Node_DynamicCast_AsSQEquipable_Item, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void RefreshInventory();// 0x1d69c50
	void UpdateItems();// 0x1d69c50
	void OnItemHovered(Object* Item, bool bIsHovered);// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainMenu_Button_1_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__MainPatchesTab_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_SteamInventorySettings(int EntryPoint, SQSteamInventoryUI* CallFunc_GetSteamInventory_ReturnValue, const class SQSteamItem Temp_class_Variable, const class SQSteamItem Temp_class_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Variable, delegate K2Node_CreateDelegate_OutputDelegate, Object* K2Node_CustomEvent_Item, bool K2Node_CustomEvent_bIsHovered, SQSupporterPatchData* K2Node_DynamicCast_AsSQSupporter_Patch_Data, bool K2Node_DynamicCast_bSuccess, SQMainPatchData* K2Node_DynamicCast_AsSQMain_Patch_Data, bool K2Node_DynamicCast_bSuccess, SQWeaponSkinData* K2Node_DynamicCast_AsSQWeapon_Skin_Data, bool K2Node_DynamicCast_bSuccess, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SkeletalMeshComponent* CallFunc_GetMesh_Mesh1P, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, const class SQSteamItem Temp_class_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, const class SQSteamItem K2Node_Select_Default, SQSteamItem*[] CallFunc_GetItemsOfClass_ReturnValue, Object* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQSteamInventoryUI* CallFunc_GetSteamInventory_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQWeaponSkinData.SQSteamItem.Object
	SQWeaponReplacementItem ReplacementData;//[Offset: 0x40, Size: 1]

--------------------------------
Class: SQSteamItem.Object
	int SteamId;//[Offset: 0x28, Size: 1]
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c, Size: 1]
	MulticastInlineDelegateProperty OnStateChanged;//[Size: 1]
	bool SetEnabled(bool bNewEnable, bool bOverrideIncompatibles);// 0xe1bd60
	bool IsCompatibleWith(const SQSteamItem* OtherItem);// 0xe1ae60

--------------------------------
Class: SQWeaponReplacementItem
	FText ItemName;//[Offset: 0x0, Size: 1]
	FText ItemDescription;//[Offset: 0x18, Size: 1]
	Texture2D* SkinTexture;//[Offset: 0x30, Size: 1]
	<class Object,class Object> WeaponReplacements;//[Offset: 0x38, Size: 1]

--------------------------------
Class: ModelRenderPanel_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	ScaleBox* ImageScaleBox;//[Offset: 0x270, Size: 1]
	Image* SelectedItemImage;//[Offset: 0x278, Size: 1]
	Actor* RenderModel;//[Offset: 0x280, Size: 1]
	SceneCapture2D* Capture;//[Offset: 0x288, Size: 1]
	bool ContinualUpdate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	bool AllowMouseRotation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x291, Size: 1]
	Vector ModelWorldCenterOffset;//[Offset: 0x294, Size: 1]
	Vector CameraLocationOffset;//[Offset: 0x2a0, Size: 1]
	float ContinualRotationSpeed;//[Offset: 0x2ac, Size: 1]
	bool UseCustomOrthoWidth;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b0, Size: 1]
	float CustomOrthoWidth;//[Offset: 0x2b4, Size: 1]
	bool IsImage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	Rotator CameraRotation;//[Offset: 0x2bc, Size: 1]
	Vector2D MouseLastLoc;//[Offset: 0x2c8, Size: 1]
	bool ClickedOnModel;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	bool IsCustomActor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d1, Size: 1]
	Vector2D OldSize;//[Offset: 0x2d4, Size: 1]
	float Margin;//[Offset: 0x2dc, Size: 1]
	void SetCustomPostProcess(PostProcessSettings InPostProcessSettings, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void SetCustomOrthoWidth(float CustomOrthoWidth);// 0x1d69c50
	void SetCameraModelOffset(float TargetRatio, float TargetWidth, float Width, float Ratio, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_GetActorBounds_Origin, Vector CallFunc_GetActorBounds_BoxExtent, Vector CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Rotator CallFunc_FindLookAtRotation_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, HitResult CallFunc_K2_SetActorTransform_SweepHitResult, bool CallFunc_K2_SetActorTransform_ReturnValue);// 0x1d69c50
	void SetupCustomActor(Actor* CustomActor, Actor*[] K2Node_MakeArray_Array, bool CallFunc_IsValid_ReturnValue, HitResult CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue);// 0x1d69c50
	void SetupStaticMesh(StaticMesh* StaticMesh, out MaterialInterface*[] Materials, Actor*[] K2Node_MakeArray_Array, bool CallFunc_IsValid_ReturnValue, StaticMeshActor* K2Node_DynamicCast_AsStatic_Mesh_Actor, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, StaticMeshActor* K2Node_DynamicCast_AsStatic_Mesh_Actor, bool K2Node_DynamicCast_bSuccess, MaterialInterface* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, StaticMeshActor* CallFunc_FinishSpawningActor_ReturnValue);// 0x1d69c50
	void SetupSkeletalMesh(SkeletalMesh* SkeletalMesh, out MaterialInterface*[] Materials, Actor*[] K2Node_MakeArray_Array, bool CallFunc_IsValid_ReturnValue, SkeletalMeshActor* K2Node_DynamicCast_AsSkeletal_Mesh_Actor, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, SkeletalMeshActor* K2Node_DynamicCast_AsSkeletal_Mesh_Actor, bool K2Node_DynamicCast_bSuccess, MaterialInterface* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, SkeletalMeshActor* CallFunc_FinishSpawningActor_ReturnValue);// 0x1d69c50
	void SetupAsImage(Texture2D* OverrideTexture);// 0x1d69c50
	void ClearRender(bool CallFunc_IsValid_ReturnValue, Actor*[] K2Node_MakeArray_Array, Actor*[] K2Node_MakeArray_Array);// 0x1d69c50
	void RemoveRenderActors(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonUp(Geometry MyGeometry, out const PointerEvent MouseEvent, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	EventReply OnMouseButtonDown(Geometry MyGeometry, out const PointerEvent MouseEvent, Vector2D CallFunc_GetMousePositionOnViewport_ReturnValue, EventReply CallFunc_Handled_ReturnValue);// 0x1d69c50
	void RotateCamera(float XDelta, float YDelta, Vector CallFunc_GetActorBounds_Origin, Vector CallFunc_GetActorBounds_BoxExtent, Vector CallFunc_Conv_RotatorToVector_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Rotator CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_K2_SetActorRotation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, HitResult CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50
	void UpdateRender(int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Object*[] CallFunc_GetAllComponentsOfClass_Components, Object*[] CallFunc_GetAllComponentsOfClass_Components, Object* CallFunc_Array_Get_Item, Object* CallFunc_Array_Get_Item, SkeletalMeshComponent* K2Node_DynamicCast_AsSkeletal_Mesh_Component, bool K2Node_DynamicCast_bSuccess, StaticMeshComponent* K2Node_DynamicCast_AsStatic_Mesh_Component, bool K2Node_DynamicCast_bSuccess, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, MaterialInterface* CallFunc_Array_Get_Item, MaterialInterface* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, StaticMeshActor* K2Node_DynamicCast_AsStatic_Mesh_Actor, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, SkeletalMeshActor* K2Node_DynamicCast_AsSkeletal_Mesh_Actor, bool K2Node_DynamicCast_bSuccess, MaterialInterface* CallFunc_Array_Get_Item, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, int CallFunc_Array_Length_ReturnValue, MaterialInterface* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector2D CallFunc_GetMousePositionOnViewport_ReturnValue, Vector2D CallFunc_Subtract_Vector2DVector2D_ReturnValue, Vector2D CallFunc_Multiply_Vector2DFloat_ReturnValue, int Temp_int_Loop_Counter_Variable, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void RendererSetup(bool CallFunc_IsValid_ReturnValue, const Geometry CallFunc_GetCachedGeometry_ReturnValue, Vector2D CallFunc_GetAbsoluteSize_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, int CallFunc_FTrunc_ReturnValue, SceneCapture2D* CallFunc_FinishSpawningActor_ReturnValue, int CallFunc_FTrunc_ReturnValue, TextureRenderTarget2D* CallFunc_CreateRenderTarget2D_ReturnValue, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Destruct();// 0x1d69c50
	void ExecuteUbergraph_ModelRenderPanel(int EntryPoint, const PointerEvent K2Node_Event_MouseEvent, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_Event_IsDesignTime, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_BooleanAND_ReturnValue, Vector2D CallFunc_GetAbsoluteSize_ReturnValue, bool CallFunc_NotEqualExactly_Vector2DVector2D_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQSteamInventoryUI.GameInstanceSubsystem.Subsystem.Object
	MulticastInlineDelegateProperty OnCachedSteamItems;//[Size: 1]
	<int,SQSteamItem*> CachedSteamIds;//[Offset: 0x40, Size: 1]
	CoreGetAllItemsCallbackProxy* CallbackProxy;//[Offset: 0xe0, Size: 1]
	void OnGetCacheSuccess(out const BlueprintOnlineItem[] Results);// 0xe1b030
	SQSteamItem*[] GetItemsOfClass(const class SQSteamItem ItemClass);// 0xe1ab50
	SQSteamItem*[] GetIncompatibleItems(const SQSteamItem* ItemToCheckFor, bool bEnabledOnly);// 0xe1aa60
	SQSteamItem* GetFirstIncompatibleItem(const SQSteamItem* ItemToCheckFor, bool bEnabledOnly);// 0xe1a990
	void CacheSteamItems();// 0xe1a6d0

--------------------------------
Class: CoreGetAllItemsCallbackProxy.OnlineBlueprintCallProxyBase.BlueprintAsyncActionBase.Object
	MulticastInlineDelegateProperty OnSuccess;//[Size: 1]
	MulticastInlineDelegateProperty OnFailure;//[Size: 1]
	static CoreGetAllItemsCallbackProxy* GetAllItems(Object* WorldContextObject);// 0xd3cce0

--------------------------------
Class: BlueprintOnlineItem

--------------------------------
Class: SQSupporterPatchData.SQSteamItem.Object
	SQPatchItem PatchData;//[Offset: 0x40, Size: 1]

--------------------------------
Class: SQPatchItem
	FText PatchName;//[Offset: 0x0, Size: 1]
	FText PatchDescription;//[Offset: 0x18, Size: 1]
	Texture2D* PatchImage;//[Offset: 0x30, Size: 1]
	Texture2D* PatchImageUI;//[Offset: 0x38, Size: 1]

--------------------------------
Class: SQMainPatchData.SQSteamItem.Object
	SQPatchItem PatchData;//[Offset: 0x40, Size: 1]

--------------------------------
Class: W_StoreScreen_C.SQUserWidget_StoreScreen.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a8, Size: 1]
	WidgetAnimation* ShowPreview;//[Offset: 0x2b0, Size: 1]
	Overlay* BGOverlay;//[Offset: 0x2b8, Size: 1]
	Image* BundleBackground;//[Offset: 0x2c0, Size: 1]
	Image* Image;//[Offset: 0x2c8, Size: 1]
	Image* Image;//[Offset: 0x2d0, Size: 1]
	Image* PreviewOverlay;//[Offset: 0x2d8, Size: 1]
	Image* PreviewOverlay2;//[Offset: 0x2e0, Size: 1]
	Image* PreviewOverlayColourGradient;//[Offset: 0x2e8, Size: 1]
	Image* StoreBG;//[Offset: 0x2f0, Size: 1]
	Image* StoreBGOverlay;//[Offset: 0x2f8, Size: 1]
	ScrollBox* StoreScrollBox;//[Offset: 0x300, Size: 1]
	W_BundlePreview_C* W_BundlePreview;//[Offset: 0x308, Size: 1]
	W_Input_ToolTipButton_C* W_Input_ToolTipButton_C;//[Offset: 0x310, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x318, Size: 1]
	MulticastInlineDelegateProperty LeaveStore;//[Size: 1]
	ODKBazaarBundle*[] TempBoughtBundles;//[Offset: 0x330, Size: 1]
	MulticastInlineDelegateProperty OnGotoEquip;//[Size: 1]
	MainMenu_Button_C* StoreButton;//[Offset: 0x350, Size: 1]
	bool bIsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x358, Size: 1]
	void CreateBazaarAnalyticEventData(ODKBazaarItem* Bazaar Item, out AnalyticKeyValue[] Event Data, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_NameToString_ReturnValue, AnalyticKeyValue K2Node_MakeStruct_AnalyticKeyValue, AnalyticKeyValue K2Node_MakeStruct_AnalyticKeyValue, AnalyticKeyValue[] K2Node_MakeArray_Array);// 0x1d69c50
	void AddParallax(bool bInvert, float Percent, float StartX, float StartY, out float EndX, out float EndY, float MouseY, float MouseX, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetMousePosition_LocationX, float CallFunc_GetMousePosition_LocationY, bool CallFunc_GetMousePosition_ReturnValue);// 0x1d69c50
	EventReply OnKeyDown(Geometry MyGeometry, KeyEvent InKeyEvent, Key CallFunc_GetKey_ReturnValue, EventReply CallFunc_Handled_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue, EventReply CallFunc_Unhandled_ReturnValue);// 0x1d69c50
	void LeaveScreen();// 0x1d69c50
	void OnPurchaseCompleted(out const ODKBazaarPurchaseCompletedData PurchaseCompletedData);// 0x1d69c50
	void CheckForNextBundle(ODKBazaarBundle* ClosedBundle);// 0x1d69c50
	void DisplayPurchaseFanfare(ODKBazaarBundle* NewlyBoughtBundle);// 0x1d69c50
	void GotoEquip();// 0x1d69c50
	void BndEvt__W_Input_ToolTipButton_C_0_K2Node_ComponentBoundEvent_1_OnToolTipPressed__DelegateSignature();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnScreenOpen();// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void PreviewBundleScreen(const ODKBazaarBundle* BazaarBundle);// 0x1d69c50
	void OnTitleDataReady(out const TitleData TitleData);// 0x1d69c50
	void UpdateStoreAvailability(out const TitleData TitleData);// 0x1d69c50
	void ExecuteUbergraph_W_StoreScreen(int EntryPoint, ODKBazaarBundle* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, SQCloudServicesSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue, const TitleData CallFunc_GetTitleData_ReturnValue, int CallFunc_GetActiveWidgetIndex_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, const ODKBazaarPurchaseCompletedData K2Node_Event_PurchaseCompletedData, W_PurchaseCompleteScreen_C* CallFunc_Create_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, ODKBazaarBundle* K2Node_CustomEvent_ClosedBundle, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, ODKBazaarBundle* K2Node_CustomEvent_NewlyBoughtBundle, AnalyticKeyValue[] CallFunc_CreateBazaarAnalyticEventData_Event_Data, ODKBazaarBundle* CallFunc_Array_Get_Item, SQCloudServicesSubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, float CallFunc_AddParallax_EndX, float CallFunc_AddParallax_EndY, float CallFunc_GetWorldDeltaSeconds_ReturnValue, bool CallFunc_IsVisible_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_FInterpTo_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, WidgetTransform K2Node_MakeStruct_WidgetTransform, const ODKBazaarBundle* K2Node_Event_BazaarBundle, const TitleData K2Node_CustomEvent_TitleData, AnalyticKeyValue[] CallFunc_CreateBazaarAnalyticEventData_Event_Data, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, const TitleData K2Node_CustomEvent_TitleData, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void OnGotoEquip__DelegateSignature();// 0x1d69c50
	void LeaveStore__DelegateSignature();// 0x1d69c50

--------------------------------
Class: SQUserWidget_StoreScreen.UserWidget.Widget.Visual.Object
	MulticastInlineDelegateProperty OnNewBundleDelegate;//[Size: 1]
	delegate OnPurchase;//[Offset: 0x270, Size: 1]
	GridPanel* StoreGrid;//[Offset: 0x280, Size: 1]
	ODKBazaarBundle*[] StoreBundles;//[Offset: 0x288, Size: 1]
	ODKBazaarBundle* PreviewBundle;//[Offset: 0x298, Size: 1]
	class SQUserWidget_StoreCard* StoreCardClass;//[Offset: 0x2a0, Size: 1]
	void TryGotoPurchaseForBundle(ODKBazaarBundle* BazaarBundle);// 0xe30f70
	void SetupWidget(out const TitleData TitleData);// 0xe30c40
	void PreviewBundleScreen(const ODKBazaarBundle* BazaarBundle);// 0x1d69c50
	void OnPurchaseCompleted(out const ODKBazaarPurchaseCompletedData PurchaseCompletedData);// 0xd75190

--------------------------------
Class: SQUserWidget_StoreCard.UserWidget.Widget.Visual.Object
	Button* BundleButton;//[Offset: 0x260, Size: 1]
	Image* BundleImage;//[Offset: 0x268, Size: 1]
	TextBlock* BundleName;//[Offset: 0x270, Size: 1]
	TextBlock* BundleDescription;//[Offset: 0x278, Size: 1]
	Border* BundleSaleBadge;//[Offset: 0x280, Size: 1]
	Border* BundleNewBadge;//[Offset: 0x288, Size: 1]
	Border* BundleOwnedBadge;//[Offset: 0x290, Size: 1]
	ODKBazaarBundle* BazaarBundle;//[Offset: 0x2a0, Size: 1]
	void OnClick();// 0xe304f0

--------------------------------
Class: W_PurchaseCompleteScreen_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Intro;//[Offset: 0x268, Size: 1]
	Image* BundleImage;//[Offset: 0x270, Size: 1]
	TextBlock* BundleName;//[Offset: 0x278, Size: 1]
	Button* ContinueButton;//[Offset: 0x280, Size: 1]
	Image* DarkPanel;//[Offset: 0x288, Size: 1]
	Button* EquipButton;//[Offset: 0x290, Size: 1]
	TextBlock* EquipDetailText;//[Offset: 0x298, Size: 1]
	Image* GlowBlur;//[Offset: 0x2a0, Size: 1]
	HorizontalBox* OptionBox;//[Offset: 0x2a8, Size: 1]
	Border* PurchaseDialogue;//[Offset: 0x2b0, Size: 1]
	ODKBazaarBundle* BazaarBundle;//[Offset: 0x2b8, Size: 1]
	MulticastInlineDelegateProperty OnClose;//[Size: 1]
	MulticastInlineDelegateProperty OnGotoEquip;//[Size: 1]
	SoundBase* PurchaseFanfare;//[Offset: 0x2e0, Size: 1]
	bool bShowEquip;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e8, Size: 1]
	void BndEvt__ContinueButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__EquipButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_PurchaseCompleteScreen(int EntryPoint, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void OnGotoEquip__DelegateSignature();// 0x1d69c50
	void OnClose__DelegateSignature(ODKBazaarBundle* ClosedBundle);// 0x1d69c50

--------------------------------
Class: W_BundlePreview_C.SQCustomizationScreen.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a8, Size: 1]
	TextBlock* MTB_EmoteDescription;//[Offset: 0x2b0, Size: 1]
	WidgetSwitcher* OwnedSwitcher;//[Offset: 0x2b8, Size: 1]
	Button* PurchaseButton;//[Offset: 0x2c0, Size: 1]
	TextBlock* PurchaseText;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_BundleSubTitle;//[Offset: 0x2d0, Size: 1]
	TextBlock* TB_EmoteTag;//[Offset: 0x2d8, Size: 1]
	TextBlock* TB_EmoteTitle;//[Offset: 0x2e0, Size: 1]
	TextBlock* TB_Title;//[Offset: 0x2e8, Size: 1]
	W_SoldierPreview_C* W_SoldierPreview;//[Offset: 0x2f0, Size: 1]
	ODKBazaarBundle* Bundle;//[Offset: 0x2f8, Size: 1]
	int UniformGridSize;//[Offset: 0x300, Size: 1]
	MulticastInlineDelegateProperty OnClosed;//[Size: 1]
	W_StoreScreen_C* StoreScreen;//[Offset: 0x318, Size: 1]
	void OnItemHovered(SQEmotesData* EmoteData, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_NameToText_ReturnValue, AnimMontage* K2Node_Select_Default, FString[] CallFunc_GetRestrictionsText_ReturnValue, FString CallFunc_JoinStringArray_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, enum Temp_byte_Variable, FText K2Node_Select_Default, Widget*[] CallFunc_GetAllChildren_ReturnValue, Widget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, W_EmotesItem_C* K2Node_DynamicCast_AsW_Emotes_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void CheckFactionRestrictions(SQEmotesData* EmoteData, SQFaction* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQFactionSetup* CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQAvailability_Role* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);// 0x1d69c50
	void PopulateStoreGrid();// 0x1d69c50
	void CreateRenderTarget();// 0x1d69c50
	void OnScreenOpen();// 0x1d69c50
	void OnScreenClosed();// 0x1d69c50
	void BndEvt__PurchaseButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void CheckOwned();// 0x1d69c50
	void ExecuteUbergraph_W_BundlePreview(int EntryPoint, int Temp_int_Variable, FText CallFunc_Conv_StringToText_ReturnValue, int Temp_int_Variable, FText CallFunc_TextToUpper_ReturnValue, bool Temp_bool_Variable, Rotator CallFunc_MakeRotator_ReturnValue, Widget*[] CallFunc_GetAllChildren_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, Widget* CallFunc_Array_Get_Item, W_EmotesItem_C* K2Node_DynamicCast_AsW_Emotes_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsOwnedLocally_ReturnValue, int K2Node_Select_Default);// 0x1d69c50
	void OnClosed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: TravelQueueWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* OpenClose;//[Offset: 0x268, Size: 1]
	Button* Button_Toggle;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	MainMenu_Button_C* LeaveQueue;//[Offset: 0x288, Size: 1]
	VerticalBox* Queue;//[Offset: 0x290, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x298, Size: 1]
	TextBlock* TB_Details1;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_Details2;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_MapName;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Position;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_ServerName;//[Offset: 0x2c0, Size: 1]
	Image* TopLine;//[Offset: 0x2c8, Size: 1]
	bool Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	int Secs to Join;//[Offset: 0x2d4, Size: 1]
	MainMenuScreen_C* REF Menu;//[Offset: 0x2d8, Size: 1]
	BlueprintSessionResult Queued Session;//[Offset: 0x2e0, Size: 1]
	bool Can Toggle Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3e8, Size: 1]
	FString Marquee String;//[Offset: 0x3f0, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x400, Size: 1]
	TimerHandle Count down handle;//[Offset: 0x408, Size: 1]
	FText Position;//[Offset: 0x410, Size: 1]
	FText Status;//[Offset: 0x428, Size: 1]
	FText Queue Details;//[Offset: 0x440, Size: 1]
	SQJoinBeaconClient* Current Queue;//[Offset: 0x458, Size: 1]
	enum Bind Visibility via bToggle(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	FText Bind Text Detailed Queue 2(bool CallFunc_IsValid_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Max_ReturnValue, int CallFunc_Min_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText Bind Text Detailed Queue 1(bool CallFunc_IsValid_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Subtract_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText Bind Text Countdown(FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText Bind Text Position(FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool Temp_bool_Variable, FText K2Node_Select_Default);// 0x1d69c50
	void Get Queue(out SQJoinBeaconClient* JoinQueueClient, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void OnFailure_338384884E6EB2D7330F46BC3A121CC7();// 0x1d69c50
	void OnSuccess_338384884E6EB2D7330F46BC3A121CC7();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_40_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void Start Countdown(BlueprintSessionResult Sesh);// 0x1d69c50
	void Count Down();// 0x1d69c50
	void Lock Open();// 0x1d69c50
	void BndEvt__CancelTravel_K2Node_ComponentBoundEvent_220_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__LeaveQueue_K2Node_ComponentBoundEvent_229_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Reset Queue Window();// 0x1d69c50
	void Initiate Travel(BlueprintSessionResult Session);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Marquee();// 0x1d69c50
	void New Queue();// 0x1d69c50
	void ExecuteUbergraph_TravelQueueWidget(int EntryPoint, bool Temp_bool_Variable, int CallFunc_Len_ReturnValue, byte Temp_byte_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, BlueprintSessionResult K2Node_CustomEvent_Sesh, int Temp_int_Variable, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, FText CallFunc_Format_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, BlueprintSessionResult K2Node_CustomEvent_Session, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, byte Temp_byte_Variable, SQJoinSessionCallbackProxy* CallFunc_JoinSession_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsHovered_ReturnValue, FString CallFunc_RightChop_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQJoinBeaconClient* CallFunc_Get_Queue_JoinQueueClient, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, FString CallFunc_Left_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Len_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, FString CallFunc_Left_ReturnValue, int CallFunc_Len_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_GetCurrentLevelName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetPlayerController_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, byte K2Node_Select_Default, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_Get_Showing_Main_Menu_Showing, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: SQJoinSessionCallbackProxy.OnlineBlueprintCallProxyBase.BlueprintAsyncActionBase.Object
	MulticastInlineDelegateProperty OnSuccess;//[Size: 1]
	MulticastInlineDelegateProperty OnFailure;//[Size: 1]
	Object* WorldContextObject;//[Offset: 0x178, Size: 1]
	static SQJoinSessionCallbackProxy* JoinSession(Object* WorldContextObject, PlayerController* PlayerController, out const BlueprintSessionResult SearchResult);// 0xdab2b0
	static bool IsServerModded(out const BlueprintSessionResult SearchResult, out bool bIsWhitelisted);// 0xdab0c0

--------------------------------
Class: LevelSelector_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BounceAnim;//[Offset: 0x268, Size: 1]
	Button* Button_Main;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* ButtonLINK;//[Offset: 0x278, Size: 1]
	Image* Image_Main;//[Offset: 0x280, Size: 1]
	Border* InfoBG;//[Offset: 0x288, Size: 1]
	TextBlock* TB_Mode;//[Offset: 0x290, Size: 1]
	TextBlock* TB_ModName;//[Offset: 0x298, Size: 1]
	MulticastInlineDelegateProperty Level Selected;//[Size: 1]
	FText GOTO Text;//[Offset: 0x2b0, Size: 1]
	FText Level Text;//[Offset: 0x2c8, Size: 1]
	FText Mode Text;//[Offset: 0x2e0, Size: 1]
	FName Level Name;//[Offset: 0x2f8, Size: 1]
	FString Level Mode;//[Offset: 0x300, Size: 1]
	Texture2D* Level Texture;//[Offset: 0x310, Size: 1]
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_30_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__ButtonLINK_K2Node_ComponentBoundEvent_119_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_226_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void BndEvt__Button_Mod_K2Node_ComponentBoundEvent_236_OnButtonHoverEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_LevelSelector(int EntryPoint, bool Temp_bool_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default, bool K2Node_Event_IsDesignTime, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsAnimationPlaying_ReturnValue, GameInstance* CallFunc_GetGameInstance_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess, FString CallFunc_GetLogId_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, LinearColor Temp_struct_Variable, SQLayer* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Level Selected__DelegateSignature(FString LevelName, FString Mode);// 0x1d69c50

--------------------------------
Class: UISettingsWindow_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SettingsItem_TickBox_C* AlwaysShowWeaponsinDeployment;//[Offset: 0x268, Size: 1]
	SettingsItem_TickBox_C* DisableOnScreenChat;//[Offset: 0x270, Size: 1]
	SettingsItem_TickBox_C* HideAllPlayerNamesButton;//[Offset: 0x278, Size: 1]
	SettingsItem_TickBox_C* HideChatButton;//[Offset: 0x280, Size: 1]
	SettingsItem_TickBox_C* HideMiscInfoButton;//[Offset: 0x288, Size: 1]
	SettingsItem_TickBox_C* HideOurPlayerNameButton;//[Offset: 0x290, Size: 1]
	SettingsItem_TickBox_C* HideServerButton;//[Offset: 0x298, Size: 1]
	SettingsItem_TickBox_C* HideSquadButton;//[Offset: 0x2a0, Size: 1]
	Image* Image;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	Image* Image;//[Offset: 0x2c0, Size: 1]
	Image* Image;//[Offset: 0x2c8, Size: 1]
	SettingsItem_Slider_C* MapMarkerScale;//[Offset: 0x2d0, Size: 1]
	SettingsItem_TickBox_C* NameTagHideName;//[Offset: 0x2d8, Size: 1]
	SettingsItem_Slider_C* NameTagOpacity;//[Offset: 0x2e0, Size: 1]
	SettingsItem_Slider_C* NameTagScale;//[Offset: 0x2e8, Size: 1]
	SettingsItem_TickBox_C* NameTagShowKit;//[Offset: 0x2f0, Size: 1]
	SettingsItem_TickBox_C* NameTagSLAlwaysVisible;//[Offset: 0x2f8, Size: 1]
	SettingsItem_TickBox_C* NameTagsShowFTID;//[Offset: 0x300, Size: 1]
	SettingsItem_TickBox_C* PlayCaptureSounds;//[Offset: 0x308, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x310, Size: 1]
	SettingsItem_TickBox_C* ShowDeploymentTutorial;//[Offset: 0x318, Size: 1]
	SettingsItem_TickBox_C* ShowFireteamLetters;//[Offset: 0x320, Size: 1]
	SettingsItem_TickBox_C* ShowModeIntroAnimation;//[Offset: 0x328, Size: 1]
	SettingsItem_TickBox_C* ShowStanceIndicator;//[Offset: 0x330, Size: 1]
	SettingsItem_TickBox_C* ShowVehicleKeybinds;//[Offset: 0x338, Size: 1]
	SettingsItem_TickBox_C* SkipGiveupConfirm;//[Offset: 0x340, Size: 1]
	SettingsItem_TickBox_C* ToggleCompassBackground;//[Offset: 0x348, Size: 1]
	SettingsItem_TickBox_C* ToggleCompassTopView;//[Offset: 0x350, Size: 1]
	SettingsItem_TickBox_C* ToggleGameHelp;//[Offset: 0x358, Size: 1]
	SettingsItem_TickBox_C* ToggleMenuTips;//[Offset: 0x360, Size: 1]
	SettingsItem_TickBox_C* ToggleRadialTips;//[Offset: 0x368, Size: 1]
	SettingsItem_TickBox_C* ToggleStreamerMode;//[Offset: 0x370, Size: 1]
	ScreenResolutionStruct[] ScreenResolutions;//[Offset: 0x378, Size: 1]
	ScreenResolutionStruct[] ValidResolutions;//[Offset: 0x388, Size: 1]
	bool bConstructed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x398, Size: 1]
	MulticastInlineDelegateProperty Reset Appdata OnClicked;//[Size: 1]
	LinearColor SelectedColor;//[Offset: 0x3b0, Size: 1]
	LinearColor UnselectedColor];//[Offset: 0x3c0, Size: 1]
	SaveData_UI_C* Current UI Save;//[Offset: 0x3d0, Size: 1]
	Widget* Get_ToggleCompassTopView_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleCompassBackground_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void UpdateStreamerLevel(enum Enum, bool NewState, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleStreamerMode_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleGameHelp_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleRadialTips_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_ToggleMenuTips_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void UpdateButtons(SaveData_UI_C* L UI Save, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool CallFunc_IsValid_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void APPLY();// 0x1d69c50
	void Revert();// 0x1d69c50
	void Restore Defaults();// 0x1d69c50
	void Show Debugs();// 0x1d69c50
	void BndEvt__ToggleDoubleTapWalk_K2Node_ComponentBoundEvent_13_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleGameHelp_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleJumpUncrouch_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleJumpUnprone_K2Node_ComponentBoundEvent_18_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleMenuTips_K2Node_ComponentBoundEvent_20_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleRadialTips_K2Node_ComponentBoundEvent_22_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleStreamerMode_K2Node_ComponentBoundEvent_23_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleFreelookRecenter_K2Node_ComponentBoundEvent_143_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_Slider_C_0_K2Node_ComponentBoundEvent_1031_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__NameTagSLOnly_K2Node_ComponentBoundEvent_508_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__NameTagShowKit_K2Node_ComponentBoundEvent_758_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__NameTagScale_K2Node_ComponentBoundEvent_1104_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__Keyboardhilite_K2Node_ComponentBoundEvent_1305_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__NameTagSLAlwaysVisible_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ShowStanceIndicator_K2Node_ComponentBoundEvent_1226_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__AlwaysShowWeaponsinDeployment_K2Node_ComponentBoundEvent_1275_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__MapMarkerScale_K2Node_ComponentBoundEvent_212_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__NameTagsShowFTID_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SkipGiveupConfirm_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ShowFireteamLetters_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleDeploymentTutorial_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SkipModeIntroAnimation_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ShowVehicleKeybinds_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__PlayCaptureSounds_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_TickBox_C_0_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleADS_1_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleADS_2_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleADS_3_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__HideAllPlayerNamesButton_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__HideChatButton_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__HideMiscInfoButton_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleCompassBackground_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__ToggleCompassTopView_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void ExecuteUbergraph_UISettingsWindow(int EntryPoint, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, float K2Node_ComponentBoundEvent_Value, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, float K2Node_ComponentBoundEvent_Value, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, UMG_NameTag_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, UMG_NameTag_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, W_SquadMemberItem_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_SquadMemberItem_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float K2Node_ComponentBoundEvent_Value, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, UMG_NameTag_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, UMG_NameTag_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, BP_MapWidgetSoldier_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, BP_MapWidgetSoldier_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, W_ChatBoxBaseHUD_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, W_ChatBoxBaseHUD_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void Reset Appdata OnClicked__DelegateSignature();// 0x1d69c50

--------------------------------
Class: UMG_NameTag_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* FadeIn;//[Offset: 0x268, Size: 1]
	TextBlock* FTID;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	Image* Kit_Image;//[Offset: 0x280, Size: 1]
	Border* OpacityBorder_Info;//[Offset: 0x288, Size: 1]
	Border* OpacityBorder_Rank;//[Offset: 0x290, Size: 1]
	Image* RankImage;//[Offset: 0x298, Size: 1]
	VerticalBox* RootBox;//[Offset: 0x2a0, Size: 1]
	ScaleBox* ScaleKit;//[Offset: 0x2a8, Size: 1]
	TextBlock* SQID;//[Offset: 0x2b0, Size: 1]
	TextBlock* SquadID_Top;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_Name;//[Offset: 0x2c0, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Rank;//[Offset: 0x2c8, Size: 1]
	bool Can Render;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	SQPlayerState* REF Owning Player State;//[Offset: 0x2d8, Size: 1]
	PlayerCameraManager* REF CameraManager;//[Offset: 0x2e0, Size: 1]
	float Current Rank Opacity;//[Offset: 0x2e8, Size: 1]
	float Current Info Opacity;//[Offset: 0x2ec, Size: 1]
	float Smooth Screen Position Speed;//[Offset: 0x2f0, Size: 1]
	bool Is My Squad Leader Tag;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f4, Size: 1]
	float Scale;//[Offset: 0x2f8, Size: 1]
	float Max Opacity;//[Offset: 0x2fc, Size: 1]
	bool Show Kit;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x300, Size: 1]
	bool Show Name;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x301, Size: 1]
	Pawn* Focussed Pawn;//[Offset: 0x308, Size: 1]
	float Z Offset Standing;//[Offset: 0x310, Size: 1]
	float Z Offset Crouching;//[Offset: 0x314, Size: 1]
	float Z Offset Prone;//[Offset: 0x318, Size: 1]
	Vector2D Desired Screen Location;//[Offset: 0x31c, Size: 1]
	CanvasPanelSlot* My Canvas Slot;//[Offset: 0x328, Size: 1]
	float Z Offset Vehicle;//[Offset: 0x330, Size: 1]
	float Close Range for Close Angle  (cm);//[Offset: 0x334, Size: 1]
	float Far Range for Far Angle (cm);//[Offset: 0x338, Size: 1]
	float Required Close Angle (0-1);//[Offset: 0x33c, Size: 1]
	float Required Far Angle (0-0.9999);//[Offset: 0x340, Size: 1]
	float Maximum Range Whole (cm);//[Offset: 0x344, Size: 1]
	float Minimum Fade Range My SL (cm);//[Offset: 0x348, Size: 1]
	float Maximum Fade Range My SL (cm);//[Offset: 0x34c, Size: 1]
	bool In Threshold;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x350, Size: 1]
	NametagTargetInfo CachedTargetInfo;//[Offset: 0x358, Size: 1]
	bool Save Data SL Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x388, Size: 1]
	bool Save Data FT Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x389, Size: 1]
	float Maximum Range Info (cm);//[Offset: 0x38c, Size: 1]
	float Current Focus Strength;//[Offset: 0x390, Size: 1]
	void Update FT Save Data(SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Update SL Save Data(SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Cache Data(bool CallFunc_Calc_Target_Info_Success, SQSquadState* CallFunc_Calc_Target_Info_SquadState, SQPlayerState* CallFunc_Calc_Target_Info_SQ_Player_State, FText CallFunc_Calc_Target_Info_PlayerName, bool CallFunc_Calc_Target_Info_SL, bool CallFunc_Calc_Target_Info_Same_Squad, int CallFunc_Calc_Target_Info_Vehicle_Occupants, NametagTargetInfo K2Node_MakeStruct_NametagTargetInfo, NametagTargetInfo K2Node_SetFieldsInStruct_StructOut);// 0x1d69c50
	void Refresh Tag(FText L SQ, FText L FT, float Current Distance, SQRoleSettings* Role, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, enum K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, Texture2D* K2Node_Select_Default, enum K2Node_Select_Default, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default, enum K2Node_Select_Default, FText Temp_text_Variable, bool Temp_bool_Variable, FText K2Node_Select_Default, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, Vector CallFunc_Get_Tag_Test_Location_Location, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_IsValid_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Format_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetAlphabetLetterString_ReturnValue, FString CallFunc_ToUpper_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsMedic_ReturnValue, int K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, bool K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Get SL In Vehicle(SQVehicle* V, out SQPlayerState* SL, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSquadState* CallFunc_GetSquadState_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	LinearColor GetContentColor_BOTTOM(LinearColor K2Node_MakeStruct_LinearColor, LinearColor CallFunc_Get_Color_ReturnValue, bool CallFunc_IsValid_ReturnValue, LinearColor K2Node_MakeStruct_LinearColor);// 0x1d69c50
	LinearColor GetContentColor_TOP(LinearColor K2Node_MakeStruct_LinearColor, bool CallFunc_Get_ADS_In_ADS, float CallFunc_FMin_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, LinearColor CallFunc_Get_Color_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable, float CallFunc_SelectFloat_ReturnValue, float K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor);// 0x1d69c50
	void Calc Target Info(out bool Success, out SQSquadState* SquadState, out SQPlayerState* SQ Player State, out FText PlayerName, out bool SL, out bool Same Squad, out int Vehicle Occupants, int L Occupants, SQVehicle* Vehicle, SQPlayerState* L Player State, int Temp_int_Array_Index_Variable, int CallFunc_GetNumOccupants_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* CallFunc_Get_SL_In_Vehicle_SL, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, SQVehicleSeatComponent*[] CallFunc_GetSeats_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue, SQSquadState* CallFunc_GetSquadState_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, bool CallFunc_IsSquadLeader_ReturnValue, FText CallFunc_Format_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue);// 0x1d69c50
	void Get Tag Test Location(Pawn* Pawn, out Vector Location, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, Transform CallFunc_GetSocketTransform_ReturnValue, Vector CallFunc_BreakTransform_Location, Rotator CallFunc_BreakTransform_Rotation, Vector CallFunc_BreakTransform_Scale, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_BooleanOR_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, Vector CallFunc_MakeVector_ReturnValue);// 0x1d69c50
	SlateBrush Get_Kit_Image(SlateBrush CallFunc_MakeBrushFromTexture_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_LoadAsset_Blocking_ReturnValue, SlateBrush CallFunc_MakeBrushFromTexture_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Object* CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, Object* CallFunc_LoadAsset_Blocking_ReturnValue, SlateBrush CallFunc_MakeBrushFromTexture_ReturnValue);// 0x1d69c50
	void Get ADS(out bool In ADS, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsZoomed_ReturnValue);// 0x1d69c50
	void Find Target(Vector BestTargetLocation, float BestTargetDotProduct, SQPlayerState* My SL State, Pawn* Test Target, Pawn*[] Test Array, Pawn* Best Target, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_ProjectWorldLocationToScreen_ScreenLocation, bool CallFunc_ProjectWorldLocationToScreen_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_FClamp_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, Vector CallFunc_Get_Tag_Test_Location_Location, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, Vector CallFunc_Normal_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Pawn* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue);// 0x1d69c50
	void Update Opacity(float L Focus Strength, Vector L Location, float Rank Opacity L, float Info Opacity L, float L Distance, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_Get_Tag_Test_Location_Location, float CallFunc_GetViewportScale_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, bool CallFunc_Get_ADS_In_ADS, bool CallFunc_Get_ADS_In_ADS, float CallFunc_FMin_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, LinearColor CallFunc_GetContentColor_BOTTOM_ReturnValue, LinearColor CallFunc_GetContentColor_TOP_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector2D CallFunc_ProjectWorldLocationToScreen_ScreenLocation, bool CallFunc_ProjectWorldLocationToScreen_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, Vector CallFunc_Normal_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, float CallFunc_FMin_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_FInterpTo_Constant_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_FInterpTo_Constant_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default, float CallFunc_FClamp_ReturnValue, float K2Node_Select_Default);// 0x1d69c50
	LinearColor Get_Color(SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsCommander_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_IsValid_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Load Saved Settings(const SQGameUserSettings* UserSettings);// 0x1d69c50
	void Get Local State();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Timer Check Threshold();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Looping Refresh();// 0x1d69c50
	void FindTargetEvent();// 0x1d69c50
	void RefreshTagEvent();// 0x1d69c50
	void ExecuteUbergraph_UMG_NameTag(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, CanvasPanelSlot* K2Node_DynamicCast_AsCanvas_Panel_Slot, bool K2Node_DynamicCast_bSuccess, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQGameUserSettings* K2Node_CustomEvent_UserSettings, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_FMin_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, Vector2D CallFunc_GetPosition_ReturnValue, bool CallFunc_EqualEqual_Vector2DVector2D_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_FMin_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50

--------------------------------
Class: NametagTargetInfo
	SQSquadState* SquadState_6_EE5FB84B4271C6CC874AEF89B0677FD8;//[Offset: 0x0, Size: 1]
	SQPlayerState* PlayerState_12_00C100DD4906E5AE60F6F58F1F7C60DD;//[Offset: 0x8, Size: 1]
	FText PlayerName_13_E8EE3D974847064B7B7F419D44CBF3EF;//[Offset: 0x10, Size: 1]
	bool IsSl_14_0DDC97324F8CCE47027CFC9E9CCBE1CB;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x28, Size: 1]
	bool IsInSameSquad_15_17759E054D3155C288DE8E84C77BAA1F;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x29, Size: 1]
	int VehicleOccupants_18_C56F18E940FA28D35BED5EA6E47B7F5E;//[Offset: 0x2c, Size: 1]

--------------------------------
Class: VersionWidget_C.UserWidget.Widget.Visual.Object
	TextBlock* TextBlock;//[Offset: 0x260, Size: 1]
	FText GetText(bool Temp_bool_Variable, FString CallFunc_GetGameVersion_ReturnValue, bool CallFunc_IsShippingBuild_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_MakeLiteralText_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FString CallFunc_GetEngineVersion_ReturnValue, FText K2Node_Select_Default, FString CallFunc_GetSubstring_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_Filters_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_Filters;//[Offset: 0x268, Size: 1]
	VerticalBox* ServerFilters;//[Offset: 0x270, Size: 1]
	SettingsItem_TickBox_C* Setting_Empty;//[Offset: 0x278, Size: 1]
	SettingsItem_TickBox_C* Setting_ModdedServers;//[Offset: 0x280, Size: 1]
	SettingsItem_TickBox_C* Setting_Queues;//[Offset: 0x288, Size: 1]
	SettingsItem_TickBox_C* Setting_Reserved;//[Offset: 0x290, Size: 1]
	SettingsItem_TickBox_C* Setting_ShowFull;//[Offset: 0x298, Size: 1]
	SettingsItem_TickBox_C* Setting_Version;//[Offset: 0x2a0, Size: 1]
	SettingsItem_TickBox_C* Settings_Favourites;//[Offset: 0x2a8, Size: 1]
	MainMenu_Button_C* Vis_Button;//[Offset: 0x2b0, Size: 1]
	SaveData_UI_C* Save Data;//[Offset: 0x2b8, Size: 1]
	MulticastInlineDelegateProperty Option Changed;//[Size: 1]
	Widget* FavouriteTooltip(const FText Temp_text_Variable, UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void BndEvt__ButtonServer_DiffVersion_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_TickBox_C_3_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_TickBox_C_4_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void Refresh Filters();// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Reset Filters();// 0x1d69c50
	void Construct();// 0x1d69c50
	void BndEvt__Setting_Empty_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__Setting_Queues_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__Setting_Reserved_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__Settings_Favourites_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_TickBox_C_0_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void ExecuteUbergraph_W_Filters(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float Temp_float_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, enum K2Node_Select_Default, float Temp_float_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, MainMenuScreen_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, MainMenuScreen_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data);// 0x1d69c50
	void Option Changed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_Training_LevelList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x268, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x270, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x278, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x280, Size: 1]
	HorizontalBox* LevelList;//[Offset: 0x288, Size: 1]
	LevelSelector_C* LevelSelector;//[Offset: 0x290, Size: 1]
	LevelSelector_C* LevelSelector;//[Offset: 0x298, Size: 1]
	LevelSelector_C* LevelSelector_C;//[Offset: 0x2a0, Size: 1]
	LevelSelector_C* LevelSelector_C;//[Offset: 0x2a8, Size: 1]
	LevelSelector_C* LevelSelector_C;//[Offset: 0x2b0, Size: 1]
	LevelSelector_C* LevelSelector_C;//[Offset: 0x2b8, Size: 1]
	LevelSelector_C* LevelSelector_C;//[Offset: 0x2c0, Size: 1]
	LevelSelector_C* LevelSelector_C;//[Offset: 0x2c8, Size: 1]
	ChallengeWindow_C* PopupTraining;//[Offset: 0x2d0, Size: 1]
	LevelSelector_C* Tutorial_LevelSelector;//[Offset: 0x2d8, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x2e0, Size: 1]
	FString Current Level Selection;//[Offset: 0x2e8, Size: 1]
	FString Current Mode Selection;//[Offset: 0x2f8, Size: 1]
	void BndEvt__PopupTraining_K2Node_ComponentBoundEvent_0_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_Training_LevelList(int EntryPoint);// 0x1d69c50

--------------------------------
Class: W_ReplayBrowser_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* AutomaticReplays;//[Offset: 0x268, Size: 1]
	Border* CannotRecordBox;//[Offset: 0x270, Size: 1]
	W_ReplayEntry_C* Categories;//[Offset: 0x278, Size: 1]
	Border* CustomRecordingBorder;//[Offset: 0x280, Size: 1]
	TextBlock* DateBox;//[Offset: 0x288, Size: 1]
	MainMenu_Button_C* DeleteButton;//[Offset: 0x290, Size: 1]
	MainMenu_Button_C* DeleteConfirmButton;//[Offset: 0x298, Size: 1]
	SettingsItem_TickBox_C* EnableAutoReplay;//[Offset: 0x2a0, Size: 1]
	EditableText* ManualReplayName;//[Offset: 0x2a8, Size: 1]
	SettingsItem_Slider_C* NumAutoReplays;//[Offset: 0x2b0, Size: 1]
	MainMenu_Button_C* PlaySelectedReplay;//[Offset: 0x2b8, Size: 1]
	Image* RecordingImage;//[Offset: 0x2c0, Size: 1]
	MainMenu_Button_C* RenameButton;//[Offset: 0x2c8, Size: 1]
	ListView* ReplayList;//[Offset: 0x2d0, Size: 1]
	MainMenu_Button_C* ReplaySettings;//[Offset: 0x2d8, Size: 1]
	WidgetSwitcher* ReplaySwitcher;//[Offset: 0x2e0, Size: 1]
	MainMenu_Button_C* SavedReplays;//[Offset: 0x2e8, Size: 1]
	EditableText* SelectedName;//[Offset: 0x2f0, Size: 1]
	TextBlock* SizeBytesBox;//[Offset: 0x2f8, Size: 1]
	MainMenu_Button_C* StartRecording;//[Offset: 0x300, Size: 1]
	bool LoadNamedReplays;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x308, Size: 1]
	bool bRequestingReselectRefresh;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x309, Size: 1]
	BP_ReplayObject_C* SelectedItem;//[Offset: 0x310, Size: 1]
	void UpdateSelectionInfo(FText CallFunc_GetSize_Result, FText CallFunc_AsDateTime_DateTime_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Reload();// 0x1d69c50
	void CreateReplayList(out const FString[] ReplayPaths);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ReplayDoubleClicked(Object* Item);// 0x1d69c50
	void WaitAndReload();// 0x1d69c50
	void OnSelectedItem(Object* Item, bool bIsSelected);// 0x1d69c50
	void BndEvt__SelectedName_K2Node_ComponentBoundEvent_4_OnEditableTextCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void BndEvt__WeaponSkinsTab_1_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__WeaponSkinsTab_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__SavedReplays_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_Slider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature(float Value);// 0x1d69c50
	void BndEvt__PlaySelected_1_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__PlaySelectedReplay_K2Node_ComponentBoundEvent_11_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_TickBox_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void HandleRenameResponse(enum Enumerator);// 0x1d69c50
	void BndEvt__StartRecording_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void SetRecordingIcon();// 0x1d69c50
	void BndEvt__PlaySelectedReplay_1_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__DeleteConfirmButton_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void AutoRefreshTime();// 0x1d69c50
	void CheckCanRecord();// 0x1d69c50
	void ExecuteUbergraph_W_ReplayBrowser(int EntryPoint, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, FString[] CallFunc_GetListOfNamedReplays_OutReplayPaths, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, enum Temp_byte_Variable, enum Temp_byte_Variable, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool Temp_bool_Variable, bool CallFunc_CanRecordOnServer_ReturnValue, enum Temp_byte_Variable, enum Temp_byte_Variable, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default, delegate K2Node_CreateDelegate_OutputDelegate, FString Temp_string_Variable, const FString[] K2Node_CustomEvent_ReplayPaths, int CallFunc_Array_Length_ReturnValue, bool Temp_bool_Variable, BP_ReplayObject_C* CallFunc_SpawnObject_ReturnValue, Object* K2Node_CustomEvent_Item, SQReplayObject* K2Node_DynamicCast_AsSQReplay_Object, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, Object* K2Node_CustomEvent_Item, bool K2Node_CustomEvent_bIsSelected, BP_ReplayObject_C* K2Node_DynamicCast_AsBP_Replay_Object, bool K2Node_DynamicCast_bSuccess, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, bool K2Node_SwitchEnum_CmpSuccess, FString CallFunc_Conv_TextToString_ReturnValue, FText Temp_text_Variable, FText Temp_text_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, float K2Node_ComponentBoundEvent_Value, int CallFunc_FTrunc_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int Temp_int_Array_Index_Variable, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_IsValid_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool Temp_bool_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, enum K2Node_CustomEvent_Enumerator, bool K2Node_SwitchEnum_CmpSuccess, int Temp_int_Loop_Counter_Variable, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_GetIsRecording_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FText K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, Texture2D* Temp_object_Variable, FText CallFunc_GetText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, int CallFunc_Len_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, FString K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_GetText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FText CallFunc_GetText_ReturnValue, bool CallFunc_StartRecordingNamedReplay_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, bool CallFunc_GetIsRecording_ReturnValue, Texture2D* K2Node_Select_Default, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, enum CallFunc_GetVisibility_ReturnValue, enum K2Node_Select_Default, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, enum CallFunc_NameDatedReplay_ReturnValue, enum CallFunc_RenameNamedReplay_ReturnValue, GameModeBase* CallFunc_GetGameMode_ReturnValue, SQGameMode_Menu* K2Node_DynamicCast_AsSQGame_Mode_Menu, bool K2Node_DynamicCast_bSuccess, const UserWidget*[] CallFunc_GetDisplayedEntryWidgets_ReturnValue, UserWidget* CallFunc_Array_Get_Item, enum K2Node_Select_Default, W_ReplayEntry_C* K2Node_DynamicCast_AsW_Replay_Entry, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, FString CallFunc_Array_Get_Item, bool CallFunc_SetupReplayObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQReplaySubsystem* CallFunc_GetGameInstanceSubsystem_ReturnValue, FString[] CallFunc_GetListOfDatedReplays_OutReplayPaths, FString[] CallFunc_GetListOfNamedReplays_OutReplayPaths);// 0x1d69c50

--------------------------------
Class: W_ReplayEntry_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Background;//[Offset: 0x268, Size: 1]
	TextBlock* CreationDate;//[Offset: 0x270, Size: 1]
	TextBlock* ReplayName;//[Offset: 0x278, Size: 1]
	TextBlock* ReplaySizeBytes;//[Offset: 0x280, Size: 1]
	BP_ReplayObject_C* Owner;//[Offset: 0x288, Size: 1]
	void BP_OnItemSelectionChanged(bool bIsSelected);// 0x1d69c50
	void OnListItemObjectSet(Object* ListItemObject);// 0x1d69c50
	void UpdateSelectedView();// 0x1d69c50
	void UpdateAll();// 0x1d69c50
	void BP_OnItemExpansionChanged(bool bIsExpanded);// 0x1d69c50
	void BP_OnEntryReleased();// 0x1d69c50
	void ExecuteUbergraph_W_ReplayEntry(int EntryPoint, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool K2Node_Event_bIsSelected, Object* K2Node_Event_ListItemObject, BP_ReplayObject_C* K2Node_DynamicCast_AsBP_Replay_Object, bool K2Node_DynamicCast_bSuccess, FText CallFunc_GetSize_Result, FText CallFunc_AsDateTime_DateTime_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool Temp_bool_Variable, bool K2Node_Event_bIsExpanded, LinearColor K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: BP_ReplayObject_C.SQReplayObject.Object
	bool bIsSelected;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x80, Size: 1]
	void GetSize(out FText Result, int64 CallFunc_ConvertByteTo_I64_Remaining, int64 CallFunc_ConvertByteTo_I64_ReturnValue, FText CallFunc_Conv_Int64ToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQReplayObject.Object
	MulticastInlineDelegateProperty RequestFullReload;//[Size: 1]
	MulticastInlineDelegateProperty RequestWidgetReload;//[Size: 1]
	FString ReplayPath;//[Offset: 0x48, Size: 1]
	FString ReplayName;//[Offset: 0x58, Size: 1]
	bool bIsNamedReplay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x68, Size: 1]
	DateTime DateCreated;//[Offset: 0x70, Size: 1]
	int64 SizeInBytes;//[Offset: 0x78, Size: 1]
	enum TryRenameReplay(FString NewName);// 0xdef9a0
	bool SetupReplayObject(FString ReplayFullPath, bool bCreateAsNamedReplay);// 0xdef5b0
	void PlayReplay();// 0xdef2d0
	void DeleteReplay();// 0xdee690

--------------------------------
Class: SQReplaySubsystem.GameInstanceSubsystem.Subsystem.Object
	FString DatedReplaySubDirectory;//[Offset: 0x30, Size: 1]
	FString NamedReplaySubDirectory;//[Offset: 0x40, Size: 1]
	bool bUseMultithreading;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x50, Size: 1]
	void UpdateSubsystemSettings();// 0xdefb40
	void StopRecordingReplay();// 0xdef7c0
	bool StartRecordingNamedReplay(FString ReplayName);// 0xdef700
	bool StartRecordingDatedReplay();// 0xdef6d0
	enum RenameNamedReplay(FString ReplayName, FString NewReplayName);// 0xdef2f0
	void PlayExistingReplay(FString ReplayToPlay, bool bIsNamedReplay);// 0xdef1e0
	enum NameDatedReplay(FString ReplayName, FString NewReplayName);// 0xdef030
	static bool IsValidReplayPath(FString ReplayPath);// 0xdeeed0
	void GetListOfNamedReplays(out FString[] OutReplayPaths, bool bIncludePath, bool bIncludeExtension);// 0xdee970
	void GetListOfDatedReplays(out FString[] OutReplayPaths, bool bIncludePath, bool bIncludeExtension);// 0xdee800
	bool GetIsRecording();// 0xdee7d0
	bool DeleteReplay(FString ReplayPath, bool bIsNamedReplay);// 0xdee6b0
	bool CanRecordOnServer();// 0xdee5d0

--------------------------------
Class: SQGameMode_Menu.GameMode.GameModeBase.Info.Actor.Object

--------------------------------
Class: MainMenu_ExitButtons_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* ButtonEXIT;//[Offset: 0x268, Size: 1]
	Border* HoverCheckArea;//[Offset: 0x270, Size: 1]
	Image* Line;//[Offset: 0x278, Size: 1]
	MainMenu_Button_C* MainMenu_Button_Development;//[Offset: 0x280, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x288, Size: 1]
	MainMenuScreen_C* REF_MainMenu;//[Offset: 0x290, Size: 1]
	MulticastInlineDelegateProperty OnUnhovered;//[Size: 1]
	enum GetVisibility(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_MainMenu_PC_C* K2Node_DynamicCast_AsBP_Main_Menu_PC, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__MainMenu_Button_Development_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__ButtonExit_K2Node_ComponentBoundEvent_17_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ExecuteUbergraph_MainMenu_ExitButtons(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsHovered_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button);// 0x1d69c50
	void OnUnHovered__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_InputBackup_PopUp_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Background;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_Cancel;//[Offset: 0x270, Size: 1]
	MainMenu_Button_C* Button_Delete;//[Offset: 0x278, Size: 1]
	MainMenu_Button_C* Button_Save;//[Offset: 0x280, Size: 1]
	ComboBoxString* ComboBoxString_AvailableOptions;//[Offset: 0x288, Size: 1]
	EditableTextBox* EditableTextBox_Filename;//[Offset: 0x290, Size: 1]
	HorizontalBox* HorizontalBox_NewEntry;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	MenuAnchor* MenuAnchor;//[Offset: 0x2a8, Size: 1]
	SizeBox* MouseBorder;//[Offset: 0x2b0, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x2b8, Size: 1]
	FString NewEntry;//[Offset: 0x2c0, Size: 1]
	bool WasHovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	MainMenuScreen_C* MainMenuWindow;//[Offset: 0x2d8, Size: 1]
	bool Default;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e0, Size: 1]
	ChallengeWindow_C* DeleteChallengeWidget;//[Offset: 0x2e8, Size: 1]
	int CharacterLimit;//[Offset: 0x2f0, Size: 1]
	void SaveBackup(FText CallFunc_GetText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_TextIsEmpty_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, int CallFunc_FindOptionIndex_ReturnValue, bool CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FText CallFunc_GetText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_SaveBackupKeyBinds_ReturnValue, bool CallFunc_CheckSelected_CanLoad);// 0x1d69c50
	void LoadBackup(SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString CallFunc_GetSelectedOption_ReturnValue, bool CallFunc_EqualEqual_StriStri_ReturnValue, FString CallFunc_GetSelectedOption_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_LoadBackupKeyBinds_ReturnValue);// 0x1d69c50
	void ChallengeDeletePreset(const FText Temp_text_Variable, const FText Temp_text_Variable, ChallengeWindow_C* CallFunc_Create_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, const FText Temp_text_Variable, const FText Temp_text_Variable, delegate K2Node_CreateDelegate_OutputDelegate, PanelSlot* CallFunc_AddChild_ReturnValue);// 0x1d69c50
	void DeletePreset(bool CallFunc_CheckSelected_CanLoad, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FString CallFunc_GetSelectedOption_ReturnValue, bool CallFunc_DeleteKeybindsBackup_ReturnValue);// 0x1d69c50
	void CheckSelected(FString Selected, out bool CanLoad, FString Debug, bool CallFunc_EqualEqual_StriStri_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void GetSize(out Vector2D Size, Vector2D CallFunc_GetDesiredSize_ReturnValue);// 0x1d69c50
	void RefreshList(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, FString[] CallFunc_GetAllKeybindsBackups_Backups, FString CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue);// 0x1d69c50
	void ClearPopup();// 0x1d69c50
	void BndEvt__EditableTextBox_Filename_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature(out const FText Text);// 0x1d69c50
	void BndEvt__EditableTextBox_Filename_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature(out const FText Text, byte CommitMethod);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void BndEvt__Button_Delete_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Cancel_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__Button_Save_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void ChallengeCancelDelete();// 0x1d69c50
	void ChallengeConfirmDelete();// 0x1d69c50
	void BndEvt__ComboBoxString_AvailableOptions_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, byte SelectionType);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_InputBackup_PopUp(int EntryPoint, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, bool CallFunc_TextIsEmpty_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_CheckSelected_CanLoad, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_LeftChop_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_Len_ReturnValue, const FText K2Node_ComponentBoundEvent_Text, byte K2Node_ComponentBoundEvent_CommitMethod, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool K2Node_SwitchEnum_CmpSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, FString K2Node_ComponentBoundEvent_SelectedItem, byte K2Node_ComponentBoundEvent_SelectionType, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_CheckSelected_CanLoad, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsHovered_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_Compass_C.SQCompassMK2.SQCompass.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x338, Size: 1]
	Image* Background;//[Offset: 0x340, Size: 1]
	Image* BearingBorderImage;//[Offset: 0x348, Size: 1]
	Overlay* BearingOverlay;//[Offset: 0x350, Size: 1]
	Image* BPCompass_IMG;//[Offset: 0x358, Size: 1]
	TextBlock* BPCompassBearingText;//[Offset: 0x360, Size: 1]
	Image* BPLeftArrow;//[Offset: 0x368, Size: 1]
	CanvasPanel* BPMain_P;//[Offset: 0x370, Size: 1]
	Image* BPRightArrow;//[Offset: 0x378, Size: 1]
	Image* CompassTickerArrow;//[Offset: 0x380, Size: 1]
	MulticastInlineDelegateProperty CheckVisibilityStatus;//[Size: 1]
	SQPlayerController* My PC;//[Offset: 0x398, Size: 1]
	void ChangeDisplayMode(bool bTopScreenView, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, Texture* Temp_object_Variable, Texture* Temp_object_Variable, bool Temp_bool_Variable, Texture* Temp_object_Variable, Texture* Temp_object_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, bool Temp_bool_Variable, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, float K2Node_Select_Default, Vector2D K2Node_Select_Default, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D K2Node_Select_Default, Widget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, UMG_Compass_Marker_C* K2Node_DynamicCast_AsUMG_Compass_Marker, bool K2Node_DynamicCast_bSuccess, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, float K2Node_Select_Default, Texture* K2Node_Select_Default, Texture* K2Node_Select_Default, Vector2D K2Node_Select_Default, float K2Node_Select_Default, byte K2Node_Select_Default, Vector2D K2Node_Select_Default, Vector2D K2Node_Select_Default, Anchors K2Node_MakeStruct_Anchors, Vector2D K2Node_Select_Default, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, Vector2D K2Node_Select_Default, enum K2Node_Select_Default, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, OverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, Margin K2Node_MakeStruct_Margin, Margin K2Node_MakeStruct_Margin, Margin K2Node_Select_Default, OverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void Set Compass Visibility();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void OnUserSettingsChanged(const SQGameUserSettings* UserSettings);// 0x1d69c50
	void ExecuteUbergraph_UMG_Compass(int EntryPoint, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Helicopter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera, bool CallFunc_DoesImplementInterface_ReturnValue, enum K2Node_Select_Default, bool K2Node_Event_IsDesignTime, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQGameUserSettings* K2Node_CustomEvent_UserSettings);// 0x1d69c50
	void CheckVisibilityStatus_0__DelegateSignature();// 0x1d69c50

--------------------------------
Class: UMG_Compass_Marker_C.SQCompassMarker.SQCompassBaseUnit.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x368, Size: 1]
	WidgetAnimation* In;//[Offset: 0x370, Size: 1]
	TextBlock* BP_DistanceText;//[Offset: 0x378, Size: 1]
	TextBlock* BP_MeterText;//[Offset: 0x380, Size: 1]
	CanvasPanel* BPMain_P;//[Offset: 0x388, Size: 1]
	Image* BPMarker_IMG;//[Offset: 0x390, Size: 1]
	CanvasPanel* CanvasPanel;//[Offset: 0x398, Size: 1]
	Image* LeadIcon;//[Offset: 0x3a0, Size: 1]
	TextBlock* TB_FT;//[Offset: 0x3a8, Size: 1]
	enum Marker Type;//[Offset: 0x3b0, Size: 1]
	UMG_Compass_C* ParentCompass;//[Offset: 0x3b8, Size: 1]
	void ChangeDisplayMode(bool bTopScreenView, bool Temp_bool_Variable, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, Vector2D Temp_struct_Variable, Vector2D Temp_struct_Variable, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, Vector2D K2Node_Select_Default, Vector2D K2Node_Select_Default, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue);// 0x1d69c50
	void Set Info();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void RefreshDisplayMode();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_Compass_Marker(int EntryPoint, int CallFunc_GetFireteamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Max_ReturnValue, FString CallFunc_GetAlphabetLetterString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, LinearColor CallFunc_GetColor_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetFireteamId_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, enum CallFunc_GetMarkerType_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_BooleanOR_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, Texture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool K2Node_Event_IsDesignTime, bool CallFunc_EqualEqual_ByteByte_ReturnValue, PanelWidget* CallFunc_GetParent_ReturnValue, Object* CallFunc_GetOuterObject_ReturnValue, Object* CallFunc_GetOuterObject_ReturnValue, UMG_Compass_C* K2Node_DynamicCast_AsUMG_Compass, bool K2Node_DynamicCast_bSuccess, int CallFunc_Max_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, FString CallFunc_GetAlphabetLetterString_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQHUDWidget.Object
	class UserWidget* UMGWidget;//[Offset: 0x28, Size: 1]
	Vector2D Position;//[Offset: 0x30, Size: 1]
	Vector2D OffsetPosition;//[Offset: 0x38, Size: 1]
	Vector2D WidgetOrigin;//[Offset: 0x40, Size: 1]
	Vector2D Size;//[Offset: 0x48, Size: 1]
	float ZOrder;//[Offset: 0x50, Size: 1]
	bool bUseScreenNormalizedCoordinates;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x54, Size: 1]
	bool bBypassResolutionScaling;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x55, Size: 1]
	float DesignedResolution;//[Offset: 0x58, Size: 1]
	bool bMaintainOriginalAspectRatio;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5c, Size: 1]
	float Alpha;//[Offset: 0x60, Size: 1]
	bool bHidden;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x64, Size: 1]
	SQGameState* GameState;//[Offset: 0x68, Size: 1]
	SQHUD* HUD;//[Offset: 0x70, Size: 1]
	SQPlayerController* PlayerController;//[Offset: 0x78, Size: 1]
	SQPlayerState* PlayerState;//[Offset: 0x80, Size: 1]
	SQSoldier* Soldier;//[Offset: 0x88, Size: 1]
	Canvas* Canvas;//[Offset: 0x90, Size: 1]
	Texture2D* DefaultTexture;//[Offset: 0x98, Size: 1]
	Texture2D* GradientTexture0;//[Offset: 0xa0, Size: 1]
	Vector2D CanvasCenter;//[Offset: 0xa8, Size: 1]
	Vector2D CanvasSize;//[Offset: 0xb0, Size: 1]
	Vector2D DrawingPosition;//[Offset: 0xb8, Size: 1]
	Vector2D DrawingSize;//[Offset: 0xc0, Size: 1]
	float DrawingScale;//[Offset: 0xc8, Size: 1]
	void Init(SQHUD* InHUD);// 0xda6e10
	void Draw(float DeltaTime);// 0xda6d20
	bool CanDraw();// 0xd45a00
	void BPDrawTexture(Texture* Texture, float X, float Y, float Width, float Height, float U, float V, float UL, float VL, float DrawingAlpha, LinearColor Color, Vector2D DrawingOffset, float Rotation, Vector2D RotationPivotPoint, bool bIsMask);// 0xda6870
	Vector2D BPDrawText(FText Text, float X, float Y, Font* Font, FontRenderInfo FontRenderInfo, LinearColor Color, float TextScale, float DrawingAlpha, enum HorizontalAlignment, enum VerticalAlignment, bool bDrawShadow, Vector2D ShadowDirection, LinearColor ShadowColor, bool bDrawOutline, LinearColor OutlineColor);// 0xda6320
	void BPDrawSpriteTexture(Texture* Texture, float X, float Y, float Width, float Height, float TextureX, float TextureY, float TextureXL, float TextureYL, float DrawingAlpha, LinearColor Color, Vector2D DrawingOffset, float Rotation, Vector2D RotationPivotPoint, bool bIsMask);// 0xda5ec0
	void BPDrawMaterial(MaterialInterface* Material, float X, float Y, float Width, float Height, float U, float V, float UL, float VL, float DrawingAlpha, LinearColor Color, Vector2D DrawingOffset, float Rotation, Vector2D RotationPivotPoint);// 0xda5ab0

--------------------------------
Class: FontRenderInfo
	bool bClipText;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	bool bEnableShadow;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x0, Size: 1]
	DepthFieldGlowInfo GlowInfo;//[Offset: 0x4, Size: 1]

--------------------------------
Class: DepthFieldGlowInfo
	bool bEnableGlow;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x0, Size: 1]
	LinearColor GlowColor;//[Offset: 0x4, Size: 1]
	Vector2D GlowOuterRadius;//[Offset: 0x14, Size: 1]
	Vector2D GlowInnerRadius;//[Offset: 0x1c, Size: 1]

--------------------------------
Class: UMG_VoteScreen_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Arrow;//[Offset: 0x268, Size: 1]
	Image* BG;//[Offset: 0x270, Size: 1]
	Overlay* Bottom;//[Offset: 0x278, Size: 1]
	Image* BpGameTimeClockImage;//[Offset: 0x280, Size: 1]
	HorizontalBox* EndVoteTimer;//[Offset: 0x288, Size: 1]
	MainMenu_Button_C* MainMenu_Button;//[Offset: 0x290, Size: 1]
	TextBlock* TimerBottom;//[Offset: 0x298, Size: 1]
	TextBlock* TimerTop;//[Offset: 0x2a0, Size: 1]
	CanvasPanel* TitleCanvas;//[Offset: 0x2a8, Size: 1]
	UMG_ServerState_C* UMG_ServerState;//[Offset: 0x2b0, Size: 1]
	UMG_VoteFaction_C* UMG_VoteFaction;//[Offset: 0x2b8, Size: 1]
	UMG_VoteLayer_C* UMG_VoteLayer;//[Offset: 0x2c0, Size: 1]
	UMG_VoteLevel_C* UMG_VoteLevel;//[Offset: 0x2c8, Size: 1]
	TextBlock* VoteDescription;//[Offset: 0x2d0, Size: 1]
	TextBlock* VoteSubtitle;//[Offset: 0x2d8, Size: 1]
	TextBlock* VoteTitle;//[Offset: 0x2e0, Size: 1]
	SQVoteSessionClient* ActiveVote;//[Offset: 0x2e8, Size: 1]
	interface class None* ActiveVoteScreen;//[Offset: 0x2f0, Size: 1]
	void CreateVotePopup(out bool Success, out interface classNone VoteScreen, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, UMG_GenericPopupVote_C* CallFunc_Create_ReturnValue, BP_HUD_C* K2Node_DynamicCast_AsBP_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_HasAnyChildren_ReturnValue, UMG_GenericPopupVote_C* K2Node_DynamicCast_AsUMG_Generic_Popup_Vote, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void To Human Readable Time(int In Minutes, int In Seconds, out FText Result, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void DeActivateAll(interface classNone CallFunc_SetVoteScreenActive_self_CastInput);// 0x1d69c50
	void FillTexts(FText Title, FText Subtitle, FText Description);// 0x1d69c50
	void UpdateTexts(SQVoteSessionClient* VoteSession, SQVoteEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void GetRemainingTime(SQVoteSession* In Vote Session, out int Minutes, out int Seconds, bool CallFunc_IsValid_ReturnValue, DateTime CallFunc_Add_DateTimeTimespan_ReturnValue, DateTime CallFunc_UtcNow_ReturnValue, Timespan CallFunc_Subtract_DateTimeDateTime_ReturnValue, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds);// 0x1d69c50
	void UpdateTimer(bool CallFunc_IsValid_ReturnValue, int CallFunc_GetRemainingTime_Minutes, int CallFunc_GetRemainingTime_Seconds, FText CallFunc_To_Human_Readable_Time_Result);// 0x1d69c50
	void GetVoteWidgetIndex(byte VoteType, out int Out Widget Index, byte Temp_byte_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int K2Node_Select_Default);// 0x1d69c50
	void GetVoteWidget(byte VoteType, bool Create, out bool Success, out interface classNone Widget, bool CallFunc_CreateVotePopup_Success, interface classNone CallFunc_CreateVotePopup_VoteScreen, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	void GetVoteType(SQVoteSession* InVoteSession, out byte OutVoteType, FName CallFunc_GetId_ReturnValue, bool CallFunc_IsLayerVoteId_ReturnValue, int CallFunc_IsFactionVoteId_OutTeamId, bool CallFunc_IsFactionVoteId_ReturnValue, bool CallFunc_IsLevelVoteId_ReturnValue);// 0x1d69c50
	void UpdateActivations(byte VoteType, out interface classNone ActivatedScreen, interface classNone Result, int Temp_int_Variable, int Temp_int_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, byte CallFunc_GetEnumeratorValueFromIndex_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_GetVoteWidget_Success, interface classNone CallFunc_GetVoteWidget_Widget, int CallFunc_MakeLiteralInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void Update Self Activation();// 0x1d69c50
	void ExecuteUbergraph_UMG_VoteScreen(int EntryPoint, bool CallFunc_IsVisible_ReturnValue, bool K2Node_Event_Activated, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, byte CallFunc_GetVoteType_OutVoteType, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, interface classNone CallFunc_UpdateActivations_ActivatedScreen, byte CallFunc_GetVoteType_OutVoteType, interface classNone CallFunc_UpdateActivations_ActivatedScreen, SQVoteSessionClient* K2Node_Event_VoteSession, byte CallFunc_GetVoteType_OutVoteType, interface classNone CallFunc_UpdateActivations_ActivatedScreen, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum K2Node_Select_Default, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_ServerState_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* BPCurrentGamemodeTextBlock;//[Offset: 0x268, Size: 1]
	TextBlock* BpCurrentMapTextBlock;//[Offset: 0x270, Size: 1]
	TextBlock* BPNextMapTextBlock;//[Offset: 0x278, Size: 1]
	TextBlock* BPPlayerCountTextBlock;//[Offset: 0x280, Size: 1]
	TextBlock* BPServerNameTextBlock;//[Offset: 0x288, Size: 1]
	Image* BPTickImage;//[Offset: 0x290, Size: 1]
	TextBlock* BPTickTextBlock;//[Offset: 0x298, Size: 1]
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_UMG_ServerState(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsDev_ReturnValue, bool CallFunc_IsAdmin_ReturnValue, bool CallFunc_IsQA_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default, LinearColor Temp_struct_Variable, SQGameState* CallFunc_GetSquadGameState_Return_Value, enum CallFunc_GetVisibility_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, int CallFunc_Array_Length_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, float CallFunc_GetServerHealthValues_ServerHealthLow, float CallFunc_GetServerHealthValues_ServerHealthHigh, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_LessEqual_FloatFloat_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, LinearColor Temp_struct_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: UMG_VoteFaction_C.UMG_VoteBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	HorizontalBox* HorizontalLayout;//[Offset: 0x278, Size: 1]
	UMG_VoteFactionTeam_C* UMG_VoteFactionTeamOne;//[Offset: 0x280, Size: 1]
	UMG_VoteFactionTeam_C* UMG_VoteFactionTeamTwo;//[Offset: 0x288, Size: 1]
	UMG_VoteFactionTeam_C* UMG_VoteFactionTeamZero;//[Offset: 0x290, Size: 1]
	void SetupSubElements();// 0x1d69c50
	void UpdateActivations(UMG_VoteFactionTeam_C* VoteFactionTeam, bool Active, interface classNone CallFunc_SetVoteScreenActive_self_CastInput);// 0x1d69c50
	void DeActivateAll(interface classNone CallFunc_SetVoteScreenActive_self_CastInput);// 0x1d69c50
	void SelectWidget(SQVoteSession* VoteSession, out UMG_VoteFactionTeam_C* TeamWidget, FName CallFunc_GetId_ReturnValue, int CallFunc_IsFactionVoteId_OutTeamId, bool CallFunc_IsFactionVoteId_ReturnValue, UMG_VoteFactionTeam_C* CallFunc_GetTeamWidget_TeamWidget);// 0x1d69c50
	void GetTeamWidget(int TeamId, out UMG_VoteFactionTeam_C* TeamWidget, int Temp_int_Variable, UMG_VoteFactionTeam_C* K2Node_Select_Default);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_UMG_VoteFaction(int EntryPoint, bool CallFunc_IsVisible_ReturnValue, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, UMG_VoteFactionTeam_C* CallFunc_SelectWidget_TeamWidget, UMG_VoteFactionTeam_C* CallFunc_SelectWidget_TeamWidget, interface classNone CallFunc_OnVoteEnded_self_CastInput, interface classNone K2Node_DynamicCast_AsBPI_Vote_Screen, bool K2Node_DynamicCast_bSuccess, SQVoteSessionClient* K2Node_Event_VoteSession, UMG_VoteFactionTeam_C* CallFunc_SelectWidget_TeamWidget, interface classNone K2Node_DynamicCast_AsBPI_Vote_Screen, bool K2Node_DynamicCast_bSuccess, bool K2Node_Event_Activated, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, enum K2Node_Select_Default, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_VoteBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	FName PlayerName;//[Offset: 0x268, Size: 1]
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void ExecuteUbergraph_UMG_VoteBase(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, SQVoteSessionClient* K2Node_Event_VoteSession, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, bool K2Node_Event_Activated, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQVotingComponent* CallFunc_GetComponentByClass_ReturnValue, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default, FName CallFunc_GetPlayerIdentifier_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_VoteFactionTeam_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TileView* Grid;//[Offset: 0x268, Size: 1]
	TextBlock* TeamTitle;//[Offset: 0x270, Size: 1]
	VoteScreenListItem_C*[] Choices;//[Offset: 0x278, Size: 1]
	void Display Result(SQVoteSessionClient* VoteSession, SQChoice Winner, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, VoteScreenListItem_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Choices(SQVoteSessionClient* VoteSession, int PlayerCurrentVotesCount, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, VoteScreenListItem_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Generate Items(SQVoteSessionClient* VoteSession, int Temp_int_Array_Index_Variable, SQChoice CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, SQVoteEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQVotingComponent* CallFunc_GetComponentByClass_ReturnValue, FName CallFunc_GetPlayerIdentifier_ReturnValue, VoteScreenListItem_C* CallFunc_SpawnObject_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void OnSetup(FText TeamName, FName PlayerName);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void ExecuteUbergraph_UMG_VoteFactionTeam(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, FText K2Node_CustomEvent_TeamName, FName K2Node_CustomEvent_PlayerName, SQVoteSessionClient* K2Node_Event_VoteSession, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, bool K2Node_Event_Activated, float CallFunc_GetTotalSeconds_ReturnValue, bool Temp_bool_Variable, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: TileView.ListView.ListViewBase.Widget.Visual.Object
	float EntryHeight;//[Offset: 0x368, Size: 1]
	float EntryWidth;//[Offset: 0x36c, Size: 1]
	enum TileAlignment;//[Offset: 0x370, Size: 1]
	bool bWrapHorizontalNavigation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x371, Size: 1]
	void SetEntryWidth(float NewWidth);// 0x33f8290
	void SetEntryHeight(float NewHeight);// 0x33f8210
	float GetEntryWidth();// 0x33f7a70
	float GetEntryHeight();// 0x33f7a50

--------------------------------
Class: VoteScreenListItem_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x28, Size: 1]
	SQVoteSessionClient* VoteSession;//[Offset: 0x30, Size: 1]
	SQChoice Choice;//[Offset: 0x38, Size: 1]
	FName ChoiceId;//[Offset: 0x50, Size: 1]
	FName PlayerName;//[Offset: 0x58, Size: 1]
	int AllocatedPlayerVotes;//[Offset: 0x60, Size: 1]
	MulticastInlineDelegateProperty OnUpdate;//[Size: 1]
	MulticastInlineDelegateProperty OnEnd;//[Size: 1]
	bool VoteEnd;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x88, Size: 1]
	bool Voted;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x89, Size: 1]
	int PlayerCurrentVotes;//[Offset: 0x8c, Size: 1]
	void SendVote(out bool OutVotedDisplayStatus, bool Temp_bool_Variable, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQVoteSessionChoiceInfo CallFunc_GetChoiceState_OutState, int CallFunc_Array_Length_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int K2Node_Select_Default);// 0x1d69c50
	void OnVoteUpdated(SQVoteSession* VoteSession, int PlayerCurrentVotes);// 0x1d69c50
	void OnVoteEnded(SQVoteSession* VoteSession, FName WinnerId);// 0x1d69c50
	void ExecuteUbergraph_VoteScreenListItem(int EntryPoint, SQVoteSession* K2Node_CustomEvent_VoteSession, int K2Node_CustomEvent_PlayerCurrentVotes, SQVoteSession* K2Node_CustomEvent_VoteSession, FName K2Node_CustomEvent_WinnerId, SQVoteSessionChoiceInfo CallFunc_GetChoiceState_OutState, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int CallFunc_Array_Length_ReturnValue);// 0x1d69c50
	void OnEnd__DelegateSignature(bool IsWinner);// 0x1d69c50
	void OnUpdate__DelegateSignature(int VoteCount, bool HasVotedFor);// 0x1d69c50

--------------------------------
Class: SQVoteEntry
	byte Type_2_B0AE95D94AFBB802A13123B906609298;//[Offset: 0x0, Size: 1]
	FText ScreenTitle_8_09A5D4244C65422554422AB08A4B2D71;//[Offset: 0x8, Size: 1]
	FText SubTitle_9_B7E21CD747A33B388BE197A87D7BCFB9;//[Offset: 0x20, Size: 1]
	FText Description_11_89A4B2DB42C332968FC4DD92741E5ED5;//[Offset: 0x38, Size: 1]
	int AllocatedVotes_14_1960EAFC4BAC49B294CE4497247D6F17;//[Offset: 0x50, Size: 1]

--------------------------------
Class: UMG_VoteLayer_C.UMG_VoteBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	TileView* Grid;//[Offset: 0x278, Size: 1]
	TextBlock* LayerVoteText;//[Offset: 0x280, Size: 1]
	VoteScreenListItem_C*[] Choices;//[Offset: 0x288, Size: 1]
	void Display Result(SQVoteSession* VoteSession, out const SQChoice SQChoice, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, VoteScreenListItem_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Choices(SQVoteSessionClient* Vote Session, int Player Current Vote Count, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, VoteScreenListItem_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Generate Items(SQVoteSessionClient* Vote Session, int Temp_int_Array_Index_Variable, SQChoice CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, SQVoteEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, VoteScreenListItem_C* CallFunc_SpawnObject_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void OnSetup(FText TeamName, FName PlayerName);// 0x1d69c50
	void ExecuteUbergraph_UMG_VoteLayer(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, SQVoteSessionClient* K2Node_Event_VoteSession, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, bool K2Node_Event_Activated, float CallFunc_GetTotalSeconds_ReturnValue, FText K2Node_CustomEvent_TeamName, FName K2Node_CustomEvent_PlayerName, bool Temp_bool_Variable, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: UMG_VoteLevel_C.UMG_VoteBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x270, Size: 1]
	TileView* Grid;//[Offset: 0x278, Size: 1]
	TextBlock* VoteTitle;//[Offset: 0x280, Size: 1]
	VoteScreenListItem_C*[] Choices;//[Offset: 0x288, Size: 1]
	void Display Result(SQVoteSessionClient* Vote Session, SQChoice Winner, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, VoteScreenListItem_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Choices(SQVoteSessionClient* VoteSession, int Player Current Votes Count, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, VoteScreenListItem_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Generate Items(SQVoteSessionClient* Vote Session, int Temp_int_Array_Index_Variable, SQChoice CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, SQVoteEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, VoteScreenListItem_C* CallFunc_SpawnObject_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void OnSetup(FText TeamName, FName PlayerName);// 0x1d69c50
	void ExecuteUbergraph_UMG_VoteLevel(int EntryPoint, enum Temp_byte_Variable, enum Temp_byte_Variable, SQVoteSessionClient* K2Node_Event_VoteSession, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, bool K2Node_Event_Activated, float CallFunc_GetTotalSeconds_ReturnValue, FText K2Node_CustomEvent_TeamName, FName K2Node_CustomEvent_PlayerName, bool Temp_bool_Variable, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: UMG_GenericPopupVote_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	VerticalBox* VoteBox;//[Offset: 0x268, Size: 1]
	TextBlock* VoteTitle;//[Offset: 0x270, Size: 1]
	float Result Presentation Duration;//[Offset: 0x278, Size: 1]
	UMG_GenericPopupVoteEntry_C*[] AllChoiceWidgets;//[Offset: 0x280, Size: 1]
	void Display Result(SQVoteSessionClient* Vote Session, SQChoice Winner, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, UMG_GenericPopupVoteEntry_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Choices(SQVoteSessionClient* Vote Session, int Player Current Vote Count, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, UMG_GenericPopupVoteEntry_C* CallFunc_Array_Get_Item, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Generate Items(SQVoteSessionClient* Vote Session, SQChoice[] CallFunc_ConfigureVoteWindow_Out_Choices);// 0x1d69c50
	void ConfigureChoices(out SQChoice[] In Choices, SQVoteSessionClient* In Vote Session, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQChoice CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, UMG_GenericPopupVoteEntry_C* CallFunc_Create_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void ConfigureVoteWindow(SQVoteSession* In Vote Session, out SQChoice[] Out Choices, bool CallFunc_IsValid_ReturnValue, SQVoteEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, FText CallFunc_Conv_NameToText_ReturnValue);// 0x1d69c50
	void Cleanup();// 0x1d69c50
	void OnVoteEnded(SQVoteSessionClient* VoteSession, SQChoice Winner);// 0x1d69c50
	void OnVoteStarted(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void OnVoteUpdated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void SetVoteScreenActive(bool Activated);// 0x1d69c50
	void ExecuteUbergraph_UMG_GenericPopupVote(int EntryPoint, SQVoteSessionClient* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, SQVoteSessionClient* K2Node_Event_VoteSession, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, float CallFunc_GetTotalSeconds_ReturnValue, bool K2Node_Event_Activated);// 0x1d69c50

--------------------------------
Class: UMG_GenericPopupVoteEntry_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Background;//[Offset: 0x268, Size: 1]
	TextBlock* ButtonToPress;//[Offset: 0x270, Size: 1]
	Border* MasterBackground;//[Offset: 0x278, Size: 1]
	Slider* Votes;//[Offset: 0x280, Size: 1]
	TextBlock* VoteText;//[Offset: 0x288, Size: 1]
	FName This Command;//[Offset: 0x290, Size: 1]
	SQChoice This Choice;//[Offset: 0x298, Size: 1]
	MulticastInlineDelegateProperty OnTryMakeVote;//[Size: 1]
	bool NewVar;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	void StartVotes(SQVoteSessionClient* In Vote Session, float CallFunc_Conv_IntToFloat_ReturnValue);// 0x1d69c50
	void UpdateResult(bool Is Winner, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default);// 0x1d69c50
	void UpdateVotes(SQVoteSessionChoiceInfo In Choice State, SQVoteSessionInfo In Vote State, LinearColor Temp_struct_Variable, float CallFunc_Conv_IntToFloat_ReturnValue, LinearColor Temp_struct_Variable, int CallFunc_Array_Length_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool Temp_bool_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, FString CallFunc_GetPlayerName_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void On Vote Ended(SQVoteSession* VoteSession, SQChoice Winner);// 0x1d69c50
	void On Vote Updated(SQVoteSessionClient* VoteSession, int PlayerCurrentVoteCount);// 0x1d69c50
	void On Vote Started(SQVoteSessionClient* VoteSession);// 0x1d69c50
	void ExecuteUbergraph_UMG_GenericPopupVoteEntry(int EntryPoint, SQVoteSessionClient* K2Node_Event_VoteSession, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_GetKeysMappedToActionText_ReturnValue, FText CallFunc_Conv_NameToText_ReturnValue, SQVoteSession* K2Node_Event_VoteSession, SQChoice K2Node_Event_Winner, SQVoteSessionClient* K2Node_Event_VoteSession, int K2Node_Event_PlayerCurrentVoteCount, SQVoteSessionChoiceInfo CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);// 0x1d69c50
	void OnTryMakeVote__DelegateSignature(Key KeyPressed, SQChoice Choice, UMG_GenericPopupVoteEntry_C* ThisWidgetEntry);// 0x1d69c50

--------------------------------
Class: W_WorldMarker_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Out;//[Offset: 0x268, Size: 1]
	WidgetAnimation* In;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x280, Size: 1]
	Vector2D Desired Screen Location;//[Offset: 0x288, Size: 1]
	Vector Marker World Location;//[Offset: 0x290, Size: 1]
	Texture2D* Texture;//[Offset: 0x2a0, Size: 1]
	LinearColor Color;//[Offset: 0x2a8, Size: 1]
	CanvasPanelSlot* My Canvas Slot;//[Offset: 0x2b8, Size: 1]
	bool Is In Screen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c0, Size: 1]
	BP_GenericMapMarker_C* My Marker;//[Offset: 0x2c8, Size: 1]
	bool CanFade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	float Duration;//[Offset: 0x2d4, Size: 1]
	Vector OriginalLocation;//[Offset: 0x2d8, Size: 1]
	void ADS(out bool In ADS, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsZoomed_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void End();// 0x1d69c50
	void OnWorldOriginUpdated();// 0x1d69c50
	void ExecuteUbergraph_W_WorldMarker(int EntryPoint, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool Temp_bool_Variable, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float Temp_float_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_ProjectWorldLocationToScreen_ScreenLocation, bool CallFunc_ProjectWorldLocationToScreen_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, float CallFunc_GetEndTime_ReturnValue, CanvasPanelSlot* K2Node_DynamicCast_AsCanvas_Panel_Slot, bool K2Node_DynamicCast_bSuccess, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float K2Node_Select_Default, bool CallFunc_ADS_In_ADS, float K2Node_Select_Default, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_FClamp_ReturnValue, LinearColor CallFunc_MakeColor_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_RebaseZeroOriginOntoLocal_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQNotificationData.DataAsset.Object
	SQNotificationLayout NotificationLayouts;//[Offset: 0x30, Size: 11]
	SQNotificationLayout GetNotificationLayout(enum NotificationType);// 0xdc0e40

--------------------------------
Class: SQNotificationLayout
	Texture2D* Icon;//[Offset: 0x0, Size: 1]
	LinearColor IconColor;//[Offset: 0x8, Size: 1]
	LinearColor TextColor;//[Offset: 0x18, Size: 1]
	float DisplayTime;//[Offset: 0x28, Size: 1]

--------------------------------
Class: W_InteractableWidgetList_Master_C.SQInteractableWidgetList.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	FText Display Name;//[Offset: 0x268, Size: 1]
	Actor* Interact Actor;//[Offset: 0x280, Size: 1]
	SQUsableData Interact Data;//[Offset: 0x288, Size: 1]
	TimerHandle Stop Drawing Timer;//[Offset: 0x2c8, Size: 1]
	bool Should Set Position;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d0, Size: 1]
	bool Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d1, Size: 1]
	bool Can Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d2, Size: 1]
	float Edge Padding;//[Offset: 0x2d4, Size: 1]
	bool Force Update Interaction Items;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	void Close Radial From Interactable(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* CallFunc_Get_Radial_Menu_Radial_Menu, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Get Fade Animation(out WidgetAnimation* Fade Animation);// 0x1d69c50
	void Fade Anim(bool Open, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, WidgetAnimation* CallFunc_Get_Fade_Animation_Fade_Animation, byte K2Node_Select_Default, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50
	void Get Interact List(out VerticalBox* InteractList);// 0x1d69c50
	void Create Interaction Items(bool Force, Widget* L List Child Widget, SQUsableWidgetData L Data, bool Temp_bool_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, VerticalBox* CallFunc_Get_Interact_List_InteractList, int Temp_int_Array_Index_Variable, VerticalBox* CallFunc_Get_Interact_List_InteractList, VerticalBox* CallFunc_Get_Interact_List_InteractList, VerticalBox* CallFunc_Get_Interact_List_InteractList, PanelSlot* CallFunc_AddChild_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, VerticalBox* CallFunc_Get_Interact_List_InteractList, bool CallFunc_IsValid_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, class Widget CallFunc_GetObjectClass_ReturnValue, VerticalBox* CallFunc_Get_Interact_List_InteractList, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, SQUsableWidgetData CallFunc_Array_Get_Item, bool CallFunc_BooleanAND_ReturnValue, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, interface classNone K2Node_DynamicCast_AsIWidget_Interactable, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQInteractableWidgetItem* CallFunc_Create_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue);// 0x1d69c50
	void Is Player Zoomed(out bool Is Zoomed, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsZoomed_ReturnValue);// 0x1d69c50
	void Close Animation();// 0x1d69c50
	void Open Animation(bool Force);// 0x1d69c50
	void Clear Interactable();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Set Position();// 0x1d69c50
	void Set Interactable Actor(Actor* Actor);// 0x1d69c50
	void Set Interact Data(SQUsableWidgetData Interact Data, Actor* Actor);// 0x1d69c50
	void ExecuteUbergraph_W_InteractableWidgetList_Master(int EntryPoint, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsSQUsable, bool K2Node_DynamicCast_bSuccess, SQUsableData CallFunc_GetUsableData_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_CustomEvent_Force, Vector CallFunc_Add_VectorVector_ReturnValue, Vector2D CallFunc_ProjectWorldToScreen_ScreenPosition, bool CallFunc_ProjectWorldToScreen_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, Vector2D CallFunc_GetViewportSize_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, Actor* K2Node_Event_Actor, Vector2D CallFunc_MakeVector2D_ReturnValue, SQUsableWidgetData K2Node_Event_Interact_Data, Actor* K2Node_Event_Actor);// 0x1d69c50

--------------------------------
Class: W_EndRound_Base_C.UserWidget.Widget.Visual.Object
	int Winning Team;//[Offset: 0x260, Size: 1]
	int Losing Team;//[Offset: 0x264, Size: 1]
	int Winning Tickets;//[Offset: 0x268, Size: 1]
	int Losing Tickets;//[Offset: 0x26c, Size: 1]

--------------------------------
Class: BP_TeamInfo_C.SQTeamInfo.Object
	class BP_RadialMenuModel_C* SLCommandMenu;//[Offset: 0x380, Size: 1]
	class BP_RadialMenuModel_C* NonBuildSLCommandMenu;//[Offset: 0x388, Size: 1]
	class BP_RadialMenuModel_C* FTLCommandMenu;//[Offset: 0x390, Size: 1]
	DataTable* Grunt Voice Table;//[Offset: 0x398, Size: 1]
	DataTable* SL Voice Table;//[Offset: 0x3a0, Size: 1]

--------------------------------
Class: W_SQRoamingMap_C.UMG_MenuBase_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e0, Size: 1]
	WidgetAnimation* RoamingMapOpenCloseAnim;//[Offset: 0x2e8, Size: 1]
	Overlay* MainObject;//[Offset: 0x2f0, Size: 1]
	W_SQMapCore_C* MapCoreWidget;//[Offset: 0x2f8, Size: 1]
	W_GameTime_C* W_GameTime;//[Offset: 0x300, Size: 1]
	W_PlayerPosition_C* W_PlayerPosition;//[Offset: 0x308, Size: 1]
	W_TeamTickets_C* W_TeamTickets;//[Offset: 0x310, Size: 1]
	W_TerritoryControl_Bar_C* W_TerritoryControl_TugofWar;//[Offset: 0x318, Size: 1]
	void MouseWheelZoom(float MouseWheelAxis);// 0x1d69c50
	void GetOwningPawnMapScreenPosition(out Vector2D Result, out bool Success, Pawn* PlayerPawn, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQCoreStateComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_GetCurrentPawn_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQCoreStateId CallFunc_GetId_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector2D CallFunc_GetWidgetScreenPosition_OutPosition, bool CallFunc_GetWidgetScreenPosition_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Opened();// 0x1d69c50
	void Closed();// 0x1d69c50
	void ExecuteUbergraph_W_SQRoamingMap(int EntryPoint, Vector2D CallFunc_GetOwningPawnMapScreenPosition_Result, bool CallFunc_GetOwningPawnMapScreenPosition_Success, bool CallFunc_IsAnimationPlayingForward_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool K2Node_Event_IsDesignTime, Vector2D CallFunc_GetViewportSize_ReturnValue, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, float CallFunc_GetViewportScale_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue);// 0x1d69c50

--------------------------------
Class: DrawChatWidget_C.SQDrawChatWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	void OnPaint(out PaintContext Context);// 0x1d69c50

--------------------------------
Class: UMG_Scoreboard_C.SQScoreboard.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x310, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x318, Size: 1]
	Overlay* Bottom;//[Offset: 0x320, Size: 1]
	TextBlock* BPCurrentGamemodeTextBlock;//[Offset: 0x328, Size: 1]
	TextBlock* BpCurrentMapTextBlock;//[Offset: 0x330, Size: 1]
	TextBlock* BPGameResultTextBlock;//[Offset: 0x338, Size: 1]
	Image* BpGameTimeClockImage;//[Offset: 0x340, Size: 1]
	TextBlock* BPNextMapTextBlock;//[Offset: 0x348, Size: 1]
	TextBlock* BPPlayerCountTextBlock;//[Offset: 0x350, Size: 1]
	TextBlock* BpRemainingGameTimeText;//[Offset: 0x358, Size: 1]
	TextBlock* BPRemainingTicketsText;//[Offset: 0x360, Size: 1]
	UMG_ScoreboardTeam_C* BPScoreboardEnemy;//[Offset: 0x368, Size: 1]
	UMG_ScoreboardTeam_C* BPScoreboardFriendly;//[Offset: 0x370, Size: 1]
	TextBlock* BPServerNameTextBlock;//[Offset: 0x378, Size: 1]
	Image* BPTickImage;//[Offset: 0x380, Size: 1]
	TextBlock* BPTickTextBlock;//[Offset: 0x388, Size: 1]
	HorizontalBox* EndRoundTimer;//[Offset: 0x390, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x398, Size: 1]
	Image* Image;//[Offset: 0x3a0, Size: 1]
	Image* Image;//[Offset: 0x3a8, Size: 1]
	MainMenu_Button_C* MainMenu_Button;//[Offset: 0x3b0, Size: 1]
	TextBlock* PostMatchStep;//[Offset: 0x3b8, Size: 1]
	CanvasPanel* ResultCanvas;//[Offset: 0x3c0, Size: 1]
	ScaleBox* ScaleBox;//[Offset: 0x3c8, Size: 1]
	ScaleBox* ScaleBox;//[Offset: 0x3d0, Size: 1]
	TextBlock* TB_Timer;//[Offset: 0x3d8, Size: 1]
	FText TickRateText;//[Offset: 0x3e0, Size: 1]
	int CurrentGameTime;//[Offset: 0x3f8, Size: 1]
	void UpdateScaling();// 0x1d69c50
	void UpdateServerFPSText();// 0x1d69c50
	void CustomTickEvent();// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Play Fade Animation();// 0x1d69c50
	void Destruct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_Scoreboard(int EntryPoint, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsDev_ReturnValue, bool CallFunc_IsAdmin_ReturnValue, bool CallFunc_IsQA_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, float CallFunc_GetServerHealthValues_ServerHealthLow, float CallFunc_GetServerHealthValues_ServerHealthHigh, int CallFunc_Array_Length_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Format_ReturnValue, int CallFunc_GetRemainingTime_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue, int CallFunc_Percent_IntInt_ReturnValue, int CallFunc_Divide_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText CallFunc_Format_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FText K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText K2Node_Select_Default, int CallFunc_Divide_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, enum Temp_byte_Variable, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, enum Temp_byte_Variable, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool Temp_bool_Variable, enum K2Node_Select_Default, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, bool CallFunc_MatchWaitingAfterCompletion_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, Texture2D* K2Node_Select_Default, bool CallFunc_IsUsingLayerVote_ReturnValue, bool CallFunc_IsUsingLevelVote_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_GetStreamerModeEnabledForLevel_ReturnValue, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, LinearColor Temp_struct_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable, FText K2Node_Select_Default, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: UMG_ScoreboardTeam_C.SQScoreboardTeam.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x3d8, Size: 1]
	Image* BPColoredHeaderBarImage;//[Offset: 0x3e0, Size: 1]
	Border* BPColoredHeaderTabImage;//[Offset: 0x3e8, Size: 1]
	HorizontalBox* BPEndOfRoundHorizontal;//[Offset: 0x3f0, Size: 1]
	Spacer* BPEnemyTeamPingAligner;//[Offset: 0x3f8, Size: 1]
	Image* BPFlagImage;//[Offset: 0x400, Size: 1]
	CanvasPanel* BpNonSquadPlayersCanvasPanel;//[Offset: 0x408, Size: 1]
	Spacer* BPNotEndOfRoundSpacer;//[Offset: 0x410, Size: 1]
	Image* BpObjectiveScore;//[Offset: 0x418, Size: 1]
	TextBlock* BpPlayerNumberText;//[Offset: 0x420, Size: 1]
	GridPanel* BPPlayersGrid;//[Offset: 0x428, Size: 1]
	TextBlock* BPRemainingTicketsText;//[Offset: 0x430, Size: 1]
	UMG_ScoreboardTeamScore_C* BPScoreboardTeamScore;//[Offset: 0x438, Size: 1]
	TextBlock* BPScoreText;//[Offset: 0x440, Size: 1]
	Image* BPSquadScore;//[Offset: 0x448, Size: 1]
	GridPanel* BPSquadsGrid;//[Offset: 0x450, Size: 1]
	HorizontalBox* BPTeamHorizontalBox;//[Offset: 0x458, Size: 1]
	TextBlock* BPTeamNameText;//[Offset: 0x460, Size: 1]
	Image* BPTicketIcon;//[Offset: 0x468, Size: 1]
	VerticalBox* BPTopVerticalBox;//[Offset: 0x470, Size: 1]
	Image* Deaths;//[Offset: 0x478, Size: 1]
	Image* Heal;//[Offset: 0x480, Size: 1]
	Image* Image;//[Offset: 0x488, Size: 1]
	Image* Image;//[Offset: 0x490, Size: 1]
	Image* Incaps;//[Offset: 0x498, Size: 1]
	Image* Ping;//[Offset: 0x4a0, Size: 1]
	Image* Revive;//[Offset: 0x4a8, Size: 1]
	Image* TB_Kills;//[Offset: 0x4b0, Size: 1]
	TextBlock* TB_Kit;//[Offset: 0x4b8, Size: 1]
	Image* VehicleImage;//[Offset: 0x4c0, Size: 1]
	Widget* Get_Ping_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_BPScoreText_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_BpObjectiveScore_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_BPSquadScore_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Heal_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Revive_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Incaps_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_Deaths_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_TB_Kills_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_TB_Kit_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	Widget* Get_VehicleImage_ToolTipWidget(UMG_Tooltip_C* CallFunc_Create_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void ExecuteUbergraph_UMG_ScoreboardTeam(int EntryPoint);// 0x1d69c50

--------------------------------
Class: UMG_ScoreboardTeamScore_C.SQScoreboardTeamScore.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2b0, Size: 1]
	TextBlock* BPDeathsText;//[Offset: 0x2b8, Size: 1]
	HorizontalBox* BPEndOfRoundPanel;//[Offset: 0x2c0, Size: 1]
	TextBlock* BPHealText;//[Offset: 0x2c8, Size: 1]
	TextBlock* BPIncapsText;//[Offset: 0x2d0, Size: 1]
	TextBlock* BPKillsText;//[Offset: 0x2d8, Size: 1]
	Spacer* BPNotEndOfRoundSpacer;//[Offset: 0x2e0, Size: 1]
	TextBlock* BPObjectivesText;//[Offset: 0x2e8, Size: 1]
	TextBlock* BPReviveText;//[Offset: 0x2f0, Size: 1]
	TextBlock* BPScoreText;//[Offset: 0x2f8, Size: 1]
	TextBlock* BPTeamworkText;//[Offset: 0x300, Size: 1]
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void ExecuteUbergraph_UMG_ScoreboardTeamScore(int EntryPoint);// 0x1d69c50

--------------------------------
Class: BP_FlyingDrone_C.Character.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x4c0, Size: 1]
	StaticMeshComponent* HitBox;//[Offset: 0x4c8, Size: 1]
	AudioComponent* SC_QuadcoptersAudio;//[Offset: 0x4d0, Size: 1]
	CameraComponent* Camera;//[Offset: 0x4d8, Size: 1]
	SQMapIconComponent* SQMapIcon;//[Offset: 0x4e0, Size: 1]
	SQCoreStateComponent* SQCoreState;//[Offset: 0x4e8, Size: 1]
	StaticMeshComponent* Blade4;//[Offset: 0x4f0, Size: 1]
	StaticMeshComponent* Blade3;//[Offset: 0x4f8, Size: 1]
	StaticMeshComponent* Blade2;//[Offset: 0x500, Size: 1]
	StaticMeshComponent* Blade;//[Offset: 0x508, Size: 1]
	HealthComponent_C* HealthComponent;//[Offset: 0x510, Size: 1]
	StaticMeshComponent* Body;//[Offset: 0x518, Size: 1]
	SQPlayerController* SQ PC;//[Offset: 0x520, Size: 1]
	bool Dead;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x528, Size: 1]
	ParticleSystem* Explode Effect;//[Offset: 0x530, Size: 1]
	SoundBase* Explode Sound;//[Offset: 0x538, Size: 1]
	bool Can Possess;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x540, Size: 1]
	class SQGridData_CommandOption* Command Action;//[Offset: 0x548, Size: 1]
	float CrashVelocity;//[Offset: 0x550, Size: 1]
	float Max Fly Height;//[Offset: 0x554, Size: 1]
	bool Can Increase Altitude;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x558, Size: 1]
	TimerHandle Altitude Timer;//[Offset: 0x560, Size: 1]
	int Zoom Level;//[Offset: 0x568, Size: 1]
	float Desired Zoom;//[Offset: 0x56c, Size: 1]
	float[] Zoom Levels;//[Offset: 0x570, Size: 1]
	class BP_Smartphone_FPV_C* FPV Item Class;//[Offset: 0x580, Size: 1]
	float BankAngleLimit;//[Offset: 0x588, Size: 1]
	DebugFloatHistory DebugFloatHistory;//[Offset: 0x590, Size: 1]
	BP_Smartphone_FPV_C* FPV Item;//[Offset: 0x5b0, Size: 1]
	void Check Owner Death(bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Update Zoom(bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_Constant_ReturnValue);// 0x1d69c50
	void Add Zoom Delta(bool Temp_bool_Variable, int Temp_int_Variable, int CallFunc_Array_Length_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int K2Node_Select_Default);// 0x1d69c50
	void Set Can Increase Altitude(const Actor*[] Temp_object_Variable, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue);// 0x1d69c50
	void Update Relative Rotation(float NewRotationY, float NewRotationX, float NewRotationZ, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, float CallFunc_GetMaxAcceleration_ReturnValue, float CallFunc_GetMaxSpeed_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_GetMaxSpeed_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, Vector CallFunc_GetVelocity_ReturnValue, const Transform CallFunc_GetTransform_ReturnValue, Vector CallFunc_InverseTransformDirection_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_GetCurrentAcceleration_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Vector CallFunc_InverseTransformDirection_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float K2Node_Select_Default, Vector CallFunc_MakeVector_ReturnValue, float CallFunc_Abs_ReturnValue, Vector CallFunc_Divide_VectorFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_Divide_VectorFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float K2Node_Select_Default, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_FInterpTo_ReturnValue);// 0x1d69c50
	void InpActEvt_Interact_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_LeanLeft_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpAxisEvt_MoveAileron_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterRight_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterUp_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_MoveElevator_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void BndEvt__HealthComponent_K2Node_ComponentBoundEvent_0_Health Zero__DelegateSignature();// 0x1d69c50
	void Multicast Destroy();// 0x1d69c50
	void Server Die();// 0x1d69c50
	void End Flight();// 0x1d69c50
	void Server Unpossess(bool Remove);// 0x1d69c50
	void ReceivePossessed(Controller* NewController);// 0x1d69c50
	void On Possess(out const Rotator NewRotation);// 0x1d69c50
	void ReceiveUnpossessed(Controller* OldController);// 0x1d69c50
	void On Depossess();// 0x1d69c50
	void Kit Changed(SQRoleSettings* CurrentRole);// 0x1d69c50
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void InpAxisEvt_DroneElevation_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ExecuteUbergraph_BP_FlyingDrone(int EntryPoint, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, bool CallFunc_IsDedicatedServer_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_InputAxisEvent_AxisValue, Vector CallFunc_GetActorRightVector_ReturnValue, Vector CallFunc_GetActorForwardVector_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_Event_DeltaSeconds, Actor* CallFunc_GetOwner_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, ParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_GetVelocity_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, float CallFunc_VSize_ReturnValue, HitResult CallFunc_K2_AddRelativeRotation_SweepHitResult, float CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_CustomEvent_Remove, float CallFunc_Subtract_FloatFloat_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, Controller* K2Node_Event_NewController, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, const Rotator K2Node_CustomEvent_NewRotation, Controller* K2Node_Event_OldController, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, Rotator CallFunc_GetControlRotation_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, BP_Smartphone_FPV_C* K2Node_DynamicCast_AsBP_Smartphone_FPV, bool K2Node_DynamicCast_bSuccess, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, SQInventoryData K2Node_MakeStruct_SQInventoryData, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, int CallFunc_AddGroupToInventory_ReturnValue, SQEquipableItem* CallFunc_InsertItemIntoInventory_ReturnValue, BP_Smartphone_FPV_C* K2Node_DynamicCast_AsBP_Smartphone_FPV, bool K2Node_DynamicCast_bSuccess, SQRoleSettings* K2Node_CustomEvent_CurrentRole, Vector CallFunc_GetVelocity_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_ApplyDamage_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit);// 0x1d69c50

--------------------------------
Class: BP_Smartphone_FPV_C.BP_GenericEquippableItem_C.SQEquipableItem.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x460, Size: 1]
	WidgetComponent* ScreenWidget;//[Offset: 0x468, Size: 1]
	BP_FlyingDrone_C* My Drone;//[Offset: 0x470, Size: 1]
	W_DroneUI_C* Drone UI;//[Offset: 0x478, Size: 1]
	class SQGridData_CommandOption* Action;//[Offset: 0x480, Size: 1]
	SQPlayerController* SQ PC;//[Offset: 0x488, Size: 1]
	bool bLookingAtPhone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x490, Size: 1]
	void Control Drone UI(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, Anchors K2Node_MakeStruct_Anchors, bool CallFunc_IsValid_ReturnValue, UserWidget* CallFunc_GetUserWidgetObject_ReturnValue, W_FPV_C* K2Node_DynamicCast_AsW_FPV, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, class Pawn CallFunc_GetObjectClass_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_ClassIsChildOf_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAdminCamera_ReturnValue, bool CallFunc_IsLocalController_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, W_DroneUI_C* CallFunc_Create_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void Server Possess Drone(bool Possess);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void BlueprintOnUnequip();// 0x1d69c50
	void BlueprintOnEquip();// 0x1d69c50
	void Init(BP_FlyingDrone_C* My Drone, class SQGridData_CommandOption Action);// 0x1d69c50
	void BPBeginAltUse();// 0x1d69c50
	void BPEndAltUse();// 0x1d69c50
	void SetLookAtPhone(bool LookAtPhone);// 0x1d69c50
	void ExecuteUbergraph_BP_Smartphone_FPV(int EntryPoint, SQItemStaticInfo* CallFunc_GetItemStaticInfo_ReturnValue, float K2Node_Event_DeltaSeconds, SQWeaponStaticInfo* K2Node_DynamicCast_AsSQWeapon_Static_Info, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_CustomEvent_Possess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAdminCamera_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_GetCurrentPawn_ReturnValue, BP_FlyingDrone_C* K2Node_DynamicCast_AsBP_Flying_Drone, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, Pawn* CallFunc_GetOwnerPawn_ReturnValue, Controller* CallFunc_GetController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, BP_FlyingDrone_C* K2Node_CustomEvent_My_Drone, class SQGridData_CommandOption K2Node_CustomEvent_Action, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQItemStaticInfo* CallFunc_GetItemStaticInfo_ReturnValue, bool K2Node_CustomEvent_LookAtPhone, BP_GenericBinoculars_StaticInfo_C* K2Node_DynamicCast_AsBP_Generic_Binoculars_Static_Info, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_GenericEquippableItem_C.SQEquipableItem.Actor.Object

--------------------------------
Class: WidgetComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	enum Space;//[Offset: 0x478, Size: 1]
	enum TimingPolicy;//[Offset: 0x479, Size: 1]
	class UserWidget* WidgetClass;//[Offset: 0x480, Size: 1]
	IntPoint DrawSize;//[Offset: 0x488, Size: 1]
	bool bManuallyRedraw;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x490, Size: 1]
	bool bRedrawRequested;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x491, Size: 1]
	float RedrawTime;//[Offset: 0x494, Size: 1]
	IntPoint CurrentDrawSize;//[Offset: 0x4a0, Size: 1]
	bool bDrawAtDesiredSize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4a8, Size: 1]
	Vector2D Pivot;//[Offset: 0x4ac, Size: 1]
	bool bReceiveHardwareInput;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b4, Size: 1]
	bool bWindowFocusable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b5, Size: 1]
	enum WindowVisibility;//[Offset: 0x4b6, Size: 1]
	bool bApplyGammaCorrection;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4b7, Size: 1]
	LocalPlayer* OwnerPlayer;//[Offset: 0x4b8, Size: 1]
	LinearColor BackgroundColor;//[Offset: 0x4c0, Size: 1]
	LinearColor TintColorAndOpacity;//[Offset: 0x4d0, Size: 1]
	float OpacityFromTexture;//[Offset: 0x4e0, Size: 1]
	enum BlendMode;//[Offset: 0x4e4, Size: 1]
	bool bIsTwoSided;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e5, Size: 1]
	bool TickWhenOffscreen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e6, Size: 1]
	BodySetup* BodySetup;//[Offset: 0x4e8, Size: 1]
	MaterialInterface* TranslucentMaterial;//[Offset: 0x4f0, Size: 1]
	MaterialInterface* TranslucentMaterial_OneSided;//[Offset: 0x4f8, Size: 1]
	MaterialInterface* OpaqueMaterial;//[Offset: 0x500, Size: 1]
	MaterialInterface* OpaqueMaterial_OneSided;//[Offset: 0x508, Size: 1]
	MaterialInterface* MaskedMaterial;//[Offset: 0x510, Size: 1]
	MaterialInterface* MaskedMaterial_OneSided;//[Offset: 0x518, Size: 1]
	TextureRenderTarget2D* RenderTarget;//[Offset: 0x520, Size: 1]
	MaterialInstanceDynamic* MaterialInstance;//[Offset: 0x528, Size: 1]
	bool bAddedToScreen;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x530, Size: 1]
	bool bEditTimeUsable;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x531, Size: 1]
	FName SharedLayerName;//[Offset: 0x534, Size: 1]
	int LayerZOrder;//[Offset: 0x53c, Size: 1]
	enum GeometryMode;//[Offset: 0x540, Size: 1]
	float CylinderArcAngle;//[Offset: 0x544, Size: 1]
	enum TickMode;//[Offset: 0x548, Size: 1]
	UserWidget* Widget;//[Offset: 0x570, Size: 1]
	void SetWindowVisibility(enum InVisibility);// 0x340b190
	void SetWindowFocusable(bool bInWindowFocusable);// 0x340ae50
	void SetWidgetSpace(enum NewSpace);// 0x340add0
	void SetWidget(UserWidget* Widget);// 0x340ad40
	void SetTwoSided(const bool bWantTwoSided);// 0x340acb0
	void SetTintColorAndOpacity(const LinearColor NewTintColorAndOpacity);// 0x340ac20
	void SetTickWhenOffscreen(const bool bWantTickWhenOffscreen);// 0x340ab90
	void SetTickMode(enum InTickMode);// 0x340ab10
	void SetRedrawTime(float InRedrawTime);// 0x340aa90
	void SetPivot(out const Vector2D InPivot);// 0x340aa00
	void SetOwnerPlayer(LocalPlayer* LocalPlayer);// 0x340a970
	void SetManuallyRedraw(bool bUseManualRedraw);// 0x340a7b0
	void SetGeometryMode(enum InGeometryMode);// 0x340a0c0
	void SetDrawSize(Vector2D Size);// 0x340a020
	void SetDrawAtDesiredSize(bool bInDrawAtDesiredSize);// 0x3409f90
	void SetCylinderArcAngle(const float InCylinderArcAngle);// 0x3409f10
	void SetBackgroundColor(const LinearColor NewBackgroundColor);// 0x3409bc0
	void RequestRenderUpdate();// 0x3409b80
	void RequestRedraw();// 0x3409b60
	bool IsWidgetVisible();// 0x34093e0
	enum GetWindowVisiblility();// 0x3409320
	bool GetWindowFocusable();// 0x3409300
	enum GetWidgetSpace();// 0x34092e0
	UserWidget* GetWidget();// 0xe455a0
	UserWidget* GetUserWidgetObject();// 0x3409280
	bool GetTwoSided();// 0x3409260
	bool GetTickWhenOffscreen();// 0x3409240
	TextureRenderTarget2D* GetRenderTarget();// 0x3409090
	float GetRedrawTime();// 0x3409070
	Vector2D GetPivot();// 0x3409040
	LocalPlayer* GetOwnerPlayer();// 0x3409010
	MaterialInstanceDynamic* GetMaterialInstance();// 0x3408fe0
	bool GetManuallyRedraw();// 0x2d864d0
	enum GetGeometryMode();// 0x3408a10
	Vector2D GetDrawSize();// 0x34088c0
	bool GetDrawAtDesiredSize();// 0x34088a0
	float GetCylinderArcAngle();// 0x3408850
	Vector2D GetCurrentDrawSize();// 0x3408810

--------------------------------
Class: W_FPV_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Idle;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x280, Size: 1]
	BP_FlyingDrone_C* Drone;//[Offset: 0x288, Size: 1]
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_FPV(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int CallFunc_Conv_BoolToInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_DroneUI_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* powerlow;//[Offset: 0x268, Size: 1]
	ProgressBar* Battery;//[Offset: 0x270, Size: 1]
	TextBlock* CameraPitchAngle;//[Offset: 0x278, Size: 1]
	Image* CameraPitchLadder;//[Offset: 0x280, Size: 1]
	Image* Corner;//[Offset: 0x288, Size: 1]
	Image* cross;//[Offset: 0x290, Size: 1]
	TextBlock* Elevation;//[Offset: 0x298, Size: 1]
	TextBlock* GridRef;//[Offset: 0x2a0, Size: 1]
	Image* Image;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	Image* Image;//[Offset: 0x2c0, Size: 1]
	Overlay* PitchPanel;//[Offset: 0x2c8, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2d0, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2d8, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2e0, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x2e8, Size: 1]
	TextBlock* Time;//[Offset: 0x2f0, Size: 1]
	W_CustomCompass_Roboto_C* W_CustomCompass_Roboto_C;//[Offset: 0x2f8, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem;//[Offset: 0x300, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x308, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x310, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x318, Size: 1]
	BP_FlyingDrone_C* My Drone;//[Offset: 0x320, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x328, Size: 1]
	void Set Pitch(PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, Rotator CallFunc_K2_GetComponentRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_MapRangeClamped_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, WidgetTransform K2Node_MakeStruct_WidgetTransform);// 0x1d69c50
	void Set Elevation(const Actor*[] K2Node_MakeArray_Array, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, float CallFunc_Divide_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Set Time(FText Temp_text_Variable, SQGameState* CallFunc_GetSquadGameState_Return_Value, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetRemainingTime_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, Timespan CallFunc_MakeTimespan_ReturnValue, bool Temp_bool_Variable, int CallFunc_BreakTimespan_Days, int CallFunc_BreakTimespan_Hours, int CallFunc_BreakTimespan_Minutes, int CallFunc_BreakTimespan_Seconds, int CallFunc_BreakTimespan_Milliseconds, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_IntToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Set Grid Ref(PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, const Actor*[] K2Node_MakeArray_Array, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, Vector CallFunc_GetForwardVector_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, const Vector2D CallFunc_GetNumGridLines_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, FString CallFunc_MapLocationToGridCoordinateString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_DroneUI(int EntryPoint, byte CallFunc_MakeLiteralByte_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, float CallFunc_CalculateStatePercentTimeRemaining_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, class Pawn CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_CustomCompass_Roboto_C.SQCompassMK2.SQCompass.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x338, Size: 1]
	Image* BPCompass_IMG;//[Offset: 0x340, Size: 1]
	Image* BPLeftArrow;//[Offset: 0x348, Size: 1]
	CanvasPanel* BPMain_P;//[Offset: 0x350, Size: 1]
	Image* BPRightArrow;//[Offset: 0x358, Size: 1]
	TextBlock* CompassBearing;//[Offset: 0x360, Size: 1]
	Image* Image;//[Offset: 0x368, Size: 1]
	void Construct();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void ExecuteUbergraph_W_CustomCompass_Roboto(int EntryPoint, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_ParseKeybindItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border;//[Offset: 0x268, Size: 1]
	TextBlock* KeybindText;//[Offset: 0x270, Size: 1]
	Border* PaddingBorder;//[Offset: 0x278, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x280, Size: 1]
	FText KeyBind;//[Offset: 0x288, Size: 1]
	int Font Size;//[Offset: 0x2a0, Size: 1]
	SlateFontInfo New Font;//[Offset: 0x2a8, Size: 1]
	LinearColor BG Color;//[Offset: 0x300, Size: 1]
	Margin Text Padding;//[Offset: 0x310, Size: 1]
	Margin Internal Padding;//[Offset: 0x320, Size: 1]
	void Get Short Name(FName Action Name, out FText Short Name, FText CallFunc_Conv_NameToText_ReturnValue, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);// 0x1d69c50
	void Parse Keybind(FString inString, out FText Short Name, FName[] L Axis List, FText L Axis, bool Temp_bool_Variable, FName CallFunc_Conv_StringToName_ReturnValue, int Temp_int_Loop_Counter_Variable, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, FName CallFunc_GetActionKeyName_Name, int CallFunc_Array_Length_ReturnValue, FText CallFunc_Get_Short_Name_Short_Name, FString CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_Contains_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, InputAxisKeyMapping CallFunc_Array_Get_Item, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, FName CallFunc_GetKeyName_OutName, bool CallFunc_Key_IsKeyboardKey_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, InputAxisKeyMapping CallFunc_Array_Get_Item, int CallFunc_Array_AddUnique_ReturnValue, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, FName CallFunc_GetKeyName_OutName, bool CallFunc_Key_IsKeyboardKey_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_TextIsEmpty_ReturnValue, FName CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FText CallFunc_Get_Short_Name_Short_Name, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Array_AddUnique_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, int Temp_int_Loop_Counter_Variable, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_W_ParseKeybindItem(int EntryPoint, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, FString CallFunc_Conv_TextToString_ReturnValue, bool K2Node_Event_IsDesignTime, FText CallFunc_Parse_Keybind_Short_Name, BorderSlot* CallFunc_SlotAsBorderSlot_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FText CallFunc_Parse_Keybind_Short_Name, SizeBoxSlot* K2Node_DynamicCast_AsSize_Box_Slot, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_GenericBinoculars_StaticInfo_C.BP_GenericWeapon_StaticInfo_C.SQWeaponStaticInfo.SQItemStaticInfo.Object

--------------------------------
Class: BP_GenericWeapon_StaticInfo_C.SQWeaponStaticInfo.SQItemStaticInfo.Object

--------------------------------
Class: HealthComponent_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	float Health;//[Offset: 0xb8, Size: 1]
	float Max Health;//[Offset: 0xbc, Size: 1]
	MulticastInlineDelegateProperty Health Gained;//[Size: 1]
	MulticastInlineDelegateProperty Health Lost;//[Size: 1]
	MulticastInlineDelegateProperty Health Zero;//[Size: 1]
	MulticastInlineDelegateProperty Health Max;//[Size: 1]
	void Can Damage(Vector Location);// 0x1d69c50
	void Edit Health (Delta)(float Delta, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void Reset Health();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void OnTakeAnyDamage_Event(Actor* DamagedActor, float damage, const DamageType* DamageType, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void OnTakeRadialDamage_Event(Actor* DamagedActor, float damage, const DamageType* DamageType, Vector Origin, HitResult HitInfo, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void OnTakePointDamage_Event(Actor* DamagedActor, float damage, Controller* InstigatedBy, Vector HitLocation, PrimitiveComponent* FHitComponent, FName BoneName, Vector ShotFromDirection, const DamageType* DamageType, Actor* DamageCauser);// 0x1d69c50
	void ExecuteUbergraph_HealthComponent(int EntryPoint, Actor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, Controller* K2Node_CustomEvent_InstigatedBy, Vector K2Node_CustomEvent_HitLocation, PrimitiveComponent* K2Node_CustomEvent_FHitComponent, FName K2Node_CustomEvent_BoneName, Vector K2Node_CustomEvent_ShotFromDirection, const DamageType* K2Node_CustomEvent_DamageType, Actor* K2Node_CustomEvent_DamageCauser, float CallFunc_Multiply_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, Actor* CallFunc_GetOwner_ReturnValue, Actor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, const DamageType* K2Node_CustomEvent_DamageType, Controller* K2Node_CustomEvent_InstigatedBy, Actor* K2Node_CustomEvent_DamageCauser, float CallFunc_Multiply_FloatFloat_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, Actor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, const DamageType* K2Node_CustomEvent_DamageType, Vector K2Node_CustomEvent_Origin, HitResult K2Node_CustomEvent_HitInfo, Controller* K2Node_CustomEvent_InstigatedBy, Actor* K2Node_CustomEvent_DamageCauser, float CallFunc_Multiply_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void Health Max__DelegateSignature();// 0x1d69c50
	void Health Zero__DelegateSignature();// 0x1d69c50
	void Health Lost__DelegateSignature(float Amount Lost);// 0x1d69c50
	void Health Gained__DelegateSignature(float Amount Gained);// 0x1d69c50

--------------------------------
Class: DebugFloatHistory
	float[] Samples;//[Offset: 0x0, Size: 1]
	float MaxSamples;//[Offset: 0x10, Size: 1]
	float MinValue;//[Offset: 0x14, Size: 1]
	float MaxValue;//[Offset: 0x18, Size: 1]
	bool bAutoAdjustMinMax;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1c, Size: 1]

--------------------------------
Class: W_Menu_Input_ToolTip_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* OnHovered;//[Offset: 0x268, Size: 1]
	Border* BorderColour;//[Offset: 0x270, Size: 1]
	Button* Button;//[Offset: 0x278, Size: 1]
	TextBlock* ContextText;//[Offset: 0x280, Size: 1]
	Image* Hovered_Underline;//[Offset: 0x288, Size: 1]
	TextBlock* KeybindText;//[Offset: 0x290, Size: 1]
	Overlay* TextOverlay;//[Offset: 0x298, Size: 1]
	FText KeyBind;//[Offset: 0x2a0, Size: 1]
	FText Action;//[Offset: 0x2b8, Size: 1]
	MulticastInlineDelegateProperty OnToolTipPressed;//[Size: 1]
	bool bDisplayIconOnly;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e0, Size: 1]
	bool bIsHUD;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e1, Size: 1]
	FText IngameKeybind;//[Offset: 0x2e8, Size: 1]
	void GetShortName(FName InputPin, out FText Short Name, FText CallFunc_Conv_NameToText_ReturnValue, bool K2Node_SwitchName_CmpSuccess, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);// 0x1d69c50
	void ParseKeybind(FString inString, out FText Short Name, FText L Axis, FName[] L Axis List, bool Temp_bool_Variable, FName CallFunc_Conv_StringToName_ReturnValue, int Temp_int_Loop_Counter_Variable, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, InputAxisKeyMapping[] CallFunc_GetKeysMapedToAxis_Keys, FName CallFunc_GetActionKeyName_Name, int CallFunc_Array_Length_ReturnValue, FText CallFunc_GetShortName_Short_Name, FString CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_Contains_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, InputAxisKeyMapping CallFunc_Array_Get_Item, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, FName CallFunc_GetKeyName_OutName, bool CallFunc_Key_IsKeyboardKey_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, InputAxisKeyMapping CallFunc_Array_Get_Item, int CallFunc_Array_AddUnique_ReturnValue, FName CallFunc_BreakInputAxisKeyMapping_ActionName, Key CallFunc_BreakInputAxisKeyMapping_Key, float CallFunc_BreakInputAxisKeyMapping_Scale, FName CallFunc_GetKeyName_OutName, bool CallFunc_Key_IsKeyboardKey_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_TextIsEmpty_ReturnValue, FName CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, FText CallFunc_GetShortName_Short_Name, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Array_AddUnique_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, int Temp_int_Loop_Counter_Variable, FText CallFunc_Format_ReturnValue, FText K2Node_Select_Default, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void OnMouseEnter(Geometry MyGeometry, out const PointerEvent MouseEvent);// 0x1d69c50
	void OnMouseLeave(out const PointerEvent MouseEvent);// 0x1d69c50
	void Construct();// 0x1d69c50
	void UpdateKeybind();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();// 0x1d69c50
	void UpdateStyle();// 0x1d69c50
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature();// 0x1d69c50
	void ExecuteUbergraph_W_Menu_Input_ToolTip(int EntryPoint, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool K2Node_Event_IsDesignTime, FText CallFunc_TextToUpper_ReturnValue, Geometry K2Node_Event_MyGeometry, const PointerEvent K2Node_Event_MouseEvent, const PointerEvent K2Node_Event_MouseEvent, UMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, enum K2Node_Select_Default, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor, bool CallFunc_TextIsEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, TimerHandle CallFunc_K2_SetTimer_ReturnValue, FText CallFunc_ParseKeybind_Short_Name);// 0x1d69c50
	void OnToolTipPressed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_SquadList_HUD_Player_C.SQCoreStateSquadMemberWidget.SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e8, Size: 1]
	Border* Border_Colour;//[Offset: 0x2f0, Size: 1]
	Image* CommandVoipIcon;//[Offset: 0x2f8, Size: 1]
	Image* FireTeam_Indicator;//[Offset: 0x300, Size: 1]
	Image* IconRole;//[Offset: 0x308, Size: 1]
	Image* IconStatus;//[Offset: 0x310, Size: 1]
	Image* IconVehicle;//[Offset: 0x318, Size: 1]
	TextBlock* TBName;//[Offset: 0x320, Size: 1]
	Image* VoipIcon;//[Offset: 0x328, Size: 1]
	WidgetSwitcher* VoipIconSwitcher;//[Offset: 0x330, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x338, Size: 1]
	SlateFontInfo Current Font;//[Offset: 0x340, Size: 1]
	bool bIsInVehicle;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x398, Size: 1]
	W_SquadList_HUD_SquadItem_C* ParentSquadList;//[Offset: 0x3a0, Size: 1]
	void GetParentSquadList(out W_SquadList_HUD_SquadItem_C* AsW Squad List HUD Squad Item, bool CallFunc_IsValid_ReturnValue, PanelWidget* CallFunc_GetParent_ReturnValue, PanelWidget* CallFunc_GetParent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Object* CallFunc_GetOuterObject_ReturnValue, Object* CallFunc_GetOuterObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, W_SquadList_HUD_SquadItem_C* K2Node_DynamicCast_AsW_Squad_List_HUD_Squad_Item, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void SelfSquad(out bool Is SelfSquad, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	void UpdateRank();// 0x1d69c50
	void SetRole(SQRoleSettings* L Role, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, SQRoleSettings* CallFunc_GetDeployRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, FSQRoleEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50
	void UpdateMemberItem(bool CallFunc_IsVisible_ReturnValue);// 0x1d69c50
	void UpdateMuteIcon(LinearColor Temp_struct_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, enum Temp_byte_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, Texture2D* K2Node_Select_Default, int CallFunc_Max_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, Texture2D* K2Node_Select_Default, float K2Node_Select_Default, Texture2D* K2Node_Select_Default, LinearColor K2Node_MakeStruct_LinearColor, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void UpdateBorderColour();// 0x1d69c50
	void UpdatePlayerName(bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue, int CallFunc_Len_ReturnValue, FString CallFunc_Mid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FString CallFunc_LeftChop_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void UpdateFireteamColours(SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnVoipChannelChanged();// 0x1d69c50
	void OnIsMutedChanged();// 0x1d69c50
	void OnCurrentVehicleDataChanged();// 0x1d69c50
	void OnIsBleedingChanged();// 0x1d69c50
	void OnIsWoundedChanged();// 0x1d69c50
	void OnIsPossessingPawnChanged();// 0x1d69c50
	void OnIsAliveChanged();// 0x1d69c50
	void OnIsSquadLeaderChanged();// 0x1d69c50
	void OnDeployRoleChanged();// 0x1d69c50
	void OnFireTeamIndexChanged();// 0x1d69c50
	void OnIsFireTeamLeaderChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void ExecuteUbergraph_W_SquadList_HUD_Player(int EntryPoint, Texture2D* Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool Temp_bool_Variable, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, Texture2D* K2Node_Select_Default, W_SquadList_HUD_SquadItem_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD_Squad_Item, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_SquadList_HUD_SquadItem_C.SQCoreStateSquadItemWidget.SQCoreStateSquadListWidget.SQCoreStateWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2e0, Size: 1]
	SizeBox* SQsquare;//[Offset: 0x2e8, Size: 1]
	Border* SquadColorBorder;//[Offset: 0x2f0, Size: 1]
	GridPanel* SquadFT_Bravo_Grid;//[Offset: 0x2f8, Size: 1]
	GridPanel* SquadFT_Charlie_Grid;//[Offset: 0x300, Size: 1]
	GridPanel* SquadMainGrid;//[Offset: 0x308, Size: 1]
	TextBlock* TB_SquadID;//[Offset: 0x310, Size: 1]
	TextBlock* TBSquadName;//[Offset: 0x318, Size: 1]
	SQHUD* REF HUD;//[Offset: 0x320, Size: 1]
	W_SquadList_HUD_Player_C*[] Squad Player Widgets;//[Offset: 0x328, Size: 1]
	MulticastInlineDelegateProperty OnSquadValid;//[Size: 1]
	MulticastInlineDelegateProperty OnSquadInvalid;//[Size: 1]
	MulticastInlineDelegateProperty OnSelfInSquadChanged;//[Size: 1]
	W_SquadList_HUD_C* ParentSquadList;//[Offset: 0x368, Size: 1]
	void GetParentSquadList(out W_SquadList_HUD_C* AsW Squad List HUD, bool CallFunc_IsValid_ReturnValue, PanelWidget* CallFunc_GetParent_ReturnValue, Object* CallFunc_GetOuterObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Object* CallFunc_GetOuterObject_ReturnValue, W_SquadList_HUD_C* K2Node_DynamicCast_AsW_Squad_List_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	enum Get_SquadFT_Charlie_Grid_Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_HasAnyChildren_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	enum Get_SquadFT_Bravo_Grid_Visibility(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_HasAnyChildren_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void CheckForSelf(out bool found, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, PanelWidget*[] K2Node_MakeArray_Array, PanelWidget* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, SQPlayerController* CallFunc_GetCachedSQPlayerController_ReturnValue, int Temp_int_Variable, Widget* CallFunc_GetChildAt_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQCoreStateSquadMemberWidget* K2Node_DynamicCast_AsSQCore_State_Squad_Member_Widget, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	PanelWidget* GetMemberRoot(int FireTeamIndex, int Temp_int_Variable, GridPanel* K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnSquadNameChanged();// 0x1d69c50
	void OnSquadIdChanged();// 0x1d69c50
	void OnIsSelfInSquadChanged();// 0x1d69c50
	void OnMemberNumChanged();// 0x1d69c50
	void OnMaxMembersChanged();// 0x1d69c50
	void OnLeaderNameChanged();// 0x1d69c50
	void SquadMemberStatusChange();// 0x1d69c50
	void ExecuteUbergraph_W_SquadList_HUD_SquadItem(int EntryPoint, W_SquadList_HUD_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_Variable, int CallFunc_Len_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FString CallFunc_Mid_ReturnValue, W_SquadList_HUD_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD, FString CallFunc_LeftChop_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue, W_SquadList_HUD_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD, bool CallFunc_IsValid_ReturnValue, W_SquadList_HUD_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD, bool CallFunc_IsValid_ReturnValue, W_SquadList_HUD_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD, bool CallFunc_IsValid_ReturnValue, W_SquadList_HUD_C* CallFunc_GetParentSquadList_AsW_Squad_List_HUD, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void OnSelfInSquadChanged__DelegateSignature(bool IsSelfInSquad);// 0x1d69c50
	void OnSquadInvalid__DelegateSignature();// 0x1d69c50
	void OnSquadValid__DelegateSignature();// 0x1d69c50

--------------------------------
Class: TravelQueueWidgetSmall_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* OpenClose;//[Offset: 0x268, Size: 1]
	TextBlock* TB_Position;//[Offset: 0x270, Size: 1]
	bool Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x278, Size: 1]
	int Secs to Join;//[Offset: 0x27c, Size: 1]
	MainMenuScreen_C* REF Menu;//[Offset: 0x280, Size: 1]
	BlueprintSessionResult Queued Session;//[Offset: 0x288, Size: 1]
	bool Can Toggle Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x390, Size: 1]
	FString Marquee String;//[Offset: 0x398, Size: 1]
	bool was hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3a8, Size: 1]
	TimerHandle Count down handle;//[Offset: 0x3b0, Size: 1]
	FText Position;//[Offset: 0x3b8, Size: 1]
	FText Status;//[Offset: 0x3d0, Size: 1]
	FText Queue Details;//[Offset: 0x3e8, Size: 1]
	SQJoinBeaconClient* Current Queue;//[Offset: 0x400, Size: 1]
	SQGameInstance* Game Instance;//[Offset: 0x408, Size: 1]
	BlueprintSessionResult Pending Server;//[Offset: 0x410, Size: 1]
	enum Bind Visibility via bToggle(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	FText Bind Text Detailed Queue 2(bool CallFunc_IsValid_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Max_ReturnValue, int CallFunc_Min_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText Bind Text Detailed Queue 1(bool CallFunc_IsValid_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, int CallFunc_Subtract_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText Bind Text Countdown(FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	FText Bind Text Position(FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool Temp_bool_Variable, FText K2Node_Select_Default);// 0x1d69c50
	void Get Queue(out SQJoinBeaconClient* JoinQueueClient, GameInstance* CallFunc_GetGameInstance_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Marquee();// 0x1d69c50
	void Construct();// 0x1d69c50
	void Check Queue();// 0x1d69c50
	void ExecuteUbergraph_TravelQueueWidgetSmall(int EntryPoint, int CallFunc_Len_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, FString CallFunc_RightChop_ReturnValue, bool CallFunc_IsHovered_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue, FString CallFunc_Left_ReturnValue, int CallFunc_Len_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, SQJoinBeaconClient* CallFunc_Get_Queue_JoinQueueClient, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_AmmoBagCounter_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x268, Size: 1]
	Overlay* H_Parent;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	TextBlock* TB_AmmoAmount;//[Offset: 0x280, Size: 1]
	SQDeployableAmmoBag* ammobag;//[Offset: 0x288, Size: 1]
	BaseRadialMenu_C* BaseRadialMenu;//[Offset: 0x290, Size: 1]
	void Hide Widget();// 0x1d69c50
	void ShowAmmoBag(SQDeployableAmmoBag* ammobag);// 0x1d69c50
	void HideAmmoBag();// 0x1d69c50
	void UpdateAmmoBag(SQDeployableAmmoBag* ammobag);// 0x1d69c50
	void BindToRadialMenu(BaseRadialMenu_C* BaseRadial);// 0x1d69c50
	void ExecuteUbergraph_UMG_AmmoBagCounter(int EntryPoint, bool CallFunc_IsValid_ReturnValue, SQDeployableAmmoBag* K2Node_CustomEvent_AmmoBag, SQDeployableAmmoBag* K2Node_CustomEvent_AmmoBag, FText CallFunc_Conv_FloatToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, BaseRadialMenu_C* K2Node_CustomEvent_BaseRadial, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_PostRecovery_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BleedAnimationOff;//[Offset: 0x268, Size: 1]
	WidgetAnimation* BleedAnimation;//[Offset: 0x270, Size: 1]
	CanvasPanel* CanvasPanel;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	Image* Image;//[Offset: 0x288, Size: 1]
	void Update();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_PostRecovery(int EntryPoint, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_SeatProgress_C.SQSeatProgressWidget.SQProgressWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x298, Size: 1]
	CanvasPanel* CanvasPanel_Main;//[Offset: 0x2a0, Size: 1]
	UMG_VehicleAmmoExtended_C* UMG_VehicleAmmoExtended;//[Offset: 0x2a8, Size: 1]
	enum Desired Visibility;//[Offset: 0x2b0, Size: 1]
	BaseRadialMenu_C* Vehicle Radial;//[Offset: 0x2b8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2c0, Size: 1]
	TimerHandle UpdateFTextTimerHandle;//[Offset: 0x2c8, Size: 1]
	RadialCenterVehicle_C* RadialCenterVehicle;//[Offset: 0x2d0, Size: 1]
	float ValidRadialModelEnteringDuration;//[Offset: 0x2d8, Size: 1]
	MulticastInlineDelegateProperty ShowedSeatProgress;//[Size: 1]
	MulticastInlineDelegateProperty ClosedSeatProgress;//[Size: 1]
	void Close Radial Menu(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, BaseRadialMenu_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, BaseRadialMenu_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Visibility(bool Force, enum Selection, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Create_Radial_Success, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Create Radial(out bool Success, class BP_RadialMenuModel_C L Model, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, RadialCenterVehicle_C* K2Node_DynamicCast_AsRadial_Center_Vehicle, bool K2Node_DynamicCast_bSuccess, BPComponent_RadialModel_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_CanOpenRadialMenu_CanOpenRadialMenu, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* CallFunc_Get_Radial_Menu_Radial_Menu, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void BPOnTimerStarted();// 0x1d69c50
	void BPOnTimerCanceled();// 0x1d69c50
	void CloseProgressWidget();// 0x1d69c50
	void BPOnShowVehicleInventory();// 0x1d69c50
	void BPOnTimerReached();// 0x1d69c50
	void BPOnTimerProgress(float RemainingPct);// 0x1d69c50
	void BPOnTimerPaused();// 0x1d69c50
	void BPOnTimerResumed();// 0x1d69c50
	void ExecuteUbergraph_UMG_SeatProgress(int EntryPoint, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float K2Node_Event_RemainingPct, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void ClosedSeatProgress__DelegateSignature();// 0x1d69c50
	void ShowedSeatProgress__DelegateSignature();// 0x1d69c50

--------------------------------
Class: RadialCenterVehicle_C.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x328, Size: 1]
	Image* bigbackground;//[Offset: 0x330, Size: 1]
	TextBlock* EnterExitText;//[Offset: 0x338, Size: 1]
	Image* Icon;//[Offset: 0x340, Size: 1]
	Image* Image;//[Offset: 0x348, Size: 1]
	Image* smallcirclebackground;//[Offset: 0x350, Size: 1]
	Image* SupplyTimer;//[Offset: 0x358, Size: 1]
	TextBlock* TextCenter;//[Offset: 0x360, Size: 1]
	WidgetSwitcher* WidgetSwitcher_Entry_Supply;//[Offset: 0x368, Size: 1]
	BaseRadialMenu_C* OwnerRadialMenu;//[Offset: 0x370, Size: 1]
	BP_RadialItemModel_C* RelatedActionModel;//[Offset: 0x378, Size: 1]
	bool Hovered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x380, Size: 1]
	FText Ammo Text;//[Offset: 0x388, Size: 1]
	SQVehicle* Vehicle;//[Offset: 0x3a0, Size: 1]
	UMG_SeatProgress_C* ParentProgressBar;//[Offset: 0x3a8, Size: 1]
	Comp_ResourceControl_C* Resource Supply Controller;//[Offset: 0x3b0, Size: 1]
	MaterialInstanceDynamic* MI_Timer;//[Offset: 0x3b8, Size: 1]
	void HelicopterAltitudeCheck(out bool AltitudeValid, BP_Generic_Helicopter_C* K2Node_DynamicCast_AsBP_Generic_Helicopter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void Is Soldier Alive(out bool Alive, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Get Widget Text(SQRadialButton* Button, out FText DisplayText, MarkerRadialEntry_C* K2Node_DynamicCast_AsMarker_Radial_Entry, bool K2Node_DynamicCast_bSuccess, IconRadialGotoEntry_C* K2Node_DynamicCast_AsIcon_Radial_Goto_Entry, bool K2Node_DynamicCast_bSuccess, BP_PlaceMarkerActionModel_C* K2Node_DynamicCast_AsBP_Place_Marker_Action_Model, bool K2Node_DynamicCast_bSuccess, BP_GotoMenuActionModel_C* K2Node_DynamicCast_AsBP_Goto_Menu_Action_Model, bool K2Node_DynamicCast_bSuccess, RadialItem_Deployable_C* K2Node_DynamicCast_AsRadial_Item_Deployable, bool K2Node_DynamicCast_bSuccess, IconRadialEntry_C* K2Node_DynamicCast_AsIcon_Radial_Entry, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	FText Get Action Text(SQRadialButton* CallFunc_GetHoverWidget_HoverWidget, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Get_Widget_Text_DisplayText);// 0x1d69c50
	void Validate FOB(out bool Valid, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Validate_Resource_Point_Valid, SQForwardBase* CallFunc_Validate_Resource_Point_Fob, Actor* CallFunc_Validate_Resource_Point_CapZone);// 0x1d69c50
	void Validate Transaction(out bool Valid, out bool Con Valid, out bool Ammo Valid, out bool Is Loading, out bool Zone has Points, SQRadialButton* CallFunc_GetHoverWidget_HoverWidget, W_SupplyRadialEntry_C* K2Node_DynamicCast_AsW_Supply_Radial_Entry, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, BP_RadialActionModel_ControlSupplies_C* K2Node_DynamicCast_AsBP_Radial_Action_Model_Control_Supplies, bool K2Node_DynamicCast_bSuccess, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Validate_Transaction_Valid_Transaction, bool CallFunc_Validate_Transaction_Has_Con_Weapon, bool CallFunc_Validate_Transaction_Has_Ammo_Weapon, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points);// 0x1d69c50
	void Is Action Ammo(out bool Is Ammo Action, SQRadialButton* CallFunc_GetHoverWidget_HoverWidget, W_SupplyRadialEntry_C* K2Node_DynamicCast_AsW_Supply_Radial_Entry, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, BP_RadialActionModel_ControlSupplies_C* K2Node_DynamicCast_AsBP_Radial_Action_Model_Control_Supplies, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	bool Vehicle Denied(SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, BP_RadialActionModel_ControlSupplies_C* K2Node_DynamicCast_AsBP_Radial_Action_Model_Control_Supplies, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Vehicle Speed Check(out bool Speed Is Valid, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);// 0x1d69c50
	FText Get_Text_SupplyStatus(bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, FText Temp_text_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_Is_Soldier_Alive_Alive, bool CallFunc_HelicopterAltitudeCheck_AltitudeValid, FText CallFunc_Get_Action_Text_ReturnValue, bool CallFunc_Vehicle_Speed_Check_Speed_Is_Valid, bool CallFunc_Validate_Transaction_Valid, bool CallFunc_Validate_Transaction_Con_Valid, bool CallFunc_Validate_Transaction_Ammo_Valid, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, FText K2Node_Select_Default, FText K2Node_Select_Default, bool CallFunc_Vehicle_Denied_ReturnValue, FText K2Node_Select_Default, bool CallFunc_Is_Action_Ammo_Is_Ammo_Action, bool CallFunc_Validate_Transaction_Valid, bool CallFunc_Validate_Transaction_Con_Valid, bool CallFunc_Validate_Transaction_Ammo_Valid, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, bool CallFunc_Validate_FOB_Valid, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void SetTimerActivation(bool Active, bool CallFunc_Not_PreBool_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void SetTimerProgress(float RemainingTimePct, float CallFunc_Subtract_FloatFloat_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue);// 0x1d69c50
	LinearColor Get_Background_ColorAndOpacity(LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void OnHoverBegin();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void OnHoverEnd();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_RadialCenterVehicle(int EntryPoint, bool CallFunc_IsValid_ReturnValue, float CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, FName CallFunc_MakeLiteralName_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, FName CallFunc_GetActionKeyName_Name, FText CallFunc_Conv_NameToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, bool CallFunc_IsValid_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, UMG_SeatProgress_C* K2Node_DynamicCast_AsUMG_Seat_Progress, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Comp_ResourceControl_C* CallFunc_GetComponentByClass_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQRadialButton* CallFunc_GetHoverWidget_HoverWidget, W_SupplyRadialEntry_C* K2Node_DynamicCast_AsW_Supply_Radial_Entry, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_Generic_Helicopter_C.SQHelicopter2.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x900, Size: 1]
	SceneComponent* WaterDamagePoint;//[Offset: 0x908, Size: 1]
	BP_RotorWashSender_C* BP_RotorWashSender;//[Offset: 0x910, Size: 1]
	SQArmorMeshComponent* CollisionArmorMesh;//[Offset: 0x918, Size: 1]
	DecalComponent* Warning Decal 04;//[Offset: 0x920, Size: 1]
	DecalComponent* Warning Decal 03;//[Offset: 0x928, Size: 1]
	DecalComponent* Warning Decal 02;//[Offset: 0x930, Size: 1]
	DecalComponent* Warning Decal 01;//[Offset: 0x938, Size: 1]
	AudioComponent* WarningAudio;//[Offset: 0x940, Size: 1]
	PointLightComponent* PointLight3;//[Offset: 0x948, Size: 1]
	PointLightComponent* PointLight2;//[Offset: 0x950, Size: 1]
	PointLightComponent* PointLight1;//[Offset: 0x958, Size: 1]
	PointLightComponent* PointLight;//[Offset: 0x960, Size: 1]
	SceneComponent* Warning Parent;//[Offset: 0x968, Size: 1]
	StaticMeshComponent* LandingMarker;//[Offset: 0x970, Size: 1]
	CameraComponent* LandingCamera;//[Offset: 0x978, Size: 1]
	SQVehicleBurningComponent* VehicleBurning;//[Offset: 0x980, Size: 1]
	BPComponent_RadialModel_C* BPComponent_RadialModel;//[Offset: 0x988, Size: 1]
	ParticleSystemComponent* GroundEffect;//[Offset: 0x990, Size: 1]
	SQVehicleExitPointComponent* SQVehicleExitPoint1;//[Offset: 0x998, Size: 1]
	SQVehicleExitPointComponent* SQVehicleExitPoint;//[Offset: 0x9a0, Size: 1]
	CameraComponent* PilotCamera;//[Offset: 0x9a8, Size: 1]
	SpringArmComponent* PilotSpringArm;//[Offset: 0x9b0, Size: 1]
	ArrowComponent* LandingArrowStabilizer;//[Offset: 0x9b8, Size: 1]
	ArrowComponent* LandingArrowBottomRight;//[Offset: 0x9c0, Size: 1]
	ArrowComponent* LandingArrowTopRight;//[Offset: 0x9c8, Size: 1]
	ArrowComponent* LandingArrowBottomLeft;//[Offset: 0x9d0, Size: 1]
	ArrowComponent* LandingArrowTopLeft;//[Offset: 0x9d8, Size: 1]
	byte Warning_Light_Animation__Direction_BED4FDDF4B03AF41E9D22382105F3A83;//[Offset: 0x9e0, Size: 1]
	TimelineComponent* Warning Light Animation;//[Offset: 0x9e8, Size: 1]
	float Timeline_2_Default_Power_079618E342F7064103BFCC9F05CBEF12;//[Offset: 0x9f0, Size: 1]
	byte Timeline_2__Direction_079618E342F7064103BFCC9F05CBEF12;//[Offset: 0x9f4, Size: 1]
	TimelineComponent* Timeline;//[Offset: 0x9f8, Size: 1]
	bool Physics-IsLanded?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa00, Size: 1]
	float Physics-DefaultThrust;//[Offset: 0xa04, Size: 1]
	bool Physics-IsReadyToLand?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa08, Size: 1]
	float Physics-StrafePassiveInterp;//[Offset: 0xa0c, Size: 1]
	float Physics-BaseDeltaSpeed;//[Offset: 0xa10, Size: 1]
	float Physics-AntiThrustPower;//[Offset: 0xa14, Size: 1]
	float Physics-AddVelocityFromRotation;//[Offset: 0xa18, Size: 1]
	float Physics-StrafeOnRollInterp;//[Offset: 0xa1c, Size: 1]
	float Physics-ThrustPower;//[Offset: 0xa20, Size: 1]
	float Physics-PitchSpeedMultiplier;//[Offset: 0xa24, Size: 1]
	float Physics-BaseMaxFlySpeed;//[Offset: 0xa28, Size: 1]
	float Physics-ReservedAcceleration;//[Offset: 0xa2c, Size: 1]
	float Physics-AccelerationByPitchCutoff;//[Offset: 0xa30, Size: 1]
	float Physics-MaxFlySpeed;//[Offset: 0xa34, Size: 1]
	float Physics-CollisionMinSpeed;//[Offset: 0xa38, Size: 1]
	float Physics-MaxDeltaSpeed;//[Offset: 0xa3c, Size: 1]
	float RotorAccelerationScale;//[Offset: 0xa40, Size: 1]
	float Game-DeltaSeconds;//[Offset: 0xa44, Size: 1]
	Controller* Controller-ServerController;//[Offset: 0xa48, Size: 1]
	bool Controller-IsPossessed?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa50, Size: 1]
	PlayerController* Controller-PlayerController;//[Offset: 0xa58, Size: 1]
	Rotator Controller-CurrentRotation;//[Offset: 0xa60, Size: 1]
	Rotator Controller-PreviousRotation;//[Offset: 0xa6c, Size: 1]
	bool Game-BegunPlay?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa78, Size: 1]
	float LandingDistance;//[Offset: 0xa7c, Size: 1]
	float MaxVelocityToLand;//[Offset: 0xa80, Size: 1]
	bool Collision-GotCollisionHit?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa84, Size: 1]
	float StrafePassive;//[Offset: 0xa88, Size: 1]
	float Twitchiness;//[Offset: 0xa8c, Size: 1]
	float StrafeOnRoll;//[Offset: 0xa90, Size: 1]
	float StrafeOnRollSpeed;//[Offset: 0xa94, Size: 1]
	float RotorLiftMin;//[Offset: 0xa98, Size: 1]
	float RotorLiftMax;//[Offset: 0xa9c, Size: 1]
	float Gravity;//[Offset: 0xaa0, Size: 1]
	float AirFriction;//[Offset: 0xaa4, Size: 1]
	float Friction;//[Offset: 0xaa8, Size: 1]
	CurveFloat* FrictionByPitch;//[Offset: 0xab0, Size: 1]
	CurveFloat* BrakeByPitch;//[Offset: 0xab8, Size: 1]
	CurveVector* AccelerationInterpolationSpeed;//[Offset: 0xac0, Size: 1]
	CurveVector* UpDirectionByPitch;//[Offset: 0xac8, Size: 1]
	CurveFloat* ForwardDirectionByPitch;//[Offset: 0xad0, Size: 1]
	CurveFloat* RightDirectionByRoll;//[Offset: 0xad8, Size: 1]
	CurveVector* TurnByRollOnSpeed;//[Offset: 0xae0, Size: 1]
	float MaximumSpeed;//[Offset: 0xae8, Size: 1]
	float AverageSpeedPercent;//[Offset: 0xaec, Size: 1]
	float RotorStrength;//[Offset: 0xaf0, Size: 1]
	float RotorStrengthMultiplier;//[Offset: 0xaf4, Size: 1]
	float CollisionMinSpeed;//[Offset: 0xaf8, Size: 1]
	float FrictionMultiplier;//[Offset: 0xafc, Size: 1]
	bool Debug-IsDebugging?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb00, Size: 1]
	float YawInputInterpt;//[Offset: 0xb04, Size: 1]
	float YawResistenceFromPitchStart;//[Offset: 0xb08, Size: 1]
	float YawResistenceFromPitchMax;//[Offset: 0xb0c, Size: 1]
	float YawResistenceFromVelocityMinSpeed;//[Offset: 0xb10, Size: 1]
	float YawResistenceFromVelocityInputMul;//[Offset: 0xb14, Size: 1]
	float BrakeByYawMinSpeed;//[Offset: 0xb18, Size: 1]
	float BrakeByYawSpeedCutOff;//[Offset: 0xb1c, Size: 1]
	bool IsBrakeByYawInputSmooth?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb20, Size: 1]
	float RollDumpSpeed;//[Offset: 0xb24, Size: 1]
	float RollDumpFactor;//[Offset: 0xb28, Size: 1]
	float RollPushTime;//[Offset: 0xb2c, Size: 1]
	bool IsRollStabilizationEnabled?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb30, Size: 1]
	CurveFloat* RollStabilization;//[Offset: 0xb38, Size: 1]
	bool IsPitchStabilizationEnabled?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb40, Size: 1]
	float Input-Pitch;//[Offset: 0xb44, Size: 1]
	float Input-PitchSensitivityScale;//[Offset: 0xb48, Size: 1]
	float Input-PitchBounce;//[Offset: 0xb4c, Size: 1]
	float Input-PitchAxisValue;//[Offset: 0xb50, Size: 1]
	float Input-PitchBounceSecond;//[Offset: 0xb54, Size: 1]
	float Input-PitchRemaining;//[Offset: 0xb58, Size: 1]
	float Input-Yaw;//[Offset: 0xb5c, Size: 1]
	float Input-YawAxisValue;//[Offset: 0xb60, Size: 1]
	float Input-YawResistenceFromVelocity;//[Offset: 0xb64, Size: 1]
	float Input-YawRemaining;//[Offset: 0xb68, Size: 1]
	float Input-Roll;//[Offset: 0xb6c, Size: 1]
	float Input-RollPushValue;//[Offset: 0xb70, Size: 1]
	float Input-RollSensitivityScale;//[Offset: 0xb74, Size: 1]
	float Input-RolltoYawInterp;//[Offset: 0xb78, Size: 1]
	float Input-RollAxisValue;//[Offset: 0xb7c, Size: 1]
	float Input-RollRemaining;//[Offset: 0xb80, Size: 1]
	float Input-BrakeByYawVelocityCut;//[Offset: 0xb84, Size: 1]
	float Input-BrakeByYawInputMultiplier;//[Offset: 0xb88, Size: 1]
	float Input-AccelerationInputTime;//[Offset: 0xb8c, Size: 1]
	bool Input-IsAccelerating?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb90, Size: 1]
	bool Input-IsDownPressed?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb91, Size: 1]
	bool Input-IsYawBraking?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb92, Size: 1]
	Vector Velocity-CurrentWorldOffset;//[Offset: 0xb94, Size: 1]
	Vector Velocity-CurrentLocalOffset;//[Offset: 0xba0, Size: 1]
	Vector Velocity-PreviousWorldOffset;//[Offset: 0xbac, Size: 1]
	Vector Velocity-PreviousLocalOffset;//[Offset: 0xbb8, Size: 1]
	TimerHandle Timer-CheckIfLiftOff;//[Offset: 0xbc8, Size: 1]
	float Input-RawInputRudder;//[Offset: 0xbd0, Size: 1]
	float RollInputInterpt;//[Offset: 0xbd4, Size: 1]
	float PitchInputInterpt;//[Offset: 0xbd8, Size: 1]
	CurveFloat* PitchStabilization;//[Offset: 0xbe0, Size: 1]
	float RollPushStrength;//[Offset: 0xbe8, Size: 1]
	float RollSensitivityScaleLow;//[Offset: 0xbec, Size: 1]
	float RollSensitivityScaleMiddle;//[Offset: 0xbf0, Size: 1]
	float RollSensitivityScaleMax;//[Offset: 0xbf4, Size: 1]
	CurveFloat* RollInputScale;//[Offset: 0xbf8, Size: 1]
	float PitchSensitivityScaleLow;//[Offset: 0xc00, Size: 1]
	float PitchSensitivityScaleMiddle;//[Offset: 0xc04, Size: 1]
	float PitchSensitivityScaleMax;//[Offset: 0xc08, Size: 1]
	CurveFloat* PitchInputScale;//[Offset: 0xc10, Size: 1]
	float YawSensitivity (user);//[Offset: 0xc18, Size: 1]
	float YawSensitivity;//[Offset: 0xc1c, Size: 1]
	float YawSpeed;//[Offset: 0xc20, Size: 1]
	float RollSensitivity (user);//[Offset: 0xc24, Size: 1]
	float RollSensitivity;//[Offset: 0xc28, Size: 1]
	float RollAxisInputClamp;//[Offset: 0xc2c, Size: 1]
	float PitchSensitivity (user);//[Offset: 0xc30, Size: 1]
	float PitchSensitivity;//[Offset: 0xc34, Size: 1]
	float PitchAxisInputClamp;//[Offset: 0xc38, Size: 1]
	bool IsAddingYawWhenRolling?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc3c, Size: 1]
	float PitchToYawAngleThreshold;//[Offset: 0xc40, Size: 1]
	float PitchToYawScale;//[Offset: 0xc44, Size: 1]
	int MainRotorMaxRPM;//[Offset: 0xc48, Size: 1]
	int TailRotorMaxRPM;//[Offset: 0xc4c, Size: 1]
	bool MainRotorCCW;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc50, Size: 1]
	bool TailRotorCCW;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc51, Size: 1]
	float BladesBlurMaxRPM;//[Offset: 0xc54, Size: 1]
	float BladesBlurMinRPM;//[Offset: 0xc58, Size: 1]
	float GroundEffectMaxDistanceMeters;//[Offset: 0xc5c, Size: 1]
	CurveFloat* VerticalStabilizerAngleMultiplier;//[Offset: 0xc60, Size: 1]
	CurveVector* StabilizerCorrectionBySpeed;//[Offset: 0xc68, Size: 1]
	Rotator Pilot-InitialCameraRotation;//[Offset: 0xc70, Size: 1]
	SQPhysicalMaterial* Effects-PrevPhysMat;//[Offset: 0xc80, Size: 1]
	CurveFloat* HorizontalStabilizerAngleMultiplier;//[Offset: 0xc88, Size: 1]
	Rotator Pilot-ZoomCameraRotation;//[Offset: 0xc90, Size: 1]
	float Instruments-AltitudeMeters;//[Offset: 0xc9c, Size: 1]
	Transform Debug-ServerTransformLocation;//[Offset: 0xca0, Size: 1]
	float Physics-MaxAltitude;//[Offset: 0xcd0, Size: 1]
	Rotator Target Landing Camera Rotation;//[Offset: 0xcd4, Size: 1]
	bool Warning On;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xce0, Size: 1]
	float Physics-MainRotorRotationalForce;//[Offset: 0xce4, Size: 1]
	float Physics-PreventTailRotorLossEffectTime;//[Offset: 0xce8, Size: 1]
	bool Engine-IsActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcec, Size: 1]
	CurveFloat* RotorEfficiencyByAOA;//[Offset: 0xcf0, Size: 1]
	CurveFloat* RotorEfficiencyByAirspeed;//[Offset: 0xcf8, Size: 1]
	float RotorEfficiencyMax;//[Offset: 0xd00, Size: 1]
	float MaxTailRotorLossSpinForce;//[Offset: 0xd04, Size: 1]
	float Physics-FlipOverSpeedTailLoss;//[Offset: 0xd08, Size: 1]
	float HullWarningThreshold;//[Offset: 0xd0c, Size: 1]
	float EngineWarningThreshold;//[Offset: 0xd10, Size: 1]
	float MainRotorWarningThreshold;//[Offset: 0xd14, Size: 1]
	float TailRotorWarningThreshold;//[Offset: 0xd18, Size: 1]
	bool DebugMovement;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd1c, Size: 1]
	Vector Debug True Velocity;//[Offset: 0xd20, Size: 1]
	Vector Debug Previous Frame True Velocity;//[Offset: 0xd2c, Size: 1]
	Vector Debug Previous Frame location;//[Offset: 0xd38, Size: 1]
	Vector Debug True Acceleration;//[Offset: 0xd44, Size: 1]
	Vector Debug Previous Frame Acceleration;//[Offset: 0xd50, Size: 1]
	float Input-RawYaw;//[Offset: 0xd5c, Size: 1]
	float Input-RawRoll;//[Offset: 0xd60, Size: 1]
	float Input-RawPitch;//[Offset: 0xd64, Size: 1]
	float Input-RawAcceleration;//[Offset: 0xd68, Size: 1]
	float AutoRotationBuffer;//[Offset: 0xd6c, Size: 1]
	float AutoRotationEnergyDrainFactor;//[Offset: 0xd70, Size: 1]
	float EngineDamageMinThrust;//[Offset: 0xd74, Size: 1]
	bool StabilizerDebug;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd78, Size: 1]
	float YawInputRPMThreshold;//[Offset: 0xd7c, Size: 1]
	bool bIsJoy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd80, Size: 1]
	float Collective;//[Offset: 0xd84, Size: 1]
	float JoyPitch;//[Offset: 0xd88, Size: 1]
	float JoyRoll;//[Offset: 0xd8c, Size: 1]
	float JoyYaw;//[Offset: 0xd90, Size: 1]
	bool bIsLockFreeLook;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd94, Size: 1]
	float Last FreeLookTime;//[Offset: 0xd98, Size: 1]
	float LookRight;//[Offset: 0xd9c, Size: 1]
	float LookUp;//[Offset: 0xda0, Size: 1]
	Vector2D LookState;//[Offset: 0xda4, Size: 1]
	bool IsCamZoom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xdac, Size: 1]
	bool Is3pCam;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xdad, Size: 1]
	float MousePitch;//[Offset: 0xdb0, Size: 1]
	float MouseRoll;//[Offset: 0xdb4, Size: 1]
	float KeyPitch;//[Offset: 0xdb8, Size: 1]
	float KeyRoll;//[Offset: 0xdbc, Size: 1]
	float Rotor Wash Radius;//[Offset: 0xdc0, Size: 1]
	float DistanceToCullRotorWash_Meters;//[Offset: 0xdc4, Size: 1]
	float FatalWaterImpactVelocity;//[Offset: 0xdc8, Size: 1]
	float WaterDamageInterval;//[Offset: 0xdcc, Size: 1]
	float WaterMaxDepth;//[Offset: 0xdd0, Size: 1]
	float MinimumWaterDamage;//[Offset: 0xdd4, Size: 1]
	TimerHandle WaterDamageHandle;//[Offset: 0xdd8, Size: 1]
	Vector NewVar;//[Offset: 0xde0, Size: 1]
	void Is Using Landing Camera(out bool Using Landing Camera, bool CallFunc_IsActive_ReturnValue);// 0x1d69c50
	void Get UI Tint(out LinearColor Color);// 0x1d69c50
	void GetKnots(out float Knots, Vector CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void HAT Look To(float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool CallFunc_GetIsUsingFreeLook_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Vector2D CallFunc_GetPitchLimits_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Abs_ReturnValue, Vector2D CallFunc_GetYawLimits_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Abs_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Multiply_Vector2DVector2D_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult);// 0x1d69c50
	void GetRotorEfficiency(out float Efficiency, bool CallFunc_IsValid_ReturnValue, Transform CallFunc_K2_GetComponentToWorld_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, Vector CallFunc_InverseTransformDirection_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_Normal_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	float GetThrottle(float CallFunc_GetEngineThrust_EngineThrust);// 0x1d69c50
	void GetVisualCollective(out float Collectives);// 0x1d69c50
	float GetMainRotorThrust(bool Temp_bool_Variable, float Temp_float_Variable, float CallFunc_GetRotorEfficiency_Efficiency, bool CallFunc_IsDestroyed_ReturnValue, bool CallFunc_IsHealthy_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_GetEngineThrust_EngineThrust, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	float GetTailRotorThrust(float CallFunc_GetEngineThrust_EngineThrust, bool CallFunc_IsHealthy_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void Set UI Enabled(bool Enable UI);// 0x1d69c50
	void DoRotors(float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_GetTimeSeconds_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_DegreesToRadians_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsDestroyed_ReturnValue, Rotator CallFunc_SlerpToUpSideDown_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_MakeLiteralFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_SelectFloat_ReturnValue);// 0x1d69c50
	void OnRep_Warning On();// 0x1d69c50
	void DoRotationFromRoll(float CallFunc_GetRollNormalized_NewParam, Vector CallFunc_GetVectorValue_ReturnValue, float CallFunc_GetForwardSpeed_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z);// 0x1d69c50
	void DebugVectorToString(Vector Vector, int digits, out FString String, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, FText CallFunc_Conv_FloatToText_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue);// 0x1d69c50
	void Manage Landing Camera(Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, Rotator CallFunc_MakeRotator_ReturnValue, bool CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera, HitResult CallFunc_K2_SetWorldRotation_SweepHitResult);// 0x1d69c50
	void DrawDebugLocation(Rotator CallFunc_K2_GetComponentRotation_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Transform CallFunc_MakeTransform_ReturnValue, Vector CallFunc_BreakTransform_Location, Rotator CallFunc_BreakTransform_Rotation, Vector CallFunc_BreakTransform_Scale, FString CallFunc_Conv_VectorToString_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);// 0x1d69c50
	void GetEngineThrust(out float EngineThrust, bool CallFunc_IsDestroyed_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_GetNormalizedHealth_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void CheckPhysics(bool CallFunc_IsHealthy_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsHealthy_ReturnValue, bool CallFunc_IsPhysicsEnabled_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasAuthority_ReturnValue);// 0x1d69c50
	bool IsLanded();// 0x1d69c50
	void DoStabilizers(Vector VelocityXY, Vector CallFunc_K2_GetComponentLocation_ReturnValue, const Vector CallFunc_GetCurrentVelocity_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_Normal_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, const Vector CallFunc_GetCurrentVelocity_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Rotator CallFunc_K2_GetComponentRotation_ReturnValue, Rotator CallFunc_NegateRotator_ReturnValue, Vector CallFunc_GreaterGreater_VectorRotator_ReturnValue, Rotator CallFunc_MakeRotFromX_ReturnValue, float CallFunc_VSizeXY_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Multiply_FloatFloat_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, Vector CallFunc_GetVectorValue_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FInterpTo_Constant_ReturnValue);// 0x1d69c50
	void PilotZoom(float InputPin, float CallFunc_FClamp_ReturnValue, float CallFunc_Lerp_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, bool CallFunc_GetIsUsingFreeLook_ReturnValue, Rotator CallFunc_ComposeRotators_ReturnValue, Rotator CallFunc_RLerp_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, Rotator CallFunc_RInterpTo_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, float CallFunc_FInterpTo_ReturnValue);// 0x1d69c50
	void GetThrustPower(out float Thrust, bool CallFunc_IsHealthy_ReturnValue, float CallFunc_SelectFloat_ReturnValue);// 0x1d69c50
	void DebugVariablesMap(<FString,FString> Map, Color Color, FString[] CallFunc_Map_Keys_Keys, int Temp_int_Array_Index_Variable, int CallFunc_Array_Length_ReturnValue, FString CallFunc_Array_Get_Item, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int Temp_int_Loop_Counter_Variable, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void GetRotationDiff(out Rotator NewParam, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50
	void DrawDebug(bool Draw, float CallFunc_GetThrustPower_Thrust, float CallFunc_GetForwardSpeed_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, FString CallFunc_Conv_BoolToString_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FString CallFunc_Conv_BoolToString_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, Rotator CallFunc_GetRotationDiff_NewParam, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Conv_RotatorToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Conv_BoolToString_ReturnValue, FString CallFunc_Conv_BoolToString_ReturnValue, FString CallFunc_Conv_VectorToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Conv_RotatorToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, int CallFunc_FTrunc_ReturnValue, const Vector CallFunc_GetCurrentVelocity_ReturnValue, int CallFunc_FTrunc_ReturnValue, FString CallFunc_Conv_VectorToString_ReturnValue, int CallFunc_FTrunc_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, IntVector K2Node_MakeStruct_IntVector, FString CallFunc_Conv_IntVectorToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50
	void SetGroundEffect(out float Height, float HeightCm, PhysicalMaterial* PhysMat, Vector Velocity, float Altitude, float Thrust, SQPhysicalMaterial* K2Node_DynamicCast_AsSQPhysical_Material, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetMainRotorThrust_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, const Vector CallFunc_GetCurrentVelocity_ReturnValue, const Actor*[] Temp_object_Variable, float CallFunc_Divide_FloatFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, HitResult CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult);// 0x1d69c50
	void ResetMovementState(Vector CallFunc_ConsumeMovementInputVector_ReturnValue);// 0x1d69c50
	void ResetState();// 0x1d69c50
	int GetMaxRPM();// 0x1d69c50
	void EnablePhysics(bool bEnable, const Vector CallFunc_GetCurrentRotationalVelocity_ReturnValue, const Vector CallFunc_GetCurrentVelocity_ReturnValue);// 0x1d69c50
	void PolishPitchInput(float Temp_float_Variable, bool Temp_bool_Variable, float CallFunc_GetPitchNormalized_NewParam, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetDistanceFromTheGround_Distance, bool CallFunc_GetDistanceFromTheGround_GotDistance, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void GetDistanceFromTheGround(float TraceSize, out float distance, out bool GotDistance, const Actor*[] Temp_object_Variable, Vector CallFunc_GetForwardVector_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue);// 0x1d69c50
	void PolishRollInput(float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetThrustPower_Thrust, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_GetRollNormalized_NewParam, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float Temp_float_Variable, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool Temp_bool_Variable, float CallFunc_GetDistanceFromTheGround_Distance, bool CallFunc_GetDistanceFromTheGround_GotDistance, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void GetGradualRotationIncrement(out float Roll, out float Pitch, float CallFunc_GetRollNormalized_NewParam, float CallFunc_GetPitchNormalized_NewParam, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void DoRollToYawTransfer(float CallFunc_GetRollNormalized_NewParam, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void DoPushAndBounce(bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void AddRoll(float Roll_, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Add_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50
	void AddPitch(float Pitch, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Add_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50
	void AddYaw(float Yaw, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Add_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50
	void CalcBrakebyYaw(float CallFunc_SelectFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_FClamp_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void CalcYawResistances(float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void GetVelocityLength(out float NewParam, Vector CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue);// 0x1d69c50
	void GetRollNormalized(out float NewParam, Rotator CallFunc_K2_GetComponentRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50
	void GetPitchNormalized(out float NewParam, Rotator CallFunc_K2_GetComponentRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void CanLand(out bool CanLand?, const Actor*[] Temp_object_Variable, const Actor*[] Temp_object_Variable, const Actor*[] Temp_object_Variable, const Actor*[] Temp_object_Variable, bool CallFunc_Not_PreBool_ReturnValue, Vector CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue);// 0x1d69c50
	void CalcCustomVelocity(out Vector Velocity, <FString,FString> DebugVars, float L_YDirection, float L_XDirection, float L_ZDirection, float L_AccelerationValue, float L_RollPercent, float L_RollDirection, float L_PitchNormal, float L_RolllNormal, Vector L_CurrentVector, Transform CallFunc_K2_GetComponentToWorld_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_GetVectorValue_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_FClamp_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_GetPitchNormalized_NewParam, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_GetRollNormalized_NewParam, float CallFunc_Abs_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, Vector CallFunc_GetVectorValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Rotator CallFunc_K2_GetComponentRotation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Rotator CallFunc_NegateRotator_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, float CallFunc_SelectFloat_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_GreaterGreater_VectorRotator_ReturnValue, float CallFunc_GetMainRotorThrust_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, float CallFunc_GetThrustPower_Thrust, float CallFunc_Multiply_FloatFloat_ReturnValue, const Actor*[] Temp_object_Variable, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetMainRotorThrust_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, Vector CallFunc_InverseTransformDirection_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Add_VectorVector_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_FInterpTo_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, float CallFunc_GetFloatValue_ReturnValue);// 0x1d69c50
	void AddAcceleration(bool Temp_bool_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQJoyStickConfig CallFunc_GetJoyConfig_ReturnValue, float CallFunc_CurveType_Out, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float K2Node_Select_Default, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void UserConstructionScript(float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void Timeline_2__FinishedFunc();// 0x1d69c50
	void Timeline_2__UpdateFunc();// 0x1d69c50
	void Warning Light Animation__FinishedFunc();// 0x1d69c50
	void Warning Light Animation__UpdateFunc();// 0x1d69c50
	void Warning Light Animation__LightOff__EventFunc();// 0x1d69c50
	void Warning Light Animation__LightOn__EventFunc();// 0x1d69c50
	void InpActEvt_Helicopter_Recenter_View_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_DropAmmo_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_DropAmmo_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_DropConstruct_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_DropConstruct_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_PickupAmmo_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_PickupAmmo_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_PickupConstruct_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_PickupConstruct_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_ToggleView_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void LandVehicle();// 0x1d69c50
	void MC_SetLandingState(bool NewIsLandedState);// 0x1d69c50
	void CheckLiftOff();// 0x1d69c50
	void StartCheckLiftOff();// 0x1d69c50
	void ROS_UpdateLandingState(bool IsLanded?);// 0x1d69c50
	void HandleInput_Acceleration(float AxisInput);// 0x1d69c50
	void Acceleration_ModifySensitivity();// 0x1d69c50
	void HandleInput_Yaw(float AxisValue);// 0x1d69c50
	void HandleInput_Roll(float AxisValue);// 0x1d69c50
	void HandleInput_Pitch(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterUp_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterRight_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_MoveAileron_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_MoveElevator_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void HandleInput(float DeltaTimeRatio);// 0x1d69c50
	void InpAxisEvt_Helicopter_Collective_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterCyclic_Pitch_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterCyclic_Roll_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterCyclic_Yaw_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterPitchKey_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_Helicopter_Look_Up_Down_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_Helicopter_Look_Right_Left_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_HelicopterRollKey_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_Turn_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceivePossessed(Controller* NewController);// 0x1d69c50
	void ROC_VehiclePosessed();// 0x1d69c50
	void ReceiveUnpossessed(Controller* OldController);// 0x1d69c50
	void MC_VehicleUnpossessed();// 0x1d69c50
	void TurnOnPhysics(bool IgnoreLandingCheck, Vector NewLinearVelocity, Vector NewAngularVelocity);// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void BeginPlay_Landing();// 0x1d69c50
	void CheckIfCanLandVehicle();// 0x1d69c50
	void OnEngineActive(bool bActive);// 0x1d69c50
	void BndEvt__VehicleMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void InpAxisEvt_VehicleZoom_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void TickGroundEffect();// 0x1d69c50
	void EnteredVehicle(SQSoldier* Soldier, SQVehicleSeatComponent* NewSeat);// 0x1d69c50
	void SwitchedSeat(SQSoldier* Soldier, SQVehicleSeatComponent* PreviousSeat, SQVehicleSeatComponent* NewSeat);// 0x1d69c50
	void OnPhysicsReplicated();// 0x1d69c50
	void Toggle Landing Camera(bool Condition);// 0x1d69c50
	void LeftVehicle(SQSoldier* Soldier, SQVehicleSeatComponent* PreviousSeat);// 0x1d69c50
	void Warning Light Anim();// 0x1d69c50
	void ReceiveDestroyed();// 0x1d69c50
	void Start Warning Anim();// 0x1d69c50
	void Stop Warning Anim();// 0x1d69c50
	void On Entered Bounds();// 0x1d69c50
	void On Out of Bounds();// 0x1d69c50
	void Evaluate Warning();// 0x1d69c50
	void Set Landing Camera(bool Active);// 0x1d69c50
	void OnFDMImpact(out const HitResult HitResult, float TimeSlice, out const Vector MoveDelta);// 0x1d69c50
	void UpdateFreeLookSetting();// 0x1d69c50
	void Optimize Sender();// 0x1d69c50
	void ApplyWaterDamage();// 0x1d69c50
	void StartWaterDamage();// 0x1d69c50
	void BndEvt__TailBladesCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void BndEvt__MainBladesCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void EndWaterDamage();// 0x1d69c50
	void ExecuteUbergraph_BP_Generic_Helicopter(int EntryPoint, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_CanLand_CanLand_, bool K2Node_CustomEvent_IsLanded_, bool CallFunc_Not_PreBool_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, float K2Node_CustomEvent_AxisInput, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_CustomEvent_NewIsLandedState, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, float K2Node_CustomEvent_AxisValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float K2Node_CustomEvent_AxisValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, float K2Node_CustomEvent_AxisValue, bool CallFunc_IsLocallyControlled_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetRollNormalized_NewParam, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_InRange_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_GetIsUsingFreeLook_ReturnValue, bool CallFunc_GetIsUsingFreeLook_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsPhysicsEnabled_ReturnValue, bool CallFunc_IsPhysicsEnabled_ReturnValue, bool CallFunc_IsHealthy_ReturnValue, float CallFunc_GetThrustPower_Thrust, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float K2Node_CustomEvent_DeltaTimeRatio, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Key K2Node_InputActionEvent_Key, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQJoyStickConfig CallFunc_GetJoyConfig_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_CurveType_Out, const SQJoyStickConfig CallFunc_GetJoyConfig_ReturnValue, float CallFunc_CurveType_Out, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, const SQJoyStickConfig CallFunc_GetJoyConfig_ReturnValue, float CallFunc_CurveType_Out, bool CallFunc_IsValid_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float Temp_float_Variable, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_IsPhysicsEnabled_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, Vector2D CallFunc_MakeVector2D_ReturnValue, float Temp_float_Variable, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_GetIsUsingFreeLook_ReturnValue, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_IsPhysicsEnabled_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, Key K2Node_InputActionEvent_Key, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, Key Temp_struct_Variable, float CallFunc_Abs_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, float K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, Controller* K2Node_Event_NewController, bool CallFunc_Not_PreBool_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, Controller* K2Node_Event_OldController, bool K2Node_CustomEvent_IgnoreLandingCheck, Vector K2Node_CustomEvent_NewLinearVelocity, Vector K2Node_CustomEvent_NewAngularVelocity, float CallFunc_VSize_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, const enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float K2Node_Event_DeltaSeconds, bool CallFunc_HasAuthority_ReturnValue, const enum Temp_byte_Variable, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool Temp_bool_Variable, float CallFunc_VSize_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, Vector CallFunc_Normal_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_VSize_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Vector CallFunc_CalcCustomVelocity_Velocity, FString CallFunc_Concat_StrStr_ReturnValue, const enum K2Node_Select_Default, bool CallFunc_CanLand_CanLand_, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_CanLand_CanLand_, float CallFunc_GetGradualRotationIncrement_Roll, float CallFunc_GetGradualRotationIncrement_Pitch, bool CallFunc_IsActive_ReturnValue, bool K2Node_CustomEvent_bActive, delegate K2Node_CreateDelegate_OutputDelegate, Rotator CallFunc_K2_GetComponentRotation_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, Rotator CallFunc_GetRotationDiff_NewParam, bool CallFunc_BooleanAND_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_SetGroundEffect_Height, float CallFunc_Divide_FloatFloat_ReturnValue, SQSoldier* K2Node_Event_Soldier, SQVehicleSeatComponent* K2Node_Event_NewSeat, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, SQSoldier* K2Node_Event_Soldier, SQVehicleSeatComponent* K2Node_Event_PreviousSeat, SQVehicleSeatComponent* K2Node_Event_NewSeat, bool CallFunc_IsActive_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, WorldSettings* CallFunc_GetWorldSettings_ReturnValue, bool CallFunc_IsPhysicsEnabled_ReturnValue, SQWorldSettings* K2Node_DynamicCast_AsSQWorld_Settings, bool K2Node_DynamicCast_bSuccess, bool K2Node_CustomEvent_Condition, float CallFunc_Multiply_IntFloat_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQSoldier* K2Node_Event_Soldier, SQVehicleSeatComponent* K2Node_Event_PreviousSeat, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_GetMainRotorThrust_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool K2Node_Event_Active, const HitResult K2Node_CustomEvent_HitResult, float K2Node_CustomEvent_TimeSlice, const Vector K2Node_CustomEvent_MoveDelta, delegate K2Node_CreateDelegate_OutputDelegate, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, float CallFunc_GetThrustPower_Thrust, float CallFunc_GetTimeSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, Vector CallFunc_GreaterGreater_VectorRotator_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Key Temp_struct_Variable, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_VSize_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_Divide_VectorFloat_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, Vector CallFunc_Divide_VectorFloat_ReturnValue, float CallFunc_VSize_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, Vector CallFunc_Multiply_VectorFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, Key K2Node_InputActionEvent_Key, FString CallFunc_Concat_StrStr_ReturnValue, Key K2Node_InputActionEvent_Key, Key Temp_struct_Variable, Key K2Node_InputActionEvent_Key, float CallFunc_GetWorldDeltaSeconds_ReturnValue, SQEditorPlaySettings* CallFunc_GetEditorPlaySettings_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, float CallFunc_GetNormalizedHealth_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, Key K2Node_InputActionEvent_Key, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsEngineActive_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_ApplyDamage_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const HitResult K2Node_ComponentBoundEvent_SweepResult, class Actor CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const HitResult K2Node_ComponentBoundEvent_SweepResult, class Actor CallFunc_GetObjectClass_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue, float CallFunc_GetKnots_Knots, float CallFunc_GetKnots_Knots, bool CallFunc_Greater_FloatFloat_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, Key Temp_struct_Variable, delegate K2Node_CreateDelegate_OutputDelegate, Vector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_GetWaterDepth_Depth, bool CallFunc_GetWaterDepth_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue, Key K2Node_InputActionEvent_Key, float CallFunc_ApplyDamage_ReturnValue, Key K2Node_InputActionEvent_Key);// 0x1d69c50

--------------------------------
Class: SQHelicopter2.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	SQVehicleCleanupComponent* VehicleCleanupComponent;//[Offset: 0x890, Size: 1]
	float PhysicsToggleThreshold;//[Offset: 0x898, Size: 1]
	float MaxDeltaTime;//[Offset: 0x89c, Size: 1]
	float FixedTimeStep;//[Offset: 0x8a0, Size: 1]
	BoxComponent* BoxCollider;//[Offset: 0x8a8, Size: 1]
	CameraComponent* ExternalCamera;//[Offset: 0x8b0, Size: 1]
	SpringArmComponent* SpringArm;//[Offset: 0x8b8, Size: 1]
	SQHelicopterMovementComponent* MovementComponent;//[Offset: 0x8c0, Size: 1]
	SQVehicleEngineComponent* Engine;//[Offset: 0x8c8, Size: 1]
	SQRotorBladesComponent* MainRotor;//[Offset: 0x8d0, Size: 1]
	SQRotorBladesComponent* TailRotor;//[Offset: 0x8d8, Size: 1]
	StaticMeshComponent* MainBladesCollision;//[Offset: 0x8e0, Size: 1]
	StaticMeshComponent* TailBladesCollision;//[Offset: 0x8e8, Size: 1]
	Rotator SlerpToUpSideDown(float AngleRad);// 0xda4040
	void MainRotorDestroyedHandler(SQVehicleComponent* VehicleComponent);// 0xda3b00
	bool IsTailRotorColliding();// 0xda3ad0
	bool IsPhysicsEnabled();// 0xda3a50
	bool IsMainRotorColliding();// 0xda3a20
	bool IsLanded();// 0x1d69c50
	float GetThrottle();// 0x1d69c50
	float GetTailRotorThrust();// 0x1d69c50
	int GetMaxRPM();// 0x1d69c50
	float GetMainRotorThrust();// 0x1d69c50
	void EnablePhysicsSimulation(bool bSimulate);// 0xda3020

--------------------------------
Class: SQVehicleCleanupComponent.ActorComponent.Object
	SQVehicleCleanupDataAsset* CleanupStaticInfo;//[Offset: 0xb0, Size: 1]
	SQVehicle* OwnerVehicle;//[Offset: 0xc0, Size: 1]
	void ResetDestructionTimer();// 0xe341b0

--------------------------------
Class: SQVehicleCleanupDataAsset.DataAsset.Object
	byte[] ObjectCollisionTypes;//[Offset: 0x30, Size: 1]
	class Actor[] ObjectClasses;//[Offset: 0x40, Size: 1]
	float ScanRadius;//[Offset: 0x50, Size: 1]
	float ScanFrequency;//[Offset: 0x54, Size: 1]
	float SelfDestructionTime;//[Offset: 0x58, Size: 1]

--------------------------------
Class: SQHelicopterMovementComponent.SQMovementComponentBase.ActorComponent.Object
	float BrakingDecelerationFlying;//[Offset: 0x198, Size: 1]
	float MaxFlySpeed;//[Offset: 0x19c, Size: 1]
	float MaxAcceleration;//[Offset: 0x1a0, Size: 1]
	float AirFriction;//[Offset: 0x1a4, Size: 1]
	float BrakingFriction;//[Offset: 0x1a8, Size: 1]
	float BrakingFrictionFactor;//[Offset: 0x1ac, Size: 1]
	float LinearDamping;//[Offset: 0x1b0, Size: 1]
	CurveFloat* LinearDampingCurve;//[Offset: 0x1b8, Size: 1]
	bool bUseSeparateBrakingFriction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1c0, Size: 1]
	float GravityScale;//[Offset: 0x1c4, Size: 1]
	float Mass;//[Offset: 0x1c8, Size: 1]
	bool bEnablePhysicsInteraction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1cc, Size: 1]
	float TouchForceFactor;//[Offset: 0x1d0, Size: 1]
	float MinTouchForce;//[Offset: 0x1d4, Size: 1]
	float MaxTouchForce;//[Offset: 0x1d8, Size: 1]
	bool bTouchForceScaledToMass;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1dc, Size: 1]
	float PenetrationPullbackDistance;//[Offset: 0x1e0, Size: 1]
	float PenetrationOverlapCheckInflation;//[Offset: 0x1e4, Size: 1]
	bool MoveIgnoreFirstBlockingOverlap;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1e8, Size: 1]
	MulticastInlineDelegateProperty OnImpact;//[Size: 1]
	MulticastInlineDelegateProperty OnRep_Physics;//[Size: 1]
	float AllowablePositionErrorSquared;//[Offset: 0x210, Size: 1]
	float MinProxyMovementPredictionSpeed;//[Offset: 0x214, Size: 1]
	float AnalogInputModifier;//[Offset: 0x218, Size: 1]
	Vector PendingImpulseToApply;//[Offset: 0x21c, Size: 1]
	Vector PendingForceToApply;//[Offset: 0x228, Size: 1]
	bool bForceMaxAccel;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x234, Size: 1]
	Pawn* PawnOwner;//[Offset: 0x238, Size: 1]
	PrimitiveComponent* UpdatedComponent;//[Offset: 0x240, Size: 1]
	bool bIsSimulatingPhysics;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x258, Size: 1]
	void ResetMovementState();// 0xda3e40
	void OnRep_IsSimulatingPhysics();// 0xda3c20
	bool IsSimulatingPhysics();// 0xda3ab0
	Rotator GetRotationInput();// 0xda3500
	float GetMaxBrakingDeceleration();// 0xda3230
	float GetMaxAcceleration();// 0xda31f0
	void CapsuleTouched(PrimitiveComponent* OverlappedComp, Actor* Other, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xda2640
	void AddRotationInput(out const Rotator InRotationInput);// 0xda2420
	void AddImpulse(Vector Impulse, bool bVelocityChange);// 0xda2140
	void AddForce(Vector Force);// 0xda20b0

--------------------------------
Class: SQVehicleEngineComponent.SQVehicleEngine.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	MulticastInlineDelegateProperty OnEngineActiveEvent;//[Size: 1]
	SoundCue* EngineStartSound;//[Offset: 0x5e8, Size: 1]
	SoundCue* EngineCompletedStartSound;//[Offset: 0x5f0, Size: 1]
	SoundCue* EngineFailedStartSound;//[Offset: 0x5f8, Size: 1]
	SoundCue* EngineStopSound;//[Offset: 0x600, Size: 1]
	SoundCue* EngineRPMSound;//[Offset: 0x608, Size: 1]
	SoundCue* EngineExhaustSound;//[Offset: 0x610, Size: 1]
	SoundCue* LandingSound;//[Offset: 0x618, Size: 1]
	float EngineIdleFadeInAfterEngineStartTime;//[Offset: 0x620, Size: 1]
	float EngineIdleFadeOutAfterEngineStopTime;//[Offset: 0x624, Size: 1]
	float GearChangingAlphaLerpSpeed;//[Offset: 0x628, Size: 1]
	SQEngineMovementSoundObject[] EngineMovementSounds;//[Offset: 0x630, Size: 1]
	AudioComponent* EngineExhaustStartAC;//[Offset: 0x640, Size: 1]
	AudioComponent* EngineRPMAC;//[Offset: 0x648, Size: 1]
	AudioComponent* EngineExhaustAC;//[Offset: 0x650, Size: 1]
	AudioComponent* EngineExhaustStopAC;//[Offset: 0x658, Size: 1]
	AudioComponent* EngineStartAC;//[Offset: 0x660, Size: 1]
	AudioComponent* EngineCompletedStartAC;//[Offset: 0x668, Size: 1]
	AudioComponent* EngineFailedStartAC;//[Offset: 0x670, Size: 1]
	AudioComponent* EngineStopAC;//[Offset: 0x678, Size: 1]
	AudioComponent* EngineSpeedAC;//[Offset: 0x680, Size: 1]
	ParticleSystemComponent* ExhaustPSC;//[Offset: 0x688, Size: 1]
	class CameraShakeBase* EngineVibrationCameraShake;//[Offset: 0x690, Size: 1]
	CurveFloat* RPMToShakeScaleCurve;//[Offset: 0x698, Size: 1]
	bool bIsEngineActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6a0, Size: 1]
	bool bIsEngineToggleActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x6a1, Size: 1]
	float ActivateEngineDelay;//[Offset: 0x6a4, Size: 1]
	float DeActivateEngineDelay;//[Offset: 0x6a8, Size: 1]
	CameraShakeBase* VibrationCameraShake;//[Offset: 0x6b8, Size: 1]
	PlayerCameraManager* VibrationCameraManager;//[Offset: 0x6c0, Size: 1]
	void StopEngineImmediately();// 0xe387a0
	void ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive);// 0xe37f20
	void ServerSetEngineActiveInput(bool bNewEngineActive);// 0xe37e60
	void OnRep_EngineToggleActive();// 0xe379d0
	void OnRep_EngineActive();// 0xe379b0
	void OnPlayerExitedVehicleHandler(SQVehicle* Vehicle, PlayerController* Player, int Seat);// 0xe37880
	void OnPlayerEnteredVehicleHandler(SQVehicle* Vehicle, PlayerController* Player, int Seat);// 0xe37770

--------------------------------
Class: SQVehicleEngine.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	CurveFloat* HealthVsDamageCurve;//[Offset: 0x5d0, Size: 1]
	bool IsEngineToggleActive();// 0xe376a0
	bool IsEngineActive();// 0xe37670
	float GetCurrentEngineToggleRequiredDuration();// 0xe37220
	float GetCurrentEngineTogglePercentage();// 0xe371e0

--------------------------------
Class: SQEngineMovementSoundObject
	SoundCue* EngineSound;//[Offset: 0x0, Size: 1]
	int Gear;//[Offset: 0x8, Size: 1]
	bool bIsAcceleratingSound;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	FName AttachBoneName;//[Offset: 0x10, Size: 1]
	float FadeOutTime;//[Offset: 0x18, Size: 1]
	float FadeOutEndVolume;//[Offset: 0x1c, Size: 1]
	AudioComponent* AudioComponent;//[Offset: 0x20, Size: 1]

--------------------------------
Class: SQRotorBladesComponent.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	class CameraShakeBase* DestructionCameraShake;//[Offset: 0x5d0, Size: 1]
	float DestructionShakeScale;//[Offset: 0x5d8, Size: 1]
	float CollisionDestructionThrustThreshold;//[Offset: 0x5dc, Size: 1]
	byte[] ObjectTypes;//[Offset: 0x5e0, Size: 1]
	float DamagePerSec;//[Offset: 0x5f0, Size: 1]
	bool bIsMainRotor;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5f4, Size: 1]
	Actor*[] IgnoredActors;//[Offset: 0x5f8, Size: 1]
	SQHelicopter2* Owner;//[Offset: 0x678, Size: 1]
	bool bInCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x680, Size: 1]
	StaticMeshComponent* OverlapMesh;//[Offset: 0x688, Size: 1]
	bool TakeFatalDamage();// 0xdf7a90
	bool IsHealthy();// 0xde4d30
	void DamageRotor();// 0xdf7580

--------------------------------
Class: SQArmorMeshComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	SQArmorInfo[] ArmorInfo;//[Offset: 0x4e0, Size: 1]

--------------------------------
Class: SQArmorInfo
	float Thickness;//[Offset: 0x0, Size: 1]

--------------------------------
Class: BPComponent_RadialModel_C.ActorComponent.Object
	class BP_RadialMenuModel_C* Radial Model;//[Offset: 0xb0, Size: 1]

--------------------------------
Class: TimelineComponent.ActorComponent.Object
	Timeline TheTimeline;//[Offset: 0xb0, Size: 1]
	bool bIgnoreTimeDilation;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x148, Size: 1]
	void Stop();// 0x4020f30
	void SetVectorCurve(CurveVector* NewVectorCurve, FName VectorTrackName);// 0x4020e60
	void SetTimelineLengthMode(byte NewLengthMode);// 0x4020de0
	void SetTimelineLength(float NewLength);// 0x4020d60
	void SetPlayRate(float NewRate);// 0x4020bc0
	void SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate);// 0x4020c40
	void SetNewTime(float NewTime);// 0x4020b40
	void SetLooping(bool bNewLooping);// 0x4020ab0
	void SetLinearColorCurve(CurveLinearColor* NewLinearColorCurve, FName LinearColorTrackName);// 0x40209e0
	void SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation);// 0x4020950
	void SetFloatCurve(CurveFloat* NewFloatCurve, FName FloatTrackName);// 0x4020880
	void ReverseFromEnd();// 0x4020860
	void Reverse();// 0x4020840
	void PlayFromStart();// 0x4020820
	void Play();// 0x4020800
	void OnRep_Timeline();// 0x40207e0
	bool IsReversing();// 0x40207b0
	bool IsPlaying();// 0x4020780
	bool IsLooping();// 0x4020750
	float GetTimelineLength();// 0x4020720
	float GetPlayRate();// 0x4020610
	float GetPlaybackPosition();// 0x4020640
	bool GetIgnoreTimeDilation();// 0x40205e0

--------------------------------
Class: Timeline
	byte LengthMode;//[Offset: 0x0, Size: 1]
	bool bLooping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x1, Size: 1]
	bool bReversePlayback;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x1, Size: 1]
	bool bPlaying;//(ByteOffset: 0, ByteMask: 4, FieldMask: 4)[Offset: 0x1, Size: 1]
	float Length;//[Offset: 0x4, Size: 1]
	float PlayRate;//[Offset: 0x8, Size: 1]
	float Position;//[Offset: 0xc, Size: 1]
	TimelineEventEntry[] Events;//[Offset: 0x10, Size: 1]
	TimelineVectorTrack[] InterpVectors;//[Offset: 0x20, Size: 1]
	TimelineFloatTrack[] InterpFloats;//[Offset: 0x30, Size: 1]
	TimelineLinearColorTrack[] InterpLinearColors;//[Offset: 0x40, Size: 1]
	delegate TimelinePostUpdateFunc;//[Offset: 0x50, Size: 1]
	delegate TimelineFinishedFunc;//[Offset: 0x60, Size: 1]
	Object* PropertySetObject;//[Offset: 0x70, Size: 1]
	FName DirectionPropertyName;//[Offset: 0x78, Size: 1]

--------------------------------
Class: TimelineEventEntry
	float Time;//[Offset: 0x0, Size: 1]
	delegate EventFunc;//[Offset: 0x4, Size: 1]

--------------------------------
Class: TimelineVectorTrack
	CurveVector* VectorCurve;//[Offset: 0x0, Size: 1]
	delegate InterpFunc;//[Offset: 0x8, Size: 1]
	FName TrackName;//[Offset: 0x18, Size: 1]
	FName VectorPropertyName;//[Offset: 0x20, Size: 1]

--------------------------------
Class: TimelineFloatTrack
	CurveFloat* FloatCurve;//[Offset: 0x0, Size: 1]
	delegate InterpFunc;//[Offset: 0x8, Size: 1]
	FName TrackName;//[Offset: 0x18, Size: 1]
	FName FloatPropertyName;//[Offset: 0x20, Size: 1]

--------------------------------
Class: TimelineLinearColorTrack
	CurveLinearColor* LinearColorCurve;//[Offset: 0x0, Size: 1]
	delegate InterpFunc;//[Offset: 0x8, Size: 1]
	FName TrackName;//[Offset: 0x18, Size: 1]
	FName LinearColorPropertyName;//[Offset: 0x20, Size: 1]

--------------------------------
Class: Comp_ResourceControl_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	float Resource Quantity;//[Offset: 0xb8, Size: 1]
	float Resource Rate;//[Offset: 0xbc, Size: 1]
	float Max Vehicle Velocity;//[Offset: 0xc0, Size: 1]
	TimerHandle Resource Gain Timer;//[Offset: 0xc8, Size: 1]
	bool Ammo Transaction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd0, Size: 1]
	bool Pickup Transaction;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd1, Size: 1]
	SQVehicle* Current Vehicle;//[Offset: 0xd8, Size: 1]
	float Animation Repeat Rate;//[Offset: 0xe0, Size: 1]
	TimerHandle Animation Delay Timer;//[Offset: 0xe8, Size: 1]
	PlayerController* My PC;//[Offset: 0xf0, Size: 1]
	SQVehicleResource* Current Resource Weapon;//[Offset: 0xf8, Size: 1]
	bool Should Validate Player;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x100, Size: 1]
	float Last Hand Anim Time;//[Offset: 0x104, Size: 1]
	float Max Altitude In Meters;//[Offset: 0x108, Size: 1]
	void Validate Distance to FOB(SQVehicle* Vehicle, SQForwardBase* fob, out bool Result, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetScaledSphereRadius_ReturnValue, float CallFunc_GetSquaredDistanceTo_ReturnValue, float CallFunc_Square_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void Validate Soldier(out bool Alive, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Setup Resource Weapon(bool Temp_bool_Variable, bool CallFunc_Validate_Resource_Point_Valid, SQForwardBase* CallFunc_Validate_Resource_Point_Fob, Actor* CallFunc_Validate_Resource_Point_CapZone, SQVehicleResourceWeaponInventoryComponent* CallFunc_GetVehicleResourceInventory_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, SQVehicleResource* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Validate Owner(out bool Valid, bool CallFunc_Validate_Soldier_Alive);// 0x1d69c50
	void Validate Transaction(bool Ammo, bool Pickup, SQVehicle* Vehicle, out bool Valid Transaction, out bool Has Con Weapon, out bool Has Ammo Weapon, out bool Is Loading, out bool Zone has Points, bool L Distance Valid, Actor* L Cap Zone, SQForwardBase* L Fob, bool L Resource Point Valid, bool L Zone has Points, int L Total Points, bool L Has Ammo, int L Max Points, SQVehicleResource* L Ammo Weapon, SQVehicleResource* L Con Weapon, bool CallFunc_IsValid_ReturnValue, BP_Generic_Helicopter_C* K2Node_DynamicCast_AsBP_Generic_Helicopter, bool K2Node_DynamicCast_bSuccess, SQVehicleResourceWeaponInventoryComponent* CallFunc_GetVehicleResourceInventory_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, Vector CallFunc_GetVelocity_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Validate_Soldier_Alive, bool CallFunc_Validate_Resource_Point_Valid, SQForwardBase* CallFunc_Validate_Resource_Point_Fob, Actor* CallFunc_Validate_Resource_Point_CapZone, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Less_FloatFloat_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQVehicleResource* K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Validate Resource Point(SQVehicle* Vehicle, out bool Valid, out SQForwardBase* fob, out Actor* CapZone, Actor* L Capture Zone, SQForwardBase* L Fob, int Temp_int_Variable, bool CallFunc_IsValid_ReturnValue, Actor*[] CallFunc_GetOverlappingActors_OverlappingActors, Actor*[] CallFunc_GetOverlappingActors_OverlappingActors, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, int Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, Actor* CallFunc_Array_Get_Item, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetTeamId_ReturnValue, SQCaptureZoneResourceComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, Actor* CallFunc_Array_Get_Item, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetTeamId_ReturnValue, SQForwardBase* K2Node_DynamicCast_AsSQForward_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Validate_Distance_to_FOB_Result, int Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, Actor* CallFunc_GetOwner_ReturnValue, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, Actor* CallFunc_GetOwner_ReturnValue, int CallFunc_GetTeamId_ReturnValue, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeamId_ReturnValue);// 0x1d69c50
	void Server Start Supply(bool Ammo, bool Pickup, SQVehicle* Vehicle);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Server Stop Supply();// 0x1d69c50
	void Invoke Use Resources();// 0x1d69c50
	void Server Use Resources();// 0x1d69c50
	void Stop Resource Supply();// 0x1d69c50
	void Start Resource Supply(bool Ammo Transaction, bool Pickup Transaction, SQVehicle* Current Vehicle);// 0x1d69c50
	void Client Resource Timer();// 0x1d69c50
	void Play Hand Animation();// 0x1d69c50
	void ExecuteUbergraph_Comp_ResourceControl(int EntryPoint, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, Actor* CallFunc_GetOwner_ReturnValue, bool CallFunc_Validate_Transaction_Valid_Transaction, bool CallFunc_Validate_Transaction_Has_Con_Weapon, bool CallFunc_Validate_Transaction_Has_Ammo_Weapon, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool K2Node_CustomEvent_Ammo, bool K2Node_CustomEvent_Pickup, SQVehicle* K2Node_CustomEvent_Vehicle, Actor* CallFunc_GetOwner_ReturnValue, PlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Validate_Owner_Valid, enum K2Node_Select_Default, enum K2Node_Select_Default, enum K2Node_Select_Default, bool K2Node_CustomEvent_Ammo_Transaction, bool K2Node_CustomEvent_Pickup_Transaction, SQVehicle* K2Node_CustomEvent_Current_Vehicle, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_K2_IsTimerActiveHandle_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_Validate_Transaction_Valid_Transaction, bool CallFunc_Validate_Transaction_Has_Con_Weapon, bool CallFunc_Validate_Transaction_Has_Ammo_Weapon, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, bool CallFunc_Validate_Owner_Valid, bool CallFunc_Validate_Transaction_Valid_Transaction, bool CallFunc_Validate_Transaction_Has_Con_Weapon, bool CallFunc_Validate_Transaction_Has_Ammo_Weapon, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, bool CallFunc_Validate_Owner_Valid, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_SupplyRadialEntry_C.IconRadialEntry_C.SQRadialIconButton.SQRadialButton.SQBaseButton.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x470, Size: 1]
	void Is Faded(out bool Faded, SQVehicleResource* L Ammo Weapon, SQVehicleResource* L Con Weapon, bool Temp_bool_Variable, BP_RadialActionModel_ControlSupplies_C* K2Node_DynamicCast_AsBP_Radial_Action_Model_Control_Supplies, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, SQVehicleResource* K2Node_Select_Default, BaseRadialMenu_C* CallFunc_Get_Radial_Menu_Radial_Menu, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, SQVehicleResourceWeaponInventoryComponent* CallFunc_GetVehicleResourceInventory_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue);// 0x1d69c50
	void Is Soldier Alive(out bool Alive, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	bool Validate Resources(Comp_ResourceControl_C* Resource Component, bool CallFunc_Is_Soldier_Alive_Alive, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Comp_ResourceControl_C* CallFunc_GetComponentByClass_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* CallFunc_Get_Radial_Menu_Radial_Menu, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, Vector CallFunc_GetVelocity_ReturnValue, BP_RadialActionModel_ControlSupplies_C* K2Node_DynamicCast_AsBP_Radial_Action_Model_Control_Supplies, bool K2Node_DynamicCast_bSuccess, float CallFunc_VSize_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Validate_Transaction_Valid_Transaction, bool CallFunc_Validate_Transaction_Has_Con_Weapon, bool CallFunc_Validate_Transaction_Has_Ammo_Weapon, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void UpdateActiveState();// 0x1d69c50
	void OnHoverEnd();// 0x1d69c50
	void ExecuteUbergraph_W_SupplyRadialEntry(int EntryPoint, bool CallFunc_Is_Faded_Faded, bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable, float K2Node_Select_Default, BP_RadialActionModel_C* K2Node_DynamicCast_AsBP_Radial_Action_Model, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_Validate_Resources_ReturnValue, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_ControlSuppliesAction_C* K2Node_DynamicCast_AsBP_Control_Supplies_Action, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanClick_CanClick, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, Comp_ResourceControl_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_RadialActionModel_ControlSupplies_C.BP_RadialActionModel_C.BP_RadialItemModel_C.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xa8, Size: 1]
	bool Ammo;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb0, Size: 1]
	bool Pickup;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xb1, Size: 1]
	void Is Soldier Alive(Controller* Target, out bool Alive, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Validate Logistics(BaseRadialMenu_C* Radial, out bool Is Valid, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Is_Soldier_Alive_Alive, Comp_ResourceControl_C* CallFunc_GetComponentByClass_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Validate_Transaction_Valid_Transaction, bool CallFunc_Validate_Transaction_Has_Con_Weapon, bool CallFunc_Validate_Transaction_Has_Ammo_Weapon, bool CallFunc_Validate_Transaction_Is_Loading, bool CallFunc_Validate_Transaction_Zone_has_Points, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void OnClicked(BaseRadialMenu_C* Radial);// 0x1d69c50
	void OnReleased(BaseRadialMenu_C* Radial);// 0x1d69c50
	void ExecuteUbergraph_BP_RadialActionModel_ControlSupplies(int EntryPoint, BaseRadialMenu_C* K2Node_Event_Radial, Object* CallFunc_GetDefaultObjectFor_ReturnValue, BP_ControlSuppliesAction_C* K2Node_DynamicCast_AsBP_Control_Supplies_Action, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Validate_Logistics_Is_Valid, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Comp_ResourceControl_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_CanClick_CanClick, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, BaseRadialMenu_C* K2Node_Event_Radial, bool CallFunc_Validate_Logistics_Is_Valid, Object* CallFunc_GetDefaultObjectFor_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, BP_ControlSuppliesAction_C* K2Node_DynamicCast_AsBP_Control_Supplies_Action, bool K2Node_DynamicCast_bSuccess, Comp_ResourceControl_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_CanClick_CanClick, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_ControlSuppliesAction_C.BP_RadialAction_C.Object

--------------------------------
Class: UMG_VehicleAmmoExtended_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* AmmoAmount;//[Offset: 0x268, Size: 1]
	HorizontalBox* AmmoParent;//[Offset: 0x270, Size: 1]
	Image* ConstructionAmount;//[Offset: 0x278, Size: 1]
	HorizontalBox* ConstructionParent;//[Offset: 0x280, Size: 1]
	Image* EmptyAmount;//[Offset: 0x288, Size: 1]
	HorizontalBox* Fill_HorizontalBox;//[Offset: 0x290, Size: 1]
	Image* Image;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	SizeBox* SizeBoxParent;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_AmmoAmount;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_ConstructionCount;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_Max;//[Offset: 0x2c0, Size: 1]
	void ValueSizeBox(float InPoints, float TotalPoints, out float Size, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);// 0x1d69c50
	void UpdateWidget(float Construction, float Ammo, float Total Points, SQVehicleResourceWeaponInventoryComponent* Vehicle Resource Inventory, bool FoundResources, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, float CallFunc_ValueSizeBox_Size, Vector2D CallFunc_MakeVector2D_ReturnValue, float CallFunc_ValueSizeBox_Size, Vector2D CallFunc_MakeVector2D_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_GetTotalSharedResourceAmount_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, SlateBrush K2Node_MakeStruct_SlateBrush, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue, enum K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* CallFunc_Get_Radial_Menu_Radial_Menu, bool CallFunc_IsValid_ReturnValue, SQVehicle* K2Node_DynamicCast_AsSQVehicle, bool K2Node_DynamicCast_bSuccess, SQVehicleInventoryComponent* CallFunc_GetVehicleInventory_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResourceWeaponInventoryComponent* K2Node_DynamicCast_AsSQVehicle_Resource_Weapon_Inventory_Component, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_VehicleAmmoExtended(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_SeedingPhaseStatusText_C.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Blinking;//[Offset: 0x268, Size: 1]
	Border* BorderMain;//[Offset: 0x270, Size: 1]
	Image* Clock;//[Offset: 0x278, Size: 1]
	VerticalBox* LiveVerticalBox;//[Offset: 0x280, Size: 1]
	VerticalBox* PreLiveVerticalBox;//[Offset: 0x288, Size: 1]
	WidgetSwitcher* SeedState;//[Offset: 0x290, Size: 1]
	VerticalBox* SeedVerticalBox;//[Offset: 0x298, Size: 1]
	TextBlock* TB_Countdown;//[Offset: 0x2a0, Size: 1]
	TextBlock* TB_GameLive;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_PlayerCount;//[Offset: 0x2b0, Size: 1]
	TextBlock* TimeToStart;//[Offset: 0x2b8, Size: 1]
	TextBlock* WaitingForPlayers;//[Offset: 0x2c0, Size: 1]
	BP_GameStateSquad_Seed_C* SeedGameState;//[Offset: 0x2c8, Size: 1]
	TimerHandle UpdateTimer;//[Offset: 0x2d0, Size: 1]
	bool bInitialized;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2d8, Size: 1]
	float StartAnimUnderTimeLeft;//[Offset: 0x2dc, Size: 1]
	void UnbindFromGameState(delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void BindToGameState(delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50
	void UpdateCountdownTimer(float TimeLeft, float Temp_float_Variable, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float K2Node_Select_Default, int CallFunc_FTrunc_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, float CallFunc_GetServerWorldTimeSeconds_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue);// 0x1d69c50
	void UpdatePlayersCount(int CurrentPlayers, int MaxPlayers, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue);// 0x1d69c50
	void CountdownStateUpdated(bool Is Active, float Time Left);// 0x1d69c50
	void GameIsLive();// 0x1d69c50
	void PlayerJoinedOrLeft(PlayerState* Player);// 0x1d69c50
	void OnInitialized();// 0x1d69c50
	void PlayerThresholdUpdated();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_SeedingPhaseStatusText(int EntryPoint, BP_GameStateSquad_Seed_C* CallFunc_TryGetGameState_OutGameState, bool CallFunc_TryGetGameState_ReturnValue, bool K2Node_CustomEvent_Is_Active, float K2Node_CustomEvent_Time_Left, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetPlayerCountOnServer_ReturnValue, PlayerState* K2Node_CustomEvent_Player, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_SightRange_C.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x268, Size: 1]
	Image* Background;//[Offset: 0x270, Size: 1]
	Border* Border;//[Offset: 0x278, Size: 1]
	TextBlock* RangeText;//[Offset: 0x280, Size: 1]
	void Construct();// 0x1d69c50
	void UpdateState();// 0x1d69c50
	void BPInit();// 0x1d69c50
	void ExecuteUbergraph_UMG_SightRange(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, SQWeaponStaticInfo* CallFunc_GetWeaponStaticInfo_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_StagingTimerText_C.SQStagingTimerText.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x298, Size: 1]
	WidgetAnimation* Close;//[Offset: 0x2a0, Size: 1]
	WidgetAnimation* Blinking;//[Offset: 0x2a8, Size: 1]
	Border* BorderMain;//[Offset: 0x2b0, Size: 1]
	Image* Clock;//[Offset: 0x2b8, Size: 1]
	TextBlock* Staging;//[Offset: 0x2c0, Size: 1]
	TextBlock* TB_DefenderNotice;//[Offset: 0x2c8, Size: 1]
	TextBlock* TB_VehcileDisabledNotice;//[Offset: 0x2d0, Size: 1]
	void HasDefenderRush(bool HasVehicleStagging, int TeamId, out bool ShouldShowDefenderRush, int Temp_int_Variable, bool CallFunc_Not_PreBool_ReturnValue, int Temp_int_Variable, int Temp_int_Variable, int Temp_int_Variable, int K2Node_Select_Default, BP_SQLayerTeamConfig_C* CallFunc_TryGetTeamLayerConfig_OutTeamConfig, bool CallFunc_TryGetTeamLayerConfig_ReturnValue);// 0x1d69c50
	void HasVehicleStagging(out bool ShouldShowStagging, out int LocalTeamId, out bool ValidResult, int CallFunc_TryGetLocalPlayerTeamId_OutTeamId, bool CallFunc_TryGetLocalPlayerTeamId_ReturnValue, BP_SQLayerTeamConfig_C* CallFunc_TryGetTeamLayerConfig_OutTeamConfig, bool CallFunc_TryGetTeamLayerConfig_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void OnFellBelowThreshold();// 0x1d69c50
	void Get Player Team();// 0x1d69c50
	void Team State Changed(SQTeamState* OldTeam, SQTeamState* NewTeam);// 0x1d69c50
	void ExecuteUbergraph_UMG_StagingTimerText(int EntryPoint, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, SlateColor K2Node_MakeStruct_SlateColor, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQTeamState* K2Node_CustomEvent_OldTeam, SQTeamState* K2Node_CustomEvent_NewTeam, bool CallFunc_HasVehicleStagging_ShouldShowStagging, int CallFunc_HasVehicleStagging_LocalTeamId, bool CallFunc_HasVehicleStagging_ValidResult, enum K2Node_Select_Default, bool CallFunc_HasDefenderRush_ShouldShowDefenderRush, enum K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: UMG_StaminaWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* FadeOut;//[Offset: 0x268, Size: 1]
	WidgetAnimation* FadeIn;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	ProgressBar* StaminaBar;//[Offset: 0x280, Size: 1]
	TextBlock* StaminaPercent;//[Offset: 0x288, Size: 1]
	bool Open;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	float Last Stamina;//[Offset: 0x294, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x298, Size: 1]
	float Get_PercentageBar_Percent(float Result, Pawn* CallFunc_GetOwningPlayerPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50
	LinearColor Get_StaminaBar_FillColorAndOpacity(LinearColor Result, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_Variable, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, Pawn* CallFunc_GetOwningPlayerPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_NormalizeToRange_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, float CallFunc_NormalizeToRange_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	FText Get_StaminaPercent_Text(FText Result, Pawn* CallFunc_GetOwningPlayerPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Set Stamina Vis();// 0x1d69c50
	void ExecuteUbergraph_UMG_StaminaWidget(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsAdminCamera_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, float CallFunc_Get_PercentageBar_Percent_0_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Get_PercentageBar_Percent_0_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: UMG_StanceState_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* BleedAnimationOff;//[Offset: 0x268, Size: 1]
	WidgetAnimation* BleedAnimation;//[Offset: 0x270, Size: 1]
	CanvasPanel* CanvasPanel;//[Offset: 0x278, Size: 1]
	Image* Lean;//[Offset: 0x280, Size: 1]
	Image* Stance;//[Offset: 0x288, Size: 1]
	Texture2D* StandIcon;//[Offset: 0x290, Size: 1]
	Texture2D* ProneIcon;//[Offset: 0x298, Size: 1]
	Texture2D* CrouchIcon;//[Offset: 0x2a0, Size: 1]
	Texture2D* LeanLeft;//[Offset: 0x2a8, Size: 1]
	Texture2D* LeanRight;//[Offset: 0x2b0, Size: 1]
	bool bBleedingAnimPlaying;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2b8, Size: 1]
	void UpdateBleeding(SQSoldier* Soldier, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsValid_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50
	void UpdateLean(SQSoldier* Soldier, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, Object* K2Node_Select_Default, SlateBrush K2Node_MakeStruct_SlateBrush, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void UpdateStance(SQSoldier* Soldier, bool Temp_bool_Variable, bool Temp_bool_Variable, Object* K2Node_Select_Default, Object* K2Node_Select_Default, bool CallFunc_NotEqual_ObjectObject_ReturnValue, SlateBrush K2Node_MakeStruct_SlateBrush);// 0x1d69c50
	void UpdateStanceState();// 0x1d69c50
	void Update Stance Visibility(SaveData_UI_C* Data);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_StanceState(int EntryPoint, enum Temp_byte_Variable, delegate K2Node_CreateDelegate_OutputDelegate, enum Temp_byte_Variable, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SquadGameInstance_C* K2Node_DynamicCast_AsBP_Squad_Game_Instance, bool K2Node_DynamicCast_bSuccess, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SaveData_UI_C* K2Node_CustomEvent_Data, enum K2Node_Select_Default, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_VehicleSpeedo_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* AmphibiousImage;//[Offset: 0x268, Size: 1]
	Overlay* AmphibiousIndicator;//[Offset: 0x270, Size: 1]
	Border* Border_Amphibiouis;//[Offset: 0x278, Size: 1]
	Border* Border_Gear;//[Offset: 0x280, Size: 1]
	Border* Border_Handbrake;//[Offset: 0x288, Size: 1]
	CanvasPanel* DialNumParent;//[Offset: 0x290, Size: 1]
	Image* FrontImage;//[Offset: 0x298, Size: 1]
	Overlay* HandBrake;//[Offset: 0x2a0, Size: 1]
	Image* HandbrakeImage;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Overlay* PitchParent;//[Offset: 0x2b8, Size: 1]
	HorizontalBox* RearmBox;//[Offset: 0x2c0, Size: 1]
	Image* REVs;//[Offset: 0x2c8, Size: 1]
	Overlay* RollParent;//[Offset: 0x2d0, Size: 1]
	Overlay* SecundaryDisplay;//[Offset: 0x2d8, Size: 1]
	Image* SideImage;//[Offset: 0x2e0, Size: 1]
	Image* SpeedArrow;//[Offset: 0x2e8, Size: 1]
	Overlay* SpeedParent;//[Offset: 0x2f0, Size: 1]
	TextBlock* TB_Cost;//[Offset: 0x2f8, Size: 1]
	TextBlock* TB_Gear;//[Offset: 0x300, Size: 1]
	SQGroundVehicle* My Vehicle;//[Offset: 0x308, Size: 1]
	float Speed;//[Offset: 0x310, Size: 1]
	float RPM;//[Offset: 0x314, Size: 1]
	float Warning Roll;//[Offset: 0x318, Size: 1]
	float Warning Pitch;//[Offset: 0x31c, Size: 1]
	MaterialInstanceDynamic* MI_Revs;//[Offset: 0x320, Size: 1]
	float RevsPercent;//[Offset: 0x328, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x330, Size: 1]
	SQPlayerState* My PS;//[Offset: 0x338, Size: 1]
	Texture2D* DefaultFrontImage;//[Offset: 0x340, Size: 1]
	Texture2D* DefaultSideImage;//[Offset: 0x348, Size: 1]
	SQSoldier* My Soldier;//[Offset: 0x350, Size: 1]
	TimerHandle Refresh Timer;//[Offset: 0x358, Size: 1]
	SlateColor HandbrakeOnColor;//[Offset: 0x360, Size: 1]
	SlateColor HandbrakeOffColor;//[Offset: 0x388, Size: 1]
	SlateColor AmphibiousOnColor;//[Offset: 0x3b0, Size: 1]
	SlateColor AmphibiousOffColor;//[Offset: 0x3d8, Size: 1]
	void Update Amphibious Icon(bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsInWaterBody_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Refresh Amphibious Icon(const byte Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, BP_SQVehicleSettings_C* K2Node_DynamicCast_AsBP_SQVehicle_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Set_Contains_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	float GetSpeedometerRange(enum Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float CallFunc_GetForwardSpeed_ReturnValue, float CallFunc_Abs_ReturnValue, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue);// 0x1d69c50
	void Update Handbrake(bool CallFunc_IsHandbrakeActive_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Refresh Handbrake(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Refresh Data(SQPlayerController* L PC, SQVehicle* L Current Vehicle, SQHelicopter2* K2Node_DynamicCast_AsSQHelicopter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_DoesImplementInterface_ReturnValue, SQGroundVehicle* K2Node_DynamicCast_AsSQGround_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, SQVehicleSeatComponent* CallFunc_GetCurrentSeat_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Rearm Cost(float Current Vehicle Rearm Cost, enum Temp_byte_Variable, enum Temp_byte_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, bool CallFunc_IsVisible_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQVehicleInventoryComponent* CallFunc_GetSeatPawnInventory_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_CalculateMissingAmmoCost_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, enum K2Node_Select_Default, int CallFunc_FFloor_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue);// 0x1d69c50
	void Hide Widget();// 0x1d69c50
	void Refresh Icon(bool Temp_bool_Variable, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, Texture2D* K2Node_Select_Default, Texture2D* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Update Revs(float CallFunc_GetEngineMaxRPM_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetEngineRPM_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue);// 0x1d69c50
	void Clear Dial Numbers();// 0x1d69c50
	void DrawDialNumbers(float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, SpeedDialNumber_C* CallFunc_Create_ReturnValue, enum Temp_byte_Variable, PanelSlot* CallFunc_AddChild_ReturnValue, int Temp_int_Variable, OverlaySlot* K2Node_DynamicCast_AsOverlay_Slot, bool K2Node_DynamicCast_bSuccess, int CallFunc_Multiply_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, float K2Node_Select_Default, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50
	LinearColor GearColor(bool CallFunc_IsValid_ReturnValue, int CallFunc_GetCurrentGear_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue);// 0x1d69c50
	void Refresh Widget();// 0x1d69c50
	FText GearText(bool Temp_bool_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetCurrentGear_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FText K2Node_Select_Default, FText K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Refresh Dial();// 0x1d69c50
	void Update Vehicle(SQSoldier* Soldier, SQVehicle* Vehicle, SQVehicleSeatComponent* FromSeat, SQVehicleSeatComponent* ToSeat);// 0x1d69c50
	void Changed Team(SQTeamState* OldTeam, SQTeamState* NewTeam);// 0x1d69c50
	void Get Soldier();// 0x1d69c50
	void Soldier Died();// 0x1d69c50
	void Validate Visibility();// 0x1d69c50
	void ExecuteUbergraph_UMG_VehicleSpeedo(int EntryPoint, bool Temp_bool_Has_Been_Initd_Variable, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_MapRangeClamped_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsValid_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool CallFunc_IsVisible_ReturnValue, SQSoldier* K2Node_CustomEvent_Soldier, SQVehicle* K2Node_CustomEvent_Vehicle, SQVehicleSeatComponent* K2Node_CustomEvent_FromSeat, SQVehicleSeatComponent* K2Node_CustomEvent_ToSeat, bool Temp_bool_IsClosed_Variable, bool CallFunc_IsValid_ReturnValue, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, SQGroundVehicle* K2Node_DynamicCast_AsSQGround_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, FText CallFunc_GearText_ReturnValue, LinearColor CallFunc_GearColor_ReturnValue, bool Temp_bool_IsClosed_Variable, SQTeamState* K2Node_CustomEvent_OldTeam, SQTeamState* K2Node_CustomEvent_NewTeam, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, float CallFunc_GetSpeedometerRange_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQGroundVehicle.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	SQVehicleEffectsQualitySetting[] VehicleEffectsQualitySettings;//[Offset: 0x888, Size: 1]
	SQVehicleEffectConfig[] VehicleEffectsConfig;//[Offset: 0x898, Size: 1]
	Vector2D WheelFXSound_RPMRate;//[Offset: 0x8a8, Size: 1]
	Vector2D WheelFXSound_LongSlipRate;//[Offset: 0x8b0, Size: 1]
	Vector2D WheelFXSound_LatSlipRate;//[Offset: 0x8b8, Size: 1]
	TimerHandle WheelUnderwaterTimer;//[Offset: 0x8c0, Size: 1]
	float WheelUnderwaterUpdateInterval;//[Offset: 0x8c8, Size: 1]
	bool bEjectOpenSeatsOnHardLanding;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8cc, Size: 1]
	bool bDrawDebugTraces;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8cd, Size: 1]
	TimerHandle HardLandingCheckTimer;//[Offset: 0x8d0, Size: 1]
	TimerHandle IsFlyingTimer;//[Offset: 0x8d8, Size: 1]
	float IsFlyingUpdateInterval;//[Offset: 0x8e0, Size: 1]
	float IsHardLandingUpdateInterval;//[Offset: 0x8e4, Size: 1]
	FName[] LandingTraceSockets;//[Offset: 0x8e8, Size: 1]
	float LandingTraceLenght;//[Offset: 0x8f8, Size: 1]
	bool bIsFlying;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8fc, Size: 1]
	float LastFlyingZVelocity;//[Offset: 0x900, Size: 1]
	float EjectZVelocityThreshold;//[Offset: 0x904, Size: 1]
	Actor*[] LandingCheckActorsToIgnore;//[Offset: 0x908, Size: 1]
	SQVehicleCleanupComponent* VehicleCleanupComponent;//[Offset: 0x918, Size: 1]
	MulticastInlineDelegateProperty OnEngineStateChanged;//[Size: 1]
	bool bShouldSimulate;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x930, Size: 1]
	SoundCue* EngineRPMSound;//[Offset: 0x938, Size: 1]
	AudioComponent* EngineRPMAC;//[Offset: 0x940, Size: 1]
	SoundCue* EngineExhaustSound;//[Offset: 0x948, Size: 1]
	AudioComponent* EngineExhaustStartAC;//[Offset: 0x950, Size: 1]
	AudioComponent* EngineExhaustAC;//[Offset: 0x958, Size: 1]
	AudioComponent* EngineExhaustStopAC;//[Offset: 0x960, Size: 1]
	SoundCue* EngineStartSound;//[Offset: 0x968, Size: 1]
	AudioComponent* EngineCompletedStartAC;//[Offset: 0x970, Size: 1]
	SoundCue* EngineCompletedStartSound;//[Offset: 0x978, Size: 1]
	AudioComponent* EngineFailedStartAC;//[Offset: 0x980, Size: 1]
	SoundCue* EngineFailedStartSound;//[Offset: 0x988, Size: 1]
	AudioComponent* EngineStartAC;//[Offset: 0x990, Size: 1]
	SoundCue* EngineStopSound;//[Offset: 0x998, Size: 1]
	SoundCue* MistSound;//[Offset: 0x9a0, Size: 1]
	SoundCue* PropellerMistSound;//[Offset: 0x9a8, Size: 1]
	AudioComponent* EngineStopAC;//[Offset: 0x9b0, Size: 1]
	AudioComponent* EngineSpeedAC;//[Offset: 0x9b8, Size: 1]
	AudioComponent* WheelFXAC;//[Offset: 0x9c0, Size: 1]
	SoundCue* LandingSound;//[Offset: 0x9c8, Size: 1]
	float EngineIdleFadeInAfterEngineStartTime;//[Offset: 0x9d0, Size: 1]
	float EngineIdleFadeOutAfterEngineStopTime;//[Offset: 0x9d4, Size: 1]
	float SpringCompressionLandingThreshold;//[Offset: 0x9d8, Size: 1]
	float SkidThresholdVelocity;//[Offset: 0x9dc, Size: 1]
	float LongSlipSkidThreshold;//[Offset: 0x9e0, Size: 1]
	float LateralSlipSkidThreshold;//[Offset: 0x9e4, Size: 1]
	ParticleSystemComponent* ExhaustPSC;//[Offset: 0x9e8, Size: 1]
	bool bTiresTouchingGround;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f0, Size: 1]
	bool bHandbrakeActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f1, Size: 1]
	bool bIsEngineActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f2, Size: 1]
	bool bIsEngineToggleActive;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f3, Size: 1]
	bool bAllowEngineBoosting;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9f4, Size: 1]
	float EngineBoostTorqueMultiplier;//[Offset: 0x9f8, Size: 1]
	bool bHasEngineBoostBeenPressed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9fc, Size: 1]
	SQEngineMovementSoundObject[] EngineMovementSounds;//[Offset: 0xa00, Size: 1]
	float ActivateEngineDelay;//[Offset: 0xa10, Size: 1]
	float DeActivateEngineDelay;//[Offset: 0xa14, Size: 1]
	float GearChangingAlphaLerpSpeed;//[Offset: 0xa2c, Size: 1]
	WheeledVehicleMovementComponent* VehicleMovement;//[Offset: 0xa30, Size: 1]
	BoxComponent* VehicleRagdollOverlap;//[Offset: 0xa38, Size: 1]
	float RagollOverlapTriggerSpeed;//[Offset: 0xa40, Size: 1]
	int CollisionKillSpeedKPH;//[Offset: 0xa44, Size: 1]
	bool bCollisionsKillSoldiers;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xa48, Size: 1]
	float WheelInflationRate;//[Offset: 0xa4c, Size: 1]
	SQDriveTrainComponent*[] DriveTrainComponents;//[Offset: 0xa50, Size: 1]
	SQWaterDamageComponent* WaterDamageComp;//[Offset: 0xab0, Size: 1]
	SQWaterSeatEjectionComponent* SeatEjectionComp;//[Offset: 0xab8, Size: 1]
	SQWaterDampeningComponent* WaterDampeningComp;//[Offset: 0xac0, Size: 1]
	void UpdateWheelUnderwaterDepth();// 0xd9f8e0
	void UpdateIsHardLanding();// 0xd9f820
	void UpdateIsFlying();// 0xd9f800
	void ToggleWheelUnderwaterTimer(bool bActivated);// 0xd9f710
	void ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive);// 0xd9f520
	void ServerSetEngineBoostPressed(bool bInHasEngineBoostBeenPressed);// 0xd9f460
	void ServerSetEngineActiveInput(bool bNewEngineActive);// 0xd9f3a0
	void OnRep_ShouldSimulate();// 0xd9f090
	void OnRep_EngineToggleActive();// 0xd9f050
	void OnRep_EngineActive();// 0xd9f030
	void OnRagdollBeginOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xd9ee10
	bool IsHandbrakeActive();// 0xd9ed50
	bool IsEngineToggleActive();// 0xd9ed20
	bool IsEngineActive();// 0xd9ecf0
	float GetForwardSpeed();// 0xd9eb80
	float GetEngineRPM();// 0xd9eb40
	float GetEngineMaxRPM();// 0xd9eb00
	float GetEngineLoad();// 0xd9eac0
	float GetCurrentEngineToggleRequiredDuration();// 0xd9ea80
	float GetCurrentEngineTogglePercentage();// 0xd9ea40
	float GetCurrentEngineToggleElapsedTime();// 0xd9ea00
	void EjectAllExposedSeatPlayers();// 0xd9e650

--------------------------------
Class: SQVehicleEffectsQualitySetting
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	float CullingDistance;//[Offset: 0x4, Size: 1]

--------------------------------
Class: SQVehicleEffectConfig
	ParticleSystem* ParticleSystemTemplate;//[Offset: 0x0, Size: 1]
	ParticleSystemComponent* ParticleSystem;//[Offset: 0x8, Size: 1]
	bool bEnableSounds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x10, Size: 1]
	FName WheelBoneName;//[Offset: 0x14, Size: 1]
	VehicleWheel* VehicleWheel;//[Offset: 0x1c, Size: 1]
	SQDriveTrainComponent* VehicleDriveTrainComponent;//[Offset: 0x24, Size: 1]
	SQPhysicalMaterial* PhysMaterial;//[Offset: 0x2c, Size: 1]

--------------------------------
Class: SQWaterDamageComponent.ODKWaterDamageComponent.SQWaterPointTestComponent.ActorComponent.Object

--------------------------------
Class: SQWaterSeatEjectionComponent.SQWaterPointTestComponent.ActorComponent.Object

--------------------------------
Class: SQWaterDampeningComponent.SQWaterPointTestComponent.ActorComponent.Object

--------------------------------
Class: SpeedDialNumber_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	InvalidationBox* InvalidationBox;//[Offset: 0x268, Size: 1]
	TextBlock* TB_Num;//[Offset: 0x270, Size: 1]
	int Num;//[Offset: 0x278, Size: 1]
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_SpeedDialNumber(int EntryPoint, bool K2Node_Event_IsDesignTime, FText CallFunc_Conv_IntToText_ReturnValue);// 0x1d69c50

--------------------------------
Class: InvalidationBox.ContentWidget.PanelWidget.Widget.Visual.Object
	bool bCanCache;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x120, Size: 1]
	bool CacheRelativeTransforms;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x121, Size: 1]
	void SetCanCache(bool CanCache);// 0x33eb250
	void InvalidateCache();// 0xd59a20
	bool GetCanCache();// 0x33ea010

--------------------------------
Class: UMG_Inventory_C.SQInventoryWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a8, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup;//[Offset: 0x2b0, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2b8, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2c0, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2c8, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2d0, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2d8, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2e0, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2e8, Size: 1]
	UMG_InventoryGroup_C* UMG_InventoryGroup_C;//[Offset: 0x2f0, Size: 1]
	UMG_RearmCostInventory_C* UMG_RearmCostInventory;//[Offset: 0x2f8, Size: 1]
	VerticalBox* VerticalBox;//[Offset: 0x300, Size: 1]
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_Inventory(int EntryPoint, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, bool K2Node_Event_IsDesignTime, int CallFunc_GetChildrenCount_ReturnValue, int Temp_int_Variable, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, UMG_InventoryGroup_C* K2Node_DynamicCast_AsUMG_Inventory_Group, bool K2Node_DynamicCast_bSuccess, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, SQInventoryGroupWidget* K2Node_DynamicCast_AsSQInventory_Group_Widget, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQInventoryWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	SQInventoryGroupWidget*[] GroupsArray;//[Offset: 0x260, Size: 1]
	SQPlayerController* OwningController;//[Offset: 0x270, Size: 1]
	SQPawnInventoryComponent* RenderedInventory;//[Offset: 0x278, Size: 1]
	float MaxTranslucencyAlpha;//[Offset: 0x28c, Size: 1]
	float ItemSelectedAlpha;//[Offset: 0x290, Size: 1]
	float ItemUnselectedAlpha;//[Offset: 0x294, Size: 1]
	float FadeoutDuration;//[Offset: 0x298, Size: 1]
	float FadeoutDelay;//[Offset: 0x29c, Size: 1]
	SoundCue* ItemScrollSound;//[Offset: 0x2a0, Size: 1]
	void UpdateInventoryWidgets();// 0xda6fc0
	void UpdateElements();// 0xda6fa0
	void SetupInventoryWidgets();// 0xd3dac0
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQInventoryGroupWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	SQInventoryItemWidget*[] ItemsArray;//[Offset: 0x260, Size: 1]
	CanvasPanel* UnselectedGroupPanel;//[Offset: 0x270, Size: 1]
	HorizontalBox* ItemWidgetsHorizontalBox;//[Offset: 0x278, Size: 1]
	Image* UnselectedImage;//[Offset: 0x280, Size: 1]
	TextBlock* GroupNumber;//[Offset: 0x288, Size: 1]
	Image* GroupImage;//[Offset: 0x290, Size: 1]
	TextBlock* ItemNameTextBlock;//[Offset: 0x298, Size: 1]
	FText GroupName;//[Offset: 0x2a0, Size: 1]
	void UpdateState();// 0xd3dac0
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: SQInventoryItemWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	Image* ItemImage;//[Offset: 0x260, Size: 1]
	SQEquipableItem* CurrentItem;//[Offset: 0x268, Size: 1]
	TextBlock* MagTextBlock;//[Offset: 0x270, Size: 1]
	Image* BackgroundImage;//[Offset: 0x278, Size: 1]
	void UpdateState();// 0xd3dac0
	void InitWidget();// 0xd3d1a0

--------------------------------
Class: UMG_InventoryGroup_C.SQInventoryGroupWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2b8, Size: 1]
	TextBlock* ButtonNr;//[Offset: 0x2c0, Size: 1]
	Image* Category;//[Offset: 0x2c8, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x2d0, Size: 1]
	TextBlock* ItemName;//[Offset: 0x2d8, Size: 1]
	Image* Tab;//[Offset: 0x2e0, Size: 1]
	UMG_InventoryItem_C* UMG_InventoryItem_C;//[Offset: 0x2e8, Size: 1]
	UMG_InventoryItem_C* UMG_InventoryItem_C;//[Offset: 0x2f0, Size: 1]
	UMG_InventoryItem_C* UMG_InventoryItem_C;//[Offset: 0x2f8, Size: 1]
	UMG_InventoryItem_C* UMG_InventoryItem_C;//[Offset: 0x300, Size: 1]
	UMG_InventoryItem_C* UMG_InventoryItem_C;//[Offset: 0x308, Size: 1]
	CanvasPanel* UnselectedPanel;//[Offset: 0x310, Size: 1]
	void Check Opacity(bool Has Ammo, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, LinearColor CallFunc_SelectColor_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQInventoryItemWidget* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQInfantryWeapon* K2Node_DynamicCast_AsSQInfantry_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAmmo_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_HasAmmo_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh();// 0x1d69c50
	void ExecuteUbergraph_UMG_InventoryGroup(int EntryPoint, bool CallFunc_IsVisible_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, int Temp_int_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, SQInventoryItemWidget* K2Node_DynamicCast_AsSQInventory_Item_Widget, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_InventoryItem_C.SQInventoryItemWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	Image* Background;//[Offset: 0x288, Size: 1]
	Border* Border;//[Offset: 0x290, Size: 1]
	Image* Item;//[Offset: 0x298, Size: 1]
	TextBlock* MagText;//[Offset: 0x2a0, Size: 1]
	void Construct();// 0x1d69c50
	void UpdateState();// 0x1d69c50
	void ExecuteUbergraph_UMG_InventoryItem(int EntryPoint, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, SQInfantryWeapon* K2Node_DynamicCast_AsSQInfantry_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAmmo_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_HasAmmo_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: UMG_RearmCostInventory_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Image;//[Offset: 0x268, Size: 1]
	TextBlock* TextCost;//[Offset: 0x270, Size: 1]
	enum RearmType;//[Offset: 0x278, Size: 1]
	float Current Vehicle Rearm Cost;//[Offset: 0x27c, Size: 1]
	void UpdateRearmCost();// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_RearmCostInventory(int EntryPoint, bool CallFunc_IsVisible_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQVehicleInventoryComponent* CallFunc_GetSeatPawnInventory_ReturnValue, float CallFunc_CalculateMissingAmmoCost_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_FFloor_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, float CallFunc_CalculateMissingAmmoCost_ReturnValue, int CallFunc_FFloor_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_HelicopterStatus_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	UMG_GenericState_C* EngineState;//[Offset: 0x268, Size: 1]
	ProgressBar* HealthBar;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	UMG_GenericState_C* MainRotor;//[Offset: 0x280, Size: 1]
	UMG_GenericState_C* TailRotor;//[Offset: 0x288, Size: 1]
	Border* VehicleHealth;//[Offset: 0x290, Size: 1]
	SQHelicopter2* REF Helicopter;//[Offset: 0x298, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2a0, Size: 1]
	void Update Tail Rotor State(LinearColor L Health Color, SQRotorBladesComponent* L Rotor, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, SQRotorBladesComponent* CallFunc_Get_Specific_Blades_Rotor, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue);// 0x1d69c50
	void Get Specific Blades(bool Main, out SQRotorBladesComponent* Rotor, bool Temp_bool_Variable, SQRotorBladesComponent* K2Node_Select_Default);// 0x1d69c50
	void VehicleHealthColor(float CallFunc_Get_VehicleHealthPercent_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void Update Main Rotor State(LinearColor L Health Color, SQRotorBladesComponent* L Rotor, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, SQRotorBladesComponent* CallFunc_Get_Specific_Blades_Rotor, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue);// 0x1d69c50
	void Update Engine State(SQVehicleEngine* L Engine, LinearColor L Health Color, LinearColor L Engine Toggle Color, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool CallFunc_IsEngineActive_ReturnValue, float CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_GetCurrentEngineTogglePercentage_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_IsEngineToggleActive_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool Temp_bool_Variable, SQVehicleComponent* CallFunc_GetVehicleEngine_ReturnValue, float CallFunc_GetNormalizedHealth_ReturnValue, SQVehicleEngine* K2Node_DynamicCast_AsSQVehicle_Engine, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_FloatFloat_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, Texture2D* K2Node_Select_Default, float CallFunc_FInterpTo_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	float Get_VehicleHealthPercent(bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Get Helicopter(SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQHelicopter2* K2Node_DynamicCast_AsSQHelicopter, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh Vehicle();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_HelicopterStatus(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: UMG_GenericState_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Image* Icon;//[Offset: 0x268, Size: 1]
	Image* InnerBar;//[Offset: 0x270, Size: 1]
	Image* OuterBar;//[Offset: 0x278, Size: 1]
	MaterialInstanceDynamic* MI_InnerBar;//[Offset: 0x280, Size: 1]
	MaterialInstanceDynamic* MI_OuterBar;//[Offset: 0x288, Size: 1]
	Texture2D* State Texture;//[Offset: 0x290, Size: 1]
	bool Inner Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	bool Outer Visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x299, Size: 1]
	LinearColor Inner Bar Color;//[Offset: 0x29c, Size: 1]
	LinearColor Outer Bar Color;//[Offset: 0x2ac, Size: 1]
	LinearColor Icon Color;//[Offset: 0x2bc, Size: 1]
	float Outer Percent;//[Offset: 0x2cc, Size: 1]
	float Inner Percent;//[Offset: 0x2d0, Size: 1]
	void Set Icon Color(LinearColor InColorAndOpacity);// 0x1d69c50
	void Set Outer Color(LinearColor InColorAndOpacity);// 0x1d69c50
	void Set Inner Color(LinearColor InColorAndOpacity);// 0x1d69c50
	void Set Icon(Texture2D* Texture);// 0x1d69c50
	void Set Outer Visibility(bool Outer Visible, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void Set Inner Visibility(bool Inner Visible, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, enum K2Node_Select_Default);// 0x1d69c50
	void Set Outer Bar Percent(float Value);// 0x1d69c50
	void Set Inner Bar Percent(float Value);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_GenericState(int EntryPoint, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, MaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, bool K2Node_Event_IsDesignTime);// 0x1d69c50

--------------------------------
Class: W_InteractableItem_SelfHeal_C.W_InteractableItem_Master_C.SQInteractableWidgetItem.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2c0, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x2c8, Size: 1]
	WidgetAnimation* Bleed;//[Offset: 0x2d0, Size: 1]
	HorizontalBox* FormatBox;//[Offset: 0x2d8, Size: 1]
	Image* Image;//[Offset: 0x2e0, Size: 1]
	Image* Line;//[Offset: 0x2e8, Size: 1]
	bool Is Shown;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f0, Size: 1]
	void Has Field Dressings(SQSoldier* Inventory, out bool Has Dressing, out int Slot, SQPawnInventoryComponent* CallFunc_GetInventory_ReturnValue, int Temp_int_Loop_Counter_Variable, const SQWeaponGroupData[] CallFunc_GetInventoryItemGroups_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, SQWeaponGroupData CallFunc_Array_Get_Item, SQEquipableItem* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, SQHealingEquipableItem* K2Node_DynamicCast_AsSQHealing_Equipable_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAmmo_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50
	void Set Visibility(bool Show, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, byte K2Node_Select_Default, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);// 0x1d69c50
	void Has Healing Item();// 0x1d69c50
	void Update Self Heal(SQSoldier* L Soldier, SQUsableWidgetData K2Node_MakeStruct_SQUsableWidgetData, bool Temp_bool_Variable, bool CallFunc_IsInVehicle_ReturnValue, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, SQHealingEquipableItem* K2Node_DynamicCast_AsSQHealing_Equipable_Item, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Has_Field_Dressings_Has_Dressing, int CallFunc_Has_Field_Dressings_Slot, int CallFunc_Add_IntInt_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, SQUsableWidgetData K2Node_MakeStruct_SQUsableWidgetData, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, FText CallFunc_Format_ReturnValue, SQUsableWidgetData K2Node_MakeStruct_SQUsableWidgetData, SQUsableWidgetData K2Node_MakeStruct_SQUsableWidgetData, SQUsableWidgetData K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsAlive_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Get Format Box(out HorizontalBox* FormatBox);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_InteractableItem_SelfHeal(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_InteractableItem_Master_C.SQInteractableWidgetItem.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SQUsableWidgetData Data;//[Offset: 0x268, Size: 1]
	Actor* Interact Actor;//[Offset: 0x2a0, Size: 1]
	FText Last Text;//[Offset: 0x2a8, Size: 1]
	void Get Format Box(out HorizontalBox* FormatBox);// 0x1d69c50
	void Format Text(FString L String, W_KeybindItem_C* CallFunc_Create_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, W_TextItem_C* CallFunc_Create_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, HorizontalBox* CallFunc_Get_Format_Box_FormatBox, FText CallFunc_Conv_StringToText_ReturnValue, W_TextItem_C* CallFunc_Create_ReturnValue, HorizontalBox* CallFunc_Get_Format_Box_FormatBox, HorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, HorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, HorizontalBox* CallFunc_Get_Format_Box_FormatBox, HorizontalBox* CallFunc_Get_Format_Box_FormatBox, HorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString[] CallFunc_ParseIntoArray_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Array_Get_Item, FString[] CallFunc_ParseIntoArray_ReturnValue, FText CallFunc_Get_Short_Action_Name_Short_Name, FString CallFunc_Array_Get_Item, FString CallFunc_Conv_TextToString_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_TextText_ReturnValue);// 0x1d69c50
	void Get Short Action Name(FString In Action, out FText Short Name, FName CallFunc_Conv_StringToName_ReturnValue, FName CallFunc_GetActionKeyName_Name, bool K2Node_SwitchName_CmpSuccess, FText CallFunc_Conv_NameToText_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue);// 0x1d69c50
	void Set Interactable Actor(Actor* Actor);// 0x1d69c50
	void Clear Interactable();// 0x1d69c50
	void Set Interact Data(SQUsableWidgetData Interact Data, Actor* Actor);// 0x1d69c50
	void ExecuteUbergraph_W_InteractableItem_Master(int EntryPoint, SQUsableWidgetData K2Node_Event_Interact_Data, Actor* K2Node_Event_Actor, Actor* K2Node_Event_Actor);// 0x1d69c50

--------------------------------
Class: SQHealingEquipableItem.SQEquipableItem.Actor.Object
	float TraceLength;//[Offset: 0x460, Size: 1]
	float TraceSphereRadius;//[Offset: 0x464, Size: 1]
	float MaxDurationForCancel;//[Offset: 0x468, Size: 1]
	Color ErrorMessageColor;//[Offset: 0x46c, Size: 1]
	float ErrorMessageLifetime;//[Offset: 0x470, Size: 1]
	SQSoldier* HealedTarget;//[Offset: 0x478, Size: 1]
	AudioComponent* HealthAudioComponent;//[Offset: 0x480, Size: 1]
	void OnRep_HealedTarget(SQSoldier* PreviousHealedTarget);// 0xda3b90

--------------------------------
Class: W_KeybindItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* KeybindText;//[Offset: 0x268, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x270, Size: 1]
	FText KeyBind;//[Offset: 0x278, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_KeybindItem(int EntryPoint);// 0x1d69c50

--------------------------------
Class: W_TextItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* Text;//[Offset: 0x268, Size: 1]
	FText In Text;//[Offset: 0x270, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_TextItem(int EntryPoint);// 0x1d69c50

--------------------------------
Class: W_Medic_GiveUp_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	MainMenu_Button_C* Button_CallMedic;//[Offset: 0x268, Size: 1]
	MainMenu_Button_C* Button_Giveup;//[Offset: 0x270, Size: 1]
	ChallengeWindow_C* ChallengeGiveUp;//[Offset: 0x278, Size: 1]
	Image* Image;//[Offset: 0x280, Size: 1]
	SettingsItem_TickBox_C* SettingsItem_TickBox;//[Offset: 0x288, Size: 1]
	Border* SkipBorder;//[Offset: 0x290, Size: 1]
	TextBlock* TB_Bleed;//[Offset: 0x298, Size: 1]
	TextBlock* TB_MedicDistance;//[Offset: 0x2a0, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x2a8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2b0, Size: 1]
	SQInputState Wounded Stack;//[Offset: 0x2b8, Size: 1]
	SaveData_UI_C* Current Save;//[Offset: 0x2d8, Size: 1]
	float Incrementing Medic Call Delay;//[Offset: 0x2e0, Size: 1]
	bool Can Medic Call;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e4, Size: 1]
	TimerHandle Medic Cooldown;//[Offset: 0x2e8, Size: 1]
	float Initial Delay Time;//[Offset: 0x2f0, Size: 1]
	float TimeSinceWounded;//[Offset: 0x2f4, Size: 1]
	bool RefreshPaused;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2f8, Size: 1]
	float DelayOnWounded;//[Offset: 0x2fc, Size: 1]
	void GetMedicCall(out bool ValidMedicCall, out SoundCue* MedicCall, bool Temp_bool_Variable, bool Temp_bool_Variable, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry, bool CallFunc_IsSquadLeader_ReturnValue, SoundCue* K2Node_Select_Default, SoundCue* K2Node_Select_Default, bool CallFunc_IsValidSoftObjectReference_ReturnValue);// 0x1d69c50
	void Get Visibility if Dead(out bool is visible, SQSoldier* SoldierLocal, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_IsVisible_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Get Teammate Distance(out SQSoldier* Teammate, out float distance, Pawn* L Pawn, float Last Distance, SQSoldier* Nearest Teammate, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_IsValid_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQPlayerState* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAlive_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void OnLoaded_AFF1CC584BBDF1233D1C2888084E5A4D(Object* Loaded);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh();// 0x1d69c50
	void BndEvt__ChallengeSwitchTeam_K2Node_ComponentBoundEvent_24_OnLeftButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__ChallengeSwitchTeam_K2Node_ComponentBoundEvent_0_OnRightButtonClicked__DelegateSignature();// 0x1d69c50
	void BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_56_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void BndEvt__SettingsItem_TickBox_K2Node_ComponentBoundEvent_51_OnClicked__DelegateSignature(bool bSelected, SettingsItem_TickBox_C* Button);// 0x1d69c50
	void GiveUp();// 0x1d69c50
	void BndEvt__Button_Medic_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, MainMenu_Button_C* Button);// 0x1d69c50
	void Enable Medic Button();// 0x1d69c50
	void Initial Delay for Medic Call();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void StartDelayOnWounded();// 0x1d69c50
	void ExecuteUbergraph_W_Medic_GiveUp(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, bool Temp_bool_Variable, FText Temp_text_Variable, Object* K2Node_CustomEvent_Loaded, Object* Temp_object_Variable, SoundCue* K2Node_DynamicCast_AsSound_Cue, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, SQSoldier* CallFunc_Get_Teammate_Distance_Teammate, float CallFunc_Get_Teammate_Distance_Distance, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, FString CallFunc_GetFullPlayerName_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Get_Visibility_if_Dead_is_visible, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQSoldier* CallFunc_GetSoldier_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, float CallFunc_Abs_ReturnValue, FText CallFunc_Format_ReturnValue, FText CallFunc_MakeLiteralText_ReturnValue, float CallFunc_Abs_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, float CallFunc_Subtract_FloatFloat_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool K2Node_ComponentBoundEvent_bSelected, SettingsItem_TickBox_C* K2Node_ComponentBoundEvent_Button, bool CallFunc_Array_Contains_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, bool K2Node_ComponentBoundEvent_bSelected, MainMenu_Button_C* K2Node_ComponentBoundEvent_Button, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, VoiceAction_Component_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_Try_to_Play_Voice_Played, bool CallFunc_IsValid_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, float CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, FText CallFunc_Conv_FloatToText_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, FText K2Node_Select_Default, bool CallFunc_IsVisible_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, bool CallFunc_GetMedicCall_ValidMedicCall, SoundCue* CallFunc_GetMedicCall_MedicCall, bool Temp_bool_Variable, FText K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: VoiceAction_Component_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	float Last Voice Time;//[Offset: 0xb8, Size: 1]
	float Current Voice Delay;//[Offset: 0xbc, Size: 1]
	float Additional Voice Delay;//[Offset: 0xc0, Size: 1]
	Vector Sound Local Offset;//[Offset: 0xc4, Size: 1]
	void Try to Play Voice(SoundBase* Voice, out bool Played, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);// 0x1d69c50
	void Multicast Voice(SoundBase* Sound);// 0x1d69c50
	void Server Play Voice(SoundBase* Sound);// 0x1d69c50
	void ExecuteUbergraph_VoiceAction_Component(int EntryPoint, SoundBase* K2Node_CustomEvent_Sound, SoundBase* K2Node_Event_Sound, Actor* CallFunc_GetOwner_ReturnValue, SceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, AudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, HitResult CallFunc_K2_AddLocalOffset_SweepHitResult, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_OutOfBounds_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* RepeatAnim;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	Image* Line;//[Offset: 0x278, Size: 1]
	float Kill Timestamp;//[Offset: 0x280, Size: 1]
	void Show Out of Bounds Widget();// 0x1d69c50
	void Hide Out of Bounds Widget();// 0x1d69c50
	void ExecuteUbergraph_W_OutOfBounds(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_RestrictedTeamZone_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* RepeatAnim;//[Offset: 0x268, Size: 1]
	Image* Image;//[Offset: 0x270, Size: 1]
	Image* Line;//[Offset: 0x278, Size: 1]
	float Kill Timestamp;//[Offset: 0x280, Size: 1]
	SQBuffManager* BuffManager;//[Offset: 0x288, Size: 1]
	void ShowRestrictedTeamZoneWidget();// 0x1d69c50
	void HideRestrictedTeamZoneWidget();// 0x1d69c50
	void ExecuteUbergraph_W_RestrictedTeamZone(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_LandingCamUI_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	TextBlock* AltitudeText;//[Offset: 0x268, Size: 1]
	Image* BlinkingLight01;//[Offset: 0x270, Size: 1]
	Image* BlinkingLight02;//[Offset: 0x278, Size: 1]
	Image* CompassCentre;//[Offset: 0x280, Size: 1]
	Image* CompassCircle;//[Offset: 0x288, Size: 1]
	Image* Image;//[Offset: 0x290, Size: 1]
	Image* Image;//[Offset: 0x298, Size: 1]
	Image* Image;//[Offset: 0x2a0, Size: 1]
	Image* Image;//[Offset: 0x2a8, Size: 1]
	Image* Image;//[Offset: 0x2b0, Size: 1]
	Image* Image;//[Offset: 0x2b8, Size: 1]
	Image* Image;//[Offset: 0x2c0, Size: 1]
	TextBlock* KNOTSHSPEED;//[Offset: 0x2c8, Size: 1]
	TextBlock* pitchValue;//[Offset: 0x2d0, Size: 1]
	ProgressBar* Prog_PitchDown;//[Offset: 0x2d8, Size: 1]
	ProgressBar* Prog_PitchUp;//[Offset: 0x2e0, Size: 1]
	ProgressBar* Prog_RollLeft;//[Offset: 0x2e8, Size: 1]
	ProgressBar* Prog_RollRight;//[Offset: 0x2f0, Size: 1]
	TextBlock* RollValue;//[Offset: 0x2f8, Size: 1]
	Image* ScreenBorder;//[Offset: 0x300, Size: 1]
	TextBlock* TAXI_Indicator;//[Offset: 0x308, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x310, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x318, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x320, Size: 1]
	ProgressBar* Throttle;//[Offset: 0x328, Size: 1]
	TextBlock* ThrottlePercent;//[Offset: 0x330, Size: 1]
	Border* Tint;//[Offset: 0x338, Size: 1]
	WidgetSwitcher* WidgetSwitcher;//[Offset: 0x340, Size: 1]
	BP_Generic_Helicopter_C* Helicopter;//[Offset: 0x348, Size: 1]
	float RPMTarget;//[Offset: 0x350, Size: 1]
	bool ScreenEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x354, Size: 1]
	void Get Helicopter(interface classNone K2Node_DynamicCast_AsBPI_Helicopter, bool K2Node_DynamicCast_bSuccess, LinearColor CallFunc_Get_UI_Tint_Color, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, BP_Generic_Helicopter_C* K2Node_DynamicCast_AsBP_Generic_Helicopter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Helicopter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh HelicopterDisplay();// 0x1d69c50
	void Update TAXI();// 0x1d69c50
	void Update MainDisplay();// 0x1d69c50
	void Update RPM();// 0x1d69c50
	void Update Roll Pitch Bars();// 0x1d69c50
	void ExecuteUbergraph_W_LandingCamUI(int EntryPoint, bool Temp_bool_Variable, delegate K2Node_CreateDelegate_OutputDelegate, FText Temp_text_Variable, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, FText Temp_text_Variable, bool CallFunc_IsValid_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Abs_ReturnValue, bool CallFunc_IsEngineActive_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_Abs_ReturnValue, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, int Temp_int_Variable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, int Temp_int_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, int K2Node_Select_Default, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, int CallFunc_FFloor_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, int CallFunc_FTrunc_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, float CallFunc_GetVisualCollective_Collectives, FText CallFunc_AsPercent_Float_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, FormatArgumentData K2Node_MakeStruct_FormatArgumentData, FormatArgumentData[] K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Multiply_FloatFloat_ReturnValue, FText K2Node_Select_Default, int CallFunc_FFloor_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, FString CallFunc_Conv_TextToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, interface classNone CallFunc_GetForwardSpeed_self_CastInput, float CallFunc_GetForwardSpeed_ReturnValue, float CallFunc_Abs_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, int CallFunc_FFloor_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, Rotator CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_MapRangeClamped_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_Vehicle_Tutorial_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	HorizontalBox* ChangeFiremodeBox;//[Offset: 0x268, Size: 1]
	HorizontalBox* CockpitZoom;//[Offset: 0x270, Size: 1]
	HorizontalBox* Collective;//[Offset: 0x278, Size: 1]
	HorizontalBox* DesignateBox;//[Offset: 0x280, Size: 1]
	HorizontalBox* FocusBox;//[Offset: 0x288, Size: 1]
	HorizontalBox* HandbrakeBox;//[Offset: 0x290, Size: 1]
	HorizontalBox* LandingCam;//[Offset: 0x298, Size: 1]
	HorizontalBox* SmokeBox;//[Offset: 0x2a0, Size: 1]
	HorizontalBox* StabiliseBox;//[Offset: 0x2a8, Size: 1]
	TextBlock* TB_Engine_State;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_Engine_State;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_Keys;//[Offset: 0x2c0, Size: 1]
	HorizontalBox* ToggleEngineBox;//[Offset: 0x2c8, Size: 1]
	HorizontalBox* ViewDesignatedBox;//[Offset: 0x2d0, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem;//[Offset: 0x2d8, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem;//[Offset: 0x2e0, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x2e8, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x2f0, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x2f8, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x300, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x308, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x310, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x318, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x320, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x328, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x330, Size: 1]
	W_ParseKeybindItem_C* W_ParseKeybindItem_C;//[Offset: 0x338, Size: 1]
	HorizontalBox* ZoomBox;//[Offset: 0x340, Size: 1]
	HorizontalBox* ZoomwhileADSBox;//[Offset: 0x348, Size: 1]
	SQPlayerController* PC;//[Offset: 0x350, Size: 1]
	SQVehicle* My Vehicle;//[Offset: 0x358, Size: 1]
	BP_GenericDeployableTripodVehicle_C* EmplacedTripodRef;//[Offset: 0x360, Size: 1]
	void CanDesignateForSeat(int InSeatIndex, out bool Can Designate, SQVehicleSeatComponent*[] LVicSeats, SQVehicleSeatComponent* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, SQVehicleSeat* CallFunc_GetSeatPawn_ReturnValue, SQVehicleTurretClosedTop* K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top, bool K2Node_DynamicCast_bSuccess, SQVehicleSeatComponent*[] CallFunc_GetSeats_ReturnValue);// 0x1d69c50
	void Set Helicopter Tips(bool CallFunc_IsValid_ReturnValue, SQHelicopter2* K2Node_DynamicCast_AsSQHelicopter, bool K2Node_DynamicCast_bSuccess, SQVehicleSeatComponent* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Set Engine Text(bool Temp_bool_Variable, FText Temp_text_Variable, FText Temp_text_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, FText K2Node_Select_Default, FText Temp_text_Variable, FText Temp_text_Variable, interface classNone K2Node_DynamicCast_AsSQHelicopter_Instruments, bool K2Node_DynamicCast_bSuccess, SQGroundVehicle* K2Node_DynamicCast_AsSQGround_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsEngineActive_ReturnValue, FText K2Node_Select_Default);// 0x1d69c50
	void Refresh Visibility(bool bCanDesignate, SQWeaponData NewLocalVar, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, SQGroundVehicle* K2Node_DynamicCast_AsSQGround_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQHelicopter2* K2Node_DynamicCast_AsSQHelicopter, bool K2Node_DynamicCast_bSuccess, SQGroundVehicle* K2Node_DynamicCast_AsSQGround_Vehicle, bool K2Node_DynamicCast_bSuccess, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, BP_GenericVehicleOpenTurret_C* K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret, bool K2Node_DynamicCast_bSuccess, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, SQVehicleTurretOpenTop* K2Node_DynamicCast_AsSQVehicle_Turret_Open_Top, bool K2Node_DynamicCast_bSuccess, BP_GenericVehicleOpenTurret_C* K2Node_DynamicCast_AsBP_Generic_Vehicle_Open_Turret, bool K2Node_DynamicCast_bSuccess, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleInventoryComponent* CallFunc_GetVehicleInventory_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanToggleFiremode_ReturnValue, enum Temp_byte_Variable, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, enum Temp_byte_Variable, SQVehicleInventoryComponent* CallFunc_GetComponentByClass_ReturnValue, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleTurretClosedTop* K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top, bool K2Node_DynamicCast_bSuccess, SQVehicleSmokeGenerator* K2Node_DynamicCast_AsSQVehicle_Smoke_Generator, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, SaveData_UI_C* CallFunc_Get_UI_Save_Data_UI_Save_Data, SQVehicleTurretClosedTop* K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_IsValidIndex_ReturnValue, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, SQVehicleTurretClosedTop* K2Node_DynamicCast_AsSQVehicle_Turret_Closed_Top, bool K2Node_DynamicCast_bSuccess, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_CanDesignateForSeat_Can_Designate, enum K2Node_Select_Default, enum Temp_byte_Variable, enum Temp_byte_Variable, SQVehicleSeatComponent* CallFunc_GetCurrentSeat_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, enum K2Node_Select_Default, SQVehicleSeat* CallFunc_GetCurrentSeatPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Update();// 0x1d69c50
	void Refresh Vehicle Reference(SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_W_Vehicle_Tutorial(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQVehicleTurretClosedTop.SQVehicleTurret.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	bool bCanStabilize;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x3c0, Size: 1]
	float HealthToEnableStabilizer;//[Offset: 0x3c4, Size: 1]
	SoundBase* StabilizationToggleSound;//[Offset: 0x3c8, Size: 1]
	int GunLineOfSightSeatIndex;//[Offset: 0x3d0, Size: 1]
	class SQVehicleViewWidget* TurretOverlay;//[Offset: 0x3d8, Size: 1]
	int CurrentZoom;//[Offset: 0x3e0, Size: 1]
	float[] ZoomLevels;//[Offset: 0x3e8, Size: 1]
	SoundBase* ZoomToggleSound;//[Offset: 0x3f8, Size: 1]
	float ZoomToggleSoundPitch;//[Offset: 0x400, Size: 1]
	void ResetZoom();// 0x1d69c50
	bool IsStabilizationEnabled();// 0xe3cb20
	void BP_OnVehicleZoom();// 0x1d69c50

--------------------------------
Class: BP_GenericDeployableTripodVehicle_C.SQDeployableTripodVehicle.SQDeployableVehicle.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x8f0, Size: 1]
	SQTurretMovementComponent* SQTurretMovement;//[Offset: 0x8f8, Size: 1]
	SQRotationMovementAudioComponent* SQRotationMovementAudio;//[Offset: 0x900, Size: 1]
	BoxComponent* InteractBox;//[Offset: 0x908, Size: 1]
	float InterpolateZoom_Alpha_AFDD346B4C31DFA43382A3A0259D66C3;//[Offset: 0x910, Size: 1]
	byte InterpolateZoom__Direction_AFDD346B4C31DFA43382A3A0259D66C3;//[Offset: 0x914, Size: 1]
	TimelineComponent* InterpolateZoom;//[Offset: 0x918, Size: 1]
	float Scope_InterpolateZoom_lerp_312667D24DA06968478036B24436F0C7;//[Offset: 0x920, Size: 1]
	byte Scope_InterpolateZoom__Direction_312667D24DA06968478036B24436F0C7;//[Offset: 0x924, Size: 1]
	TimelineComponent* Scope_InterpolateZoom;//[Offset: 0x928, Size: 1]
	bool bIsInThirdPerson;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x930, Size: 1]
	Vector2D FreelookLimitPitch;//[Offset: 0x934, Size: 1]
	Vector2D FreelookLimitYaw;//[Offset: 0x93c, Size: 1]
	bool bAllowFocus;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x944, Size: 1]
	bool bUseVehicleZoom;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x945, Size: 1]
	bool bTripodIsADS;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x946, Size: 1]
	float[] ZoomLevels;//[Offset: 0x948, Size: 1]
	int CurrentZoom;//[Offset: 0x958, Size: 1]
	float ElevationSpeedMultiplier;//[Offset: 0x95c, Size: 1]
	float MaxElevationSpeed;//[Offset: 0x960, Size: 1]
	float RotationSpeedMultiplier;//[Offset: 0x964, Size: 1]
	float MaxRotationSpeed;//[Offset: 0x968, Size: 1]
	bool ZoomTimer;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x96c, Size: 1]
	float KeyboardYawRotationMultiplier;//[Offset: 0x970, Size: 1]
	float KeyboardPitchRotationMultiplier;//[Offset: 0x974, Size: 1]
	float KeyboardYawRotationADSMultiplier;//[Offset: 0x978, Size: 1]
	bool bUseADSMultiplier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x97c, Size: 1]
	float KeyboardPtichRotationADSMultiplier;//[Offset: 0x980, Size: 1]
	void UserConstructionScript();// 0x1d69c50
	void Scope_InterpolateZoom__FinishedFunc();// 0x1d69c50
	void Scope_InterpolateZoom__UpdateFunc();// 0x1d69c50
	void InterpolateZoom__FinishedFunc();// 0x1d69c50
	void InterpolateZoom__UpdateFunc();// 0x1d69c50
	void InpActEvt_Focus_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Focus_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_VehicleZoom_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void ReceivePossessed(Controller* NewController);// 0x1d69c50
	void ReceiveUnpossessed(Controller* OldController);// 0x1d69c50
	void ResetZoom();// 0x1d69c50
	void NetworkResetZoom();// 0x1d69c50
	void GotoVehicleZeroZoom();// 0x1d69c50
	void InpAxisEvt_Turn_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ZoomForward();// 0x1d69c50
	void ZoomReverse();// 0x1d69c50
	void InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ExecuteUbergraph_BP_GenericDeployableTripodVehicle(int EntryPoint, Controller* K2Node_Event_NewController, Controller* K2Node_Event_OldController, bool CallFunc_IsValid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Array_Get_Item, float CallFunc_Divide_FloatFloat_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsZoomed_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsZoomed_ReturnValue, float CallFunc_Lerp_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, Rotator CallFunc_MakeRotator_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, Key K2Node_InputActionEvent_Key, Key Temp_struct_Variable, float K2Node_InputAxisEvent_AxisValue, bool Temp_bool_IsClosed_Variable, Key K2Node_InputActionEvent_Key, float K2Node_InputAxisEvent_AxisValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, Key K2Node_InputActionEvent_Key, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsZoomed_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsZoomed_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQDeployableTripodVehicle.SQDeployableVehicle.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	SceneComponent* AdsCamera1pPositionComponent;//[Offset: 0x8e0, Size: 1]
	SQTurretMovementComponent* GetTurretMovementComponent();// 0xd7db10

--------------------------------
Class: SQRotationMovementAudioComponent.AudioComponent.SceneComponent.ActorComponent.Object
	SQMovementComponentBase* PitchMovementComponent;//[Offset: 0x860, Size: 1]
	SQMovementComponentBase* YawMovementComponent;//[Offset: 0x868, Size: 1]
	enum RotationMovementState;//[Offset: 0x870, Size: 1]
	SoundBase* StartingSound;//[Offset: 0x878, Size: 1]
	SoundBase* MovingSound;//[Offset: 0x880, Size: 1]
	SoundBase* StoppingSound;//[Offset: 0x888, Size: 1]
	float SlowIdleDuration;//[Offset: 0x890, Size: 1]
	float SlowIdleTickInterval;//[Offset: 0x894, Size: 1]
	float IdleFadeOutDuration;//[Offset: 0x898, Size: 1]
	float StartingDuration;//[Offset: 0x89c, Size: 1]
	float MovingToStoppingDuration;//[Offset: 0x8a0, Size: 1]
	float StoppingDuration;//[Offset: 0x8a4, Size: 1]

--------------------------------
Class: BP_GenericVehicleOpenTurret_C.SQVehicleTurretOpenTop.SQVehicleTurret.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x3c0, Size: 1]
	SQTurretMovementComponent* SQTurretMovement;//[Offset: 0x3c8, Size: 1]
	SQRotationMovementAudioComponent* SQRotationMovementAudio;//[Offset: 0x3d0, Size: 1]
	SceneComponent* Camera1pPositionComponent;//[Offset: 0x3d8, Size: 1]
	SceneComponent* AdsCamera1pPositionComponent;//[Offset: 0x3e0, Size: 1]
	SkeletalMeshComponent* Turret_SkeletalMesh;//[Offset: 0x3e8, Size: 1]
	CameraComponent* Camera1pComponent;//[Offset: 0x3f0, Size: 1]
	SceneComponent* GunMountComponent;//[Offset: 0x3f8, Size: 1]
	SQVehicleInventoryComponent* SQVehicleInventory;//[Offset: 0x400, Size: 1]
	float Zoom_Interpolate_Alpha_946F826C4828AA1170ED87A663F2BEA9;//[Offset: 0x408, Size: 1]
	byte Zoom_Interpolate__Direction_946F826C4828AA1170ED87A663F2BEA9;//[Offset: 0x40c, Size: 1]
	TimelineComponent* Zoom_Interpolate;//[Offset: 0x410, Size: 1]
	float RotationSpeedMultiplier;//[Offset: 0x418, Size: 1]
	float MaxRotationSpeed;//[Offset: 0x41c, Size: 1]
	float ElevationSpeedMultiplier;//[Offset: 0x420, Size: 1]
	float MaxElevationSpeed;//[Offset: 0x424, Size: 1]
	bool ResetOrientationPitch;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x428, Size: 1]
	SQPlayerController* CurrentPlayerController;//[Offset: 0x430, Size: 1]
	bool ResetOrientationYaw;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x438, Size: 1]
	bool Can Show Zoom Tutorial;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x439, Size: 1]
	bool Can Show Zoom While ADS Tutorial;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x43a, Size: 1]
	float KeyboardYawRotationMultiplier;//[Offset: 0x43c, Size: 1]
	float KeyboardPitchRotationMultiplier;//[Offset: 0x440, Size: 1]
	float KeyboardYawRotationADSMultiplier;//[Offset: 0x444, Size: 1]
	bool bUseADSMultiplier;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x448, Size: 1]
	float KeyboardPitchRotationADSMultiplier;//[Offset: 0x44c, Size: 1]
	SceneComponent* GetSoldierAttachComponent();// 0x1d69c50
	SceneComponent* GetADSCameraLocationComponent();// 0x1d69c50
	SceneComponent* GetDefaultCameraLocationComponent();// 0x1d69c50
	SceneComponent* GetWeaponAttachComponent();// 0x1d69c50
	SkinnedMeshComponent* GetMasterPoseComponent();// 0x1d69c50
	SceneComponent* Get1PAttachComponent();// 0x1d69c50
	SceneComponent* Get3PAttachComponent();// 0x1d69c50
	void UserConstructionScript();// 0x1d69c50
	void Zoom_Interpolate__FinishedFunc();// 0x1d69c50
	void Zoom_Interpolate__UpdateFunc();// 0x1d69c50
	void InpActEvt_Focus_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Focus_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Fire_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpActEvt_Fire_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void InpAxisEvt_Turn_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ZoomForward();// 0x1d69c50
	void ZoomReverse();// 0x1d69c50
	void InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent(float AxisValue);// 0x1d69c50
	void ExecuteUbergraph_BP_GenericVehicleOpenTurret(int EntryPoint, Key K2Node_InputActionEvent_Key, Key K2Node_InputActionEvent_Key, Key Temp_struct_Variable, SQVehicleInventoryComponent* CallFunc_GetVehicleInventory_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, Rotator CallFunc_MakeRotator_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float K2Node_InputAxisEvent_AxisValue, float K2Node_InputAxisEvent_AxisValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, float CallFunc_Lerp_ReturnValue, bool CallFunc_IsZoomed_ReturnValue, Key Temp_struct_Variable, Key K2Node_InputActionEvent_Key, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, bool CallFunc_IsCurrentWeaponInputEnabled_ReturnValue, Key K2Node_InputActionEvent_Key, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, SQWeapon* K2Node_DynamicCast_AsSQWeapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsZoomed_ReturnValue, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQVehicleTurretOpenTop.SQVehicleTurret.SQVehicleSeat.SQPawn.Pawn.Actor.Object

--------------------------------
Class: SQVehicleSmokeGenerator.SQVehicleWeapon.SQWeapon_Effects.SQWeapon.SQEquipableItem.Actor.Object
	AudioComponent* SmokeGeneratorSound;//[Offset: 0xab0, Size: 1]
	SQGroundVehicle* VehicleRef;//[Offset: 0xab8, Size: 1]
	ParticleSystemComponent*[] SmokeGenerators;//[Offset: 0xac0, Size: 1]
	SQLastingEffect*[] LastingSmokeGenerators;//[Offset: 0xad0, Size: 1]
	SoundBase* LoopingSmokeGenSound;//[Offset: 0xae0, Size: 1]
	float FadeInDuration;//[Offset: 0xae8, Size: 1]
	float FadeoutDuration;//[Offset: 0xaec, Size: 1]
	SoundBase* EndUseSound;//[Offset: 0xaf0, Size: 1]
	void SetupParticleSystem(Actor* OwnerActor);// 0x1d69c50
	void ServerUseGenerator();// 0xe3cef0
	void ServerStopGenerator();// 0xe3cea0
	void MulticastDeactivate();// 0xe3cbd0
	void MulticastActivate();// 0xe3cb80

--------------------------------
Class: W_VehicleSeatList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x268, Size: 1]
	GridPanel* GridPanel;//[Offset: 0x270, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x278, Size: 1]
	SQVehicle* REF Vehicle;//[Offset: 0x280, Size: 1]
	W_VehicleSeatInfo_C*[] Seat List Info Widgets;//[Offset: 0x288, Size: 1]
	float Last Seat Time;//[Offset: 0x298, Size: 1]
	TimerHandle Collapse Timer;//[Offset: 0x2a0, Size: 1]
	float Show Duration;//[Offset: 0x2a8, Size: 1]
	void Update Seats(SQPlayerState* L Player, bool L Driver, int L Seat Index, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Variable, Widget* CallFunc_GetChildAt_ReturnValue, int CallFunc_GetChildrenCount_ReturnValue, GridSlot* CallFunc_SlotAsGridSlot_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, W_VehicleSeatInfo_C* CallFunc_Array_Get_Item, W_VehicleSeatInfo_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_VehicleSeatInfo_C* CallFunc_Create_ReturnValue, SQVehicleSeatComponent*[] CallFunc_GetSeats_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, GridSlot* CallFunc_AddChildToGrid_ReturnValue, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void Update List(delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQDeployableVehicle* K2Node_DynamicCast_AsSQDeployable_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh Vehicle();// 0x1d69c50
	void Play Fade(byte PlayMode);// 0x1d69c50
	void Collapse();// 0x1d69c50
	void ExecuteUbergraph_W_VehicleSeatList(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, byte K2Node_CustomEvent_PlayMode, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_VehicleSeatInfo_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	Border* Border_Main;//[Offset: 0x268, Size: 1]
	Image* CommanderStar;//[Offset: 0x270, Size: 1]
	TextBlock* FT_Text;//[Offset: 0x278, Size: 1]
	HorizontalBox* HorizontalBox;//[Offset: 0x280, Size: 1]
	Image* Kit_Image;//[Offset: 0x288, Size: 1]
	TextBlock* PlayerName_Text;//[Offset: 0x290, Size: 1]
	Image* Rank;//[Offset: 0x298, Size: 1]
	Image* SquadID_BG;//[Offset: 0x2a0, Size: 1]
	SizeBox* SquadID_SizeBox;//[Offset: 0x2a8, Size: 1]
	TextBlock* SquadID_Text;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_SeatID;//[Offset: 0x2b8, Size: 1]
	SQPlayerController* PC;//[Offset: 0x2c0, Size: 1]
	bool Is Self Team;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2c8, Size: 1]
	int Seat Index;//[Offset: 0x2cc, Size: 1]
	SQPlayerState* Player State;//[Offset: 0x2d0, Size: 1]
	int Squad ID;//[Offset: 0x2d8, Size: 1]
	SQHUD* CachedHud;//[Offset: 0x2e0, Size: 1]
	bool Driver;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2e8, Size: 1]
	void ShowHideCommanderStar(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsCommander_ReturnValue, enum K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void Set Squad ID(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Set Self Team(SQTeamState* CallFunc_GetTeamState_ReturnValue, int CallFunc_GetTeam_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);// 0x1d69c50
	bool Self Squad(bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Update Fireteam(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, FString CallFunc_GetAlphabetLetterString_ReturnValue, enum K2Node_Select_Default, FString CallFunc_ToUpper_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue);// 0x1d69c50
	void UpdateRank(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, Texture2D* K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, Texture2D* K2Node_Select_Default, enum K2Node_Select_Default);// 0x1d69c50
	void UpdateSquadVisuals(bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, LinearColor K2Node_Select_Default, enum K2Node_Select_Default, SlateColor K2Node_MakeStruct_SlateColor, bool CallFunc_IsSquadLeader_ReturnValue, enum K2Node_Select_Default, FText CallFunc_Conv_IntToText_ReturnValue, LinearColor CallFunc_Get_Tint_Out_Color);// 0x1d69c50
	void UpdateKitVisuals(bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, enum K2Node_Select_Default);// 0x1d69c50
	void Get Tint(out LinearColor Out Color, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, bool Temp_bool_Variable, byte Temp_byte_Variable, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsCommander_ReturnValue, byte K2Node_Select_Default, bool CallFunc_Self_Squad_ReturnValue, int CallFunc_GetFireTeamIndex_ReturnValue, byte K2Node_Select_Default, byte K2Node_Select_Default, byte K2Node_Select_Default, LinearColor CallFunc_GetColor_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Update Occupant(int Seat Index, SQPlayerState* Player State, bool Driver);// 0x1d69c50
	void ExecuteUbergraph_W_VehicleSeatInfo(int EntryPoint, bool CallFunc_EqualEqual_IntInt_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, int CallFunc_Add_IntInt_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, int K2Node_CustomEvent_Seat_Index, SQPlayerState* K2Node_CustomEvent_Player_State, bool K2Node_CustomEvent_Driver, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, FString CallFunc_GetFullPlayerName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, float CallFunc_SelectFloat_ReturnValue, GridSlot* CallFunc_SlotAsGridSlot_ReturnValue, Margin K2Node_MakeStruct_Margin);// 0x1d69c50

--------------------------------
Class: W_VehicleStatus_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* AmmoCookingWarning;//[Offset: 0x268, Size: 1]
	ProgressBar* HealthBar;//[Offset: 0x270, Size: 1]
	Image* Image;//[Offset: 0x278, Size: 1]
	UMG_GenericState_C* State_AmmoHealth;//[Offset: 0x280, Size: 1]
	UMG_GenericState_C* State_EngineHealth;//[Offset: 0x288, Size: 1]
	UMG_GenericState_C* State_TrackHealth;//[Offset: 0x290, Size: 1]
	UMG_GenericState_C* State_TurretHealth;//[Offset: 0x298, Size: 1]
	Border* VehicleHealth;//[Offset: 0x2a0, Size: 1]
	SQVehicle* REF Vehicle;//[Offset: 0x2a8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2b0, Size: 1]
	void VehicleHealthColor(float CallFunc_Get_VehicleHealthPercent_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);// 0x1d69c50
	void Update Turret State(float L Health, LinearColor L Health Color, float L Total Health Normalized, SQVehicleSeatComponent* L Seat, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool Temp_bool_Variable, LinearColor K2Node_Select_Default, SQVehicleSeat* CallFunc_GetSeatPawn_ReturnValue, float CallFunc_GetSeatHealth_ReturnValue, float CallFunc_GetNormalizedSeatHealth_ReturnValue, SQVehicleSeatComponent* CallFunc_Array_Get_Item, SQVehicleSeatConfig CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);// 0x1d69c50
	void Update Track/Wheel State(SQVehicleWheel*[] L Wheels, LinearColor L Health Color, float L Total Health Normalized, float L Total Max Health, float L Total Health, SQVehicleTrack*[] L Tracks, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool Temp_bool_Variable, bool CallFunc_Array_IsValidIndex_ReturnValue, Texture2D* K2Node_Select_Default, SQVehicleWheel* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, SQVehicleWheel*[] CallFunc_K2_GetComponentsByClass_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default, LinearColor K2Node_Select_Default, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, SQVehicleTrack* CallFunc_Array_Get_Item, SQVehicleTrack*[] CallFunc_K2_GetComponentsByClass_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Update Ammo State(LinearColor L Health Color, SQVehicleAmmoBox* L Ammo Box, bool Temp_bool_Variable, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, SQVehicleAmmoBox* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void Update Engine State(SQVehicleEngine* L Engine, LinearColor L Health Color, LinearColor L Engine Toggle Color, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, LinearColor Temp_struct_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, bool CallFunc_IsEngineActive_ReturnValue, float CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, LinearColor K2Node_Select_Default, float CallFunc_GetCurrentEngineTogglePercentage_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_IsEngineToggleActive_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool Temp_bool_Variable, SQVehicleComponent* CallFunc_GetVehicleEngine_ReturnValue, SQVehicleEngine* K2Node_DynamicCast_AsSQVehicle_Engine, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetNormalizedHealth_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, Texture2D* K2Node_Select_Default, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_FInterpTo_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, LinearColor CallFunc_LinearColorLerpUsingHSV_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	float Get_VehicleHealthPercent(bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void Get Vehicle(SQVehicle* CallFunc_GetCurrentVehicle_ReturnValue, SQDeployableVehicle* K2Node_DynamicCast_AsSQDeployable_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, SQHelicopter2* K2Node_DynamicCast_AsSQHelicopter, bool K2Node_DynamicCast_bSuccess, SQVehicleSeatComponent* CallFunc_GetDriverSeat_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh Vehicle();// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void ExecuteUbergraph_W_VehicleStatus(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: SQVehicleWheel.SQDriveTrainComponent.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	FName BoneName;//[Offset: 0x5e8, Size: 1]
	FName GetBoneName();// 0xe3c6c0

--------------------------------
Class: SQVehicleTrack.SQDriveTrainComponent.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	bool bRightSideTrack;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5e8, Size: 1]
	bool bLeftSideTrack;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5e9, Size: 1]

--------------------------------
Class: SQVehicleAmmoBox.SQVehicleComponent.StaticMeshComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	SQAmmoReductionConfig AmmoReduction;//[Offset: 0x5d0, Size: 1]
	int DamageToParentWhenBurning;//[Offset: 0x5f0, Size: 1]
	int SecondsBetweenDamageEvents;//[Offset: 0x5f4, Size: 1]
	float DamageToParentOnDetonation;//[Offset: 0x5f8, Size: 1]
	float MinBurningTimeBeforeDetonation;//[Offset: 0x5fc, Size: 1]
	float MaxBurningTimeBeforeDetonation;//[Offset: 0x600, Size: 1]
	float BaseTimeToDetonation;//[Offset: 0x604, Size: 1]
	bool bEnableDetonationByOverdamage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x608, Size: 1]
	float OverdamageForInstantDetonation;//[Offset: 0x60c, Size: 1]
	class DamageType* DetonationDamageType;//[Offset: 0x610, Size: 1]
	class DamageType* BurningDamageType;//[Offset: 0x618, Size: 1]
	float TimePercentageLeftForDetonation;//[Offset: 0x620, Size: 1]
	void Detonate();// 0xe33710
	void DestroyWeaponAmmo(SQWeapon* Weapon, float TargetAmmoPercentage, bool bAffectCurrentMag);// 0xe335f0
	void DestroyVehicleWeaponAmmo();// 0xe335d0

--------------------------------
Class: SQAmmoReductionConfig
	bool bAmmoReductionEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x0, Size: 1]
	bool bAffectAllWeapons;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1, Size: 1]
	float AmmoPercentageToLeave;//[Offset: 0x4, Size: 1]
	bool bAffectCurrentMagazine;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x8, Size: 1]
	bool bAffectCurrentMagIfEquipped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x9, Size: 1]
	SQWeaponAmmoReductionConfig[] PerWeaponAmmoReduction;//[Offset: 0x10, Size: 1]

--------------------------------
Class: SQWeaponAmmoReductionConfig
	class SQWeapon* WeaponClass;//[Offset: 0x0, Size: 1]
	float AmmoPercentageToLeave;//[Offset: 0x8, Size: 1]
	bool bAffectCurrentMagazine;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xc, Size: 1]
	bool bAffectCurrentMagIfEquipped;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xd, Size: 1]

--------------------------------
Class: W_NotificationPanel_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	VerticalBox* VerticalBox;//[Offset: 0x268, Size: 1]
	S_MainNotification[] Pending Main Notifications;//[Offset: 0x270, Size: 1]
	W_MainNotification_C* Current Notification;//[Offset: 0x280, Size: 1]
	float Main Notification Duration;//[Offset: 0x288, Size: 1]
	int MaxNotificationsInPanel;//[Offset: 0x28c, Size: 1]
	void Draw Notification(FText Text, enum Type, Texture2D* Custom Icon, LinearColor CustomIconColor, bool PreventRepetition, bool CallFunc_TextIsEmpty_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, W_NotificationItem_C* CallFunc_Create_ReturnValue, int Temp_int_Variable, int CallFunc_GetChildrenCount_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, W_NotificationItem_C* K2Node_DynamicCast_AsW_Notification_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, Widget* CallFunc_GetChildAt_ReturnValue, W_NotificationItem_C* K2Node_DynamicCast_AsW_Notification_Item, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetChildrenCount_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, FText CallFunc_GetText_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_TextText_ReturnValue, VerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);// 0x1d69c50
	void New Notification(FText Message, enum Type, Texture2D* Custom Icon, LinearColor CustomIconColor, bool PreventRepetition);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Add New Chat(const FString PlayerName, const FString Message, enum Channel, LinearColor Color, enum NotificationType);// 0x1d69c50
	void Draw Main Notification();// 0x1d69c50
	void Draw Next Notification();// 0x1d69c50
	void ExecuteUbergraph_W_NotificationPanel(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, LinearColor Temp_struct_Variable, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, LinearColor Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, Anchors K2Node_MakeStruct_Anchors, bool Temp_bool_Variable, FText K2Node_CustomEvent_Message, enum K2Node_CustomEvent_Type, Texture2D* K2Node_CustomEvent_Custom_Icon, LinearColor K2Node_CustomEvent_CustomIconColor, bool K2Node_CustomEvent_PreventRepetition, const FString K2Node_CustomEvent_PlayerName, const FString K2Node_CustomEvent_Message, enum K2Node_CustomEvent_Channel, LinearColor K2Node_CustomEvent_Color, enum K2Node_CustomEvent_NotificationType, bool Temp_bool_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, LinearColor K2Node_Select_Default, bool CallFunc_BooleanOR_ReturnValue, int CallFunc_Len_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, FString K2Node_Select_Default, bool CallFunc_Array_IsValidIndex_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, W_MainNotification_C* CallFunc_Create_ReturnValue, S_MainNotification K2Node_MakeStruct_S_MainNotification, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50

--------------------------------
Class: S_MainNotification
	FString Message_10_859C40E04544AD6235485AA56AF0DB84;//[Offset: 0x0, Size: 1]
	float Duration_9_DE1EEDD6427551BA55471EAD56C8995E;//[Offset: 0x10, Size: 1]
	LinearColor Color_12_0153DDF2416865175A5C188D9AB10331;//[Offset: 0x14, Size: 1]

--------------------------------
Class: W_MainNotification_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Out;//[Offset: 0x268, Size: 1]
	WidgetAnimation* In;//[Offset: 0x270, Size: 1]
	TextBlock* TB_Notification;//[Offset: 0x278, Size: 1]
	FText Message;//[Offset: 0x280, Size: 1]
	float Duration;//[Offset: 0x298, Size: 1]
	LinearColor Text Color;//[Offset: 0x29c, Size: 1]
	MulticastInlineDelegateProperty Removed;//[Size: 1]
	void Construct();// 0x1d69c50
	void Remove();// 0x1d69c50
	void ExecuteUbergraph_W_MainNotification(int EntryPoint, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue, SlateColor K2Node_MakeStruct_SlateColor, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50
	void Removed__DelegateSignature();// 0x1d69c50

--------------------------------
Class: W_NotificationItem_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Out;//[Offset: 0x268, Size: 1]
	WidgetAnimation* In;//[Offset: 0x270, Size: 1]
	Image* Icon;//[Offset: 0x278, Size: 1]
	TextBlock* TB_Notification;//[Offset: 0x280, Size: 1]
	FText Message;//[Offset: 0x288, Size: 1]
	SQNotificationData* Notification Data;//[Offset: 0x2a0, Size: 1]
	enum Notification Type;//[Offset: 0x2a8, Size: 1]
	Texture2D* Custom Icon;//[Offset: 0x2b0, Size: 1]
	LinearColor CustomIconColor;//[Offset: 0x2b8, Size: 1]
	void Set Texture(bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_LinearColorLinearColor_ReturnValue, const SQNotificationLayout CallFunc_GetNotificationLayout_ReturnValue, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Remove();// 0x1d69c50
	void ExecuteUbergraph_W_NotificationItem(int EntryPoint, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, float CallFunc_GetEndTime_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, const SQNotificationLayout CallFunc_GetNotificationLayout_ReturnValue, float CallFunc_FMax_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_VoipList_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	GridPanel* VoipGrid;//[Offset: 0x268, Size: 1]
	int Max List Size;//[Offset: 0x270, Size: 1]
	SQHUD* REF HUD;//[Offset: 0x278, Size: 1]
	W_VoipPlayer_C*[] Voip Player Widgets;//[Offset: 0x280, Size: 1]
	bool isDebug;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	void Refresh Speaker Widgets(W_VoipPlayer_C* L Talker Widget, SQRemoteTalkerDisplayInfo[] Talkers, int Current Talker, int Current Widget Index, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_Array_LastIndex_ReturnValue, const SQRemoteTalkerDisplayInfo[] CallFunc_GetRemoteTalkers_ReturnValue, W_VoipPlayer_C* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, SQRemoteTalkerDisplayInfo CallFunc_Array_Get_Item, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Refresh();// 0x1d69c50
	void ExecuteUbergraph_W_VoipList(int EntryPoint, bool K2Node_Event_IsDesignTime, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, W_VoipPlayer_C* CallFunc_Create_ReturnValue, int CallFunc_Array_Add_ReturnValue, GridSlot* CallFunc_SlotAsGridSlot_ReturnValue, PanelSlot* CallFunc_AddChild_ReturnValue, int Temp_int_Variable, Margin K2Node_MakeStruct_Margin, int CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_VoipPlayer_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x268, Size: 1]
	Border* Border_Voip;//[Offset: 0x270, Size: 1]
	WidgetSwitcher* CommanderSwitch;//[Offset: 0x278, Size: 1]
	Image* CommandVoipIcon;//[Offset: 0x280, Size: 1]
	Border* FadeBorder;//[Offset: 0x288, Size: 1]
	SizeBox* FTCircle;//[Offset: 0x290, Size: 1]
	Image* IconLeadership;//[Offset: 0x298, Size: 1]
	Image* IconRole;//[Offset: 0x2a0, Size: 1]
	SizeBox* SQsquare;//[Offset: 0x2a8, Size: 1]
	Border* SquadColorBorder;//[Offset: 0x2b0, Size: 1]
	TextBlock* TB_FT;//[Offset: 0x2b8, Size: 1]
	TextBlock* TB_SquadID;//[Offset: 0x2c0, Size: 1]
	TextBlock* TBName;//[Offset: 0x2c8, Size: 1]
	Image* VoipIcon;//[Offset: 0x2d0, Size: 1]
	WidgetSwitcher* VoipIconSwitcher;//[Offset: 0x2d8, Size: 1]
	SQPlayerController* My PC;//[Offset: 0x2e0, Size: 1]
	SlateFontInfo Current Font;//[Offset: 0x2e8, Size: 1]
	bool bDebugDisplay;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x340, Size: 1]
	void Fade Out(bool CallFunc_IsAnimationPlaying_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Refresh Speaker(SQRemoteTalkerDisplayInfo Speaker Info, LinearColor Direct Command Color, enum Temp_byte_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, LinearColor Temp_struct_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, enum Temp_byte_Variable, enum Temp_byte_Variable, bool Temp_bool_Variable, bool Temp_bool_Variable, Texture2D* Temp_object_Variable, Texture2D* Temp_object_Variable, bool Temp_bool_Variable, FText Temp_text_Variable, int CallFunc_GetFireTeamIndex_ReturnValue, int Temp_int_Variable, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, FText Temp_text_Variable, enum K2Node_Select_Default, FText Temp_text_Variable, FText K2Node_Select_Default, bool CallFunc_IsCommander_ReturnValue, SQColorsDataAsset* CallFunc_Get_SQHUD_Colors_ColorsDataAsset, int CallFunc_Conv_BoolToInt_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, LinearColor CallFunc_GetColor_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetRoleEntry_Success, FSQRoleEntry CallFunc_GetRoleEntry_RoleEntry, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, enum K2Node_Select_Default, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, Texture2D* K2Node_Select_Default, FString CallFunc_GetFullPlayerName_ReturnValue, int CallFunc_Len_ReturnValue, FString CallFunc_Mid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, FString CallFunc_LeftChop_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, FString K2Node_Select_Default, FText CallFunc_Conv_StringToText_ReturnValue, enum K2Node_Select_Default, LinearColor K2Node_Select_Default);// 0x1d69c50
	void Construct();// 0x1d69c50
	void PreConstruct(bool IsDesignTime);// 0x1d69c50
	void ExecuteUbergraph_W_VoipPlayer(int EntryPoint, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool K2Node_Event_IsDesignTime, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: W_HealPrompt_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	SQSoldier* Soldier;//[Offset: 0x268, Size: 1]
	TimerHandle Collapse Timer;//[Offset: 0x270, Size: 1]
	void Update Soldier(SQSoldier* Soldier);// 0x1d69c50
	void Tick(Geometry MyGeometry, float InDeltaTime);// 0x1d69c50
	void Collapse();// 0x1d69c50
	void Show();// 0x1d69c50
	void ExecuteUbergraph_W_HealPrompt(int EntryPoint, float CallFunc_GetViewportScale_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Geometry K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, Vector2D CallFunc_ProjectWorldLocationToScreen_ScreenLocation, bool CallFunc_ProjectWorldLocationToScreen_ReturnValue, Vector2D CallFunc_GetViewportSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue, Vector2D CallFunc_MakeVector2D_ReturnValue, Vector2D CallFunc_Divide_Vector2DFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: UMG_ApprovalQueueWidget_C.SQApprovalQueueWidget.SQUserWidget.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2d0, Size: 1]
	WidgetAnimation* Out;//[Offset: 0x2d8, Size: 1]
	WidgetAnimation* In;//[Offset: 0x2e0, Size: 1]
	Image* Approve;//[Offset: 0x2e8, Size: 1]
	Image* BlackBG;//[Offset: 0x2f0, Size: 1]
	Image* Disapprove;//[Offset: 0x2f8, Size: 1]
	ScrollBox* ScrollBox;//[Offset: 0x300, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x308, Size: 1]
	TextBlock* TextBlock;//[Offset: 0x310, Size: 1]
	void Construct();// 0x1d69c50
	void ExecuteUbergraph_UMG_ApprovalQueueWidget(int EntryPoint, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_SQDeployableSettings_C.SQDeployableSettings.SQSettings.DataAsset.Object
	SQDeployableVersion[] DeployableVersions;//[Offset: 0x60, Size: 1]
	byte Type;//[Offset: 0x70, Size: 1]
	<byte> Tags;//[Offset: 0x78, Size: 1]
	void IsConcernedByStrategy(SQDeployableGroupingStrategy InGroupingStrategy, out bool IsConcernedByStrategy, bool Temp_bool_Variable, bool Temp_bool_Variable, <byte> CallFunc_Set_Intersection_Result, int CallFunc_Set_Length_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Set_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool K2Node_Select_Default);// 0x1d69c50
	void HasTags(out byte[] In Tags, bool In All, out bool Out Has Tag, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, byte CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	void HasTag(byte In Tag, out bool Out Has Tag, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	bool TryGetDeployableWithLayer(const SQLayer* InLayer, out class SQDeployable OutDeployable, class SQDeployable[] L_MatchingDeployables, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_RandomInteger_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_SelectInt_ReturnValue, class SQDeployable CallFunc_Array_Get_Item, SQDeployableVersion CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	void GetDeployableEntry(out bool Success, out SQDeployableEntry DeployableEntry, SQDeployableEntry CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQDeployableVersion
	byte Biome_2_406CFF4944C292AE0C1273B16269D1F9;//[Offset: 0x0, Size: 1]
	class SQDeployable* Deployable_5_A8E78DAF43C1E27AB8C505A840CA49D7;//[Offset: 0x8, Size: 1]

--------------------------------
Class: SQDeployableEntry
	FText DisplayName_2_AE20EB5F4F79C0010BCDCE847B39E625;//[Offset: 0x0, Size: 1]
	FText Details_5_05E7EAEF4F1306A917C5A4837F8F40D0;//[Offset: 0x18, Size: 1]
	FText ToolTip_20_184DD04A4D44CF9D518A218A50B31AA6;//[Offset: 0x30, Size: 1]
	Texture2D* Icon_17_CEC409E14C155F9F18EC1C961848686E;//[Offset: 0x48, Size: 1]
	Texture2D* MapIcon_12_A944622A487C1C56FFF28F97F2A5CD63;//[Offset: 0x50, Size: 1]
	byte Category_18_2720347E4A0B7CEC6E8B90B886DD63BA;//[Offset: 0x58, Size: 1]
	FName Text_Key0_25_02C3C41A45679AF5531078A0BCEB74B0;//[Offset: 0x5c, Size: 1]

--------------------------------
Class: PostProcessComponent.SceneComponent.ActorComponent.Object
	PostProcessSettings Settings;//[Offset: 0x200, Size: 1]
	float Priority;//[Offset: 0x760, Size: 1]
	float BlendRadius;//[Offset: 0x764, Size: 1]
	float BlendWeight;//[Offset: 0x768, Size: 1]
	bool bEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x76c, Size: 1]
	bool bUnbound;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x76c, Size: 1]
	void AddOrUpdateBlendable(interface classNone InBlendableObject, float InWeight);// 0x3fd7a20

--------------------------------
Class: BP_MapMarker_CommandMaster_C.BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	float distance;//[Offset: 0x288, Size: 1]
	class SQGridData_CommandOption* Action;//[Offset: 0x290, Size: 1]
	bool Request;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	void Bind To Destroy(Actor* Bind To);// 0x1d69c50
	void OnDestroyed_Event(Actor* DestroyedActor);// 0x1d69c50
	void ExecuteUbergraph_BP_MapMarker_CommandMaster(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, Actor* K2Node_CustomEvent_Bind_To, Actor* K2Node_CustomEvent_DestroyedActor);// 0x1d69c50

--------------------------------
Class: CameraMan_C.SQCameraMan.Character.Pawn.Actor.Object
	SQMapIconComponent* SquadMapIcon;//[Offset: 0x510, Size: 1]

--------------------------------
Class: SQCameraMan.Character.Pawn.Actor.Object
	enum ListenerType;//[Offset: 0x4c0, Size: 1]
	float BaseTurnRate;//[Offset: 0x4c4, Size: 1]
	float BaseLookUpRate;//[Offset: 0x4c8, Size: 1]
	SpringArmComponent* SpringArm;//[Offset: 0x4d0, Size: 1]
	CameraComponent* FirstPersonCameraComponent;//[Offset: 0x4d8, Size: 1]
	Texture* CameraManHUDIconTexture;//[Offset: 0x4e0, Size: 1]
	bool bIsTryingToGainAltitude;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e8, Size: 1]
	bool bIsTryingToLoseAltitude;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4e9, Size: 1]
	SQCoreStateComponent* StateObject;//[Offset: 0x500, Size: 1]
	void ServerSetFlySpeedTarget(float InFlySpeedTarget);// 0xd5a980
	void ServerSetDecelerationTarget(float InDecelerationTarget);// 0xd5a8c0
	void DrawHUD(SQHUD* SquadHUD, Canvas* Canvas);// 0xd59a40

--------------------------------
Class: GridData_DirectorOption_C.GridData_BaseOption_C.Object
	class W_Director_ActionControl_C* Control Widget;//[Offset: 0x60, Size: 1]
	class BP_MapMarker_DirectorMaster_C* Map Marker Class;//[Offset: 0x68, Size: 1]
	float Min Distance;//[Offset: 0x70, Size: 1]
	float Max Distance;//[Offset: 0x74, Size: 1]
	SQMapMarkerDataAsset* MapMarkerDataAsset;//[Offset: 0x78, Size: 1]

--------------------------------
Class: W_Director_ActionControl_C.W_FloatingWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x278, Size: 1]
	float Widget Angle Rotation Offset;//[Offset: 0x280, Size: 1]
	class GridData_DirectorOption_C* Director Action;//[Offset: 0x288, Size: 1]
	Vector Local World Location;//[Offset: 0x290, Size: 1]
	Vector2D Alignment;//[Offset: 0x29c, Size: 1]
	int Squad ID;//[Offset: 0x2a4, Size: 1]
	W_SQMapCore_C* Map Core;//[Offset: 0x2a8, Size: 1]
	Vector2D Origin Map Position;//[Offset: 0x2b0, Size: 1]
	SQMapMarkerDataAsset* MapMarkerDataAsset;//[Offset: 0x2b8, Size: 1]
	void Get Pixel Distance(out float distance, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel, float CallFunc_Get_World_Distance_to_Pixel_Distance_Pixel, float CallFunc_Get_Pixel_Distance_from_Relative_Origin_Pixel_Distance, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	void Get Angle(out float Widget Angle, out Rotator World Rotation, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_Angle_From_Mouse_Vector_Angle, Rotator CallFunc_Get_Angle_From_Mouse_Vector_World_Rotation);// 0x1d69c50
	void Construct();// 0x1d69c50
	void Remove();// 0x1d69c50
	void On Map Mouse Down(PointerEvent Mouse Event, Vector World Location);// 0x1d69c50
	void Add Self to Viewport();// 0x1d69c50
	void ExecuteUbergraph_W_Director_ActionControl(int EntryPoint, class DirectorAction_CO_OrderLine_C K2Node_ClassDynamicCast_AsDirector_Action_CO_Order_Line, bool K2Node_ClassDynamicCast_bSuccess, bool Temp_bool_Has_Been_Initd_Variable, CanvasPanelSlot* CallFunc_SlotAsCanvasSlot_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, PointerEvent K2Node_Event_Mouse_Event, Vector K2Node_Event_World_Location, bool CallFunc_Validate_Action_Valid, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, W_SQMapCore_C* CallFunc_Get_Map_Core_Map_Core, bool CallFunc_IsValid_ReturnValue, const Vector2D CallFunc_GetMapBoundsScale_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, const Box2D CallFunc_GetWorldBounds_ReturnValue, Vector2D CallFunc_WorldToMapLocation_OutMapLocation, bool CallFunc_WorldToMapLocation_ReturnValue, bool Temp_bool_IsClosed_Variable, CanvasPanelSlot* CallFunc_AddChildToCanvas_ReturnValue, bool CallFunc_MapMarkersEnabledDefined_ReturnValue, PlayerController* CallFunc_GetOwningPlayer_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_Player_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeam_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, byte CallFunc_GetValidValue_ReturnValue, Vector CallFunc_RebaseLocalOriginOntoZero_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector_NetQuantize K2Node_MakeStruct_Vector_NetQuantize, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_Angle_From_Mouse_Vector_Angle, Rotator CallFunc_Get_Angle_From_Mouse_Vector_World_Rotation, PanelWidget* CallFunc_GetMapBody_ReturnValue, float CallFunc_Get_World_Distance_from_Relative_Origin_World_Distance, float CallFunc_Get_Angle_From_Mouse_Vector_Angle, Rotator CallFunc_Get_Angle_From_Mouse_Vector_World_Rotation, float CallFunc_FClamp_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Get_World_Distance_from_Relative_Origin_World_Distance, bool Temp_bool_Variable, float CallFunc_FClamp_ReturnValue, Vector_NetQuantize K2Node_MakeStruct_Vector_NetQuantize, int K2Node_Select_Default);// 0x1d69c50

--------------------------------
Class: DirectorAction_CO_OrderLine_C.GridData_DirectorOption_C.GridData_BaseOption_C.Object

--------------------------------
Class: BP_MarkerPing_C.BP_SpottedMapMarker_C.BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object

--------------------------------
Class: BP_MapMarker_Command_Request_C.BP_MapMarker_CommandMaster_C.BP_GenericMapMarker_C.SQMapMarker.SQTeamActor.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2a0, Size: 1]
	void GetCommanderSounds(out SQCommanderSounds CommanderSounds, out bool SoundsAreValid, BP_SQFaction_C* CallFunc_TryGetLocalPlayerFaction_OutFaction, bool CallFunc_TryGetLocalPlayerFaction_ReturnValue, bool CallFunc_TryGetFactionEntry_Success, SQFactionEntry CallFunc_TryGetFactionEntry_FactionEntry);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Owner Accept Deny(bool Accepted);// 0x1d69c50
	void ExecuteUbergraph_BP_MapMarker_Command_Request(int EntryPoint, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, Actor* CallFunc_GetOwner_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, UI_Events_Component_C* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsCommander_ReturnValue, bool K2Node_CustomEvent_Accepted, bool CallFunc_BooleanOR_ReturnValue, bool Temp_bool_Variable, Actor* CallFunc_GetOwner_ReturnValue, enum CallFunc_GetTeam_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_IsCommander_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, UI_Events_Component_C* CallFunc_GetComponentByClass_ReturnValue, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, SQCommanderSounds CallFunc_GetCommanderSounds_CommanderSounds, bool CallFunc_GetCommanderSounds_SoundsAreValid, int CallFunc_GetTeam_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SoundCue* K2Node_Select_Default, bool Temp_bool_IsClosed_Variable, SQCommanderSounds CallFunc_GetCommanderSounds_CommanderSounds, bool CallFunc_GetCommanderSounds_SoundsAreValid);// 0x1d69c50

--------------------------------
Class: BP_SQAvailability_Deployable_C.SQAvailability_Deployable.SQAvailability.Object
	void GetAvailabilityForPlayer(SQPlayerController* InPlayer, out const SQAvailabilityState InTeamStatus, out SQAvailabilityState OutPlayerStatus, SQAvailabilityState CallFunc_GetAvailabilityForPlayer_OutPlayerStatus, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsAvailable_ReturnValue, BP_SQRestriction_DeployableCount_C* K2Node_DynamicCast_AsBP_SQRestriction_Deployable_Count, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_IntInt_ReturnValue, int CallFunc_GetLocalFobDeployableCount_Out_Used, SQAvailabilityState CallFunc_SetUnavailable_OutState, SQAvailabilityState CallFunc_SetUsage_OutState, SQAvailabilityState CallFunc_SetUsage_OutState, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	int GetRefundPercentage();// 0x1d69c50

--------------------------------
Class: BP_SQRestriction_DeployableCount_C.SQRestriction_Count.SQRestriction.SQSettings.DataAsset.Object
	<byte> DeployablesTypes;//[Offset: 0x70, Size: 1]
	void GetLocalFobDeployableCount(SQPlayerController* In Player, out int Out Used, SQForwardBase* CallFunc_TryGetLocalFOB_OutFOB, bool CallFunc_TryGetLocalFOB_ReturnValue, BP_ForwardBase_C* K2Node_DynamicCast_AsBP_Forward_Base, bool K2Node_DynamicCast_bSuccess, byte CallFunc_GetDeployableCount_OutCount, int CallFunc_Conv_ByteToInt_ReturnValue);// 0x1d69c50
	void OnTeamAddUsage(SQTeam* InTeam, out int OutAddedUsage, int CallFunc_OnTeamAddUsage_OutAddedUsage);// 0x1d69c50
	void OnPlayerAddUsage(SQPlayerController* InPlayer, out int OutAddedUsage, int CallFunc_OnPlayerAddUsage_OutAddedUsage);// 0x1d69c50

--------------------------------
Class: BP_ForwardBase_C.SQForwardBase.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x578, Size: 1]
	SQMapIconComponent* SquadMapIcon;//[Offset: 0x580, Size: 1]
	SQFOBDeployableCount[] DeployableCount;//[Offset: 0x588, Size: 1]
	void RemoveDeployable(byte InType, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQFOBDeployableCount CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, byte CallFunc_Subtract_ByteByte_ReturnValue, SQFOBDeployableCount K2Node_MakeStruct_SQFOBDeployableCount, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	void AddDeployable(byte InType, bool L_DeployableCount_Found, SQFOBDeployableCount K2Node_MakeStruct_SQFOBDeployableCount, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Add_ReturnValue, SQFOBDeployableCount CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, byte CallFunc_Add_ByteByte_ReturnValue, SQFOBDeployableCount K2Node_MakeStruct_SQFOBDeployableCount, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	void GetDeployableCount(<byte> InDeployableTypes, out byte OutCount, byte L_Result, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, SQFOBDeployableCount CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, byte CallFunc_Add_ByteByte_ReturnValue, bool CallFunc_Set_Contains_ReturnValue);// 0x1d69c50
	void BP_OnDeployableAdded(SQDeployable* InDeployable);// 0x1d69c50
	void BP_OnDeployableRemoved(SQDeployable* InDeployable);// 0x1d69c50
	void ExecuteUbergraph_BP_ForwardBase(int EntryPoint, SQDeployable* K2Node_Event_InDeployable, SQDeployable* K2Node_Event_InDeployable, BP_SQDeployableSettings_C* K2Node_DynamicCast_AsBP_SQDeployable_Settings, bool K2Node_DynamicCast_bSuccess, BP_SQDeployableSettings_C* K2Node_DynamicCast_AsBP_SQDeployable_Settings, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: SQFOBDeployableCount
	byte Type_2_ADD64F9F49B6222AAFC33499C249E0EE;//[Offset: 0x0, Size: 1]
	byte Count_6_C63DB18F4EC195012D050C86EE6A327D;//[Offset: 0x1, Size: 1]

--------------------------------
Class: BP_SQRestriction_Cost_C.SQRestriction_Cost.SQRestriction.SQSettings.DataAsset.Object
	SQCostEntry[] Prices;//[Offset: 0x58, Size: 1]
	byte Payer;//[Offset: 0x68, Size: 1]
	<byte,DataTableRowHandle> FOBUnavailabilityReason;//[Offset: 0x70, Size: 1]
	<byte,DataTableRowHandle> TeamUnavailabilityReason;//[Offset: 0xc0, Size: 1]
	<byte,DataTableRowHandle> VehicleUnavailabilityReason;//[Offset: 0x110, Size: 1]
	DataTableRowHandle PlayerNotInFOBReason;//[Offset: 0x160, Size: 1]
	DataTableRowHandle PlayerNotInVehicleReason;//[Offset: 0x170, Size: 1]
	DataTableRowHandle PlayerNotInVehicleWithResourcesReason;//[Offset: 0x180, Size: 1]
	void RefundCostForPlayer(SQPlayerController* InPlayer, int InPercentage, int Temp_int_Loop_Counter_Variable, float CallFunc_Conv_IntToFloat_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQVehicle* CallFunc_TryGetLocalVehicle_OutVehicle, bool CallFunc_TryGetLocalVehicle_ReturnValue, SQForwardBase* CallFunc_TryGetLocalFOB_OutFOB, bool CallFunc_TryGetLocalFOB_ReturnValue, SQVehicleResourceWeaponInventoryComponent* CallFunc_GetComponentByClass_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_IsValid_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, bool K2Node_SwitchEnum_CmpSuccess, SQCostEntry CallFunc_Array_Get_Item, SQCostEntry CallFunc_Array_Get_Item, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, FString CallFunc_Conv_FloatToString_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void RefundCostForTeam(SQTeam* InTeam, int InPercentage, int Temp_int_Array_Index_Variable, int CallFunc_GetTickets_ReturnValue, int Temp_int_Loop_Counter_Variable, SQCostEntry CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Multiply_IntInt_ReturnValue, int CallFunc_Divide_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	void PayCostForPlayer(SQPlayerController* InPlayer, int Temp_int_Loop_Counter_Variable, SQVehicle* CallFunc_TryGetLocalVehicle_OutVehicle, bool CallFunc_TryGetLocalVehicle_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQVehicleResourceWeaponInventoryComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResource* CallFunc_FindConstructionWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQVehicleResource* CallFunc_FindAmmoWeapon_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQForwardBase* CallFunc_TryGetLocalFOB_OutFOB, bool CallFunc_TryGetLocalFOB_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, SQCostEntry CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess, SQCostEntry CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_ConsumeFOBAmmo_ReturnValue, bool CallFunc_ConsumeConstructionPoints_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	void PayCostForTeam(SQTeam* InTeam, int Temp_int_Array_Index_Variable, int CallFunc_GetTickets_ReturnValue, int Temp_int_Loop_Counter_Variable, SQCostEntry CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Subtract_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int CallFunc_Add_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	bool HasTeamBasedCost(bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50
	bool HasPlayerBasedCost(bool CallFunc_NotEqual_ByteByte_ReturnValue);// 0x1d69c50
	bool CanTeamBuy(SQTeam* InTeam, out DataTableRowHandle OutRestrictionReason, int Temp_int_Array_Index_Variable, int CallFunc_GetTickets_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQCostEntry CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, DataTableRowHandle CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50
	bool CanPlayerBuy(SQPlayerController* InPlayer, out DataTableRowHandle OutRestrictionReason, SQVehicle* CallFunc_TryGetLocalVehicle_OutVehicle, bool CallFunc_TryGetLocalVehicle_ReturnValue, SQForwardBase* CallFunc_TryGetLocalFOB_OutFOB, bool CallFunc_TryGetLocalFOB_ReturnValue, int CallFunc_FCeil_ReturnValue, int CallFunc_FCeil_ReturnValue, SQVehicleResourceWeaponInventoryComponent* CallFunc_GetComponentByClass_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, int Temp_int_Loop_Counter_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQCostEntry CallFunc_Array_Get_Item, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, DataTableRowHandle CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int CallFunc_Array_Length_ReturnValue, SQCostEntry CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, DataTableRowHandle CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);// 0x1d69c50

--------------------------------
Class: SQCostEntry
	byte Currency_6_43D3FA864AB4F99E6B1563BACCF115BB;//[Offset: 0x0, Size: 1]
	int Value_5_14A9753B4D4795554DF290B15D4875CE;//[Offset: 0x4, Size: 1]

--------------------------------
Class: BP_WidgetVolume_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	BillboardComponent* Billboard;//[Offset: 0x230, Size: 1]
	BoxComponent* Volume;//[Offset: 0x238, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x240, Size: 1]
	Vector Extent;//[Offset: 0x248, Size: 1]
	class W_VolumeWidget_C* Widget To Draw;//[Offset: 0x258, Size: 1]
	float Widget Duration;//[Offset: 0x260, Size: 1]
	bool Overlap Only Once;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x264, Size: 1]
	W_VolumeWidget_C* Current Widget;//[Offset: 0x268, Size: 1]
	float Widget Delay;//[Offset: 0x270, Size: 1]
	SoundBase* Sound To Play;//[Offset: 0x278, Size: 1]
	bool Enabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x280, Size: 1]
	void WIdget Volume Overlapped(Object* Object, delegate K2Node_CreateDelegate_OutputDelegate, Pawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, Controller* CallFunc_GetController_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocalController_ReturnValue);// 0x1d69c50
	void Remove Other Volume Widgets(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, W_VolumeWidget_C*[] CallFunc_GetAllWidgetsOfClass_FoundWidgets, int CallFunc_Array_Length_ReturnValue, W_VolumeWidget_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, interface classNone CallFunc_Fade_self_CastInput, bool CallFunc_NotEqual_ObjectObject_ReturnValue);// 0x1d69c50
	void UserConstructionScript(Vector CallFunc_Divide_VectorFloat_ReturnValue, HitResult CallFunc_K2_SetRelativeLocation_SweepHitResult, HitResult CallFunc_K2_SetRelativeLocation_SweepHitResult);// 0x1d69c50
	void BndEvt__Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void Start Widget();// 0x1d69c50
	void DisableWidget();// 0x1d69c50
	void EnableWidget();// 0x1d69c50
	void ExecuteUbergraph_BP_WidgetVolume(int EntryPoint, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const HitResult K2Node_ComponentBoundEvent_SweepResult, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInViewport_ReturnValue, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, W_VolumeWidget_C* CallFunc_Create_ReturnValue, Anchors K2Node_MakeStruct_Anchors);// 0x1d69c50

--------------------------------
Class: W_VolumeWidget_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	float Duration;//[Offset: 0x268, Size: 1]
	bool Can Fade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x26c, Size: 1]
	void Construct();// 0x1d69c50
	void Fade Out();// 0x1d69c50
	void Fade(bool Fade In);// 0x1d69c50
	void ExecuteUbergraph_W_VolumeWidget(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, bool K2Node_Event_Fade_In, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_RecordEventVolume_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	BillboardComponent* Billboard;//[Offset: 0x230, Size: 1]
	BoxComponent* Volume;//[Offset: 0x238, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x240, Size: 1]
	FText Event;//[Offset: 0x248, Size: 1]
	Vector Extent;//[Offset: 0x260, Size: 1]
	void UserConstructionScript(Vector CallFunc_Divide_VectorFloat_ReturnValue, HitResult CallFunc_K2_SetRelativeLocation_SweepHitResult, HitResult CallFunc_K2_SetRelativeLocation_SweepHitResult);// 0x1d69c50
	void BndEvt__Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void ExecuteUbergraph_BP_RecordEventVolume(int EntryPoint, bool Temp_bool_Has_Been_Initd_Variable, FString CallFunc_Conv_TextToString_ReturnValue, bool Temp_bool_IsClosed_Variable, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const HitResult K2Node_ComponentBoundEvent_SweepResult);// 0x1d69c50

--------------------------------
Class: BP_GameMode_Tutorial_C.BP_GameMode_C.SQGameMode.GameMode.GameModeBase.Info.Actor.Object
	class SQSoldier* Custom Spawn Class;//[Offset: 0x698, Size: 1]
	class SQSoldier GetConcretePawnClassForController(Controller* InController, class SQSoldier CallFunc_GetConcretePawnClassForController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeam_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);// 0x1d69c50
	Actor* ChoosePlayerStart(Controller* Player, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQGameSpawn*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, SQGameSpawn* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GetSpawningEnabled_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_GameMode_C.SQGameMode.GameMode.GameModeBase.Info.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x688, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x690, Size: 1]
	class SQSoldier GetConcretePawnClassForController(Controller* InController, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQRoleSettings* CallFunc_GetCurrentRole_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, class SQSoldier CallFunc_TryGetSoldierWithLayer_OutSoldier, bool CallFunc_TryGetSoldierWithLayer_ReturnValue, bool CallFunc_IsValid_ReturnValue, class Object CallFunc_Conv_SoftClassReferenceToClass_ReturnValue, class Object CallFunc_LoadClassAsset_Blocking_ReturnValue, class SQSoldier K2Node_ClassDynamicCast_AsSQSoldier, bool K2Node_ClassDynamicCast_bSuccess, BP_SQRoleSettings_C* K2Node_DynamicCast_AsBP_SQRole_Settings, bool K2Node_DynamicCast_bSuccess, class SQSoldier CallFunc_TryGetSoldierWithLayer_OutSoldier, bool CallFunc_TryGetSoldierWithLayer_ReturnValue, class Object CallFunc_LoadClassAsset_Blocking_ReturnValue, class Object CallFunc_Conv_SoftClassReferenceToClass_ReturnValue, class SQSoldier K2Node_ClassDynamicCast_AsSQSoldier, bool K2Node_ClassDynamicCast_bSuccess);// 0x1d69c50
	void ReceiveEndPlay(byte EndPlayReason);// 0x1d69c50
	void ExecuteUbergraph_BP_GameMode(int EntryPoint, SQForwardBase*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, SQForwardBase* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, byte K2Node_Event_EndPlayReason);// 0x1d69c50

--------------------------------
Class: BP_GenericWorldIcon_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	BillboardComponent* Billboard;//[Offset: 0x230, Size: 1]
	WidgetComponent* Icon;//[Offset: 0x238, Size: 1]
	Texture2D* Texture;//[Offset: 0x240, Size: 1]
	float MinDistance;//[Offset: 0x248, Size: 1]
	float MaxDistance;//[Offset: 0x24c, Size: 1]
	float RefreshRate;//[Offset: 0x250, Size: 1]
	W_WorldIcon_C* MyWorldIcon;//[Offset: 0x258, Size: 1]
	float Maximum View Angle;//[Offset: 0x260, Size: 1]
	LinearColor Color and Opacity;//[Offset: 0x264, Size: 1]
	Vector2D Draw Size;//[Offset: 0x274, Size: 1]
	bool Icon Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x27c, Size: 1]
	bool Is Player Aiming Down Sights(PlayerController* CallFunc_GetPlayerController_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsAimingDownSights_ReturnValue);// 0x1d69c50
	bool Should Be Visible(int Temp_int_Variable, int Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, bool CallFunc_Is_Player_Aiming_Down_Sights_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Actor* CallFunc_GetAttachParentActor_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, int CallFunc_GetTeamId_ReturnValue, bool CallFunc_IsValid_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, interface classNone K2Node_DynamicCast_AsSQTeam_Interface, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeamId_ReturnValue, Vector CallFunc_GetForwardVector_ReturnValue, Vector CallFunc_K2_GetComponentLocation_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, Vector CallFunc_Normal_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, float CallFunc_DegAcos_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void UserConstructionScript();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Check Distance();// 0x1d69c50
	void OnDestroyed_Event(Actor* DestroyedActor);// 0x1d69c50
	void ExecuteUbergraph_BP_GenericWorldIcon(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, UserWidget* CallFunc_GetUserWidgetObject_ReturnValue, W_WorldIcon_C* K2Node_DynamicCast_AsW_World_Icon, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_Should_Be_Visible_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, Actor* CallFunc_GetAttachParentActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, Actor* K2Node_CustomEvent_DestroyedActor, FString CallFunc_GetDisplayName_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_WorldIcon_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* Fade;//[Offset: 0x268, Size: 1]
	Image* Icon;//[Offset: 0x270, Size: 1]
	bool IsFadedIn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x278, Size: 1]
	void Set Texture(Texture2D* Texture, LinearColor InColorAndOpacity);// 0x1d69c50
	void Do Fade(bool Fade In);// 0x1d69c50
	void ExecuteUbergraph_W_WorldIcon(int EntryPoint, bool CallFunc_IsAnimationPlaying_ReturnValue, bool Temp_bool_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, Texture2D* K2Node_CustomEvent_Texture, LinearColor K2Node_CustomEvent_InColorAndOpacity, bool K2Node_CustomEvent_Fade_In, byte K2Node_Select_Default, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_GetEndTime_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_Team_C.SQTeam.Info.Actor.Object

--------------------------------
Class: BP_HescoWall_USA_Desert_C.BP_Deployable_C.SQDeployable.Actor.Object
	CapsuleComponent* Vaulting Blocker;//[Offset: 0x438, Size: 1]
	StaticMeshComponent* StaticMesh9;//[Offset: 0x440, Size: 1]
	StaticMeshComponent* StaticMesh10;//[Offset: 0x448, Size: 1]
	SQPainCausingVolumeComponent* SQPainCausingVolume;//[Offset: 0x450, Size: 1]
	SQMovementAdjustmentComponent* SQMovementAdjustment;//[Offset: 0x458, Size: 1]
	StaticMeshComponent* SM_MessyWire;//[Offset: 0x460, Size: 1]
	BoxComponent* Box;//[Offset: 0x468, Size: 1]
	StaticMeshComponent* StaticMesh4;//[Offset: 0x470, Size: 1]
	StaticMeshComponent* StaticMesh8;//[Offset: 0x478, Size: 1]
	StaticMeshComponent* StaticMesh7;//[Offset: 0x480, Size: 1]
	StaticMeshComponent* StaticMesh6;//[Offset: 0x488, Size: 1]
	StaticMeshComponent* StaticMesh5;//[Offset: 0x490, Size: 1]
	StaticMeshComponent* StaticMesh3;//[Offset: 0x498, Size: 1]
	StaticMeshComponent* StaticMesh2;//[Offset: 0x4a0, Size: 1]
	StaticMeshComponent* StaticMesh1;//[Offset: 0x4a8, Size: 1]
	StaticMeshComponent* StaticMesh;//[Offset: 0x4b0, Size: 1]
	StaticMeshComponent* hesco_wall;//[Offset: 0x4b8, Size: 1]
	StaticMeshComponent* StaticMesh21;//[Offset: 0x4c0, Size: 1]
	StaticMeshComponent* StaticMesh24;//[Offset: 0x4c8, Size: 1]
	StaticMeshComponent* StaticMesh23;//[Offset: 0x4d0, Size: 1]
	StaticMeshComponent* StaticMesh22;//[Offset: 0x4d8, Size: 1]
	BoxComponent* ConstructionBox;//[Offset: 0x4e0, Size: 1]

--------------------------------
Class: BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x428, Size: 1]
	float InteriorCheckHeight;//[Offset: 0x430, Size: 1]
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ExecuteUbergraph_BP_Deployable(int EntryPoint, Vector CallFunc_K2_GetActorLocation_ReturnValue, const Actor*[] Temp_object_Variable, float K2Node_Event_DeltaSeconds, bool CallFunc_IsGhost_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQPainCausingVolumeComponent.BoxComponent.ShapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	bool bPainCausing;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x478, Size: 1]
	float DamagePerSec;//[Offset: 0x47c, Size: 1]
	class DamageType* DamageType;//[Offset: 0x480, Size: 1]
	float PainInterval;//[Offset: 0x488, Size: 1]
	bool bEntryPain;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x48c, Size: 1]
	Controller* DamageInstigator;//[Offset: 0x490, Size: 1]
	void OnBeginOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xdc9850

--------------------------------
Class: SQMovementAdjustmentComponent.BoxComponent.ShapeComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	float SoldierMovementSpeedMultiplayer;//[Offset: 0x478, Size: 1]
	void OnEndOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex);// 0xdc14b0
	void OnBeginOverlap(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0xdc1290

--------------------------------
Class: BP_Razorwire_clean_2_C.BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x438, Size: 1]
	SQMovementAdjustmentComponent* SQMovementAdjustment1;//[Offset: 0x440, Size: 1]
	SQPainCausingVolumeComponent* SQPainCausingVolume1;//[Offset: 0x448, Size: 1]
	StaticMeshComponent* StaticMesh14;//[Offset: 0x450, Size: 1]
	StaticMeshComponent* StaticMesh13;//[Offset: 0x458, Size: 1]
	StaticMeshComponent* StaticMesh12;//[Offset: 0x460, Size: 1]
	BoxComponent* InteractZone;//[Offset: 0x468, Size: 1]
	SQPainCausingVolumeComponent* SQPainCausingVolume;//[Offset: 0x470, Size: 1]
	SQMovementAdjustmentComponent* SQMovementAdjustment;//[Offset: 0x478, Size: 1]
	StaticMeshComponent* StaticMesh11;//[Offset: 0x480, Size: 1]
	StaticMeshComponent* StaticMesh;//[Offset: 0x488, Size: 1]
	StaticMeshComponent* StaticMesh3;//[Offset: 0x490, Size: 1]
	StaticMeshComponent* StaticMesh2;//[Offset: 0x498, Size: 1]
	StaticMeshComponent* StaticMesh1;//[Offset: 0x4a0, Size: 1]
	StaticMeshComponent* StaticMesh10;//[Offset: 0x4a8, Size: 1]
	StaticMeshComponent* StaticMesh6;//[Offset: 0x4b0, Size: 1]
	StaticMeshComponent* StaticMesh7;//[Offset: 0x4b8, Size: 1]
	StaticMeshComponent* StaticMesh4;//[Offset: 0x4c0, Size: 1]
	StaticMeshComponent* StaticMesh5;//[Offset: 0x4c8, Size: 1]
	BoxComponent* ConstructionZone;//[Offset: 0x4d0, Size: 1]
	void ReceiveDestroyed();// 0x1d69c50
	void ExecuteUbergraph_BP_Razorwire_clean(int EntryPoint, const Transform CallFunc_GetTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, Razorsinglefull_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsGhost_ReturnValue);// 0x1d69c50

--------------------------------
Class: Razorsinglefull_C.SQLastingEffect.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	RadialForceComponent* RadialForce;//[Offset: 0x288, Size: 1]
	StaticMeshComponent* Piece4;//[Offset: 0x290, Size: 1]
	StaticMeshComponent* Piece3;//[Offset: 0x298, Size: 1]
	StaticMeshComponent* Piece2;//[Offset: 0x2a0, Size: 1]
	StaticMeshComponent* Piece1;//[Offset: 0x2a8, Size: 1]
	void ReceiveBeginPlay();// 0x1d69c50
	void BndEvt__Piece2_K2Node_ComponentBoundEvent_8_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece4_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void ExecuteUbergraph_Razorsinglefull(int EntryPoint, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Variable, int CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, bool Temp_bool_IsClosed_Variable, float CallFunc_RandomFloatInRange_ReturnValue, bool Temp_bool_IsClosed_Variable, int CallFunc_RandomIntegerInRange_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, int CallFunc_RandomIntegerInRange_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_GetComponentVelocity_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue);// 0x1d69c50

--------------------------------
Class: RadialForceComponent.SceneComponent.ActorComponent.Object
	float Radius;//[Offset: 0x1f8, Size: 1]
	byte Falloff;//[Offset: 0x1fc, Size: 1]
	float ImpulseStrength;//[Offset: 0x200, Size: 1]
	bool bImpulseVelChange;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0x204, Size: 1]
	bool bIgnoreOwningActor;//(ByteOffset: 0, ByteMask: 2, FieldMask: 2)[Offset: 0x204, Size: 1]
	float ForceStrength;//[Offset: 0x208, Size: 1]
	float DestructibleDamage;//[Offset: 0x20c, Size: 1]
	byte[] ObjectTypesToAffect;//[Offset: 0x210, Size: 1]
	void RemoveObjectTypeToAffect(byte ObjectType);// 0x3fe3790
	void FireImpulse();// 0xdf7770
	void AddObjectTypeToAffect(byte ObjectType);// 0x3fe34e0

--------------------------------
Class: BP_Hesco_USA_Desert_C.BP_Deployable_C.SQDeployable.Actor.Object
	BoxComponent* UnAndHalfBuiltInteract;//[Offset: 0x438, Size: 1]
	StaticMeshComponent* Hesco_v1_unfilled;//[Offset: 0x440, Size: 1]
	StaticMeshComponent* Engineer_Stake_Clean;//[Offset: 0x448, Size: 1]
	StaticMeshComponent* StaticMesh;//[Offset: 0x450, Size: 1]
	StaticMeshComponent* StaticMesh2;//[Offset: 0x458, Size: 1]
	BoxComponent* ConstructionBox;//[Offset: 0x460, Size: 1]

--------------------------------
Class: BP_I_Sandbag_2_C.BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x438, Size: 1]
	BoxComponent* InteractZone;//[Offset: 0x440, Size: 1]
	StaticMeshComponent* sandbag_wall_stakes;//[Offset: 0x448, Size: 1]
	StaticMeshComponent* sandbag_wall_mid;//[Offset: 0x450, Size: 1]
	StaticMeshComponent* sandbag_wall;//[Offset: 0x458, Size: 1]
	BoxComponent* ConstructionZone;//[Offset: 0x460, Size: 1]
	void ReceiveDestroyed();// 0x1d69c50
	void ExecuteUbergraph_BP_I_Sandbag(int EntryPoint, const Transform CallFunc_GetTransform_ReturnValue, Actor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, Sandbag_Destruction_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsGhost_ReturnValue);// 0x1d69c50

--------------------------------
Class: Sandbag_Destruction_C.SQLastingEffect.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x280, Size: 1]
	RadialForceComponent* RadialForce;//[Offset: 0x288, Size: 1]
	StaticMeshComponent* Piece10;//[Offset: 0x290, Size: 1]
	StaticMeshComponent* Piece9;//[Offset: 0x298, Size: 1]
	StaticMeshComponent* Piece8;//[Offset: 0x2a0, Size: 1]
	StaticMeshComponent* Piece7;//[Offset: 0x2a8, Size: 1]
	StaticMeshComponent* Piece6;//[Offset: 0x2b0, Size: 1]
	StaticMeshComponent* Piece5;//[Offset: 0x2b8, Size: 1]
	StaticMeshComponent* Piece4;//[Offset: 0x2c0, Size: 1]
	StaticMeshComponent* Piece3;//[Offset: 0x2c8, Size: 1]
	StaticMeshComponent* Piece2;//[Offset: 0x2d0, Size: 1]
	StaticMeshComponent* Piece1;//[Offset: 0x2d8, Size: 1]
	void ReceiveBeginPlay();// 0x1d69c50
	void BndEvt__Piece1_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece2_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece3_K2Node_ComponentBoundEvent_7_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece4_K2Node_ComponentBoundEvent_10_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece5_K2Node_ComponentBoundEvent_13_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece6_K2Node_ComponentBoundEvent_16_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece7_K2Node_ComponentBoundEvent_19_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece8_K2Node_ComponentBoundEvent_22_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece9_K2Node_ComponentBoundEvent_25_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void BndEvt__Piece10_K2Node_ComponentBoundEvent_28_ComponentHitSignature__DelegateSignature(PrimitiveComponent* HitComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, Vector NormalImpulse, out const HitResult Hit);// 0x1d69c50
	void ExecuteUbergraph_Sandbag_Destruction(int EntryPoint, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool Temp_bool_IsClosed_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, float CallFunc_RandomFloatInRange_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_RandomFloatInRange_ReturnValue, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, float CallFunc_FClamp_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_FClamp_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, bool Temp_bool_IsClosed_Variable, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, float CallFunc_RandomFloatInRange_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_FClamp_ReturnValue, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_FClamp_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_RandomFloatInRange_ReturnValue, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, float CallFunc_FClamp_ReturnValue, Vector CallFunc_GetComponentVelocity_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_FClamp_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_GetComponentVelocity_ReturnValue, bool Temp_bool_IsClosed_Variable, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool Temp_bool_IsClosed_Variable, float CallFunc_RandomFloatInRange_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, bool Temp_bool_IsClosed_Variable, Vector CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, Vector CallFunc_Conv_FloatToVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, PrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, Vector K2Node_ComponentBoundEvent_NormalImpulse, const HitResult K2Node_ComponentBoundEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd);// 0x1d69c50

--------------------------------
Class: BP_BGM71TOW_Tripod_USA_C.BP_Deployable_C.SQDeployable.Actor.Object
	BoxComponent* HalfBuiltInteract;//[Offset: 0x438, Size: 1]
	BoxComponent* UnbuiltInteract;//[Offset: 0x440, Size: 1]
	StaticMeshComponent* StaticMesh9;//[Offset: 0x448, Size: 1]
	StaticMeshComponent* StaticMesh8;//[Offset: 0x450, Size: 1]
	StaticMeshComponent* StaticMesh7;//[Offset: 0x458, Size: 1]
	StaticMeshComponent* StaticMesh6;//[Offset: 0x460, Size: 1]
	StaticMeshComponent* StaticMesh5;//[Offset: 0x468, Size: 1]
	StaticMeshComponent* StaticMesh4;//[Offset: 0x470, Size: 1]
	StaticMeshComponent* sandbag3;//[Offset: 0x478, Size: 1]
	StaticMeshComponent* sandbag2;//[Offset: 0x480, Size: 1]
	StaticMeshComponent* sandbag;//[Offset: 0x488, Size: 1]
	SQDeployableChildActorComponent* SQDeployableChildActor;//[Offset: 0x490, Size: 1]
	StaticMeshComponent* StaticMesh3;//[Offset: 0x498, Size: 1]
	StaticMeshComponent* StaticMesh2;//[Offset: 0x4a0, Size: 1]
	StaticMeshComponent* ammobox;//[Offset: 0x4a8, Size: 1]
	StaticMeshComponent* StaticMesh1;//[Offset: 0x4b0, Size: 1]
	StaticMeshComponent* StaticMesh;//[Offset: 0x4b8, Size: 1]
	StaticMeshComponent* Towmissile;//[Offset: 0x4c0, Size: 1]
	SkeletalMeshComponent* Tripod_Completed;//[Offset: 0x4c8, Size: 1]
	SkeletalMeshComponent* Tripod_HalfBuilt;//[Offset: 0x4d0, Size: 1]
	SkeletalMeshComponent* Tripod_Unbuilt;//[Offset: 0x4d8, Size: 1]
	BoxComponent* Box;//[Offset: 0x4e0, Size: 1]

--------------------------------
Class: SQDeployableChildActorComponent.ChildActorComponent.SceneComponent.ActorComponent.Object
	enum SpawnBuildState;//[Offset: 0x231, Size: 1]
	enum DespawnBuildState;//[Offset: 0x232, Size: 1]
	bool bShouldUseSpawningTeam;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x233, Size: 1]
	byte TimesSpawnable;//[Offset: 0x234, Size: 1]
	void OnDeployableStateChange(enum BuildState);// 0xd79020

--------------------------------
Class: BP_FOBRadio_Woodland_C.BP_BaseFobCreator_C.BP_ForwardBase_C.SQForwardBase.SQDeployable.Actor.Object
	StaticMeshComponent* StaticMesh10;//[Offset: 0x638, Size: 1]
	StaticMeshComponent* StaticMesh15;//[Offset: 0x640, Size: 1]
	StaticMeshComponent* StaticMesh14;//[Offset: 0x648, Size: 1]
	StaticMeshComponent* StaticMesh13;//[Offset: 0x650, Size: 1]
	StaticMeshComponent* StaticMesh12;//[Offset: 0x658, Size: 1]
	StaticMeshComponent* StaticMesh11;//[Offset: 0x660, Size: 1]
	StaticMeshComponent* StaticMesh8;//[Offset: 0x668, Size: 1]
	StaticMeshComponent* StaticMesh7;//[Offset: 0x670, Size: 1]
	StaticMeshComponent* StaticMesh2;//[Offset: 0x678, Size: 1]
	StaticMeshComponent* laptop;//[Offset: 0x680, Size: 1]
	StaticMeshComponent* radio;//[Offset: 0x688, Size: 1]
	StaticMeshComponent* StaticMesh5;//[Offset: 0x690, Size: 1]
	StaticMeshComponent* StaticMesh9;//[Offset: 0x698, Size: 1]
	StaticMeshComponent* StaticMesh1;//[Offset: 0x6a0, Size: 1]
	StaticMeshComponent* StaticMesh6;//[Offset: 0x6a8, Size: 1]
	StaticMeshComponent* StaticMesh4;//[Offset: 0x6b0, Size: 1]
	StaticMeshComponent* StaticMesh3;//[Offset: 0x6b8, Size: 1]
	StaticMeshComponent* weaponcrate3;//[Offset: 0x6c0, Size: 1]
	StaticMeshComponent* StaticMesh;//[Offset: 0x6c8, Size: 1]
	StaticMeshComponent* weaponcrate2;//[Offset: 0x6d0, Size: 1]
	StaticMeshComponent* weaponcrate1;//[Offset: 0x6d8, Size: 1]
	StaticMeshComponent* weaponcrate;//[Offset: 0x6e0, Size: 1]
	StaticMeshComponent* fobradio;//[Offset: 0x6e8, Size: 1]
	StaticMeshComponent* mortarbox_bigger;//[Offset: 0x6f0, Size: 1]
	AudioComponent* Radio_static;//[Offset: 0x6f8, Size: 1]

--------------------------------
Class: BP_BaseFobCreator_C.BP_ForwardBase_C.SQForwardBase.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x598, Size: 1]
	SQMapIconComponent* SQMapIcon;//[Offset: 0x5a0, Size: 1]
	SphereComponent* NearbyEnemyDetection;//[Offset: 0x5a8, Size: 1]
	SQForwardBase* fob;//[Offset: 0x5b0, Size: 1]
	TimerHandle ServerDecreaseHealthHandle;//[Offset: 0x5b8, Size: 1]
	SQPlayerController* UsingSquadLeader;//[Offset: 0x5c0, Size: 1]
	TimerHandle ServerCheckValidUse;//[Offset: 0x5c8, Size: 1]
	float SLUseHealthLoss;//[Offset: 0x5d0, Size: 1]
	float RespawnDelayPenaltyPerEnemy;//[Offset: 0x5d4, Size: 1]
	int NumEnemiesToDisable;//[Offset: 0x5d8, Size: 1]
	bool bShouldOverrunOnDestroy;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x5dc, Size: 1]
	SQUsableData Enemy Usable Data;//[Offset: 0x5e0, Size: 1]
	bool bHasBeenOverrun;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x620, Size: 1]
	ParticleSystemComponent* FobBleedOutEffect;//[Offset: 0x628, Size: 1]
	int EnemiesNear;//[Offset: 0x630, Size: 1]
	SQUsableData GetUsableData(bool Temp_bool_Variable, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, int CallFunc_GetTeam_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, SQUsableData K2Node_Select_Default);// 0x1d69c50
	void Remove Nearby FOB Request Markers(float Radius, SQMapMarkerManagerComponent* MarkerManager, int Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, BP_SQLayer_C* CallFunc_TryGetCurrentLayer_OutLayer, bool CallFunc_TryGetCurrentLayer_ReturnValue, const DataTableRowHandle CallFunc_GetFobRadiusTableRow_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsGhost_ReturnValue, S_FOBRadius CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, SQMapMarkerGameplayData[] CallFunc_FindMapMarkersByType_OutMarkers, SQMapMarkerGameplayData CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int CallFunc_GetTeamId_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, float CallFunc_Vector_Distance2D_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQGameState* CallFunc_GetSquadGameState_Return_Value, SQMapMarkerManagerComponent* CallFunc_GetMarkerManager_ReturnValue);// 0x1d69c50
	void UserConstructionScript(bool CallFunc_HasAuthority_ReturnValue, Transform CallFunc_GetRelativeTransform_ReturnValue, ParticleSystemComponent* CallFunc_AddComponent_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void BPOnGhostMade();// 0x1d69c50
	void ReceiveDestroyed();// 0x1d69c50
	void ReceiveEndPlay(byte EndPlayReason);// 0x1d69c50
	void CompletedConstruction();// 0x1d69c50
	void BPOnUsed(Controller* User);// 0x1d69c50
	void BPStopUsed(Controller* User);// 0x1d69c50
	void BPOverrun(bool bFriendly);// 0x1d69c50
	void BPPostTicketTick(float Difference);// 0x1d69c50
	void InvalidatePlacement();// 0x1d69c50
	void BPOnIsBleedingChanged();// 0x1d69c50
	void ExecuteUbergraph_BP_BaseFobCreator(int EntryPoint, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_K2_TimerExistsHandle_ReturnValue, bool CallFunc_IsGhost_ReturnValue, int Temp_int_Variable, byte K2Node_Event_EndPlayReason, bool CallFunc_IsValid_ReturnValue, Controller* K2Node_Event_User, Controller* K2Node_Event_User, bool K2Node_Event_bFriendly, float K2Node_Event_Difference, SQGameSpawn* CallFunc_Array_Get_Item, Actor*[] CallFunc_GetOverlappingActors_OverlappingActors, BP_ForwardBaseSpawn_C* K2Node_DynamicCast_AsBP_Forward_Base_Spawn, bool K2Node_DynamicCast_bSuccess, Actor* CallFunc_Array_Get_Item, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, int CallFunc_GetTeam_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsGhost_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_ForwardBaseSpawn_C.SQGameSpawn.PlayerStart.NavigationObjectBase.Actor.Object

--------------------------------
Class: BP_HealToFull_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	BoxComponent* Volume;//[Offset: 0x230, Size: 1]
	SceneComponent* DefaultSceneRoot;//[Offset: 0x238, Size: 1]
	Vector Extent;//[Offset: 0x240, Size: 1]
	SQPlayerController* Player;//[Offset: 0x250, Size: 1]
	void UserConstructionScript(Vector CallFunc_Divide_VectorFloat_ReturnValue, HitResult CallFunc_K2_SetRelativeLocation_SweepHitResult);// 0x1d69c50
	void BndEvt__Volume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(PrimitiveComponent* OverlappedComponent, Actor* OtherActor, PrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, out const HitResult SweepResult);// 0x1d69c50
	void ExecuteUbergraph_BP_HealToFull(int EntryPoint, PrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, Actor* K2Node_ComponentBoundEvent_OtherActor, PrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const HitResult K2Node_ComponentBoundEvent_SweepResult, bool CallFunc_HasAuthority_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_PopUp_Target_Soldier_C.BP_PopUp_Target_C.Actor.Object

--------------------------------
Class: BP_PopUp_Target_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	StaticMeshComponent* Target;//[Offset: 0x230, Size: 1]
	StaticMeshComponent* Base;//[Offset: 0x238, Size: 1]
	bool AccumulateDamage;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x240, Size: 1]
	float MinDamageRequiredToDrop;//[Offset: 0x244, Size: 1]
	bool StartTargetUp;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x248, Size: 1]
	Rotator TargetUpRotation;//[Offset: 0x24c, Size: 1]
	Rotator TargetDownRotation;//[Offset: 0x258, Size: 1]
	bool bIsUp;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x264, Size: 1]
	float PopUpSpeed;//[Offset: 0x268, Size: 1]
	float DropDownSpeed;//[Offset: 0x26c, Size: 1]
	float MinTimeToPopUp;//[Offset: 0x270, Size: 1]
	float MaxTimeToPopUp;//[Offset: 0x274, Size: 1]
	RandomStream RandomStream;//[Offset: 0x278, Size: 1]
	float DamageTaken;//[Offset: 0x280, Size: 1]
	SoundBase* DropSound;//[Offset: 0x288, Size: 1]
	bool HasPlayedDroppingSound;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x290, Size: 1]
	MulticastInlineDelegateProperty TargetDropped;//[Size: 1]
	float Last Damage;//[Offset: 0x2a8, Size: 1]
	void PopUp();// 0x1d69c50
	void ReceiveAnyDamage(float damage, const DamageType* DamageType, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ReceiveRadialDamage(float DamageReceived, const DamageType* DamageType, Vector Origin, out const HitResult HitInfo, Controller* InstigatedBy, Actor* DamageCauser);// 0x1d69c50
	void ExecuteUbergraph_BP_PopUp_Target(int EntryPoint, float K2Node_Event_Damage, const DamageType* K2Node_Event_DamageType, Controller* K2Node_Event_InstigatedBy, Actor* K2Node_Event_DamageCauser, float CallFunc_RandomFloatInRangeFromStream_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, float CallFunc_RandomFloatInRangeFromStream_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, float K2Node_Event_DeltaSeconds, Rotator CallFunc_RInterpTo_ReturnValue, bool CallFunc_EqualEqual_RotatorRotator_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, Rotator CallFunc_RInterpTo_ReturnValue, HitResult CallFunc_K2_SetRelativeRotation_SweepHitResult, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, AudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue, float K2Node_Event_DamageReceived, const DamageType* K2Node_Event_DamageType, Vector K2Node_Event_Origin, const HitResult K2Node_Event_HitInfo, Controller* K2Node_Event_InstigatedBy, Actor* K2Node_Event_DamageCauser, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);// 0x1d69c50
	void TargetDropped__DelegateSignature();// 0x1d69c50

--------------------------------
Class: BP_AmmocrateTutorial_C.BP_GenericAmmocrate_C.BP_SmartDeployable_C.BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x458, Size: 1]
	ChildActorComponent* 3DIcon;//[Offset: 0x460, Size: 1]
	StaticMeshComponent* StaticMesh18;//[Offset: 0x468, Size: 1]
	StaticMeshComponent* StaticMesh16;//[Offset: 0x470, Size: 1]
	StaticMeshComponent* StaticMesh26;//[Offset: 0x478, Size: 1]
	BoxComponent* ConstructionZone;//[Offset: 0x480, Size: 1]
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_AmmocrateTutorial(int EntryPoint);// 0x1d69c50

--------------------------------
Class: BP_GenericAmmocrate_C.BP_SmartDeployable_C.BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x448, Size: 1]
	SQMapIconComponent* SquadMapIcon;//[Offset: 0x450, Size: 1]
	bool CanRearmPawn(const Pawn* Rearmer, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone CallFunc_CanRearmPawn_self_CastInput, bool CallFunc_CanRearmPawn_ReturnValue);// 0x1d69c50
	bool CanRearmWeapon(const SQEquipableItem* Weapon, bool CallFunc_CanRearmFromType_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, interface classNone CallFunc_CanRearmWeapon_self_CastInput, bool CallFunc_CanRearmWeapon_ReturnValue);// 0x1d69c50
	bool BindEventToAmmoUpdated(out const delegate Delegate, interface classNone CallFunc_BindEventToAmmoUpdated_self_CastInput, bool CallFunc_BindEventToAmmoUpdated_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	bool ConsumeAmmo(float AmmoRequired, bool CallFunc_IsValid_ReturnValue, bool CallFunc_ConsumeFOBAmmo_ReturnValue);// 0x1d69c50
	float GetAmmo(bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	FString GetRearmNoAmmoString();// 0x1d69c50
	FString GetRearmSuccessString();// 0x1d69c50
	enum GetRearmType();// 0x1d69c50
	bool UnbindEventToAmmoUpdated(out const delegate Delegate, interface classNone CallFunc_UnbindEventToAmmoUpdated_self_CastInput, bool CallFunc_UnbindEventToAmmoUpdated_ReturnValue, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50
	void SetTeam(int Team);// 0x1d69c50
	void ExecuteUbergraph_BP_GenericAmmocrate(int EntryPoint, int K2Node_Event_team, bool CallFunc_IsValid_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_SmartDeployable_C.BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x438, Size: 1]
	class BP_RadialMenuModel_C* InteractUI;//[Offset: 0x440, Size: 1]
	void CreateRadialMenu(Controller* Controller, Object* Context, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_CanOpenRadialMenu_CanOpenRadialMenu, bool CallFunc_IsValidClass_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void BPOnUsed(Controller* User);// 0x1d69c50
	void SuccessfullyDeployed();// 0x1d69c50
	void CompletedConstruction();// 0x1d69c50
	void BPStopUsed(Controller* User);// 0x1d69c50
	void ExecuteUbergraph_BP_SmartDeployable(int EntryPoint, Controller* K2Node_Event_User, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, Controller* K2Node_Event_User, interface classNone K2Node_DynamicCast_AsBPI_HUD, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, BaseRadialMenu_C* CallFunc_Get_Radial_Menu_Radial_Menu, bool CallFunc_CanOpenRadialMenu_CanOpenRadialMenu, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_vehicle_repair_C.BP_Deployable_C.SQDeployable.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x438, Size: 1]
	StaticMeshComponent* Generator2;//[Offset: 0x440, Size: 1]
	StaticMeshComponent* Generator1;//[Offset: 0x448, Size: 1]
	BoxComponent* InteractZone;//[Offset: 0x450, Size: 1]
	StaticMeshComponent* StaticMesh2;//[Offset: 0x458, Size: 1]
	StaticMeshComponent* StaticMesh;//[Offset: 0x460, Size: 1]
	AudioComponent* EngineAudio;//[Offset: 0x468, Size: 1]
	StaticMeshComponent* StaticMesh1;//[Offset: 0x470, Size: 1]
	StaticMeshComponent* sandbag;//[Offset: 0x478, Size: 1]
	StaticMeshComponent* Generator;//[Offset: 0x480, Size: 1]
	SQMapIconComponent* SQMapIcon;//[Offset: 0x488, Size: 1]
	DecalComponent* Decal;//[Offset: 0x490, Size: 1]
	DecalComponent* Decal3;//[Offset: 0x498, Size: 1]
	DecalComponent* Decal1;//[Offset: 0x4a0, Size: 1]
	DecalComponent* RepairDepotDecal;//[Offset: 0x4a8, Size: 1]
	StaticMeshComponent* StaticMesh4;//[Offset: 0x4b0, Size: 1]
	SQVehicleDepotComponent* SQVehicleDepot;//[Offset: 0x4b8, Size: 1]
	StaticMeshComponent* rearm_and_rapair_mid;//[Offset: 0x4c0, Size: 1]
	BoxComponent* Repair_rearm_radius;//[Offset: 0x4c8, Size: 1]
	StaticMeshComponent* StaticMesh21;//[Offset: 0x4d0, Size: 1]
	StaticMeshComponent* StaticMesh24;//[Offset: 0x4d8, Size: 1]
	StaticMeshComponent* StaticMesh23;//[Offset: 0x4e0, Size: 1]
	StaticMeshComponent* StaticMesh22;//[Offset: 0x4e8, Size: 1]
	BoxComponent* ConstructionBox;//[Offset: 0x4f0, Size: 1]
	bool PlayingEngineAudio;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4f8, Size: 1]
	void OnRep_PlayingEngineAudio();// 0x1d69c50
	void SetTeam(int Team);// 0x1d69c50
	void OnBuildStateChange_Event(enum BuildState);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_vehicle_repair(int EntryPoint, bool CallFunc_IsValid_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, int K2Node_Event_team, enum K2Node_CustomEvent_BuildState, bool CallFunc_EqualEqual_ByteByte_ReturnValue);// 0x1d69c50

--------------------------------
Class: SQVehicleDepotComponent.SceneComponent.ActorComponent.Object
	float SecondsPerMag;//[Offset: 0x200, Size: 1]
	float VehicleHealthPerSecond;//[Offset: 0x204, Size: 1]
	float ConstructionPointsPerSecondRepair;//[Offset: 0x208, Size: 1]
	float SoldierHealthPerSecond;//[Offset: 0x20c, Size: 1]
	<SQVehicle*,float> TimeInRearm;//[Offset: 0x210, Size: 1]
	Actor*[] CurrentOverlappedActors;//[Offset: 0x260, Size: 1]

--------------------------------
Class: Infantry_Tutorial_C.LevelScriptActor.Actor.Object

--------------------------------
Class: AbstractNavData.NavigationData.Actor.Object

--------------------------------
Class: BP_PlayerController_Tutorial_C.BP_PlayerController_C.SQPlayerController.PlayerController.Controller.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xcb8, Size: 1]
	PawnNoiseEmitterComponent* PawnNoiseEmitter;//[Offset: 0xcc0, Size: 1]
	bool Auto Giving Up;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcc8, Size: 1]
	bool First Spawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcc9, Size: 1]
	bool OnFireWeaponOverride(Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, BP_Weapon2_C* K2Node_DynamicCast_AsBP_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, BP_Surrender_C* K2Node_DynamicCast_AsBP_Surrender, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Spawn Sense Sounds(bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSprinting_ReturnValue, Vector CallFunc_GetVelocity_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Respawn at Spawn Point(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetTeam_ReturnValue, SQGameSpawn*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, SQGameSpawn* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GetSpawningEnabled_ReturnValue, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void InpActEvt_CommandMenu_K2Node_InputActionEvent(Key Key);// 0x1d69c50
	void Respawn Self();// 0x1d69c50
	void BlueprintPlayerDied();// 0x1d69c50
	void BlueprintPlayerSpawned();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Server Fire Sound();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void Auto Give Up();// 0x1d69c50
	void Force Change Team();// 0x1d69c50
	void PromotedNotification(bool Commander);// 0x1d69c50
	void ExecuteUbergraph_BP_PlayerController_Tutorial(int EntryPoint, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_Tutorial_C* K2Node_DynamicCast_AsBP_HUD_Tutorial, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, float K2Node_Event_DeltaSeconds, Vector CallFunc_K2_GetActorLocation_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, int CallFunc_GetTeam_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, BP_EscapeVehicle_C*[] CallFunc_GetAllActorsOfClass_OutActors, BP_EscapeVehicle_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, bool K2Node_Event_Commander, Key K2Node_InputActionEvent_Key);// 0x1d69c50

--------------------------------
Class: PawnNoiseEmitterComponent.ActorComponent.Object
	bool bAIPerceptionSystemCompatibilityMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 1)[Offset: 0xb0, Size: 1]
	Vector LastRemoteNoisePosition;//[Offset: 0xb4, Size: 1]
	float NoiseLifetime;//[Offset: 0xc0, Size: 1]
	float LastRemoteNoiseVolume;//[Offset: 0xc4, Size: 1]
	float LastRemoteNoiseTime;//[Offset: 0xc8, Size: 1]
	float LastLocalNoiseVolume;//[Offset: 0xcc, Size: 1]
	float LastLocalNoiseTime;//[Offset: 0xd0, Size: 1]
	void MakeNoise(Actor* NoiseMaker, float Loudness, out const Vector NoiseLocation);// 0x3fc2680

--------------------------------
Class: BP_Weapon2_C.SQInfantryWeapon.SQWeapon.SQEquipableItem.Actor.Object

--------------------------------
Class: BP_Surrender_C.BP_Weapon2_C.SQInfantryWeapon.SQWeapon.SQEquipableItem.Actor.Object

--------------------------------
Class: BP_HUD_Tutorial_C.BP_HUD_C.SQHUD.HUD.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xad0, Size: 1]
	bool Did Fade;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xad8, Size: 1]
	UMG_TutorialOverlay_C* TutorialOverlay;//[Offset: 0xae0, Size: 1]
	void Create Deployment();// 0x1d69c50
	void OnDied();// 0x1d69c50
	void Player Spawned();// 0x1d69c50
	void Game State Became Valid();// 0x1d69c50
	void Create Tutorial Overlay();// 0x1d69c50
	void ExecuteUbergraph_BP_HUD_Tutorial(int EntryPoint, bool CallFunc_IsValid_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, SQPlayerCameraManager* K2Node_DynamicCast_AsSQPlayer_Camera_Manager, bool K2Node_DynamicCast_bSuccess, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, PlayerController* CallFunc_GetPlayerController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsDeployRoleAvailable_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_PlayerController_Tutorial_Heli_C* K2Node_DynamicCast_AsBP_Player_Controller_Tutorial_Heli, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_Tutorial_C* K2Node_DynamicCast_AsBP_Player_Controller_Tutorial, bool K2Node_DynamicCast_bSuccess, UIZOrderStruct CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, PlayerController* CallFunc_GetOwningPlayerController_ReturnValue, UMG_TutorialOverlay_C* CallFunc_Create_ReturnValue, UMG_BaseHUD_C* K2Node_DynamicCast_AsUMG_Base_HUD, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_PlayerController_Tutorial_Heli_C.BP_PlayerController_C.SQPlayerController.PlayerController.Controller.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xcb8, Size: 1]
	PawnNoiseEmitterComponent* PawnNoiseEmitter;//[Offset: 0xcc0, Size: 1]
	bool Auto Giving Up;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcc8, Size: 1]
	bool First Spawn;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xcc9, Size: 1]
	bool OnFireWeaponOverride(Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, SQEquipableItem* CallFunc_GetCurrentWeapon_ReturnValue, BP_Weapon2_C* K2Node_DynamicCast_AsBP_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, BP_Surrender_C* K2Node_DynamicCast_AsBP_Surrender, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Spawn Sense Sounds(bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsSprinting_ReturnValue, Vector CallFunc_GetVelocity_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Respawn at Spawn Point(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, int CallFunc_GetTeam_ReturnValue, SQGameSpawn*[] CallFunc_GetAllActorsOfClass_OutActors, int CallFunc_Array_Length_ReturnValue, SQGameSpawn* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GetSpawningEnabled_ReturnValue, interface classNone CallFunc_GetTeamId_self_CastInput, int CallFunc_GetTeamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Respawn Self();// 0x1d69c50
	void BlueprintPlayerDied();// 0x1d69c50
	void BlueprintPlayerSpawned();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void Server Fire Sound();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void Auto Give Up();// 0x1d69c50
	void Force Change Team();// 0x1d69c50
	void PromotedNotification(bool Commander);// 0x1d69c50
	void ExecuteUbergraph_BP_PlayerController_Tutorial_Heli(int EntryPoint, HUD* CallFunc_GetHUD_ReturnValue, BP_HUD_Tutorial_C* K2Node_DynamicCast_AsBP_HUD_Tutorial, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, float K2Node_Event_DeltaSeconds, Vector CallFunc_K2_GetActorLocation_ReturnValue, Pawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* K2Node_DynamicCast_AsSQSoldier, bool K2Node_DynamicCast_bSuccess, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, int CallFunc_GetTeam_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, BP_EscapeVehicle_C*[] CallFunc_GetAllActorsOfClass_OutActors, BP_EscapeVehicle_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, bool K2Node_Event_Commander, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_EscapeVehicle_C.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x228, Size: 1]
	SkeletalMeshComponent* SkeletalMesh1;//[Offset: 0x230, Size: 1]
	SkeletalMeshComponent* SkeletalMesh;//[Offset: 0x238, Size: 1]
	BoxComponent* Box;//[Offset: 0x240, Size: 1]
	CableComponent* Cable3;//[Offset: 0x248, Size: 1]
	CableComponent* Cable2;//[Offset: 0x250, Size: 1]
	CableComponent* Cable1;//[Offset: 0x258, Size: 1]
	CableComponent* Cable;//[Offset: 0x260, Size: 1]
	AudioComponent* Audio;//[Offset: 0x268, Size: 1]
	ParticleSystemComponent* HeloDust;//[Offset: 0x270, Size: 1]
	SkeletalMeshComponent* Helo;//[Offset: 0x278, Size: 1]
	Vector World LZ;//[Offset: 0x280, Size: 1]
	Vector World Leave Target;//[Offset: 0x28c, Size: 1]
	bool Waiting For Fast Ropes;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x298, Size: 1]
	Actor* Leave Target;//[Offset: 0x2a0, Size: 1]
	bool Leave Zone;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a8, Size: 1]
	bool Active;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2a9, Size: 1]
	bool is visible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x2aa, Size: 1]
	bool ShouldDisplayPrompt(Controller* User);// 0x1d69c50
	int GetInterfaceTeam();// 0x1d69c50
	SQUsableData GetUsableData(SQUsableData Data);// 0x1d69c50
	void Update Movement(float CallFunc_GetWorldDeltaSeconds_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_VInterpTo_Constant_ReturnValue, HitResult CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue);// 0x1d69c50
	void Update Effects(const Actor*[] Temp_object_Variable, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, Rotator CallFunc_MakeRotator_ReturnValue, HitResult CallFunc_K2_AddRelativeRotation_SweepHitResult, Vector CallFunc_K2_GetActorLocation_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd, Vector CallFunc_Add_VectorVector_ReturnValue, HitResult CallFunc_K2_SetWorldLocation_SweepHitResult);// 0x1d69c50
	void BPStopUsed(Controller* User);// 0x1d69c50
	void ServerOnUsed(Controller* User);// 0x1d69c50
	void ServerStopUsed(Controller* User);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void BPHidePrompt();// 0x1d69c50
	void BPDisplayPrompt(Controller* User);// 0x1d69c50
	void BPOnUsed(Controller* User);// 0x1d69c50
	void Become Visible();// 0x1d69c50
	void ExecuteUbergraph_BP_EscapeVehicle(int EntryPoint, Controller* K2Node_Event_User, Controller* K2Node_Event_User, Controller* K2Node_Event_User, float K2Node_Event_DeltaSeconds, bool Temp_bool_IsClosed_Variable, SQPlayerController* CallFunc_GetSquadPlayerController_Return_Value, bool CallFunc_IsValid_ReturnValue, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, Controller* K2Node_Event_User, PlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Controller* K2Node_Event_User, HUD* CallFunc_GetHUD_ReturnValue, PlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, GameInstance* CallFunc_GetGameInstance_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsValid_ReturnValue, SQGameInstance* K2Node_DynamicCast_AsSQGame_Instance, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: CableComponent.MeshComponent.PrimitiveComponent.SceneComponent.ActorComponent.Object
	bool bAttachStart;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x478, Size: 1]
	bool bAttachEnd;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x479, Size: 1]
	ComponentReference AttachEndTo;//[Offset: 0x480, Size: 1]
	FName AttachEndToSocketName;//[Offset: 0x4a8, Size: 1]
	Vector EndLocation;//[Offset: 0x4b0, Size: 1]
	float CableLength;//[Offset: 0x4bc, Size: 1]
	int NumSegments;//[Offset: 0x4c0, Size: 1]
	float SubstepTime;//[Offset: 0x4c4, Size: 1]
	int SolverIterations;//[Offset: 0x4c8, Size: 1]
	bool bEnableStiffness;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4cc, Size: 1]
	bool bUseSubstepping;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4cd, Size: 1]
	bool bSkipCableUpdateWhenNotVisible;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4ce, Size: 1]
	bool bSkipCableUpdateWhenNotOwnerRecentlyRendered;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4cf, Size: 1]
	bool bEnableCollision;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x4d0, Size: 1]
	float CollisionFriction;//[Offset: 0x4d4, Size: 1]
	Vector CableForce;//[Offset: 0x4d8, Size: 1]
	float CableGravityScale;//[Offset: 0x4e4, Size: 1]
	float CableWidth;//[Offset: 0x4e8, Size: 1]
	int NumSides;//[Offset: 0x4ec, Size: 1]
	float TileMaterial;//[Offset: 0x4f0, Size: 1]
	void SetAttachEndToComponent(SceneComponent* Component, FName SocketName);// 0xe90360
	void SetAttachEndTo(Actor* Actor, FName ComponentProperty, FName SocketName);// 0xe90250
	void GetCableParticleLocations(out Vector[] Locations);// 0xe901a0
	SceneComponent* GetAttachedComponent();// 0xe90170
	Actor* GetAttachedActor();// 0xe90140

--------------------------------
Class: ComponentReference
	Actor* OtherActor;//[Offset: 0x0, Size: 1]
	FName ComponentProperty;//[Offset: 0x8, Size: 1]
	FString PathToComponent;//[Offset: 0x10, Size: 1]

--------------------------------
Class: UMG_TutorialOverlay_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	W_LoadingSuppliesOverlay_C* W_LoadingSuppliesOverlay;//[Offset: 0x268, Size: 1]
	UMG_BaseHUD_C* BaseHUD;//[Offset: 0x270, Size: 1]
	bool LoadingSuppliesEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x278, Size: 1]
	void EnableLoadingSuppliesOverlay();// 0x1d69c50
	void DisableLoadingSuppliesOverlay();// 0x1d69c50
	void CloseLoadingSuppliesOverlay();// 0x1d69c50
	void ShowLoadingSuppliesOverlay();// 0x1d69c50
	void SetBaseHUD(UMG_BaseHUD_C* BaseHUD);// 0x1d69c50
	void ExecuteUbergraph_UMG_TutorialOverlay(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, UMG_BaseHUD_C* K2Node_CustomEvent_BaseHUD, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50

--------------------------------
Class: W_LoadingSuppliesOverlay_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	W_OverlayMessageBR_C* W_OverlayMessageBR;//[Offset: 0x268, Size: 1]
	W_OverlayMessageBL_C* W_OverlayMessages;//[Offset: 0x270, Size: 1]
	W_OverlayMessageBL_C* W_OverlayMessages;//[Offset: 0x278, Size: 1]
	void OnShow();// 0x1d69c50
	void OnClose();// 0x1d69c50
	void ExecuteUbergraph_W_LoadingSuppliesOverlay(int EntryPoint);// 0x1d69c50

--------------------------------
Class: W_OverlayMessageBR_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* OpenWindow;//[Offset: 0x268, Size: 1]
	Image* CircleGuide;//[Offset: 0x270, Size: 1]
	Image* CircleShow;//[Offset: 0x278, Size: 1]
	Image* LineGuide;//[Offset: 0x280, Size: 1]
	TextBlock* MessageTextBox;//[Offset: 0x288, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x290, Size: 1]
	FString Message;//[Offset: 0x298, Size: 1]
	int CurrentIndex;//[Offset: 0x2a8, Size: 1]
	TimerHandle TypewriterTimer;//[Offset: 0x2b0, Size: 1]
	float CurrentDesiredIndex;//[Offset: 0x2b8, Size: 1]
	Vector2D Size;//[Offset: 0x2bc, Size: 1]
	float CurrentDesiredWidth;//[Offset: 0x2c4, Size: 1]
	TimerHandle SizeBoxExpansionTimer;//[Offset: 0x2c8, Size: 1]
	float TypewriterLoopTime;//[Offset: 0x2d0, Size: 1]
	void Cleanup(float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y);// 0x1d69c50
	void OnShow();// 0x1d69c50
	void Typewriter();// 0x1d69c50
	void OnClose();// 0x1d69c50
	void SizeBoxExpansion();// 0x1d69c50
	void ExecuteUbergraph_W_OverlayMessageBR(int EntryPoint, bool Temp_bool_Variable, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_Len_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, int CallFunc_Len_ReturnValue, int CallFunc_FTrunc_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool Temp_bool_Variable, int K2Node_Select_Default, int CallFunc_Len_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, FString CallFunc_GetSubstring_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, float K2Node_Select_Default, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: W_OverlayMessageBL_C.UserWidget.Widget.Visual.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x260, Size: 1]
	WidgetAnimation* OpenWindow;//[Offset: 0x268, Size: 1]
	Image* CircleGuide;//[Offset: 0x270, Size: 1]
	Image* CircleShow;//[Offset: 0x278, Size: 1]
	Image* LineGuide;//[Offset: 0x280, Size: 1]
	TextBlock* MessageTextBox;//[Offset: 0x288, Size: 1]
	SizeBox* SizeBox;//[Offset: 0x290, Size: 1]
	FString Message;//[Offset: 0x298, Size: 1]
	int CurrentIndex;//[Offset: 0x2a8, Size: 1]
	TimerHandle TypewriterTimer;//[Offset: 0x2b0, Size: 1]
	float CurrentDesiredIndex;//[Offset: 0x2b8, Size: 1]
	Vector2D Size;//[Offset: 0x2bc, Size: 1]
	float CurrentDesiredWidth;//[Offset: 0x2c4, Size: 1]
	TimerHandle SizeBoxExpansionTimer;//[Offset: 0x2c8, Size: 1]
	float TypewriterLoopTime;//[Offset: 0x2d0, Size: 1]
	void Cleanup(float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y);// 0x1d69c50
	void OnShow();// 0x1d69c50
	void Typewriter();// 0x1d69c50
	void OnClose();// 0x1d69c50
	void SizeBoxExpansion();// 0x1d69c50
	void ExecuteUbergraph_W_OverlayMessageBL(int EntryPoint, bool Temp_bool_Variable, UMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, int CallFunc_Len_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, int CallFunc_Len_ReturnValue, int CallFunc_FTrunc_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool Temp_bool_Variable, int K2Node_Select_Default, int CallFunc_Len_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, FString CallFunc_GetSubstring_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, float K2Node_Select_Default, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_CameraManager_C.SQPlayerCameraManager.PlayerCameraManager.Actor.Object

--------------------------------
Class: BP_EmplacedBGM71TOW_Tripod_C.BP_GenericDeployableTripodVehicle_C.SQDeployableTripodVehicle.SQDeployableVehicle.SQVehicle.SQVehicleSeat.SQPawn.Pawn.Actor.Object
	SQArmorMeshComponent* SQArmorMeshTripod;//[Offset: 0x988, Size: 1]
	SQArmorMeshComponent* SQArmorMesh;//[Offset: 0x990, Size: 1]
	bool bIsPossessed;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x998, Size: 1]

--------------------------------
Class: BP_EmplacedBGM71TOW_C.BP_GenericDeployableGuidedMissileWeapon_C.SQVehicleWeaponTOW.SQVehicleWeapon.SQWeapon_Effects.SQWeapon.SQEquipableItem.Actor.Object

--------------------------------
Class: BP_GenericDeployableGuidedMissileWeapon_C.SQVehicleWeaponTOW.SQVehicleWeapon.SQWeapon_Effects.SQWeapon.SQEquipableItem.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb20, Size: 1]
	SQBlastComponent* SQBlast;//[Offset: 0xb28, Size: 1]
	float ShutdownTemp;//[Offset: 0xb30, Size: 1]
	float OverheatEffectTrigger;//[Offset: 0xb34, Size: 1]
	float OverheatEffectTrigger;//[Offset: 0xb38, Size: 1]
	ParticleSystemComponent* Overheat_1_Effect;//[Offset: 0xb40, Size: 1]
	ParticleSystemComponent* Overheat_2_Effect;//[Offset: 0xb48, Size: 1]
	ParticleSystemComponent* Overheat_3_Effect;//[Offset: 0xb50, Size: 1]
	AudioComponent* Overheat_1_Sound;//[Offset: 0xb58, Size: 1]
	AudioComponent* Overheat_2_Sound;//[Offset: 0xb60, Size: 1]
	SoundCue* SoundTest;//[Offset: 0xb68, Size: 1]
	AudioComponent* Overheat_3_Sound;//[Offset: 0xb70, Size: 1]
	FName Mesh1PReturnSection;//[Offset: 0xb78, Size: 1]
	FName Mesh3PReturnSection;//[Offset: 0xb80, Size: 1]
	FName SoldierMeshReturnSection;//[Offset: 0xb88, Size: 1]
	FName BackblastSocket;//[Offset: 0xb90, Size: 1]
	class SQVehicleViewWidget* ReticleClass;//[Offset: 0xb98, Size: 1]
	Material* ReticlePPMat;//[Offset: 0xba0, Size: 1]
	SQProjectileMovement* LaunchedProjMoveComp;//[Offset: 0xba8, Size: 1]
	bool IsAds;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0xbb0, Size: 1]
	int ZoomLevel;//[Offset: 0xbb4, Size: 1]
	SoundBase* FireDelaySound;//[Offset: 0xbb8, Size: 1]
	float FireDelayDuration;//[Offset: 0xbc0, Size: 1]
	AnimMontage* Reload Weapon Animation;//[Offset: 0xbc8, Size: 1]
	AnimMontage* Reload Soldier Animation;//[Offset: 0xbd0, Size: 1]
	AnimMontage* Reload Dry Weapon Animation;//[Offset: 0xbd8, Size: 1]
	AnimMontage* Reload Dry Soldier Animation;//[Offset: 0xbe0, Size: 1]
	AnimMontage* Reload Dry Tripod Animation;//[Offset: 0xbe8, Size: 1]
	AnimMontage* Reload Tripod Animation;//[Offset: 0xbf0, Size: 1]
	AnimMontage* Equip Tripod Animation;//[Offset: 0xbf8, Size: 1]
	AnimMontage* Equip Weapon Animation;//[Offset: 0xc00, Size: 1]
	AnimMontage* Equip Soldier Animation;//[Offset: 0xc08, Size: 1]
	AnimMontage* Fire Tripod Animation;//[Offset: 0xc10, Size: 1]
	AnimMontage* Fire Weapon Animation;//[Offset: 0xc18, Size: 1]
	AnimMontage* Fire Soldier Animation;//[Offset: 0xc20, Size: 1]
	SQHUD* Last HUD;//[Offset: 0xc28, Size: 1]
	Controller* Last PC;//[Offset: 0xc30, Size: 1]
	float MeshCurrentMontageTime;//[Offset: 0xc38, Size: 1]
	void ResumeAnimations(AnimMontage* TripodAnim, AnimMontage* WeaponAnim, AnimMontage* SoldierAnim, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Montage_Play_ReturnValue, Pawn* CallFunc_GetOwnerPawn_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Montage_Play_ReturnValue, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, float CallFunc_Montage_Play_ReturnValue, float CallFunc_Montage_Play_ReturnValue);// 0x1d69c50
	void StopAnimations(SQSoldier* Soldier, bool CallFunc_IsValid_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, SQAnimInstanceSoldier* K2Node_DynamicCast_AsSQAnim_Instance_Soldier, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, FName CallFunc_Montage_GetCurrentSection_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, Pawn* CallFunc_GetOwnerPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Montage_GetPosition_ReturnValue, FName CallFunc_Montage_GetCurrentSection_ReturnValue);// 0x1d69c50
	void PlayAnimations(AnimMontage* TripodAnim, AnimMontage* WeaponAnim, AnimMontage* SoldierAnim, SQSoldier* Soldier, out float TripodAnimTime, out float WeaponAnimTime, out float SoldierAnimTime, SQSoldier* LocalSoldier, float SoliderPlayTime, float WeaponPlayTime, float TripodPlayTime, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetPlayLength_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetPlayLength_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetPlayLength_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetPlayLength_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_PlayAnimMontage_ReturnValue, bool CallFunc_IsValid_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Montage_Play_ReturnValue, Pawn* CallFunc_GetOwnerPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, float CallFunc_Montage_Play_ReturnValue, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, AnimInstance* CallFunc_GetAnimInstance_ReturnValue, float CallFunc_Montage_Play_ReturnValue);// 0x1d69c50
	void UserConstructionScript(bool CallFunc_K2_AttachToComponent_ReturnValue);// 0x1d69c50
	void BlueprintOnFire(out const Vector Origin);// 0x1d69c50
	void BlueprintOnReload();// 0x1d69c50
	void SoldierEntersVehicle(SQSoldier* Soldier);// 0x1d69c50
	void SoldierLeavesVehicle(SQSoldier* Soldier);// 0x1d69c50
	void BlueprintOnEquip();// 0x1d69c50
	void BlueprintOnZoom(bool bNewZoom);// 0x1d69c50
	void BlueprintOnPreFire();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void CPossessed();// 0x1d69c50
	void CUnpossessed();// 0x1d69c50
	void RemoveADS();// 0x1d69c50
	void CameraOnSoldier();// 0x1d69c50
	void CameraOnWeapon();// 0x1d69c50
	void BlueprintOnUnequip();// 0x1d69c50
	void ProjectileGuidanceChanged(Actor* Projectile, bool bGuidanceEnabled);// 0x1d69c50
	void ExecuteUbergraph_BP_GenericDeployableGuidedMissileWeapon(int EntryPoint, SQSoldier* K2Node_Event_Soldier, SQSoldier* K2Node_Event_Soldier, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsReloading_ReturnValue, const Vector K2Node_Event_Origin, bool CallFunc_IsDedicatedServer_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, SQVehicleSeat* CallFunc_GetOwnerSeat_ReturnValue, bool K2Node_Event_bNewZoom, Controller* CallFunc_GetController_ReturnValue, SQPlayerController* K2Node_DynamicCast_AsSQPlayer_Controller, bool K2Node_DynamicCast_bSuccess, HUD* CallFunc_GetHUD_ReturnValue, SQHUD* K2Node_DynamicCast_AsSQHUD, bool K2Node_DynamicCast_bSuccess, PostProcessSettings K2Node_MakeStruct_PostProcessSettings, SQGameUserSettings* CallFunc_GetSquadGameUserSettings_ReturnValue, Vector CallFunc_K2_GetActorLocation_ReturnValue, AudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue, delegate K2Node_CreateDelegate_OutputDelegate, SQVehicleSeat* CallFunc_GetOwnerSeat_ReturnValue, bool CallFunc_IsValid_ReturnValue, Controller* CallFunc_GetController_ReturnValue, PlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess, Pawn* CallFunc_GetOwnerPawn_ReturnValue, SQPawn* K2Node_DynamicCast_AsSQPawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_MagazineHasAmmo_ReturnValue, bool CallFunc_MagazineHasAmmo_ReturnValue, bool CallFunc_MagazineHasAmmo_ReturnValue, float CallFunc_PlayAnimations_TripodAnimTime, float CallFunc_PlayAnimations_WeaponAnimTime, float CallFunc_PlayAnimations_SoldierAnimTime, float CallFunc_PlayAnimations_TripodAnimTime, float CallFunc_PlayAnimations_WeaponAnimTime, float CallFunc_PlayAnimations_SoldierAnimTime, float CallFunc_PlayAnimations_TripodAnimTime, float CallFunc_PlayAnimations_WeaponAnimTime, float CallFunc_PlayAnimations_SoldierAnimTime, float CallFunc_PlayAnimations_TripodAnimTime, float CallFunc_PlayAnimations_WeaponAnimTime, float CallFunc_PlayAnimations_SoldierAnimTime, bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_PlayAnimations_TripodAnimTime, float CallFunc_PlayAnimations_WeaponAnimTime, float CallFunc_PlayAnimations_SoldierAnimTime, Pawn* CallFunc_GetOwnerPawn_ReturnValue, Pawn* CallFunc_GetOwnerPawn_ReturnValue, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, bool CallFunc_K2_AttachToComponent_ReturnValue, SQSoldier* CallFunc_GetSoldier_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue, const Actor* Temp_object_Variable, Pawn* CallFunc_K2_GetPawn_ReturnValue, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, BP_GenericDeployableTripodVehicle_C* K2Node_DynamicCast_AsBP_Generic_Deployable_Tripod_Vehicle, bool K2Node_DynamicCast_bSuccess, Actor* K2Node_Event_Projectile, bool K2Node_Event_bGuidanceEnabled, bool CallFunc_Not_PreBool_ReturnValue, interface classNull_R K2Node_DynamicCast_AsBPI_Guided_Projectile, bool K2Node_DynamicCast_bSuccess, interface classNone K2Node_DynamicCast_AsBPI_Guided_Projectile, bool K2Node_DynamicCast_bSuccess, delegate K2Node_CreateDelegate_OutputDelegate);// 0x1d69c50

--------------------------------
Class: SQVehicleWeaponTOW.SQVehicleWeapon.SQWeapon_Effects.SQWeapon.SQEquipableItem.Actor.Object
	int MaxConcurrentProjectiles;//[Offset: 0xac0, Size: 1]
	class SQVehicleViewWidget* ViewWidgetClass;//[Offset: 0xac8, Size: 1]
	Material* ReticlePPMatCPP;//[Offset: 0xad0, Size: 1]
	float MissileRotationSpeed;//[Offset: 0xad8, Size: 1]
	float AimStartOffset;//[Offset: 0xadc, Size: 1]
	float AimMaxDistance;//[Offset: 0xae0, Size: 1]
	float ProjectileCorrectionDistance;//[Offset: 0xae4, Size: 1]
	float FOVMultiplier;//[Offset: 0xae8, Size: 1]
	float SceneFringeIntensityInZoom;//[Offset: 0xaec, Size: 1]
	float PPBlendWeight;//[Offset: 0xaf0, Size: 1]
	float FireDelay;//[Offset: 0xaf4, Size: 1]
	CameraComponent* CameraComponent;//[Offset: 0xaf8, Size: 1]
	SQHUD* LastPlayerHud;//[Offset: 0xb00, Size: 1]
	void ProjectileGuidanceChanged(Actor* Projectile, bool bGuidanceEnabled);// 0x1d69c50
	void DelayedFireWeapon();// 0xe3c6a0
	void BlueprintOnPreFire();// 0x1d69c50

--------------------------------
Class: SQBlastComponent.SceneComponent.ActorComponent.Object
	float ConeLength;//[Offset: 0x1f8, Size: 1]
	float ConeAngle;//[Offset: 0x1fc, Size: 1]
	float BlockBlastTraceOriginOffset;//[Offset: 0x200, Size: 1]
	float MaxDamage;//[Offset: 0x204, Size: 1]
	bool bIsDrawDebugEnabled;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x208, Size: 1]
	class DamageType* DamageType;//[Offset: 0x210, Size: 1]
	float EffectsConeLength;//[Offset: 0x218, Size: 1]
	float EffectsConeHalfAngle;//[Offset: 0x21c, Size: 1]
	class SQShockwave* BlastShockwave;//[Offset: 0x220, Size: 1]
	void ServerFireBlast(const Vector BlastLocationZeroBased, const Vector BlastAimVector);// 0xd54100
	void FireBlast();// 0xd4f240

--------------------------------
Class: SQProjectileMovement.ProjectileMovementComponent.MovementComponent.ActorComponent.Object
	Vector ConstantAcceleration;//[Offset: 0x1d0, Size: 1]
	float ConstantAccelerationTimeout;//[Offset: 0x1dc, Size: 1]
	bool bIgnoreGravityDuringConstantAcceleration;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1e0, Size: 1]
	bool bIgnoreGravity;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x1e1, Size: 1]
	void SetFlightToPosition(Vector LookatPos, float AngularSpeed, float DeltaTime);// 0xdeaa20

--------------------------------
Class: Null_R
	None None;//[Size: 0]

--------------------------------
Class: BP_M939_LastingEffect_C.BP_LastingEffect_Vehicle_C.SQLastingEffect.Actor.Object

--------------------------------
Class: BP_LastingEffect_Vehicle_C.SQLastingEffect.Actor.Object

--------------------------------
Class: BP_Soldier_USA_Tutorial_C.BP_MutableSoldier_C.SQSoldier.Character.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2448, Size: 1]
	void Move Sound();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_Soldier_USA_Tutorial(int EntryPoint, delegate K2Node_CreateDelegate_OutputDelegate, TimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue);// 0x1d69c50

--------------------------------
Class: BP_MutableSoldier_C.SQSoldier.Character.Pawn.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x2420, Size: 1]
	SQEmotePlayer* SQEmotePlayer;//[Offset: 0x2428, Size: 1]
	SQPlayerInteraction_C* SQPlayerInteraction;//[Offset: 0x2430, Size: 1]
	VoiceAction_Component_C* VoiceAction_Component;//[Offset: 0x2438, Size: 1]
	float RagdollFromFallDamageThreshold;//[Offset: 0x2440, Size: 1]
	void On Receive Fall Damage(Actor* DamagedActor, float damage, Controller* InstigatedBy, Vector HitLocation, PrimitiveComponent* FHitComponent, FName BoneName, Vector ShotFromDirection, const DamageType* DamageType, Actor* DamageCauser);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ExecuteUbergraph_BP_MutableSoldier(int EntryPoint, Actor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, Controller* K2Node_CustomEvent_InstigatedBy, Vector K2Node_CustomEvent_HitLocation, PrimitiveComponent* K2Node_CustomEvent_FHitComponent, FName K2Node_CustomEvent_BoneName, Vector K2Node_CustomEvent_ShotFromDirection, const DamageType* K2Node_CustomEvent_DamageType, Actor* K2Node_CustomEvent_DamageCauser, const SQDamageType_Fall* K2Node_DynamicCast_AsSQDamage_Type_Fall, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: SQDamageType_Fall.SQDamageType.DamageType.Object

--------------------------------
Class: SQDamageType.DamageType.Object
	bool bCanCauseBleeding;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x40, Size: 1]

--------------------------------
Class: SQPlayerInteraction_C.BP_PlayerInteraction_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x138, Size: 1]
	BP_MutableSoldier_C* Owning Soldier;//[Offset: 0x140, Size: 1]
	BP_SQLevel_C* Level;//[Offset: 0x148, Size: 1]
	Struct_BiomeTextures Desert Textures;//[Offset: 0x150, Size: 1]
	Struct_BiomeTextures Forest Textures;//[Offset: 0x168, Size: 1]
	Struct_BiomeTextures Snow Textures;//[Offset: 0x180, Size: 1]
	void ExcludePlayerPatch(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, int CallFunc_Array_Length_ReturnValue, MaterialInterface* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, MaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Add_ReturnValue);// 0x1d69c50
	void Setup Biome Textures(byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, byte CallFunc_Get_Current_Biome_Biome, Struct_BiomeTextures K2Node_Select_Default, float K2Node_Select_Default);// 0x1d69c50
	void Get Current Biome(out byte Biome);// 0x1d69c50
	bool CanTrace(bool CallFunc_Not_PreBool_ReturnValue);// 0x1d69c50
	void Blend By Surface Type(byte In, out float Front, out float Bottom, byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, byte Temp_byte_Variable, byte Temp_byte_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float Temp_float_Variable, float K2Node_Select_Default, float K2Node_Select_Default, float K2Node_Select_Default, byte CallFunc_Get_Current_Biome_Biome, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Saturate_ReturnValue, float CallFunc_Saturate_ReturnValue);// 0x1d69c50
	bool ApplyFrontProjection();// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void ExecuteUbergraph_SQPlayerInteraction(int EntryPoint, float K2Node_Event_DeltaSeconds, Actor* CallFunc_GetOwner_ReturnValue, BP_MutableSoldier_C* K2Node_DynamicCast_AsBP_Mutable_Soldier, bool K2Node_DynamicCast_bSuccess, SQGameInstance* CallFunc_GetSquadGameInstance_ReturnValue, BP_SQLevel_C* K2Node_DynamicCast_AsBP_SQLevel, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50

--------------------------------
Class: BP_PlayerInteraction_C.ActorComponent.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0xb0, Size: 1]
	byte MeshSetupMode;//[Offset: 0xb8, Size: 1]
	MeshComponent*[] ExclusionMeshes;//[Offset: 0xc0, Size: 1]
	byte MaterialSetupMode;//[Offset: 0xd0, Size: 1]
	MaterialInterface*[] ExclusionMaterials;//[Offset: 0xd8, Size: 1]
	MaterialInstanceDynamic*[] MIDs;//[Offset: 0xe8, Size: 1]
	Struct_BiomeTextures Biome Textures;//[Offset: 0xf8, Size: 1]
	float GroundTraceDist;//[Offset: 0x110, Size: 1]
	int N Safety Checks;//[Offset: 0x114, Size: 1]
	bool Wait for Biome Setup On Play?;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x118, Size: 1]
	bool Successful Setup;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x119, Size: 1]
	byte Front;//[Offset: 0x11a, Size: 1]
	byte Bottom;//[Offset: 0x11b, Size: 1]
	float CurFront;//[Offset: 0x11c, Size: 1]
	float CurBottom;//[Offset: 0x120, Size: 1]
	float PerStepWeight;//[Offset: 0x124, Size: 1]
	float Effect Max;//[Offset: 0x128, Size: 1]
	bool DebugMode;//(ByteOffset: 0, ByteMask: 1, FieldMask: 255)[Offset: 0x12c, Size: 1]
	float Time;//[Offset: 0x130, Size: 1]
	float Force Update Check Time ;//[Offset: 0x134, Size: 1]
	void OnRep_Bottom(float CallFunc_Conv_ByteToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50
	void OnRep_Front(float CallFunc_Conv_ByteToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);// 0x1d69c50
	void GetTimeUp();// 0x1d69c50
	float Saturate(float In, float CallFunc_FClamp_ReturnValue);// 0x1d69c50
	bool CanTrace();// 0x1d69c50
	bool ApplyFrontProjection();// 0x1d69c50
	void Blend By Surface Type(byte In, out float Front, out float Bottom, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Saturate_ReturnValue, float CallFunc_Saturate_ReturnValue);// 0x1d69c50
	void GetHitData(out const HitResult Hit, out byte SurfaceType, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, Vector CallFunc_BreakHitResult_Location, Vector CallFunc_BreakHitResult_ImpactPoint, Vector CallFunc_BreakHitResult_Normal, Vector CallFunc_BreakHitResult_ImpactNormal, PhysicalMaterial* CallFunc_BreakHitResult_PhysMat, Actor* CallFunc_BreakHitResult_HitActor, PrimitiveComponent* CallFunc_BreakHitResult_HitComponent, FName CallFunc_BreakHitResult_HitBoneName, int CallFunc_BreakHitResult_HitItem, int CallFunc_BreakHitResult_ElementIndex, int CallFunc_BreakHitResult_FaceIndex, Vector CallFunc_BreakHitResult_TraceStart, Vector CallFunc_BreakHitResult_TraceEnd);// 0x1d69c50
	bool Check if Biome Params Valid(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);// 0x1d69c50
	void Pass Biome Params to MIDs(int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, MaterialInstanceDynamic* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Create MIDs(MaterialInterface* CurMaterial, MeshComponent* CurComponent, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, Actor* CallFunc_GetOwner_ReturnValue, FString CallFunc_GetDisplayName_ReturnValue, byte Temp_byte_Variable, int CallFunc_Array_Length_ReturnValue, FString CallFunc_Conv_IntToString_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, MaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, int CallFunc_Array_AddUnique_ReturnValue, byte Temp_byte_Variable, bool K2Node_SwitchEnum_CmpSuccess, int Temp_int_Loop_Counter_Variable, MaterialInterface*[] CallFunc_GetMaterials_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, MaterialInterface*[] K2Node_Select_Default, MaterialInterface* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, Actor* CallFunc_GetOwner_ReturnValue, MeshComponent*[] CallFunc_K2_GetComponentsByClass_ReturnValue, MeshComponent*[] K2Node_Select_Default, int CallFunc_Array_Length_ReturnValue, MeshComponent* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void ReceiveTick(float DeltaSeconds);// 0x1d69c50
	void Update Shader Values(float Value, bool bIsFront);// 0x1d69c50
	void ExecuteUbergraph_BP_PlayerInteraction(int EntryPoint, byte Temp_byte_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, byte Temp_byte_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, bool Temp_bool_Variable, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_Check_if_Biome_Params_Valid_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, float K2Node_Event_DeltaSeconds, Actor* CallFunc_GetOwner_ReturnValue, const Actor*[] K2Node_MakeArray_Array, Vector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_ApplyFrontProjection_ReturnValue, Vector CallFunc_MakeVector_ReturnValue, bool CallFunc_CanTrace_ReturnValue, Vector CallFunc_Subtract_VectorVector_ReturnValue, int Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, byte K2Node_Select_Default, MaterialInstanceDynamic* CallFunc_Array_Get_Item, HitResult CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, byte CallFunc_GetHitData_SurfaceType, float CallFunc_Blend_By_Surface_Type_Front, float CallFunc_Blend_By_Surface_Type_Bottom, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_ApplyFrontProjection_ReturnValue, bool Temp_bool_Variable, float K2Node_Select_Default, float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, byte CallFunc_Conv_IntToByte_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, int CallFunc_FTrunc_ReturnValue, bool Temp_bool_IsClosed_Variable, byte CallFunc_Conv_IntToByte_ReturnValue, FString Temp_string_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, float K2Node_CustomEvent_Value, bool K2Node_CustomEvent_bIsFront, float CallFunc_Multiply_FloatFloat_ReturnValue, FString Temp_string_Variable, FString CallFunc_Conv_FloatToString_ReturnValue, FString K2Node_Select_Default, FString CallFunc_Concat_StrStr_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue, FName CallFunc_Conv_StringToName_ReturnValue, FString CallFunc_Concat_StrStr_ReturnValue);// 0x1d69c50

--------------------------------
Class: Struct_BiomeTextures
	Texture* BaseColourAlpha_10_0A7763744F8ACD11A38938B53841CBFC;//[Offset: 0x0, Size: 1]
	Texture* Normal_4_5312E6264F9BD505FC1301987F9993D4;//[Offset: 0x8, Size: 1]
	Texture* AORoughtnessHeight_9_27348A5E4F67A71341AE398436E7CF55;//[Offset: 0x10, Size: 1]

--------------------------------
Class: BP_Squad_C.SQSquad.Info.Actor.Object
	PointerToUberGraphFrame UberGraphFrame;//[Offset: 0x6c8, Size: 1]
	void OnJoinedEvent(SQSquad* Squad, Controller* Joining State, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Become SL Notification(SQSquad* State, BP_PlayerController_C* NewLocalVar, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsCommander_ReturnValue);// 0x1d69c50
	void Parting Notification(SQSquad* Squad, Controller* Leaving State, bool CallFunc_IsValid_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess);// 0x1d69c50
	void Fireteam Notification(SQSquad* Squad, int FT, FString LCachedFTLName, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, bool CallFunc_NotEqual_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, SQFireTeam CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, SQPlayerController* CallFunc_Array_Get_Item, bool CallFunc_IsFireTeamLeader_ReturnValue, SQPlayerState* K2Node_DynamicCast_AsSQPlayer_State, bool K2Node_DynamicCast_bSuccess, SQPlayerController* CallFunc_Array_Get_Item, FString CallFunc_GetFullPlayerName_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, SQPlayerController* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsSquadLeader_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsFireTeamLeader_ReturnValue, BP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Destroy Fireteam Markers(int ID, bool Has FT Members in other squads, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, int Temp_int_Array_Index_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, int Temp_int_Array_Index_Variable, SQFireTeam CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, SQMapMarker* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, int Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int CallFunc_Add_IntInt_ReturnValue, SQMapMarker* CallFunc_Array_Get_Item, SQFireTeam CallFunc_Array_Get_Item, bool CallFunc_Array_RemoveItem_ReturnValue, int CallFunc_Array_Length_ReturnValue, int CallFunc_GetFireteamId_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Array_IsValidIndex_ReturnValue, int CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void Destroy All Markers(SQMapMarker*[] Markers To Destroy, int Temp_int_Array_Index_Variable, int Temp_int_Loop_Counter_Variable, int CallFunc_Add_IntInt_ReturnValue, SQMapMarker* CallFunc_Array_Get_Item, int CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);// 0x1d69c50
	void ReceiveDestroyed();// 0x1d69c50
	void OnFireteamDisbanded_Event(SQSquad* Squad, int FireTeamId);// 0x1d69c50
	void ReceiveBeginPlay();// 0x1d69c50
	void OnFireteamUpdated_Event(SQSquad* Squad, int FireTeamId);// 0x1d69c50
	void OnPlayerPartSquad_Event(SQSquad* Squad, SQPlayerController* Player);// 0x1d69c50
	void OnPlayerJoinSquad_Event(SQSquad* Squad, SQPlayerController* Player);// 0x1d69c50
	void OnPlayerBecomeSquadLeader_Event(SQSquad* Squad, SQPlayerController* Player);// 0x1d69c50
	void ExecuteUbergraph_BP_Squad(int EntryPoint, SQSquad* K2Node_CustomEvent_squad, SQPlayerController* K2Node_CustomEvent_Player, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, delegate K2Node_CreateDelegate_OutputDelegate, bool CallFunc_HasAuthority_ReturnValue, SQSquad* K2Node_CustomEvent_squad, int K2Node_CustomEvent_FireteamId, SQSquad* K2Node_CustomEvent_squad, int K2Node_CustomEvent_FireteamId, SQSquad* K2Node_CustomEvent_squad, SQPlayerController* K2Node_CustomEvent_Player, SQSquad* K2Node_CustomEvent_squad, SQPlayerController* K2Node_CustomEvent_Player);// 0x1d69c50

--------------------------------
